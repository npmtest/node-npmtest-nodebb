{"/home/travis/build/npmtest/node-npmtest-nodebb/test.js":"/* istanbul instrument in package npmtest_nodebb */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-nodebb/lib.npmtest_nodebb.js":"/* istanbul instrument in package npmtest_nodebb */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_nodebb = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_nodebb = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-nodebb/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-nodebb && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_nodebb */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_nodebb\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_nodebb.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_nodebb.rollup.js'] =\n            local.assetsDict['/assets.npmtest_nodebb.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_nodebb.__dirname + '/lib.npmtest_nodebb.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/app.js":"/*\n\tNodeBB - A better forum platform for the modern web\n\thttps://github.com/NodeBB/NodeBB/\n\tCopyright (C) 2013-2016  NodeBB Inc.\n\n\tThis program is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation, either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\"use strict\";\n/*global require, global, process*/\n\nvar nconf = require('nconf');\nnconf.argv().env('__');\n\nvar url = require('url');\nvar async = require('async');\nvar winston = require('winston');\nvar path = require('path');\nvar pkg = require('./package.json');\nvar file = require('./src/file');\n\nglobal.env = process.env.NODE_ENV || 'production';\n\nwinston.remove(winston.transports.Console);\nwinston.add(winston.transports.Console, {\n\tcolorize: true,\n\ttimestamp: function () {\n\t\tvar date = new Date();\n\t\treturn (!!nconf.get('json-logging')) ? date.toJSON() :\tdate.getDate() + '/' + (date.getMonth() + 1) + ' ' + date.toTimeString().substr(0,5) + ' [' + global.process.pid + ']';\n\t},\n\tlevel: nconf.get('log-level') || (global.env === 'production' ? 'info' : 'verbose'),\n\tjson: (!!nconf.get('json-logging')),\n\tstringify: (!!nconf.get('json-logging'))\n});\n\n\n// Alternate configuration file support\nvar\tconfigFile = path.join(__dirname, '/config.json');\n\nif (nconf.get('config')) {\n\tconfigFile = path.resolve(__dirname, nconf.get('config'));\n}\n\nvar configExists = file.existsSync(configFile) || (nconf.get('url') && nconf.get('secret') && nconf.get('database'));\n\nloadConfig();\nversionCheck();\n\nif (!process.send) {\n\t// If run using `node app`, log GNU copyright info along with server info\n\twinston.info('NodeBB v' + nconf.get('version') + ' Copyright (C) 2013-' + (new Date()).getFullYear() + ' NodeBB Inc.');\n\twinston.info('This program comes with ABSOLUTELY NO WARRANTY.');\n\twinston.info('This is free software, and you are welcome to redistribute it under certain conditions.');\n\twinston.info('');\n}\n\n\nif (nconf.get('setup') || nconf.get('install')) {\n\tsetup();\n} else if (!configExists) {\n\trequire('./install/web').install(nconf.get('port'));\n} else if (nconf.get('upgrade')) {\n\tupgrade();\n} else if (nconf.get('reset')) {\n\trequire('./src/reset').reset();\n} else if (nconf.get('activate')) {\n\tactivate();\n} else if (nconf.get('plugins')) {\n\tlistPlugins();\n} else if (nconf.get('build')) {\n\trequire('./build').build(nconf.get('build'));\n} else {\n\tstart();\n}\n\nfunction loadConfig(callback) {\n\twinston.verbose('* using configuration stored in: %s', configFile);\n\n\tnconf.file({\n\t\tfile: configFile\n\t});\n\n\tnconf.defaults({\n\t\tbase_dir: __dirname,\n\t\tthemes_path: path.join(__dirname, 'node_modules'),\n\t\tviews_dir: path.join(__dirname, 'public/templates'),\n\t\tversion: pkg.version\n\t});\n\n\tif (!nconf.get('isCluster')) {\n\t\tnconf.set('isPrimary', 'true');\n\t\tnconf.set('isCluster', 'false');\n\t}\n\n\t// Ensure themes_path is a full filepath\n\tnconf.set('themes_path', path.resolve(__dirname, nconf.get('themes_path')));\n\tnconf.set('core_templates_path', path.join(__dirname, 'src/views'));\n\tnconf.set('base_templates_path', path.join(nconf.get('themes_path'), 'nodebb-theme-persona/templates'));\n\n\tif (nconf.get('url')) {\n\t\tnconf.set('url_parsed', url.parse(nconf.get('url')));\n\t}\n\n\tif (typeof callback === 'function') {\n\t\tcallback();\n\t}\n}\n\n\nfunction start() {\n\tvar db = require('./src/database');\n\n\t// nconf defaults, if not set in config\n\tif (!nconf.get('upload_path')) {\n\t\tnconf.set('upload_path', '/public/uploads');\n\t}\n\tif (!nconf.get('sessionKey')) {\n\t\tnconf.set('sessionKey', 'express.sid');\n\t}\n\t// Parse out the relative_url and other goodies from the configured URL\n\tvar urlObject = url.parse(nconf.get('url'));\n\tvar relativePath = urlObject.pathname !== '/' ? urlObject.pathname : '';\n\tnconf.set('base_url', urlObject.protocol + '//' + urlObject.host);\n\tnconf.set('secure', urlObject.protocol === 'https:');\n\tnconf.set('use_port', !!urlObject.port);\n\tnconf.set('relative_path', relativePath);\n\tnconf.set('port', urlObject.port || nconf.get('port') || nconf.get('PORT') || (nconf.get('PORT_ENV_VAR') ? nconf.get(nconf.get('PORT_ENV_VAR')) : false) || 4567);\n\tnconf.set('upload_url', nconf.get('upload_path').replace(/^\\/public/, ''));\n\n\tif (nconf.get('isPrimary') === 'true') {\n\t\twinston.info('Time: %s', (new Date()).toString());\n\t\twinston.info('Initializing NodeBB v%s', nconf.get('version'));\n\n\n\t\tvar host = nconf.get(nconf.get('database') + ':host'),\n\t\t\tstoreLocation = host ? 'at ' + host + (host.indexOf('/') === -1 ? ':' + nconf.get(nconf.get('database') + ':port') : '') : '';\n\n\t\twinston.verbose('* using %s store %s', nconf.get('database'), storeLocation);\n\t\twinston.verbose('* using themes stored in: %s', nconf.get('themes_path'));\n\t}\n\n\tprocess.on('SIGTERM', shutdown);\n\tprocess.on('SIGINT', shutdown);\n\tprocess.on('SIGHUP', restart);\n\tprocess.on('message', function (message) {\n\t\tif (typeof message !== 'object') {\n\t\t\treturn;\n\t\t}\n\t\tvar meta = require('./src/meta');\n\n\t\tswitch (message.action) {\n\t\t\tcase 'reload':\n\t\t\t\tmeta.reload();\n\t\t\tbreak;\n\t\t}\n\t});\n\n\tprocess.on('uncaughtException', function (err) {\n\t\twinston.error(err.stack);\n\t\tconsole.log(err.stack);\n\n\t\trequire('./src/meta').js.killMinifier();\n\t\tshutdown(1);\n\t});\n\n\tasync.waterfall([\n\t\tasync.apply(db.init),\n\t\tasync.apply(db.checkCompatibility),\n\t\tfunction (next) {\n\t\t\trequire('./src/meta').configs.init(next);\n\t\t},\n\t\tfunction (next) {\n\t\t\tif (nconf.get('dep-check') === undefined || nconf.get('dep-check') !== false) {\n\t\t\t\trequire('./src/meta').dependencies.check(next);\n\t\t\t} else {\n\t\t\t\twinston.warn('[init] Dependency checking skipped!');\n\t\t\t\tsetImmediate(next);\n\t\t\t}\n\t\t},\n\t\tfunction (next) {\n\t\t\trequire('./src/upgrade').check(next);\n\t\t},\n\t\tfunction (next) {\n\t\t\tvar webserver = require('./src/webserver');\n\t\t\trequire('./src/socket.io').init(webserver.server);\n\n\t\t\tif (nconf.get('isPrimary') === 'true' && !nconf.get('jobsDisabled')) {\n\t\t\t\trequire('./src/notifications').init();\n\t\t\t\trequire('./src/user').startJobs();\n\t\t\t}\n\n\t\t\twebserver.listen(next);\n\t\t}\n\t], function (err) {\n\t\tif (err) {\n\t\t\tswitch(err.message) {\n\t\t\t\tcase 'schema-out-of-date':\n\t\t\t\t\twinston.warn('Your NodeBB schema is out-of-date. Please run the following command to bring your dataset up to spec:');\n\t\t\t\t\twinston.warn('    ./nodebb upgrade');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'dependencies-out-of-date':\n\t\t\t\t\twinston.warn('One or more of NodeBB\\'s dependent packages are out-of-date. Please run the following command to update them:');\n\t\t\t\t\twinston.warn('    ./nodebb upgrade');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'dependencies-missing':\n\t\t\t\t\twinston.warn('One or more of NodeBB\\'s dependent packages are missing. Please run the following command to update them:');\n\t\t\t\t\twinston.warn('    ./nodebb upgrade');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\twinston.error(err);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Either way, bad stuff happened. Abort start.\n\t\t\tprocess.exit();\n\t\t}\n\n\t\tif (process.send) {\n\t\t\tprocess.send({\n\t\t\t\taction: 'listening'\n\t\t\t});\n\t\t}\n\t});\n}\n\nfunction setup() {\n\twinston.info('NodeBB Setup Triggered via Command Line');\n\n\tvar install = require('./src/install');\n\tvar build = require('./build');\n\n\tprocess.stdout.write('\\nWelcome to NodeBB!\\n');\n\tprocess.stdout.write('\\nThis looks like a new installation, so you\\'ll have to answer a few questions about your environment before we can proceed.\\n');\n\tprocess.stdout.write('Press enter to accept the default setting (shown in brackets).\\n');\n\n\tasync.series([\n\t\tasync.apply(install.setup),\n\t\tasync.apply(loadConfig),\n\t\tasync.apply(build.build, true)\n\t], function (err, data) {\n\t\t// Disregard build step data\n\t\tdata = data[0];\n\n\t\tvar separator = '     ';\n\t\tif (process.stdout.columns > 10) {\n\t\t\tfor(var x = 0,cols = process.stdout.columns - 10; x < cols; x++) {\n\t\t\t\tseparator += '=';\n\t\t\t}\n\t\t}\n\t\tprocess.stdout.write('\\n' + separator + '\\n\\n');\n\n\t\tif (err) {\n\t\t\twinston.error('There was a problem completing NodeBB setup: ', err.message);\n\t\t} else {\n\t\t\tif (data.hasOwnProperty('password')) {\n\t\t\t\tprocess.stdout.write('An administrative user was automatically created for you:\\n');\n\t\t\t\tprocess.stdout.write('    Username: ' + data.username + '\\n');\n\t\t\t\tprocess.stdout.write('    Password: ' + data.password + '\\n');\n\t\t\t\tprocess.stdout.write('\\n');\n\t\t\t}\n\t\t\tprocess.stdout.write('NodeBB Setup Completed. Run \\'./nodebb start\\' to manually start your NodeBB server.\\n');\n\n\t\t\t// If I am a child process, notify the parent of the returned data before exiting (useful for notifying\n\t\t\t// hosts of auto-generated username/password during headless setups)\n\t\t\tif (process.send) {\n\t\t\t\tprocess.send(data);\n\t\t\t}\n\t\t}\n\n\t\tprocess.exit();\n\t});\n}\n\nfunction upgrade() {\n\tvar db = require('./src/database');\n\tvar meta = require('./src/meta');\n\tvar upgrade = require('./src/upgrade');\n\tvar build = require('./build');\n\n\tasync.series([\n\t\tasync.apply(db.init),\n\t\tasync.apply(meta.configs.init),\n\t\tasync.apply(upgrade.upgrade),\n\t\tasync.apply(build.build, true)\n\t], function (err) {\n\t\tif (err) {\n\t\t\twinston.error(err.stack);\n\t\t\tprocess.exit(1);\n\t\t} else {\n\t\t\tprocess.exit(0);\n\t\t}\n\t});\n}\n\nfunction activate() {\n\tvar db = require('./src/database');\n\tdb.init(function (err) {\n\t\tif (err) {\n\t\t\twinston.error(err.stack);\n\t\t\tprocess.exit(1);\n\t\t}\n\n\t\tvar plugin = nconf.get('activate');\n\t\tif (plugin.indexOf('nodebb-') !== 0) {\n\t\t\t// Allow omission of `nodebb-plugin-`\n\t\t\tplugin = 'nodebb-plugin-' + plugin;\n\t\t}\n\n\t\twinston.info('Activating plugin `%s`', plugin);\n\t\tdb.sortedSetAdd('plugins:active', 0, plugin, function (err) {\n\t\t\tprocess.exit(err ? 1 : 0);\n\t\t});\n\t});\n}\n\nfunction listPlugins() {\n\trequire('./src/database').init(function (err) {\n\t\tif (err) {\n\t\t\twinston.error(err.stack);\n\t\t\tprocess.exit(1);\n\t\t}\n\n\t\tvar db = require('./src/database');\n\n\t\tdb.getSortedSetRange('plugins:active', 0, -1, function (err, plugins) {\n\t\t\tif (err) {\n\t\t\t\twinston.error(err.stack);\n\t\t\t\tprocess.exit(1);\n\t\t\t}\n\n\t\t\twinston.info('Active plugins: \\n\\t - ' + plugins.join('\\n\\t - '));\n\t\t\tprocess.exit();\n\t\t});\n\t});\n}\n\n\nfunction shutdown(code) {\n\twinston.info('[app] Shutdown (SIGTERM/SIGINT) Initialised.');\n\trequire('./src/database').close();\n\twinston.info('[app] Database connection closed.');\n\trequire('./src/webserver').server.close();\n\twinston.info('[app] Web server closed to connections.');\n\n\twinston.info('[app] Shutdown complete.');\n\tprocess.exit(code || 0);\n}\n\nfunction restart() {\n\tif (process.send) {\n\t\twinston.info('[app] Restarting...');\n\t\tprocess.send({\n\t\t\taction: 'restart'\n\t\t});\n\t} else {\n\t\twinston.error('[app] Could not restart server. Shutting down.');\n\t\tshutdown(1);\n\t}\n}\n\nfunction versionCheck() {\n\tvar version = process.version.slice(1);\n\tvar range = pkg.engines.node;\n\tvar semver = require('semver');\n\tvar compatible = semver.satisfies(version, range);\n\n\tif (!compatible) {\n\t\twinston.warn('Your version of Node.js is too outdated for NodeBB. Please update your version of Node.js.');\n\t\twinston.warn('Recommended ' + range.green + ', '.reset + version.yellow + ' provided\\n'.reset);\n\t}\n}","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/file.js":"\"use strict\";\n\nvar fs = require('fs');\nvar nconf = require('nconf');\nvar path = require('path');\nvar winston = require('winston');\nvar jimp = require('jimp');\n\nvar utils = require('../public/src/utils');\n\nvar file = {};\n\nfile.saveFileToLocal = function (filename, folder, tempPath, callback) {\n\t/*\n\t* remarkable doesn't allow spaces in hyperlinks, once that's fixed, remove this.\n\t*/\n\tfilename = filename.split('.');\n\tfilename.forEach(function (name, idx) {\n\t\tfilename[idx] = utils.slugify(name);\n\t});\n\tfilename = filename.join('.');\n\n\tvar uploadPath = path.join(nconf.get('base_dir'), nconf.get('upload_path'), folder, filename);\n\n\twinston.verbose('Saving file ' + filename + ' to : ' + uploadPath);\n\n\tvar is = fs.createReadStream(tempPath);\n\tvar os = fs.createWriteStream(uploadPath);\n\tis.on('end', function () {\n\t\tcallback(null, {\n\t\t\turl: nconf.get('upload_url') + '/' + folder + '/' + filename,\n\t\t\tpath: uploadPath\n\t\t});\n\t});\n\n\tos.on('error', callback);\n\n\tis.pipe(os);\n};\n\nfile.base64ToLocal = function (imageData, uploadPath, callback) {\n\tvar buffer = new Buffer(imageData.slice(imageData.indexOf('base64') + 7), 'base64');\n\tuploadPath = path.join(nconf.get('base_dir'), nconf.get('upload_path'), uploadPath);\n\n\tfs.writeFile(uploadPath, buffer, {\n\t\tencoding: 'base64'\n\t}, function (err) {\n\t\tcallback(err, uploadPath);\n\t});\n};\n\nfile.isFileTypeAllowed = function (path, callback) {\n\tvar plugins = require('./plugins');\n\tif (plugins.hasListeners('filter:file.isFileTypeAllowed')) {\n\t\treturn plugins.fireHook('filter:file.isFileTypeAllowed', path, function (err) {\n\t\t\tcallback(err);\n\t\t});\n\t}\n\n\t// Attempt to read the file, if it passes, file type is allowed\n\tjimp.read(path, function (err) {\n\t\tcallback(err);\n\t});\n};\n\nfile.allowedExtensions = function () {\n\tvar meta = require('./meta');\n\tvar allowedExtensions = (meta.config.allowedFileExtensions || '').trim();\n\tif (!allowedExtensions) {\n\t\treturn [];\n\t}\n\tallowedExtensions = allowedExtensions.split(',');\n\tallowedExtensions = allowedExtensions.filter(Boolean).map(function (extension) {\n\t\textension = extension.trim();\n\t\tif (!extension.startsWith('.')) {\n\t\t\textension = '.' + extension;\n\t\t}\n\t\treturn extension;\n\t});\n\n\tif (allowedExtensions.indexOf('.jpg') !== -1 && allowedExtensions.indexOf('.jpeg') === -1) {\n\t\tallowedExtensions.push('.jpeg');\n\t}\n\n\treturn allowedExtensions;\n};\n\nfile.exists = function (path, callback) {\n\tfs.stat(path, function (err, stat) {\n\t\tcallback(!err && stat);\n\t});\n};\n\nfile.existsSync = function (path) {\n\tvar exists = false;\n\ttry {\n\t\texists = fs.statSync(path);\n\t} catch(err) {\n\t\texists = false;\n\t}\n\n\treturn !!exists;\n};\n\nmodule.exports = file;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/utils.js":"(function (module) {\n\t'use strict';\n\n\tvar utils, fs, XRegExp;\n\n\tif ('undefined' === typeof window) {\n\t\tfs = require('fs');\n\t\tXRegExp = require('xregexp');\n\n\t\tprocess.profile = function (operation, start) {\n\t\t\tconsole.log('%s took %d milliseconds', operation, process.elapsedTimeSince(start));\n\t\t};\n\n\t\tprocess.elapsedTimeSince = function (start) {\n\t\t\tvar diff = process.hrtime(start);\n\t\t\treturn diff[0] * 1e3 + diff[1] / 1e6;\n\t\t};\n\n\t} else {\n\t\tXRegExp = window.XRegExp;\n\t}\n\n\n\tmodule.exports = utils = {\n\t\tgenerateUUID: function () {\n\t\t\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n\t\t\t\tvar r = Math.random() * 16 | 0,\n\t\t\t\t\tv = c === 'x' ? r : (r & 0x3 | 0x8);\n\t\t\t\treturn v.toString(16);\n\t\t\t});\n\t\t},\n\n\t\t//Adapted from http://stackoverflow.com/questions/5827612/node-js-fs-readdir-recursive-directory-search\n\t\twalk: function (dir, done) {\n\t\t\tvar results = [];\n\n\t\t\tfs.readdir(dir, function (err, list) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn done(err);\n\t\t\t\t}\n\t\t\t\tvar pending = list.length;\n\t\t\t\tif (!pending) {\n\t\t\t\t\treturn done(null, results);\n\t\t\t\t}\n\t\t\t\tlist.forEach(function (file) {\n\t\t\t\t\tfile = dir + '/' + file;\n\t\t\t\t\tfs.stat(file, function (err, stat) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn done(err);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (stat && stat.isDirectory()) {\n\t\t\t\t\t\t\tutils.walk(file, function (err, res) {\n\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\treturn done(err);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tresults = results.concat(res);\n\t\t\t\t\t\t\t\tif (!--pending) {\n\t\t\t\t\t\t\t\t\tdone(null, results);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresults.push(file);\n\t\t\t\t\t\t\tif (!--pending) {\n\t\t\t\t\t\t\t\tdone(null, results);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\n\t\tinvalidUnicodeChars: XRegExp('[^\\\\p{L}\\\\s\\\\d\\\\-_]', 'g'),\n\t\tinvalidLatinChars: /[^\\w\\s\\d\\-_]/g,\n\t\ttrimRegex: /^\\s+|\\s+$/g,\n\t\tcollapseWhitespace: /\\s+/g,\n\t\tcollapseDash: /-+/g,\n\t\ttrimTrailingDash: /-$/g,\n\t\ttrimLeadingDash: /^-/g,\n\t\tisLatin: /^[\\w\\d\\s.,\\-@]+$/,\n\t\tlanguageKeyRegex: /\\[\\[[\\w]+:.+\\]\\]/,\n\n\t\t//http://dense13.com/blog/2009/05/03/converting-string-to-slug-javascript/\n\t\tslugify: function (str, preserveCase) {\n\t\t\tif (!str) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tstr = str.replace(utils.trimRegex, '');\n\t\t\tif(utils.isLatin.test(str)) {\n\t\t\t\tstr = str.replace(utils.invalidLatinChars, '-');\n\t\t\t} else {\n\t\t\t\tstr = XRegExp.replace(str, utils.invalidUnicodeChars, '-');\n\t\t\t}\n\t\t\tstr = !preserveCase ? str.toLocaleLowerCase() : str;\n\t\t\tstr = str.replace(utils.collapseWhitespace, '-');\n\t\t\tstr = str.replace(utils.collapseDash, '-');\n\t\t\tstr = str.replace(utils.trimTrailingDash, '');\n\t\t\tstr = str.replace(utils.trimLeadingDash, '');\n\t\t\treturn str;\n\t\t},\n\n\t\tcleanUpTag: function (tag, maxLength) {\n\t\t\tif (typeof tag !== 'string' || !tag.length ) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\ttag = tag.trim().toLowerCase();\n\t\t\t// see https://github.com/NodeBB/NodeBB/issues/4378\n\t\t\ttag = tag.replace(/\\u202E/gi, '');\n\t\t\ttag = tag.replace(/[,\\/#!$%\\^\\*;:{}=_`<>'\"~()?\\|]/g, '');\n\t\t\ttag = tag.substr(0, maxLength || 15).trim();\n\t\t\tvar matches = tag.match(/^[.-]*(.+?)[.-]*$/);\n\t\t\tif (matches && matches.length > 1) {\n\t\t\t\ttag = matches[1];\n\t\t\t}\n\t\t\treturn tag;\n\t\t},\n\n\t\tremovePunctuation: function (str) {\n\t\t\treturn str.replace(/[\\.,-\\/#!$%\\^&\\*;:{}=\\-_`<>'\"~()?]/g, '');\n\t\t},\n\n\t\tisEmailValid: function (email) {\n\t\t\treturn typeof email === 'string' && email.length && email.indexOf('@') !== -1;\n\t\t},\n\n\t\tisUserNameValid: function (name) {\n\t\t\treturn (name && name !== '' && (/^['\"\\s\\-\\+.*0-9\\u00BF-\\u1FFF\\u2C00-\\uD7FF\\w]+$/.test(name)));\n\t\t},\n\n\t\tisPasswordValid: function (password) {\n\t\t\treturn typeof password === 'string' && password.length;\n\t\t},\n\n\t\tisNumber: function (n) {\n\t\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t\t},\n\n\t\thasLanguageKey: function (input) {\n\t\t\treturn utils.languageKeyRegex.test(input);\n\t\t},\n\n\t\t// shallow objects merge\n\t\tmerge: function () {\n\t\t\tvar result = {}, obj, keys;\n\t\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\t\tobj = arguments[i] || {};\n\t\t\t\tkeys = Object.keys(obj);\n\t\t\t\tfor (var j = 0; j < keys.length; j++) {\n\t\t\t\t\tresult[keys[j]] = obj[keys[j]];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\n\t\tfileExtension: function (path) {\n\t\t\treturn ('' + path).split('.').pop();\n\t\t},\n\n\t\textensionMimeTypeMap: {\n\t\t\t\"bmp\": \"image/bmp\",\n\t\t\t\"cmx\": \"image/x-cmx\",\n\t\t\t\"cod\": \"image/cis-cod\",\n\t\t\t\"gif\": \"image/gif\",\n\t\t\t\"ico\": \"image/x-icon\",\n\t\t\t\"ief\": \"image/ief\",\n\t\t\t\"jfif\": \"image/pipeg\",\n\t\t\t\"jpe\": \"image/jpeg\",\n\t\t\t\"jpeg\": \"image/jpeg\",\n\t\t\t\"jpg\": \"image/jpeg\",\n\t\t\t\"png\": \"image/png\",\n\t\t\t\"pbm\": \"image/x-portable-bitmap\",\n\t\t\t\"pgm\": \"image/x-portable-graymap\",\n\t\t\t\"pnm\": \"image/x-portable-anymap\",\n\t\t\t\"ppm\": \"image/x-portable-pixmap\",\n\t\t\t\"ras\": \"image/x-cmu-raster\",\n\t\t\t\"rgb\": \"image/x-rgb\",\n\t\t\t\"svg\": \"image/svg+xml\",\n\t\t\t\"tif\": \"image/tiff\",\n\t\t\t\"tiff\": \"image/tiff\",\n\t\t\t\"xbm\": \"image/x-xbitmap\",\n\t\t\t\"xpm\": \"image/x-xpixmap\",\n\t\t\t\"xwd\": \"image/x-xwindowdump\"\n\t\t},\n\n\t\tfileMimeType: function (path) {\n\t\t\treturn utils.extensionToMimeType(utils.fileExtension(path));\n\t\t},\n\n\t\textensionToMimeType: function (extension) {\n\t\t\treturn utils.extensionMimeTypeMap[extension] || '*';\n\t\t},\n\n\t\tisRelativeUrl: function (url) {\n\t\t\tvar firstChar = url.slice(0, 1);\n\t\t\treturn (firstChar === '.' || firstChar === '/');\n\t\t},\n\n\t\tmakeNumbersHumanReadable: function (elements) {\n\t\t\telements.each(function () {\n\t\t\t\t$(this).html(utils.makeNumberHumanReadable($(this).attr('title')));\n\t\t\t});\n\t\t},\n\n\t\tmakeNumberHumanReadable: function (num) {\n\t\t\tvar n = parseInt(num, 10);\n\t\t\tif(!n) {\n\t\t\t\treturn num;\n\t\t\t}\n\t\t\tif (n > 999999) {\n\t\t\t\treturn (n / 1000000).toFixed(1) + 'm';\n\t\t\t}\n\t\t\telse if(n > 999) {\n\t\t\t\treturn (n / 1000).toFixed(1) + 'k';\n\t\t\t}\n\t\t\treturn n;\n\t\t},\n\n\t\taddCommasToNumbers: function (elements) {\n\t\t\telements.each(function (index, element) {\n\t\t\t\t$(element).html(utils.addCommas($(element).html()));\n\t\t\t});\n\t\t},\n\n\t\t// takes a string like 1000 and returns 1,000\n\t\taddCommas: function (text) {\n\t\t\treturn text.replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1,\");\n\t\t},\n\n\t\ttoISOString: function (timestamp) {\n\t\t\tif (!timestamp || !Date.prototype.toISOString) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\treturn Date.prototype.toISOString ? new Date(parseInt(timestamp, 10)).toISOString() : timestamp;\n\t\t},\n\n\t\ttags : ['a', 'abbr', 'acronym', 'address', 'applet', 'area', 'article', 'aside', 'audio', 'b', 'base', 'basefont', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'command', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'map', 'mark', 'menu', 'meta', 'meter', 'nav', 'noframes', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr'],\n\n\t\tstripTags : ['abbr', 'acronym', 'address', 'applet', 'area', 'article', 'aside', 'audio', 'base', 'basefont',\n\t\t\t'bdi', 'bdo', 'big', 'blink', 'body', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup',\n\t\t\t'command', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'em', 'embed',\n\t\t\t'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6',\n\t\t\t'head', 'header', 'hr', 'html', 'iframe', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link',\n\t\t\t'map', 'mark', 'marquee', 'menu', 'meta', 'meter', 'nav', 'noframes', 'noscript', 'object', 'ol', 'optgroup', 'option',\n\t\t\t'output', 'param', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select',\n\t\t\t'source', 'span', 'strike', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot',\n\t\t\t'th', 'thead', 'time', 'title', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr'],\n\n\t\tescapeRegexChars: function (text) {\n\t\t\treturn text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n\t\t},\n\n\t\tescapeHTML: function (raw) {\n\t\t\treturn raw.replace(/&/gm,\"&amp;\").replace(/</gm,\"&lt;\").replace(/>/gm,\"&gt;\");\n\t\t},\n\n\t\tisAndroidBrowser: function () {\n\t\t\t// http://stackoverflow.com/questions/9286355/how-to-detect-only-the-native-android-browser\n\t\t\tvar nua = navigator.userAgent;\n\t\t\treturn ((nua.indexOf('Mozilla/5.0') > -1 && nua.indexOf('Android ') > -1 && nua.indexOf('AppleWebKit') > -1) && !(nua.indexOf('Chrome') > -1));\n\t\t},\n\n\t\tisTouchDevice: function () {\n\t\t\treturn 'ontouchstart' in document.documentElement;\n\t\t},\n\n\t\tfindBootstrapEnvironment: function () {\n\t\t\t//http://stackoverflow.com/questions/14441456/how-to-detect-which-device-view-youre-on-using-twitter-bootstrap-api\n\t\t\tvar envs = ['xs', 'sm', 'md', 'lg'],\n\t\t\t\t$el = $('<div>');\n\n\t\t\t$el.appendTo($('body'));\n\n\t\t\tfor (var i = envs.length - 1; i >= 0; i--) {\n\t\t\t\tvar env = envs[i];\n\n\t\t\t\t$el.addClass('hidden-' + env);\n\t\t\t\tif ($el.is(':hidden')) {\n\t\t\t\t\t$el.remove();\n\t\t\t\t\treturn env;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tisMobile: function () {\n\t\t\tvar env = utils.findBootstrapEnvironment();\n\t\t\treturn ['xs', 'sm'].some(function (targetEnv) {\n\t\t\t\treturn targetEnv === env;\n\t\t\t});\n\t\t},\n\n\t\tgetHoursArray: function () {\n\t\t\tvar currentHour = new Date().getHours(),\n\t\t\t\tlabels = [];\n\n\t\t\tfor (var i = currentHour, ii = currentHour - 24; i > ii; i--) {\n\t\t\t\tvar hour = i < 0 ? 24 + i : i;\n\t\t\t\tlabels.push(hour + ':00');\n\t\t\t}\n\n\t\t\treturn labels.reverse();\n\t\t},\n\n\t\tgetDaysArray: function (from) {\n\t\t\tvar currentDay = new Date(from || Date.now()).getTime(),\n\t\t\t\tmonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n\t\t\t\tlabels = [],\n\t\t\t\ttmpDate;\n\n\t\t\tfor(var x = 29; x >= 0; x--) {\n\t\t\t\ttmpDate = new Date(currentDay - (1000 * 60 * 60 * 24 * x));\n\t\t\t\tlabels.push(months[tmpDate.getMonth()] + ' ' + tmpDate.getDate());\n\t\t\t}\n\n\t\t\treturn labels;\n\t\t},\n\n\t\t/* Retrieved from http://stackoverflow.com/a/7557433 @ 27 Mar 2016 */\n\t\tisElementInViewport: function (el) {\n\t\t\t//special bonus for those using jQuery\n\t\t\tif (typeof jQuery === \"function\" && el instanceof jQuery) {\n\t\t\t\tel = el[0];\n\t\t\t}\n\n\t\t\tvar rect = el.getBoundingClientRect();\n\n\t\t\treturn (\n\t\t\t\trect.top >= 0 &&\n\t\t\t\trect.left >= 0 &&\n\t\t\t\trect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\n\t\t\t\trect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\n\t\t\t);\n\t\t},\n\n\t\t// get all the url params in a single key/value hash\n\t\tparams: function (options) {\n\t\t\tvar a, hash = {}, params;\n\n\t\t\toptions = options || {};\n\t\t\toptions.skipToType = options.skipToType || {};\n\n\t\t\tif (options.url) {\n\t\t\t\ta = utils.urlToLocation(options.url);\n\t\t\t}\n\t\t\tparams = (a ? a.search : window.location.search).substring(1).split(\"&\");\n\n\t\t\tparams.forEach(function (param) {\n\t\t\t\tvar val = param.split('='),\n\t\t\t\t\tkey = decodeURI(val[0]),\n\t\t\t\t\tvalue = options.skipToType[key] ? decodeURI(val[1]) : utils.toType(decodeURI(val[1]));\n\n\t\t\t\tif (key) {\n\t\t\t\t\tif (key.substr(-2, 2) === '[]') {\n\t\t\t\t\t\tkey = key.slice(0, -2);\n\t\t\t\t\t}\n\t\t\t\t\tif (!hash[key]) {\n\t\t\t\t\t\thash[key] = value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!$.isArray(hash[key])) {\n\t\t\t\t\t\t\thash[key] = [hash[key]];\n\t\t\t\t\t\t}\n\t\t\t\t\t\thash[key].push(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn hash;\n\t\t},\n\n\t\tparam: function (key) {\n\t\t\treturn this.params()[key];\n\t\t},\n\n\t\turlToLocation: function (url) {\n\t\t\tvar a = document.createElement('a');\n\t\t\ta.href = url;\n\t\t\treturn a;\n\t\t},\n\n\t\t// return boolean if string 'true' or string 'false', or if a parsable string which is a number\n\t\t// also supports JSON object and/or arrays parsing\n\t\ttoType: function (str) {\n\t\t\tvar type = typeof str;\n\t\t\tif (type !== 'string') {\n\t\t\t\treturn str;\n\t\t\t} else {\n\t\t\t\tvar nb = parseFloat(str);\n\t\t\t\tif (!isNaN(nb) && isFinite(str)) {\n\t\t\t\t\treturn nb;\n\t\t\t\t}\n\t\t\t\tif (str === 'false') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (str === 'true') {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tstr = JSON.parse(str);\n\t\t\t\t} catch (e) {}\n\n\t\t\t\treturn str;\n\t\t\t}\n\t\t},\n\n\t\t// Safely get/set chained properties on an object\n\t\t// set example: utils.props(A, 'a.b.c.d', 10) // sets A to {a: {b: {c: {d: 10}}}}, and returns 10\n\t\t// get example: utils.props(A, 'a.b.c') // returns {d: 10}\n\t\t// get example: utils.props(A, 'a.b.c.foo.bar') // returns undefined without throwing a TypeError\n\t\t// credits to github.com/gkindel\n\t\tprops: function (obj, props, value) {\n\t\t\tif(obj === undefined) {\n\t\t\t\tobj = window;\n\t\t\t}\n\t\t\tif(props == null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tvar i = props.indexOf('.');\n\t\t\tif( i == -1 ) {\n\t\t\t\tif(value !== undefined) {\n\t\t\t\t\tobj[props] = value;\n\t\t\t\t}\n\t\t\t\treturn obj[props];\n\t\t\t}\n\t\t\tvar prop = props.slice(0, i),\n\t\t\t\tnewProps = props.slice(i + 1);\n\n\t\t\tif(props !== undefined && !(obj[prop] instanceof Object) ) {\n\t\t\t\tobj[prop] = {};\n\t\t\t}\n\n\t\t\treturn utils.props(obj[prop], newProps, value);\n\t\t},\n\n\t\tisInternalURI: function (targetLocation, referenceLocation, relative_path) {\n\t\t\treturn targetLocation.host === '' ||\t// Relative paths are always internal links\n\t\t\t\t(\n\t\t\t\t\ttargetLocation.host === referenceLocation.host && targetLocation.protocol === referenceLocation.protocol &&\t// Otherwise need to check if protocol and host match\n\t\t\t\t\t(relative_path.length > 0 ? targetLocation.pathname.indexOf(relative_path) === 0 : true)\t// Subfolder installs need this additional check\n\t\t\t\t);\n\t\t}\n\t};\n\n\tif (typeof String.prototype.startsWith != 'function') {\n\t\tString.prototype.startsWith = function (prefix) {\n\t\t\tif (this.length < prefix.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (var i = prefix.length - 1; (i >= 0) && (this[i] === prefix[i]); --i) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\treturn i < 0;\n\t\t};\n\t}\n\n\tif (typeof String.prototype.endsWith != 'function') {\n\t\tString.prototype.endsWith = function (suffix) {\n\t\t\tif (this.length < suffix.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar len = this.length;\n\t\t\tvar suffixLen = suffix.length;\n\t\t\tfor (var i = 1; (i <= suffixLen && this[len - i] === suffix[suffixLen - i]); ++i) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\treturn i > suffixLen;\n\t\t};\n\t}\n\n\tif (typeof String.prototype.rtrim != 'function') {\n\t\tString.prototype.rtrim = function () {\n\t\t\treturn this.replace(/\\s+$/g, '');\n\t\t};\n\t}\n\n\tif ('undefined' !== typeof window) {\n\t\twindow.utils = module.exports;\n\t}\n\n}('undefined' === typeof module ? {\n\tmodule: {\n\t\texports: {}\n\t}\n} : module));\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/install/web.js":"\"use strict\";\n\nvar winston = require('winston');\nvar express = require('express');\nvar bodyParser = require('body-parser');\nvar fs = require('fs');\nvar path = require('path');\nvar less = require('less');\nvar async = require('async');\nvar uglify = require('uglify-js');\nvar nconf = require('nconf');\nvar app = express();\nvar server;\n\nwinston.add(winston.transports.File, {\n\tfilename: 'logs/webinstall.log',\n\tcolorize: true,\n\ttimestamp: function () {\n\t\tvar date = new Date();\n\t\treturn date.getDate() + '/' + (date.getMonth() + 1) + ' ' + date.toTimeString().substr(0,5) + ' [' + global.process.pid + ']';\n\t},\n\tlevel: 'verbose'\n});\n\nvar web = {};\nvar scripts = [\n\t'public/vendor/xregexp/xregexp.js',\n\t'public/vendor/xregexp/unicode/unicode-base.js',\n\t'public/src/utils.js',\n\t'public/src/installer/install.js'\n];\n\nweb.install = function (port) {\n\tport = port || 4567;\n\twinston.info('Launching web installer on port', port);\n\n\tapp.use(express.static('public', {}));\n\tapp.engine('tpl', require('templates.js').__express);\n\tapp.set('view engine', 'tpl');\n\tapp.set('views', path.join(__dirname, '../src/views'));\n\tapp.use(bodyParser.urlencoded({\n\t\textended: true\n\t}));\n\n\tasync.parallel([compileLess, compileJS], function () {\n\t\tsetupRoutes();\n\t\tlaunchExpress(port);\n\t});\n};\n\n\nfunction launchExpress(port) {\n\tserver = app.listen(port, function () {\n\t\twinston.info('Web installer listening on http://%s:%s', '0.0.0.0', port);\n\t});\n}\n\nfunction setupRoutes() {\n\tapp.get('/', welcome);\n\tapp.post('/', install);\n\tapp.post('/launch', launch);\n}\n\nfunction welcome(req, res) {\n\tvar dbs = ['redis', 'mongo'];\n\tvar databases = dbs.map(function (el) {\n\t\treturn {\n\t\t\tname: el,\n\t\t\tquestions: require('../src/database/' + el).questions\n\t\t};\n\t});\n\n\tvar defaults = require('./data/defaults');\n\n\tres.render('install/index', {\n\t\tdatabases: databases,\n\t\tskipDatabaseSetup: !!nconf.get('database'),\n\t\terror: res.locals.error ? true : false,\n\t\tsuccess: res.locals.success ? true : false,\n\t\tvalues: req.body,\n\t\tminimumPasswordLength: defaults.minimumPasswordLength\n\t});\n}\n\nfunction install(req, res) {\n\tfor (var i in req.body) {\n\t\tif (req.body.hasOwnProperty(i) && !process.env.hasOwnProperty(i)) {\n\t\t\tprocess.env[i.replace(':', '__')] = req.body[i];\n\t\t}\n\t}\n\n\tvar child = require('child_process').fork('app', ['--setup'], {\n\t\tenv: process.env\n\t});\n\n\tchild.on('close', function (data) {\n\t\tif (data === 0) {\n\t\t\tres.locals.success = true;\n\t\t} else {\n\t\t\tres.locals.error = true;\n\t\t}\n\n\t\twelcome(req, res);\n\t});\n}\n\nfunction launch(req, res) {\n\tres.json({});\n\tserver.close();\n\n\tvar child = require('child_process').spawn('node', ['loader.js'], {\n\t\tdetached: true,\n\t\tstdio: ['ignore', 'ignore', 'ignore']\n\t});\n\n\tprocess.stdout.write('\\nStarting NodeBB\\n');\n\tprocess.stdout.write('    \"./nodebb stop\" to stop the NodeBB server\\n');\n\tprocess.stdout.write('    \"./nodebb log\" to view server output\\n');\n\tprocess.stdout.write('    \"./nodebb restart\" to restart NodeBB\\n');\n\n\tchild.unref();\n\tprocess.exit(0);\n\n}\n\nfunction compileLess(callback) {\n\tfs.readFile(path.join(__dirname, '../public/less/install.less'), function (err, style) {\n\t\tif (err) {\n\t\t\treturn winston.error('Unable to read LESS install file: ', err);\n\t\t}\n\n\t\tless.render(style.toString(), function (err, css) {\n\t\t\tif(err) {\n\t\t\t\treturn winston.error('Unable to compile LESS: ', err);\n\t\t\t}\n\n\t\t\tfs.writeFile(path.join(__dirname, '../public/stylesheet.css'), css.css, callback);\n\t\t});\n\t});\n}\n\nfunction compileJS(callback) {\n\tvar scriptPath = path.join(__dirname, '..');\n\tvar result = uglify.minify(scripts.map(function (script) {\n\t\treturn path.join(scriptPath, script);\n\t}));\n\n\n\tfs.writeFile(path.join(__dirname, '../public/nodebb.min.js'), result.code, callback);\n}\n\nmodule.exports = web;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/bcrypt.js":"\n'use strict';\n\nvar bcrypt = require('bcryptjs'),\n\tasync = require('async');\n\n\nprocess.on('message', function (msg) {\n\tif (msg.type === 'hash') {\n\t\thashPassword(msg.password, msg.rounds);\n\t} else if (msg.type === 'compare') {\n\t\tbcrypt.compare(msg.password, msg.hash, done);\n\t}\n});\n\nfunction hashPassword(password, rounds) {\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tbcrypt.genSalt(parseInt(rounds, 10), next);\n\t\t},\n\t\tfunction (salt, next) {\n\t\t\tbcrypt.hash(password, salt, next);\n\t\t}\n\t], done);\n}\n\nfunction done(err, result) {\n\tif (err) {\n\t\tprocess.send({err: err.message});\n\t\treturn process.disconnect();\n\t}\n\tprocess.send({result: result});\n\tprocess.disconnect();\n}","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/Gruntfile.js":"\"use strict\";\n\nvar fork = require('child_process').fork,\n\tenv = process.env,\n\tworker, updateWorker,\n\tincomplete = [],\n\trunning = 0;\n\n\nmodule.exports = function (grunt) {\n\tvar args = [];\n\tif (!grunt.option('verbose')) {\n\t\targs.push('--log-level=info');\n\t}\n\n\tfunction update(action, filepath, target) {\n\t\tvar updateArgs = args.slice(),\n\t\t\tfromFile = '',\n\t\t\tcompiling = '',\n\t\t\ttime = Date.now();\n\t\t\n\t\tif (target === 'lessUpdated_Client') {\n\t\t\tcompiling = 'clientCSS';\n\t\t} else if (target === 'lessUpdated_Admin') {\n\t\t\tcompiling = 'acpCSS';\n\t\t} else if (target === 'clientUpdated') {\n\t\t\tcompiling = 'js';\n\t\t} else if (target === 'templatesUpdated') {\n\t\t\tcompiling = 'tpl';\n\t\t} else if (target === 'serverUpdated') {\n\t\t\t// Do nothing, just restart\n\t\t}\n\n\t\tif (incomplete.indexOf(compiling) === -1) {\n\t\t\tincomplete.push(compiling);\n\t\t}\n\n\t\tupdateArgs.push('--build');\n\t\tupdateArgs.push(incomplete.join(','));\n\n\t\tworker.kill();\n\t\tif (updateWorker) {\n\t\t\tupdateWorker.kill('SIGKILL');\n\t\t}\n\t\tupdateWorker = fork('app.js', updateArgs, { env: env });\n\t\t++running;\n\t\tupdateWorker.on('exit', function () {\n\t\t\t--running;\n\t\t\tif (running === 0) {\n\t\t\t\tworker = fork('app.js', args, { env: env });\n\t\t\t\tworker.on('message', function () {\n\t\t\t\t\tif (incomplete.length) {\n\t\t\t\t\t\tincomplete = [];\n\n\t\t\t\t\t\tif (grunt.option('verbose')) {\n\t\t\t\t\t\t\tgrunt.log.writeln('NodeBB restarted in ' + (Date.now() - time) + ' ms');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tgrunt.initConfig({\n\t\twatch: {\n\t\t\tlessUpdated_Client: {\n\t\t\t\tfiles: [\n\t\t\t\t\t'public/*.less',\n\t\t\t\t\t'node_modules/nodebb-*/*.less', 'node_modules/nodebb-*/**/*.less',\n\t\t\t\t\t'!node_modules/nodebb-*/node_modules/**',\n\t\t\t\t\t'!node_modules/nodebb-*/.git/**'\n\t\t\t\t]\n\t\t\t},\n\t\t\tlessUpdated_Admin: {\n\t\t\t\tfiles: ['public/**/*.less']\n\t\t\t},\n\t\t\tclientUpdated: {\n\t\t\t\tfiles: [\n\t\t\t\t\t'public/src/**/*.js',\n\t\t\t\t\t'node_modules/nodebb-*/*.js', 'node_modules/nodebb-*/**/*.js',\n\t\t\t\t\t'!node_modules/nodebb-*/node_modules/**',\n\t\t\t\t\t'node_modules/templates.js/lib/templates.js',\n\t\t\t\t\t'!node_modules/nodebb-*/.git/**'\n\t\t\t\t]\n\t\t\t},\n\t\t\tserverUpdated: {\n\t\t\t\tfiles: ['*.js', 'install/*.js', 'src/**/*.js']\n\t\t\t},\n\t\t\ttemplatesUpdated: {\n\t\t\t\tfiles: [\n\t\t\t\t\t'src/views/**/*.tpl',\n\t\t\t\t\t'node_modules/nodebb-*/*.tpl', 'node_modules/nodebb-*/**/*.tpl',\n\t\t\t\t\t'!node_modules/nodebb-*/node_modules/**',\n\t\t\t\t\t'!node_modules/nodebb-*/.git/**'\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t});\n\n\tgrunt.loadNpmTasks('grunt-contrib-watch');\n\n\tif (grunt.option('skip')) {\n\t\tgrunt.registerTask('default', ['watch:serverUpdated']);\n\t} else {\n\t\tgrunt.registerTask('default', ['watch']);\n\t}\n\t\n\n\tenv.NODE_ENV = 'development';\n\n\tworker = fork('app.js', args, { env: env });\n\tgrunt.event.on('watch', update);\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/loader.js":"'use strict';\n\nvar\tnconf = require('nconf'),\n\tfs = require('fs'),\n\turl = require('url'),\n\tpath = require('path'),\n\tfork = require('child_process').fork,\n\n\tasync = require('async'),\n\tlogrotate = require('logrotate-stream'),\n\tfile = require('./src/file'),\n\tpkg = require('./package.json');\n\nnconf.argv().env().file({\n\tfile: path.join(__dirname, '/config.json')\n});\n\nvar\tpidFilePath = __dirname + '/pidfile',\n\toutput = logrotate({ file: __dirname + '/logs/output.log', size: '1m', keep: 3, compress: true }),\n\tsilent = nconf.get('silent') === 'false' ? false : nconf.get('silent') !== false,\n\tnumProcs,\n\tworkers = [],\n\n\tLoader = {\n\t\ttimesStarted: 0\n\t};\n\nLoader.init = function (callback) {\n\tif (silent) {\n\t\tconsole.log = function () {\n\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\toutput.write(args.join(' ') + '\\n');\n\t\t};\n\t}\n\n\tprocess.on('SIGHUP', Loader.restart);\n\tprocess.on('SIGUSR2', Loader.reload);\n\tprocess.on('SIGTERM', Loader.stop);\n\tcallback();\n};\n\nLoader.displayStartupMessages = function (callback) {\n\tconsole.log('');\n\tconsole.log('NodeBB v' + pkg.version + ' Copyright (C) 2013-2014 NodeBB Inc.');\n\tconsole.log('This program comes with ABSOLUTELY NO WARRANTY.');\n\tconsole.log('This is free software, and you are welcome to redistribute it under certain conditions.');\n\tconsole.log('For the full license, please visit: http://www.gnu.org/copyleft/gpl.html');\n\tconsole.log('');\n\tcallback();\n};\n\nLoader.addWorkerEvents = function (worker) {\n\n\tworker.on('exit', function (code, signal) {\n\t\tif (code !== 0) {\n\t\t\tif (Loader.timesStarted < numProcs * 3) {\n\t\t\t\tLoader.timesStarted++;\n\t\t\t\tif (Loader.crashTimer) {\n\t\t\t\t\tclearTimeout(Loader.crashTimer);\n\t\t\t\t}\n\t\t\t\tLoader.crashTimer = setTimeout(function () {\n\t\t\t\t\tLoader.timesStarted = 0;\n\t\t\t\t}, 10000);\n\t\t\t} else {\n\t\t\t\tconsole.log(numProcs * 3 + ' restarts in 10 seconds, most likely an error on startup. Halting.');\n\t\t\t\tprocess.exit();\n\t\t\t}\n\t\t}\n\n\t\tconsole.log('[cluster] Child Process (' + worker.pid + ') has exited (code: ' + code + ', signal: ' + signal + ')');\n\t\tif (!(worker.suicide || code === 0)) {\n\t\t\tconsole.log('[cluster] Spinning up another process...');\n\n\t\t\tforkWorker(worker.index, worker.isPrimary);\n\t\t}\n\t});\n\n\tworker.on('message', function (message) {\n\t\tif (message && typeof message === 'object' && message.action) {\n\t\t\tswitch (message.action) {\n\t\t\t\tcase 'restart':\n\t\t\t\t\tconsole.log('[cluster] Restarting...');\n\t\t\t\t\tLoader.restart();\n\t\t\t\tbreak;\n\t\t\t\tcase 'reload':\n\t\t\t\t\tconsole.log('[cluster] Reloading...');\n\t\t\t\t\tLoader.reload();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t});\n};\n\nLoader.start = function (callback) {\n\tnumProcs = getPorts().length;\n\tconsole.log('Clustering enabled: Spinning up ' + numProcs + ' process(es).\\n');\n\n\tfor (var x = 0; x < numProcs; ++x) {\n\t\tforkWorker(x, x === 0);\n\t}\n\n\tif (callback) {\n\t\tcallback();\n\t}\n};\n\nfunction forkWorker(index, isPrimary) {\n\tvar ports = getPorts();\n\tvar args = [];\n\n\tif(!ports[index]) {\n\t\treturn console.log('[cluster] invalid port for worker : ' + index + ' ports: ' + ports.length);\n\t}\n\n\tprocess.env.isPrimary = isPrimary;\n\tprocess.env.isCluster = ports.length > 1 ? true : false;\n\tprocess.env.port = ports[index];\n\n\tvar worker = fork('app.js', args, {\n\t\tsilent: silent,\n\t\tenv: process.env\n\t});\n\n\tworker.index = index;\n\tworker.isPrimary = isPrimary;\n\n\tworkers[index] = worker;\n\n\tLoader.addWorkerEvents(worker);\n\n\tif (silent) {\n\t\tvar output = logrotate({ file: __dirname + '/logs/output.log', size: '1m', keep: 3, compress: true });\n\t\tworker.stdout.pipe(output);\n\t\tworker.stderr.pipe(output);\n\t}\n}\n\nfunction getPorts() {\n\tvar _url = nconf.get('url');\n\tif (!_url) {\n\t\tconsole.log('[cluster] url is undefined, please check your config.json');\n\t\tprocess.exit();\n\t}\n\tvar urlObject = url.parse(_url);\n\tvar port = nconf.get('port') || nconf.get('PORT') || urlObject.port || 4567;\n\tif (!Array.isArray(port)) {\n\t\tport = [port];\n\t}\n\treturn port;\n}\n\nLoader.restart = function () {\n\tkillWorkers();\n\tnconf.remove('file');\n\tnconf.use('file', { file: path.join(__dirname, '/config.json') });\n\tLoader.start();\n};\n\nLoader.reload = function () {\n\tworkers.forEach(function (worker) {\n\t\tworker.send({\n\t\t\taction: 'reload'\n\t\t});\n\t});\n};\n\nLoader.stop = function () {\n\tkillWorkers();\n\n\t// Clean up the pidfile\n\tfs.unlinkSync(__dirname + '/pidfile');\n};\n\nfunction killWorkers() {\n\tworkers.forEach(function (worker) {\n\t\tworker.suicide = true;\n\t\tworker.kill();\n\t});\n}\n\nLoader.notifyWorkers = function (msg, worker_pid) {\n\tworker_pid = parseInt(worker_pid, 10);\n\tworkers.forEach(function (worker) {\n\t\tif (parseInt(worker.pid, 10) !== worker_pid) {\n\t\t\ttry {\n\t\t\t\tworker.send(msg);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log('[cluster/notifyWorkers] Failed to reach pid ' + worker_pid);\n\t\t\t}\n\t\t}\n\t});\n};\n\nfs.open(path.join(__dirname, 'config.json'), 'r', function (err) {\n\tif (!err) {\n\t\tif (nconf.get('daemon') !== 'false' && nconf.get('daemon') !== false) {\n\t\t\tif (file.existsSync(pidFilePath)) {\n\t\t\t\ttry {\n\t\t\t\t\tvar\tpid = fs.readFileSync(pidFilePath, { encoding: 'utf-8' });\n\t\t\t\t\tprocess.kill(pid, 0);\n\t\t\t\t\tprocess.exit();\n\t\t\t\t} catch (e) {\n\t\t\t\t\tfs.unlinkSync(pidFilePath);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trequire('daemon')({\n\t\t\t\tstdout: process.stdout,\n\t\t\t\tstderr: process.stderr\n\t\t\t});\n\n\t\t\tfs.writeFile(__dirname + '/pidfile', process.pid);\n\t\t}\n\n\t\tasync.series([\n\t\t\tLoader.init,\n\t\t\tLoader.displayStartupMessages,\n\t\t\tLoader.start\n\t\t], function (err) {\n\t\t\tif (err) {\n\t\t\t\tconsole.log('[loader] Error during startup: ' + err.message);\n\t\t\t}\n\t\t});\n\t} else {\n\t\t// No config detected, kickstart web installer\n\t\tvar child = require('child_process').fork('app');\n\t}\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/minifier.js":"\"use strict\";\n\nvar uglifyjs = require('uglify-js');\nvar async = require('async');\nvar fs = require('fs');\nvar file = require('./src/file');\n\nvar Minifier = {\n\tjs: {}\n};\n\n/* Javascript */\nMinifier.js.minify = function (scripts, minify, callback) {\n\n\tscripts = scripts.filter(function (file) {\n\t\treturn file && file.endsWith('.js');\n\t});\n\n\tasync.filter(scripts, function (script, next) {\n\t\tfile.exists(script, function (exists) {\n\t\t\tif (!exists) {\n\t\t\t\tconsole.warn('[minifier] file not found, ' + script);\n\t\t\t}\n\t\t\tnext(exists);\n\t\t});\n\t}, function (scripts) {\n\t\tif (minify) {\n\t\t\tminifyScripts(scripts, callback);\n\t\t} else {\n\t\t\tconcatenateScripts(scripts, callback);\n\t\t}\n\t});\n};\n\nprocess.on('message', function (payload) {\n\tswitch(payload.action) {\n\tcase 'js':\n\t\tMinifier.js.minify(payload.scripts, payload.minify, function (minified/*, sourceMap*/) {\n\t\t\tprocess.send({\n\t\t\t\ttype: 'end',\n\t\t\t\t// sourceMap: sourceMap,\n\t\t\t\tminified: minified\n\t\t\t});\n\t\t});\n\t\tbreak;\n\t}\n});\n\nfunction minifyScripts(scripts, callback) {\n\t// The portions of code involving the source map are commented out as they're broken in UglifyJS2\n\t// Follow along here: https://github.com/mishoo/UglifyJS2/issues/700\n\ttry {\n\t\tvar minified = uglifyjs.minify(scripts, {\n\t\t\t\t// outSourceMap: \"nodebb.min.js.map\",\n\t\t\t\tcompress: false\n\t\t\t});\n\n\t\tcallback(minified.code/*, minified.map*/);\n\t} catch(err) {\n\t\tprocess.send({\n\t\t\ttype: 'error',\n\t\t\tmessage: err.message\n\t\t});\n\t}\n}\n\nfunction concatenateScripts(scripts, callback) {\n\tasync.map(scripts, fs.readFile, function (err, scripts) {\n\t\tif (err) {\n\t\t\tprocess.send({\n\t\t\t\ttype: 'error',\n\t\t\t\tmessage: err.message\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tscripts = scripts.join(require('os').EOL + ';');\n\n\t\tcallback(scripts);\n\t});\n}","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/install/databases.js":"\"use strict\";\n\nvar async = require('async');\nvar prompt = require('prompt');\nvar winston = require('winston');\n\nvar questions = {\n\tredis: require('../src/database/redis').questions,\n\tmongo: require('../src/database/mongo').questions\n};\n\nmodule.exports = function (config, callback) {\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tprocess.stdout.write('\\n');\n\t\t\twinston.info('Now configuring ' + config.database + ' database:');\n\t\t\tgetDatabaseConfig(config, next);\n\t\t},\n\t\tfunction (databaseConfig, next) {\n\t\t\tsaveDatabaseConfig(config, databaseConfig, next);\n\t\t}\n\t], callback);\n};\n\nfunction getDatabaseConfig(config, callback) {\n\tif (!config) {\n\t\treturn callback(new Error('aborted'));\n\t}\n\n\tif (config.database === 'redis') {\n\t\tif (config['redis:host'] && config['redis:port']) {\n\t\t\tcallback(null, config);\n\t\t} else {\n\t\t\tprompt.get(questions.redis, callback);\n\t\t}\n\t} else if (config.database === 'mongo') {\n\t\tif (config['mongo:host'] && config['mongo:port']) {\n\t\t\tcallback(null, config);\n\t\t} else {\n\t\t\tprompt.get(questions.mongo, callback);\n\t\t}\n\t} else {\n\t\treturn callback(new Error('unknown database : ' + config.database));\n\t}\n}\n\nfunction saveDatabaseConfig(config, databaseConfig, callback) {\n\tif (!databaseConfig) {\n\t\treturn callback(new Error('aborted'));\n\t}\n\n\t// Translate redis properties into redis object\n\tif (config.database === 'redis') {\n\t\tconfig.redis = {\n\t\t\thost: databaseConfig['redis:host'],\n\t\t\tport: databaseConfig['redis:port'],\n\t\t\tpassword: databaseConfig['redis:password'],\n\t\t\tdatabase: databaseConfig['redis:database']\n\t\t};\n\n\t\tif (config.redis.host.slice(0, 1) === '/') {\n\t\t\tdelete config.redis.port;\n\t\t}\n\t} else if (config.database === 'mongo') {\n\t\tconfig.mongo = {\n\t\t\thost: databaseConfig['mongo:host'],\n\t\t\tport: databaseConfig['mongo:port'],\n\t\t\tusername: databaseConfig['mongo:username'],\n\t\t\tpassword: databaseConfig['mongo:password'],\n\t\t\tdatabase: databaseConfig['mongo:database']\n\t\t};\n\t} else {\n\t\treturn callback(new Error('unknown database : ' + config.database));\n\t}\n\n\tvar allQuestions = questions.redis.concat(questions.mongo);\n\tfor (var x = 0; x < allQuestions.length; x++) {\n\t\tdelete config[allQuestions[x].name];\n\t}\n\n\tcallback(null, config);\n}","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/database/redis.js":"'use strict';\n\n(function (module) {\n\n\tvar winston = require('winston'),\n\t\tnconf = require('nconf'),\n\t\tsemver = require('semver'),\n\t\tsession = require('express-session'),\n\t\tredis,\n\t\tconnectRedis,\n\t\tredisClient;\n\n\tmodule.questions = [\n\t\t{\n\t\t\tname: 'redis:host',\n\t\t\tdescription: 'Host IP or address of your Redis instance',\n\t\t\t'default': nconf.get('redis:host') || '127.0.0.1'\n\t\t},\n\t\t{\n\t\t\tname: 'redis:port',\n\t\t\tdescription: 'Host port of your Redis instance',\n\t\t\t'default': nconf.get('redis:port') || 6379\n\t\t},\n\t\t{\n\t\t\tname: 'redis:password',\n\t\t\tdescription: 'Password of your Redis database',\n\t\t\thidden: true,\n\t\t\tdefault: nconf.get('redis:password') || '',\n\t\t\tbefore: function (value) { value = value || nconf.get('redis:password') || ''; return value; }\n\t\t},\n\t\t{\n\t\t\tname: \"redis:database\",\n\t\t\tdescription: \"Which database to use (0..n)\",\n\t\t\t'default': nconf.get('redis:database') || 0\n\t\t}\n\t];\n\n\tmodule.init = function (callback) {\n\t\ttry {\n\t\t\tredis = require('redis');\n\t\t\tconnectRedis = require('connect-redis')(session);\n\t\t} catch (err) {\n\t\t\twinston.error('Unable to initialize Redis! Is Redis installed? Error :' + err.message);\n\t\t\tprocess.exit();\n\t\t}\n\n\t\tredisClient = module.connect();\n\n\t\tmodule.client = redisClient;\n\n\t\tmodule.sessionStore = new connectRedis({\n\t\t\tclient: redisClient,\n\t\t\tttl: 60 * 60 * 24 * 14\n\t\t});\n\n\t\trequire('./redis/main')(redisClient, module);\n\t\trequire('./redis/hash')(redisClient, module);\n\t\trequire('./redis/sets')(redisClient, module);\n\t\trequire('./redis/sorted')(redisClient, module);\n\t\trequire('./redis/list')(redisClient, module);\n\n\t\tif (typeof callback === 'function') {\n\t\t\tcallback();\n\t\t}\n\t};\n\n\tmodule.connect = function (options) {\n\t\tvar redis_socket_or_host = nconf.get('redis:host');\n\t\tvar cxn;\n\n\t\tif (!redis) {\n\t\t\tredis = require('redis');\n\t\t}\n\n\t\toptions = options || {};\n\t\tif (nconf.get('redis:password')) {\n\t\t\toptions.auth_pass = nconf.get('redis:password');\n\t\t}\n\n\t\tif (redis_socket_or_host && redis_socket_or_host.indexOf('/') >= 0) {\n\t\t\t/* If redis.host contains a path name character, use the unix dom sock connection. ie, /tmp/redis.sock */\n\t\t\tcxn = redis.createClient(nconf.get('redis:host'), options);\n\t\t} else {\n\t\t\t/* Else, connect over tcp/ip */\n\t\t\tcxn = redis.createClient(nconf.get('redis:port'), nconf.get('redis:host'), options);\n\t\t}\n\n\t\tcxn.on('error', function (err) {\n\t\t\twinston.error(err.stack);\n\t\t\tprocess.exit(1);\n\t\t});\n\n\t\tif (nconf.get('redis:password')) {\n\t\t\tcxn.auth(nconf.get('redis:password'));\n\t\t}\n\n\t\tvar dbIdx = parseInt(nconf.get('redis:database'), 10);\n\t\tif (dbIdx) {\n\t\t\tcxn.select(dbIdx, function (error) {\n\t\t\t\tif(error) {\n\t\t\t\t\twinston.error(\"NodeBB could not connect to your Redis database. Redis returned the following error: \" + error.message);\n\t\t\t\t\tprocess.exit();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn cxn;\n\t};\n\n\tmodule.checkCompatibility = function (callback) {\n\t\tmodule.info(module.client, function (err, info) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tif (semver.lt(info.redis_version, '2.8.9')) {\n\t\t\t\terr = new Error('Your Redis version is not new enough to support NodeBB, please upgrade Redis to v2.8.9 or higher.');\n\t\t\t\terr.stacktrace = false;\n\t\t\t}\n\n\t\t\tcallback(err);\n\t\t});\n\t};\n\n\tmodule.close = function () {\n\t\tredisClient.quit();\n\t};\n\n\tmodule.info = function (cxn, callback) {\n\t\tif (!cxn) {\n\t\t\treturn callback();\n\t\t}\n\t\tcxn.info(function (err, data) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar lines = data.toString().split(\"\\r\\n\").sort();\n\t\t\tvar redisData = {};\n\t\t\tlines.forEach(function (line) {\n\t\t\t\tvar parts = line.split(':');\n\t\t\t\tif (parts[1]) {\n\t\t\t\t\tredisData[parts[0]] = parts[1];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tredisData.raw = JSON.stringify(redisData, null, 4);\n\t\t\tredisData.redis = true;\n\n\t\t\tcallback(null, redisData);\n\t\t});\n\t};\n\n\tmodule.helpers = module.helpers || {};\n\tmodule.helpers.redis = require('./redis/helpers');\n}(exports));\n\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/database/redis/helpers.js":"\"use strict\";\n\nvar helpers = {};\n\nhelpers.multiKeys = function (redisClient, command, keys, callback) {\n\tcallback = callback || function () {};\n\tvar multi = redisClient.multi();\n\tfor (var i = 0; i < keys.length; ++i) {\n\t\tmulti[command](keys[i]);\n\t}\n\tmulti.exec(callback);\n};\n\nhelpers.multiKeysValue = function (redisClient, command, keys, value, callback) {\n\tcallback = callback || function () {};\n\tvar multi = redisClient.multi();\n\tfor (var i = 0; i < keys.length; ++i) {\n\t\tmulti[command](keys[i], value);\n\t}\n\tmulti.exec(callback);\n};\n\nhelpers.multiKeyValues = function (redisClient, command, key, values, callback) {\n\tcallback = callback || function () {};\n\tvar multi = redisClient.multi();\n\tfor (var i = 0; i < values.length; ++i) {\n\t\tmulti[command](key, values[i]);\n\t}\n\tmulti.exec(callback);\n};\n\nhelpers.resultsToBool = function (results) {\n\tfor (var i = 0; i < results.length; ++i) {\n\t\tresults[i] = results[i] === 1;\n\t}\n\treturn results;\n};\n\nmodule.exports = helpers;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/database/mongo.js":"\n'use strict';\n\n(function (module) {\n\n\tvar winston = require('winston');\n\tvar async = require('async');\n\tvar nconf = require('nconf');\n\tvar session = require('express-session');\n\tvar _ = require('underscore');\n\tvar semver = require('semver');\n\tvar db;\n\n\t_.mixin(require('underscore.deep'));\n\n\tmodule.questions = [\n\t\t{\n\t\t\tname: 'mongo:host',\n\t\t\tdescription: 'Host IP or address of your MongoDB instance',\n\t\t\t'default': nconf.get('mongo:host') || '127.0.0.1'\n\t\t},\n\t\t{\n\t\t\tname: 'mongo:port',\n\t\t\tdescription: 'Host port of your MongoDB instance',\n\t\t\t'default': nconf.get('mongo:port') || 27017\n\t\t},\n\t\t{\n\t\t\tname: 'mongo:username',\n\t\t\tdescription: 'MongoDB username',\n\t\t\t'default': nconf.get('mongo:username') || ''\n\t\t},\n\t\t{\n\t\t\tname: 'mongo:password',\n\t\t\tdescription: 'Password of your MongoDB database',\n\t\t\thidden: true,\n\t\t\tdefault: nconf.get('mongo:password') || '',\n\t\t\tbefore: function (value) { value = value || nconf.get('mongo:password') || ''; return value; }\n\t\t},\n\t\t{\n\t\t\tname: \"mongo:database\",\n\t\t\tdescription: \"MongoDB database name\",\n\t\t\t'default': nconf.get('mongo:database') || 'nodebb'\n\t\t}\n\t];\n\n\tmodule.helpers = module.helpers || {};\n\tmodule.helpers.mongo = require('./mongo/helpers');\n\n\tmodule.init = function (callback) {\n\t\tcallback = callback || function () {};\n\t\tvar mongoClient;\n\t\ttry {\n\t\t\tmongoClient = require('mongodb').MongoClient;\n\t\t} catch (err) {\n\t\t\twinston.error('Unable to initialize MongoDB! Is MongoDB installed? Error :' + err.message);\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tvar usernamePassword = '';\n\t\tif (nconf.get('mongo:username') && nconf.get('mongo:password')) {\n\t\t\tusernamePassword = nconf.get('mongo:username') + ':' + encodeURIComponent(nconf.get('mongo:password')) + '@';\n\t\t}\n\n\t\t// Sensible defaults for Mongo, if not set\n\t\tif (!nconf.get('mongo:host')) {\n\t\t\tnconf.set('mongo:host', '127.0.0.1');\n\t\t}\n\t\tif (!nconf.get('mongo:port')) {\n\t\t\tnconf.set('mongo:port', 27017);\n\t\t}\n\t\tif (!nconf.get('mongo:database')) {\n\t\t\tnconf.set('mongo:database', 'nodebb');\n\t\t}\n\n\t\tvar hosts = nconf.get('mongo:host').split(',');\n\t\tvar ports = nconf.get('mongo:port').toString().split(',');\n\t\tvar servers = [];\n\n\t\tfor (var i = 0; i < hosts.length; i++) {\n\t\t\tservers.push(hosts[i] + ':' + ports[i]);\n\t\t}\n\n\t\tvar connString = 'mongodb://' + usernamePassword + servers.join() + '/' + nconf.get('mongo:database');\n\n\t\tvar connOptions = {\n\t\t\tserver: {\n\t\t\t\tpoolSize: parseInt(nconf.get('mongo:poolSize'), 10) || 10\n\t\t\t}\n\t\t};\n\n\t\tconnOptions = _.deepExtend((nconf.get('mongo:options') || {}), connOptions);\n\n\t\tmongoClient.connect(connString, connOptions, function (err, _db) {\n\t\t\tif (err) {\n\t\t\t\twinston.error(\"NodeBB could not connect to your Mongo database. Mongo returned the following error: \" + err.message);\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tdb = _db;\n\n\t\t\tmodule.client = db;\n\n\t\t\trequire('./mongo/main')(db, module);\n\t\t\trequire('./mongo/hash')(db, module);\n\t\t\trequire('./mongo/sets')(db, module);\n\t\t\trequire('./mongo/sorted')(db, module);\n\t\t\trequire('./mongo/list')(db, module);\n\n\t\t\tif (nconf.get('mongo:password') && nconf.get('mongo:username')) {\n\t\t\t\tdb.authenticate(nconf.get('mongo:username'), nconf.get('mongo:password'), function (err) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t}\n\t\t\t\t\tcreateSessionStore();\n\t\t\t\t\tcreateIndices();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\twinston.warn('You have no mongo password setup!');\n\t\t\t\tcreateSessionStore();\n\t\t\t\tcreateIndices();\n\t\t\t}\n\n\t\t\tfunction createSessionStore() {\n\t\t\t\tvar sessionStore;\n\t\t\t\tif (nconf.get('redis')) {\n\t\t\t\t\tsessionStore = require('connect-redis')(session);\n\t\t\t\t\tvar rdb = require('./redis');\n\t\t\t\t\trdb.client = rdb.connect();\n\n\t\t\t\t\tmodule.sessionStore = new sessionStore({\n\t\t\t\t\t\tclient: rdb.client,\n\t\t\t\t\t\tttl: 60 * 60 * 24 * 14\n\t\t\t\t\t});\n\t\t\t\t} else if (nconf.get('mongo')) {\n\t\t\t\t\tsessionStore = require('connect-mongo')(session);\n\t\t\t\t\tmodule.sessionStore = new sessionStore({\n\t\t\t\t\t\tdb: db\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction createIndices() {\n\t\t\t\twinston.info('[database] Checking database indices.');\n\t\t\t\tasync.series([\n\t\t\t\t\tasync.apply(createIndex, 'objects', {_key: 1, score: -1}, {background: true}),\n\t\t\t\t\tasync.apply(createIndex, 'objects', {_key: 1, value: -1}, {background: true, unique: true, sparse: true}),\n\t\t\t\t\tasync.apply(createIndex, 'objects', {expireAt: 1}, {expireAfterSeconds: 0, background: true})\n\t\t\t\t], function (err) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\twinston.error('Error creating index ' + err.message);\n\t\t\t\t\t}\n\t\t\t\t\twinston.info('[database] Checking database indices done!');\n\t\t\t\t\tcallback(err);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction createIndex(collection, index, options, callback) {\n\t\t\t\tdb.collection(collection).createIndex(index, options, callback);\n\t\t\t}\n\t\t});\n\t};\n\n\tmodule.checkCompatibility = function (callback) {\n\t\tvar mongoPkg = require.main.require('./node_modules/mongodb/package.json'),\n\t\t\terr = semver.lt(mongoPkg.version, '2.0.0') ? new Error('The `mongodb` package is out-of-date, please run `./nodebb setup` again.') : null;\n\n\t\tif (err) {\n\t\t\terr.stacktrace = false;\n\t\t}\n\t\tcallback(err);\n\t};\n\n\tmodule.info = function (db, callback) {\n\t\tif (!db) {\n\t\t\treturn callback();\n\t\t}\n\t\tasync.parallel({\n\t\t\tserverStatus: function (next) {\n\t\t\t\tdb.command({'serverStatus': 1}, next);\n\t\t\t},\n\t\t\tstats: function (next) {\n\t\t\t\tdb.command({'dbStats': 1}, next);\n\t\t\t},\n\t\t\tlistCollections: function (next) {\n\t\t\t\tdb.listCollections().toArray(function (err, items) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\t\t\t\t\tasync.map(items, function (collection, next) {\n\t\t\t\t\t\tdb.collection(collection.name).stats(next);\n\t\t\t\t\t}, next);\n\t\t\t\t});\n\t\t\t}\n\t\t}, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tvar stats = results.stats;\n\t\t\tvar scale = 1024 * 1024;\n\n\t\t\tresults.listCollections = results.listCollections.map(function (collectionInfo) {\n\t\t\t\treturn {\n\t\t\t\t\tname: collectionInfo.ns,\n\t\t\t\t\tcount: collectionInfo.count,\n\t\t\t\t\tsize: collectionInfo.size,\n\t\t\t\t\tavgObjSize: collectionInfo.avgObjSize,\n\t\t\t\t\tstorageSize: collectionInfo.storageSize,\n\t\t\t\t\ttotalIndexSize: collectionInfo.totalIndexSize,\n\t\t\t\t\tindexSizes: collectionInfo.indexSizes\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tstats.mem = results.serverStatus.mem;\n\t\t\tstats.collectionData = results.listCollections;\n\t\t\tstats.network = results.serverStatus.network;\n\t\t\tstats.raw = JSON.stringify(stats, null, 4);\n\n\t\t\tstats.avgObjSize = stats.avgObjSize.toFixed(2);\n\t\t\tstats.dataSize = (stats.dataSize / scale).toFixed(2);\n\t\t\tstats.storageSize = (stats.storageSize / scale).toFixed(2);\n\t\t\tstats.fileSize = stats.fileSize ? (stats.fileSize / scale).toFixed(2) : 0;\n\t\t\tstats.indexSize = (stats.indexSize / scale).toFixed(2);\n\t\t\tstats.storageEngine = results.serverStatus.storageEngine ? results.serverStatus.storageEngine.name : 'mmapv1';\n\t\t\tstats.host = results.serverStatus.host;\n\t\t\tstats.version = results.serverStatus.version;\n\t\t\tstats.uptime = results.serverStatus.uptime;\n\t\t\tstats.mongo = true;\n\n\t\t\tcallback(null, stats);\n\t\t});\n\t};\n\n\tmodule.close = function () {\n\t\tdb.close();\n\t};\n\n}(exports));\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/database/mongo/helpers.js":"\"use strict\";\n\nvar helpers = {};\n\nhelpers.toMap = function (data) {\n\tvar map = {};\n\tfor (var i = 0; i < data.length; ++i) {\n\t\tmap[data[i]._key] = data[i];\n\t\tdata[i]._key = undefined;\n\t}\n\treturn map;\n};\n\nhelpers.fieldToString = function (field) {\n\tif(field === null || field === undefined) {\n\t\treturn field;\n\t}\n\n\tif(typeof field !== 'string') {\n\t\tfield = field.toString();\n\t}\n\t// if there is a '.' in the field name it inserts subdocument in mongo, replace '.'s with \\uff0E\n\tfield = field.replace(/\\./g, '\\uff0E');\n\treturn field;\n};\n\nhelpers.valueToString = function (value) {\n\tif(value === null || value === undefined) {\n\t\treturn value;\n\t}\n\n\treturn value.toString();\n};\n\nhelpers.noop = function () {};\n\nmodule.exports = helpers;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/analytics.js":"'use strict';\n\nvar cronJob = require('cron').CronJob;\nvar async = require('async');\nvar winston = require('winston');\n\nvar db = require('./database');\n\nvar Analytics = module.exports;\n\nvar counters = {};\n\nvar pageViews = 0;\nvar uniqueIPCount = 0;\nvar uniquevisitors = 0;\n\nvar isCategory = /^(?:\\/api)?\\/category\\/(\\d+)/;\n\nnew cronJob('*/10 * * * *', function () {\n\tAnalytics.writeData();\n}, null, true);\n\nAnalytics.increment = function (keys) {\n\tkeys = Array.isArray(keys) ? keys : [keys];\n\n\tkeys.forEach(function (key) {\n\t\tcounters[key] = counters[key] || 0;\n\t\t++counters[key];\n\t});\n};\n\nAnalytics.pageView = function (payload) {\n\t++pageViews;\n\n\tif (payload.ip) {\n\t\tdb.sortedSetScore('ip:recent', payload.ip, function (err, score) {\n\t\t\tif (err) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!score) {\n\t\t\t\t++uniqueIPCount;\n\t\t\t}\n\t\t\tvar today = new Date();\n\t\t\ttoday.setHours(today.getHours(), 0, 0, 0);\n\t\t\tif (!score || score < today.getTime()) {\n\t\t\t\t++uniquevisitors;\n\t\t\t\tdb.sortedSetAdd('ip:recent', Date.now(), payload.ip);\n\t\t\t}\n\t\t});\n\t}\n\n\tif (payload.path) {\n\t\tvar categoryMatch = payload.path.match(isCategory),\n\t\t\tcid = categoryMatch ? parseInt(categoryMatch[1], 10) : null;\n\n\t\tif (cid) {\n\t\t\tAnalytics.increment(['pageviews:byCid:' + cid]);\n\t\t}\n\t}\n};\n\nAnalytics.writeData = function (callback) {\n\tcallback = callback || function () {};\n\tvar today = new Date();\n\tvar month = new Date();\n\tvar dbQueue = [];\n\n\ttoday.setHours(today.getHours(), 0, 0, 0);\n\tmonth.setMonth(month.getMonth(), 1);\n\tmonth.setHours(0, 0, 0, 0);\n\n\tif (pageViews > 0) {\n\t\tdbQueue.push(async.apply(db.sortedSetIncrBy, 'analytics:pageviews', pageViews, today.getTime()));\n\t\tdbQueue.push(async.apply(db.sortedSetIncrBy, 'analytics:pageviews:month', pageViews, month.getTime()));\n\t\tpageViews = 0;\n\t}\n\n\tif (uniquevisitors > 0) {\n\t\tdbQueue.push(async.apply(db.sortedSetIncrBy, 'analytics:uniquevisitors', uniquevisitors, today.getTime()));\n\t\tuniquevisitors = 0;\n\t}\n\n\tif (uniqueIPCount > 0) {\n\t\tdbQueue.push(async.apply(db.incrObjectFieldBy, 'global', 'uniqueIPCount', uniqueIPCount));\n\t\tuniqueIPCount = 0;\n\t}\n\n\tif (Object.keys(counters).length > 0) {\n\t\tfor(var key in counters) {\n\t\t\tif (counters.hasOwnProperty(key)) {\n\t\t\t\tdbQueue.push(async.apply(db.sortedSetIncrBy, 'analytics:' + key, counters[key], today.getTime()));\n\t\t\t\tdelete counters[key];\n\t\t\t}\n\t\t}\n\t}\n\n\tasync.parallel(dbQueue, function (err) {\n\t\tif (err) {\n\t\t\twinston.error('[analytics] Encountered error while writing analytics to data store: ' + err.message);\n\t\t}\n\t\tcallback(err);\n\t});\n};\n\nAnalytics.getHourlyStatsForSet = function (set, hour, numHours, callback) {\n\tvar terms = {},\n\t\thoursArr = [];\n\n\thour = new Date(hour);\n\thour.setHours(hour.getHours(), 0, 0, 0);\n\n\tfor (var i = 0, ii = numHours; i < ii; i++) {\n\t\thoursArr.push(hour.getTime());\n\t\thour.setHours(hour.getHours() - 1, 0, 0, 0);\n\t}\n\n\tdb.sortedSetScores(set, hoursArr, function (err, counts) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\thoursArr.forEach(function (term, index) {\n\t\t\tterms[term] = parseInt(counts[index], 10) || 0;\n\t\t});\n\n\t\tvar termsArr = [];\n\n\t\thoursArr.reverse();\n\t\thoursArr.forEach(function (hour) {\n\t\t\ttermsArr.push(terms[hour]);\n\t\t});\n\n\t\tcallback(null, termsArr);\n\t});\n};\n\nAnalytics.getDailyStatsForSet = function (set, day, numDays, callback) {\n\tvar daysArr = [];\n\n\tday = new Date(day);\n\tday.setDate(day.getDate() + 1);\t// set the date to tomorrow, because getHourlyStatsForSet steps *backwards* 24 hours to sum up the values\n\tday.setHours(0, 0, 0, 0);\n\n\tasync.whilst(function () {\n\t\treturn numDays--;\n\t}, function (next) {\n\t\tAnalytics.getHourlyStatsForSet(set, day.getTime() - (1000 * 60 * 60 * 24 * numDays), 24, function (err, day) {\n\t\t\tif (err) {\n\t\t\t\treturn next(err);\n\t\t\t}\n\n\t\t\tdaysArr.push(day.reduce(function (cur, next) {\n\t\t\t\treturn cur + next;\n\t\t\t}));\n\t\t\tnext();\n\t\t});\n\t}, function (err) {\n\t\tcallback(err, daysArr);\n\t});\n};\n\nAnalytics.getUnwrittenPageviews = function () {\n\treturn pageViews;\n};\n\nAnalytics.getMonthlyPageViews = function (callback) {\n\tvar thisMonth = new Date();\n\tvar lastMonth = new Date();\n\tthisMonth.setMonth(thisMonth.getMonth(), 1);\n\tthisMonth.setHours(0, 0, 0, 0);\n\tlastMonth.setMonth(thisMonth.getMonth() - 1, 1);\n\tlastMonth.setHours(0, 0, 0, 0);\n\n\tvar values = [thisMonth.getTime(), lastMonth.getTime()];\n\n\tdb.sortedSetScores('analytics:pageviews:month', values, function (err, scores) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\t\tcallback(null, {thisMonth: scores[0] || 0, lastMonth: scores[1] || 0});\n\t});\n};\n\nAnalytics.getCategoryAnalytics = function (cid, callback) {\n\tasync.parallel({\n\t\t'pageviews:hourly': async.apply(Analytics.getHourlyStatsForSet, 'analytics:pageviews:byCid:' + cid, Date.now(), 24),\n\t\t'pageviews:daily': async.apply(Analytics.getDailyStatsForSet, 'analytics:pageviews:byCid:' + cid, Date.now(), 30),\n\t\t'topics:daily': async.apply(Analytics.getDailyStatsForSet, 'analytics:topics:byCid:' + cid, Date.now(), 7),\n\t\t'posts:daily': async.apply(Analytics.getDailyStatsForSet, 'analytics:posts:byCid:' + cid, Date.now(), 7),\n\t}, callback);\n};\n\nAnalytics.getErrorAnalytics = function (callback) {\n\tasync.parallel({\n\t\t'not-found': async.apply(Analytics.getDailyStatsForSet, 'analytics:errors:404', Date.now(), 7),\n\t\t'toobusy': async.apply(Analytics.getDailyStatsForSet, 'analytics:errors:503', Date.now(), 7)\n\t}, callback);\n};\n\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/database.js":"\"use strict\";\n\nvar nconf = require('nconf');\nvar databaseName = nconf.get('database');\nvar winston = require('winston');\n\nif (!databaseName) {\n\twinston.error(new Error('Database type not set! Run ./nodebb setup'));\n\tprocess.exit();\n}\n\nvar primaryDB = require('./database/' + databaseName);\n\nmodule.exports = primaryDB;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/batch.js":"\n\n'use strict';\n\nvar async = require('async');\nvar db = require('./database');\nvar utils = require('../public/src/utils');\n\nvar DEFAULT_BATCH_SIZE = 100;\n\nexports.processSortedSet = function (setKey, process, options, callback) {\n\tif (typeof options === 'function') {\n\t\tcallback = options;\n\t\toptions = {};\n\t}\n\n\tcallback = typeof callback === 'function' ? callback : function () {};\n\toptions = options || {};\n\n\tif (typeof process !== 'function') {\n\t\treturn callback(new Error('[[error:process-not-a-function]]'));\n\t}\n\n\t// use the fast path if possible\n\tif (db.processSortedSet && typeof options.doneIf !== 'function' && !utils.isNumber(options.alwaysStartAt)) {\n\t\treturn db.processSortedSet(setKey, process, options.batch || DEFAULT_BATCH_SIZE, callback);\n\t}\n\n\t// custom done condition\n\toptions.doneIf = typeof options.doneIf === 'function' ? options.doneIf : function () {};\n\n\tvar batch = options.batch || DEFAULT_BATCH_SIZE;\n\tvar start = 0;\n\tvar stop = batch;\n\tvar done = false;\n\n\tasync.whilst(\n\t\tfunction () {\n\t\t\treturn !done;\n\t\t},\n\t\tfunction (next) {\n\t\t\tdb.getSortedSetRange(setKey, start, stop, function (err, ids) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn next(err);\n\t\t\t\t}\n\t\t\t\tif (!ids.length || options.doneIf(start, stop, ids)) {\n\t\t\t\t\tdone = true;\n\t\t\t\t\treturn next();\n\t\t\t\t}\n\t\t\t\tprocess(ids, function (err) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\t\t\t\t\tstart += utils.isNumber(options.alwaysStartAt) ? options.alwaysStartAt : batch + 1;\n\t\t\t\t\tstop = start + batch;\n\t\t\t\t\tnext();\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tcallback\n\t);\n};\n\nexports.processArray = function (array, process, options, callback) {\n\tif (typeof options === 'function') {\n\t\tcallback = options;\n\t\toptions = {};\n\t}\n\n\tcallback = typeof callback === 'function' ? callback : function () {};\n\toptions = options || {};\n\n\tif (!Array.isArray(array) || !array.length) {\n\t\treturn callback();\n\t}\n\tif (typeof process !== 'function') {\n\t\treturn callback(new Error('[[error:process-not-a-function]]'));\n\t}\n\n\tvar batch = options.batch || DEFAULT_BATCH_SIZE;\n\tvar start = 0;\n\tvar done = false;\n\n\tasync.whilst(\n\t\tfunction () {\n\t\t\treturn !done;\n\t\t},\n\t\tfunction (next) {\n\t\t\tvar currentBatch = array.slice(start, start + batch);\n\t\t\tif (!currentBatch.length) {\n\t\t\t\tdone = true;\n\t\t\t\treturn next();\n\t\t\t}\n\t\t\tprocess(currentBatch, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn next(err);\n\t\t\t\t}\n\t\t\t\tstart = start + batch;\n\t\t\t\tif (options.interval) {\n\t\t\t\t\tsetTimeout(next, options.interval);\n\t\t\t\t} else {\n\t\t\t\t\tnext();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tfunction (err) {\n\t\t\tcallback(err);\n\t\t}\n\t);\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/categories.js":"\n'use strict';\n\nvar async = require('async');\n\nvar db = require('./database');\nvar user = require('./user');\nvar Groups = require('./groups');\nvar plugins = require('./plugins');\nvar privileges = require('./privileges');\n\n(function (Categories) {\n\n\trequire('./categories/data')(Categories);\n\trequire('./categories/create')(Categories);\n\trequire('./categories/delete')(Categories);\n\trequire('./categories/topics')(Categories);\n\trequire('./categories/unread')(Categories);\n\trequire('./categories/activeusers')(Categories);\n\trequire('./categories/recentreplies')(Categories);\n\trequire('./categories/update')(Categories);\n\n\tCategories.exists = function (cid, callback) {\n\t\tdb.isSortedSetMember('categories:cid', cid, callback);\n\t};\n\n\tCategories.getCategoryById = function (data, callback) {\n\t\tvar category;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tCategories.getCategories([data.cid], data.uid, next);\n\t\t\t},\n\t\t\tfunction (categories, next) {\n\t\t\t\tif (!Array.isArray(categories) || !categories[0]) {\n\t\t\t\t\treturn next(new Error('[[error:invalid-cid]]'));\n\t\t\t\t}\n\t\t\t\tcategory = categories[0];\n\n\t\t\t\tasync.parallel({\n\t\t\t\t\ttopics: function (next) {\n\t\t\t\t\t\tCategories.getCategoryTopics(data, next);\n\t\t\t\t\t},\n\t\t\t\t\ttopicCount: function (next) {\n\t\t\t\t\t\tif (Array.isArray(data.set)) {\n\t\t\t\t\t\t\tdb.sortedSetIntersectCard(data.set, next);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnext(null, category.topic_count);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tisIgnored: function (next) {\n\t\t\t\t\t\tCategories.isIgnored([data.cid], data.uid, next);\n\t\t\t\t\t}\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tcategory.topics = results.topics.topics;\n\t\t\t\tcategory.nextStart = results.topics.nextStart;\n\t\t\t\tcategory.isIgnored = results.isIgnored[0];\n\t\t\t\tcategory.topic_count = results.topicCount;\n\n\t\t\t\tplugins.fireHook('filter:category.get', {category: category, uid: data.uid}, next);\n\t\t\t},\n\t\t\tfunction (data, next) {\n\t\t\t\tnext(null, data.category);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tCategories.isIgnored = function (cids, uid, callback) {\n\t\tdb.isSortedSetMembers('uid:' + uid + ':ignored:cids', cids, callback);\n\t};\n\n\tCategories.getPageCount = function (cid, uid, callback) {\n\t\tasync.parallel({\n\t\t\ttopicCount: async.apply(Categories.getCategoryField, cid, 'topic_count'),\n\t\t\tsettings: async.apply(user.getSettings, uid)\n\t\t}, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tif (!parseInt(results.topicCount, 10)) {\n\t\t\t\treturn callback(null, 1);\n\t\t\t}\n\n\t\t\tcallback(null, Math.ceil(parseInt(results.topicCount, 10) / results.settings.topicsPerPage));\n\t\t});\n\t};\n\n\tCategories.getAllCategories = function (uid, callback) {\n\t\tdb.getSortedSetRange('categories:cid', 0, -1, function (err, cids) {\n\t\t\tif (err || !Array.isArray(cids) || !cids.length) {\n\t\t\t\treturn callback(err, []);\n\t\t\t}\n\n\t\t\tCategories.getCategories(cids, uid, callback);\n\t\t});\n\t};\n\n\tCategories.getCategoriesByPrivilege = function (set, uid, privilege, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.getSortedSetRange(set, 0, -1, next);\n\t\t\t},\n\t\t\tfunction (cids, next) {\n\t\t\t\tprivileges.categories.filterCids(privilege, cids, uid, next);\n\t\t\t},\n\t\t\tfunction (cids, next) {\n\t\t\t\tCategories.getCategories(cids, uid, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tCategories.getModerators = function (cid, callback) {\n\t\tGroups.getMembers('cid:' + cid + ':privileges:mods', 0, -1, function (err, uids) {\n\t\t\tif (err || !Array.isArray(uids) || !uids.length) {\n\t\t\t\treturn callback(err, []);\n\t\t\t}\n\n\t\t\tuser.getUsersFields(uids, ['uid', 'username', 'userslug', 'picture'], callback);\n\t\t});\n\t};\n\n\n\tCategories.getCategories = function (cids, uid, callback) {\n\t\tif (!Array.isArray(cids)) {\n\t\t\treturn callback(new Error('[[error:invalid-cid]]'));\n\t\t}\n\n\t\tif (!cids.length) {\n\t\t\treturn callback(null, []);\n\t\t}\n\n\t\tasync.parallel({\n\t\t\tcategories: function (next) {\n\t\t\t\tCategories.getCategoriesData(cids, next);\n\t\t\t},\n\t\t\tchildren: function (next) {\n\t\t\t\tCategories.getChildren(cids, uid, next);\n\t\t\t},\n\t\t\tparents: function (next) {\n\t\t\t\tCategories.getParents(cids, next);\n\t\t\t},\n\t\t\thasRead: function (next) {\n\t\t\t\tCategories.hasReadCategories(cids, uid, next);\n\t\t\t}\n\t\t}, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar categories = results.categories;\n\t\t\tvar hasRead = results.hasRead;\n\t\t\tuid = parseInt(uid, 10);\n\t\t\tfor(var i = 0; i < results.categories.length; ++i) {\n\t\t\t\tif (categories[i]) {\n\t\t\t\t\tcategories[i]['unread-class'] = (parseInt(categories[i].topic_count, 10) === 0 || (hasRead[i] && uid !== 0)) ? '' : 'unread';\n\t\t\t\t\tcategories[i].children = results.children[i];\n\t\t\t\t\tcategories[i].parent = results.parents[i] || undefined;\n\t\t\t\t\tcalculateTopicPostCount(categories[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcallback(null, categories);\n\t\t});\n\t};\n\n\tfunction calculateTopicPostCount(category) {\n\t\tif (!category) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar postCount = parseInt(category.post_count, 10) || 0;\n\t\tvar topicCount = parseInt(category.topic_count, 10) || 0;\n\t\tif (!Array.isArray(category.children) || !category.children.length) {\n\t\t\tcategory.totalPostCount = postCount;\n\t\t\tcategory.totalTopicCount = topicCount;\n\t\t\treturn;\n\t\t}\n\n\t\tcategory.children.forEach(function (child) {\n\t\t\tcalculateTopicPostCount(child);\n\t\t\tpostCount += parseInt(child.totalPostCount, 10) || 0;\n\t\t\ttopicCount += parseInt(child.totalTopicCount, 10) || 0;\n\t\t});\n\n\t\tcategory.totalPostCount = postCount;\n\t\tcategory.totalTopicCount = topicCount;\n\t}\n\n\tCategories.getParents = function (cids, callback) {\n\t\tvar categoriesData;\n\t\tvar parentCids;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tCategories.getCategoriesFields(cids, ['parentCid'], next);\n\t\t\t},\n\t\t\tfunction (_categoriesData, next) {\n\t\t\t\tcategoriesData = _categoriesData;\n\n\t\t\t\tparentCids = categoriesData.filter(function (category) {\n\t\t\t\t\treturn category && category.hasOwnProperty('parentCid') && parseInt(category.parentCid, 10);\n\t\t\t\t}).map(function (category) {\n\t\t\t\t\treturn parseInt(category.parentCid, 10);\n\t\t\t\t});\n\n\t\t\t\tif (!parentCids.length) {\n\t\t\t\t\treturn callback(null, cids.map(function () {return null;}));\n\t\t\t\t}\n\n\t\t\t\tCategories.getCategoriesData(parentCids, next);\n\t\t\t},\n\t\t\tfunction (parentData, next) {\n\t\t\t\tparentData = categoriesData.map(function (category) {\n\t\t\t\t\treturn parentData[parentCids.indexOf(parseInt(category.parentCid, 10))];\n\t\t\t\t});\n\t\t\t\tnext(null, parentData);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tCategories.getChildren = function (cids, uid, callback) {\n\t\tvar categories = cids.map(function (cid) {\n\t\t\treturn {cid: cid};\n\t\t});\n\n\t\tasync.each(categories, function (category, next) {\n\t\t\tgetChildrenRecursive(category, uid, next);\n\t\t}, function (err) {\n\t\t\tcallback(err, categories.map(function (c) {\n\t\t\t\treturn c && c.children;\n\t\t\t}));\n\t\t});\n\t};\n\n\tfunction getChildrenRecursive(category, uid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.getSortedSetRange('cid:' + category.cid + ':children', 0, -1, next);\n\t\t\t},\n\t\t\tfunction (children, next) {\n\t\t\t\tprivileges.categories.filterCids('find', children, uid, next);\n\t\t\t},\n\t\t\tfunction (children, next) {\n\t\t\t\tchildren = children.filter(function (cid) {\n\t\t\t\t\treturn parseInt(category.cid, 10) !== parseInt(cid, 10);\n\t\t\t\t});\n\t\t\t\tif (!children.length) {\n\t\t\t\t\tcategory.children = [];\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\tCategories.getCategoriesData(children, next);\n\t\t\t},\n\t\t\tfunction (childrenData, next) {\n\t\t\t\tchildrenData = childrenData.filter(Boolean);\n\t\t\t\tcategory.children = childrenData;\n\t\t\t\tasync.each(category.children, function (child, next) {\n\t\t\t\t\tgetChildrenRecursive(child, uid, next);\n\t\t\t\t}, next);\n\t\t\t}\n\t\t], callback);\n\t}\n\n\tCategories.flattenCategories = function (allCategories, categoryData) {\n\t\tcategoryData.forEach(function (category) {\n\t\t\tif (!category) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!category.parent) {\n\t\t\t\tallCategories.push(category);\n\t\t\t}\n\n\t\t\tif (Array.isArray(category.children) && category.children.length) {\n\t\t\t\tCategories.flattenCategories(allCategories, category.children);\n\t\t\t}\n\t\t});\n\t};\n\n\t/**\n\t * Recursively build tree\n\t *\n\t * @param categories {array} flat list of categories\n\t * @param parentCid {number} start from 0 to build full tree\n\t */\n\tCategories.getTree = function (categories, parentCid) {\n\t\tvar tree = [], i = 0, len = categories.length, category;\n\n\t\tfor (i; i < len; ++i) {\n\t\t\tcategory = categories[i];\n\t\t\tif (!category.hasOwnProperty('parentCid') || category.parentCid === null) {\n\t\t\t\tcategory.parentCid = 0;\n\t\t\t}\n\n\t\t\tif (parseInt(category.parentCid, 10) === parseInt(parentCid, 10)) {\n\t\t\t\ttree.push(category);\n\t\t\t\tcategory.children = Categories.getTree(categories, category.cid);\n\t\t\t}\n\t\t}\n\n\t\treturn tree;\n\t};\n\n\tCategories.buildForSelect = function (uid, callback) {\n\t\tfunction recursive(category, categoriesData, level) {\n\t\t\tif (category.link) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar bullet = level ? '&bull; ' : '';\n\t\t\tcategory.value = category.cid;\n\t\t\tcategory.text = level + bullet + category.name;\n\t\t\tcategoriesData.push(category);\n\n\t\t\tcategory.children.forEach(function (child) {\n\t\t\t\trecursive(child, categoriesData, '&nbsp;&nbsp;&nbsp;&nbsp;' + level);\n\t\t\t});\n\t\t}\n\t\tCategories.getCategoriesByPrivilege('cid:0:children', uid, 'read', function (err, categories) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar categoriesData = [];\n\n\t\t\tcategories = categories.filter(function (category) {\n\t\t\t\treturn category && !category.link && !parseInt(category.parentCid, 10);\n\t\t\t});\n\n\t\t\tcategories.forEach(function (category) {\n\t\t\t\trecursive(category, categoriesData, '');\n\t\t\t});\n\t\t\tcallback(null, categoriesData);\n\t\t});\n\t};\n\n\tCategories.getIgnorers = function (cid, start, stop, callback) {\n\t\tdb.getSortedSetRevRange('cid:' + cid + ':ignorers', start, stop, callback);\n\t};\n\n\tCategories.filterIgnoringUids = function (cid, uids, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.sortedSetScores('cid:' + cid + ':ignorers', uids, next);\n\t\t\t},\n\t\t\tfunction (scores, next) {\n\t\t\t\tvar readingUids = uids.filter(function (uid, index) {\n\t\t\t\t\treturn uid && !!scores[index];\n\t\t\t\t});\n\t\t\t\tnext(null, readingUids);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\n}(exports));\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/coverPhoto.js":"\"use strict\";\n\nvar coverPhoto = {};\nvar meta = require('./meta');\nvar nconf = require('nconf');\n\n\ncoverPhoto.getDefaultGroupCover = function (groupName) {\n\treturn getCover('groups', groupName);\n};\n\ncoverPhoto.getDefaultProfileCover = function (uid) {\n\treturn getCover('profile', parseInt(uid, 10));\n};\n\nfunction getCover(type, id) {\n\tif (meta.config[type + ':defaultCovers']) {\t\t\n\t\tvar covers = meta.config[type + ':defaultCovers'].split(/\\s*?,\\s*?/g);\n\t\t\n\t\tif (typeof id === 'string') {\n\t\t\tid = (id.charCodeAt(0) + id.charCodeAt(1)) % covers.length;\n\t\t} else {\n\t\t\tid = id % covers.length;\n\t\t}\n\n\t\treturn covers[id];\n\t}\n\n\treturn nconf.get('relative_path') + '/images/cover-default.png';\n}\n\nmodule.exports = coverPhoto;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/meta.js":"\"use strict\";\n\nvar async = require('async');\nvar winston = require('winston');\nvar os = require('os');\nvar nconf = require('nconf');\n\nvar pubsub = require('./pubsub');\nvar utils = require('../public/src/utils');\n\n(function (Meta) {\n\tMeta.reloadRequired = false;\n\n\trequire('./meta/configs')(Meta);\n\trequire('./meta/themes')(Meta);\n\trequire('./meta/js')(Meta);\n\trequire('./meta/css')(Meta);\n\trequire('./meta/sounds')(Meta);\n\trequire('./meta/settings')(Meta);\n\trequire('./meta/logs')(Meta);\n\trequire('./meta/errors')(Meta);\n\trequire('./meta/tags')(Meta);\n\trequire('./meta/dependencies')(Meta);\n\tMeta.templates = require('./meta/templates');\n\tMeta.blacklist = require('./meta/blacklist');\n\n\t/* Assorted */\n\tMeta.userOrGroupExists = function (slug, callback) {\n\t\tvar user = require('./user');\n\t\tvar groups = require('./groups');\n\t\tslug = utils.slugify(slug);\n\t\tasync.parallel([\n\t\t\tasync.apply(user.existsBySlug, slug),\n\t\t\tasync.apply(groups.existsBySlug, slug)\n\t\t], function (err, results) {\n\t\t\tcallback(err, results ? results.some(function (result) { return result; }) : false);\n\t\t});\n\t};\n\n\t/**\n\t * Reload deprecated as of v1.1.2+, remove in v2.x\n\t */\n\tMeta.reload = function (callback) {\n\t\trestart();\n\t\tcallback();\n\t};\n\n\tMeta.restart = function () {\n\t\tpubsub.publish('meta:restart', {hostname: os.hostname()});\n\t\trestart();\n\t};\n\n\tif (nconf.get('isPrimary') === 'true') {\n\t\tpubsub.on('meta:restart', function (data) {\n\t\t\tif (data.hostname !== os.hostname()) {\n\t\t\t\trestart();\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction restart() {\n\t\tif (process.send) {\n\t\t\tprocess.send({\n\t\t\t\taction: 'restart'\n\t\t\t});\n\t\t} else {\n\t\t\twinston.error('[meta.restart] Could not restart, are you sure NodeBB was started with `./nodebb start`?');\n\t\t}\n\t}\n}(exports));\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/pubsub.js":"\n'use strict';\n\nvar nconf = require('nconf'),\n\tutil = require('util'),\n\twinston = require('winston'),\n\tEventEmitter = require('events').EventEmitter;\n\nvar channelName;\n\nvar PubSub = function () {\n\tvar self = this;\n\tif (nconf.get('redis')) {\n\t\tvar redis = require('./database/redis');\n\t\tvar subClient = redis.connect();\n\t\tthis.pubClient = redis.connect();\n\n\t\tchannelName = 'db:' + nconf.get('redis:database') + 'pubsub_channel';\n\t\tsubClient.subscribe(channelName);\n\n\t\tsubClient.on('message', function (channel, message) {\n\t\t\tif (channel !== channelName) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tvar msg = JSON.parse(message);\n\t\t\t\tself.emit(msg.event, msg.data);\n\t\t\t} catch(err) {\n\t\t\t\twinston.error(err.stack);\n\t\t\t}\n\t\t});\n\t}\n};\n\nutil.inherits(PubSub, EventEmitter);\n\nPubSub.prototype.publish = function (event, data) {\n\tif (this.pubClient) {\n\t\tthis.pubClient.publish(channelName, JSON.stringify({event: event, data: data}));\n\t} else {\n\t\tthis.emit(event, data);\n\t}\n};\n\nvar pubsub = new PubSub();\n\nmodule.exports = pubsub;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/meta/configs.js":"\n'use strict';\n\nvar winston = require('winston');\nvar nconf = require('nconf');\n\nvar db = require('../database');\nvar pubsub = require('../pubsub');\nvar utils = require('../../public/src/utils');\n\nmodule.exports = function (Meta) {\n\n\tMeta.config = {};\n\tMeta.configs = {};\n\n\tMeta.configs.init = function (callback) {\n\t\tdelete Meta.config;\n\n\t\tMeta.configs.list(function (err, config) {\n\t\t\tif (err) {\n\t\t\t\twinston.error(err.stack);\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tconfig['cache-buster'] = utils.generateUUID();\n\n\t\t\tMeta.config = config;\n\t\t\tcallback();\n\t\t});\n\t};\n\n\tMeta.configs.list = function (callback) {\n\t\tdb.getObject('config', function (err, config) {\n\t\t\tconfig = config || {};\n\t\t\tconfig.version = nconf.get('version');\n\t\t\tconfig.registry = nconf.get('registry');\n\t\t\tcallback(err, config);\n\t\t});\n\t};\n\n\tMeta.configs.get = function (field, callback) {\n\t\tdb.getObjectField('config', field, callback);\n\t};\n\n\tMeta.configs.getFields = function (fields, callback) {\n\t\tdb.getObjectFields('config', fields, callback);\n\t};\n\n\tMeta.configs.set = function (field, value, callback) {\n\t\tcallback = callback || function () {};\n\t\tif (!field) {\n\t\t\treturn callback(new Error('invalid config field'));\n\t\t}\n\n\t\tdb.setObjectField('config', field, value, function (err) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tvar data = {};\n\t\t\tdata[field] = value;\n\t\t\tupdateConfig(data);\n\n\t\t\tcallback();\n\t\t});\n\t};\n\n\tMeta.configs.setMultiple = function (data, callback) {\n\t\tprocessConfig(data, function (err) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tdb.setObject('config', data, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\tupdateConfig(data);\n\t\t\t\tcallback();\n\t\t\t});\n\t\t});\n\t};\n\n\tfunction processConfig(data, callback) {\n\t\tif (data.customCSS) {\n\t\t\tsaveRenderedCss(data, callback);\n\t\t\treturn;\n\t\t}\n\t\tcallback();\n\t}\n\n\tfunction saveRenderedCss(data, callback) {\n\t\tvar less = require('less');\n\t\tless.render(data.customCSS, {\n\t\t\tcompress: true\n\t\t}, function (err, lessObject) {\n\t\t\tif (err) {\n\t\t\t\twinston.error('[less] Could not convert custom LESS to CSS! Please check your syntax.');\n\t\t\t\treturn callback(null, '');\n\t\t\t}\n\t\t\tdata.renderedCustomCSS = lessObject.css;\n\t\t\tcallback();\n\t\t});\n\t}\n\n\tfunction updateConfig(config) {\n\t\tpubsub.publish('config:update', config);\n\t}\n\n\tpubsub.on('config:update', function onConfigReceived(config) {\n\t\tif (typeof config !== 'object' || !Meta.config) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor(var field in config) {\n\t\t\tif(config.hasOwnProperty(field)) {\n\t\t\t\tMeta.config[field] = config[field];\n\t\t\t}\n\t\t}\n\t});\n\n\tMeta.configs.setOnEmpty = function (values, callback) {\n\t\tdb.getObject('config', function (err, data) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tdata = data || {};\n\t\t\tvar empty = {};\n\t\t\tObject.keys(values).forEach(function (key) {\n\t\t\t\tif (!data.hasOwnProperty(key)) {\n\t\t\t\t\tempty[key] = values[key];\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (Object.keys(empty).length) {\n\t\t\t\tdb.setObject('config', empty, callback);\n\t\t\t} else {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t};\n\n\tMeta.configs.remove = function (field) {\n\t\tdb.deleteObjectField('config', field);\n\t};\n\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/emailer.js":"\"use strict\";\n\nvar async = require('async');\nvar winston = require('winston');\nvar nconf = require('nconf');\nvar templates = require('templates.js');\nvar nodemailer = require('nodemailer');\nvar sendmailTransport = require('nodemailer-sendmail-transport');\nvar smtpTransport = require('nodemailer-smtp-transport');\nvar htmlToText = require('html-to-text');\nvar url = require('url');\n\nvar User = require('./user');\nvar Plugins = require('./plugins');\nvar meta = require('./meta');\nvar translator = require('../public/src/modules/translator');\n\nvar transports = {\n\tsendmail: nodemailer.createTransport(sendmailTransport()),\n\tgmail: undefined\n};\n\nvar app;\nvar fallbackTransport;\n\n(function (Emailer) {\n\tEmailer.registerApp = function (expressApp) {\n\t\tapp = expressApp;\n\n\t\t// Enable Gmail transport if enabled in ACP\n\t\tif (parseInt(meta.config['email:GmailTransport:enabled'], 10) === 1) {\n\t\t\tfallbackTransport = transports.gmail = nodemailer.createTransport(smtpTransport({\n\t\t\t\thost: 'smtp.gmail.com',\n\t\t\t\tport: 465,\n\t\t\t\tsecure: true,\n\t\t\t\tauth: {\n\t\t\t\t\tuser: meta.config['email:GmailTransport:user'],\n\t\t\t\t\tpass: meta.config['email:GmailTransport:pass']\n\t\t\t\t}\n\t\t\t}));\n\t\t} else {\n\t\t\tfallbackTransport = transports.sendmail;\n\t\t}\n\n\t\treturn Emailer;\n\t};\n\n\tEmailer.send = function (template, uid, params, callback) {\n\t\tcallback = callback || function () {};\n\t\tif (!app) {\n\t\t\twinston.warn('[emailer] App not ready!');\n\t\t\treturn callback();\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\temail: async.apply(User.getUserField, uid, 'email'),\n\t\t\t\t\tsettings: async.apply(User.getSettings, uid)\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tif (!results.email) {\n\t\t\t\t\twinston.warn('uid : ' + uid + ' has no email, not sending.');\n\t\t\t\t\treturn next();\n\t\t\t\t}\n\t\t\t\tparams.uid = uid;\n\t\t\t\tEmailer.sendToEmail(template, results.email, results.settings.userLang, params, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tEmailer.sendToEmail = function (template, email, language, params, callback) {\n\t\tcallback = callback || function () {};\n\n\t\tvar lang = language || meta.config.defaultLang || 'en-GB';\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\thtml: function (next) {\n\t\t\t\t\t\trenderAndTranslate('emails/' + template, params, lang, next);\n\t\t\t\t\t},\n\t\t\t\t\tsubject: function (next) {\n\t\t\t\t\t\ttranslator.translate(params.subject, lang, function (translated) {\n\t\t\t\t\t\t\tnext(null, translated);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tvar data = {\n\t\t\t\t\t_raw: params,\n\t\t\t\t\tto: email,\n\t\t\t\t\tfrom: meta.config['email:from'] || 'no-reply@' + getHostname(),\n\t\t\t\t\tfrom_name: meta.config['email:from_name'] || 'NodeBB',\n\t\t\t\t\tsubject: results.subject,\n\t\t\t\t\thtml: results.html,\n\t\t\t\t\tplaintext: htmlToText.fromString(results.html, {\n\t\t\t\t\t\tignoreImage: true\n\t\t\t\t\t}),\n\t\t\t\t\ttemplate: template,\n\t\t\t\t\tuid: params.uid,\n\t\t\t\t\tpid: params.pid,\n\t\t\t\t\tfromUid: params.fromUid\n\t\t\t\t};\n\t\t\t\tPlugins.fireHook('filter:email.modify', data, next);\n\t\t\t},\n\t\t\tfunction (data, next) {\n\t\t\t\tif (Plugins.hasListeners('filter:email.send')) {\n\t\t\t\t\tPlugins.fireHook('filter:email.send', data, next);\n\t\t\t\t} else {\n\t\t\t\t\tEmailer.sendViaFallback(data, next);\n\t\t\t\t}\n\t\t\t}\n\t\t], function (err) {\n\t\t\tif (err && err.code === 'ENOENT') {\n\t\t\t\tcallback(new Error('[[error:sendmail-not-found]]'));\n\t\t\t} else {\n\t\t\t\tcallback(err);\n\t\t\t}\n\t\t});\n\t};\n\n\tEmailer.sendViaFallback = function (data, callback) {\n\t\t// Some minor alterations to the data to conform to nodemailer standard\n\t\tdata.text = data.plaintext;\n\t\tdelete data.plaintext;\n\n\t\t// NodeMailer uses a combined \"from\"\n\t\tdata.from = data.from_name + '<' + data.from + '>';\n\t\tdelete data.from_name;\n\n\t\twinston.verbose('[emailer] Sending email to uid ' + data.uid);\n\t\tfallbackTransport.sendMail(data, callback);\n\t};\n\n\tfunction render(tpl, params, next) {\n\t\tif (meta.config['email:custom:' + tpl.replace('emails/', '')]) {\n\t\t\tvar text = templates.parse(meta.config['email:custom:' + tpl.replace('emails/', '')], params);\n\t\t\tnext(null, text);\n\t\t} else {\n\t\t\tapp.render(tpl, params, next);\n\t\t}\n\t}\n\n\tfunction renderAndTranslate(tpl, params, lang, callback) {\n\t\trender(tpl, params, function (err, html) {\n\t\t\ttranslator.translate(html, lang, function (translated) {\n\t\t\t\tcallback(err, translated);\n\t\t\t});\n\t\t});\n\t}\n\n\tfunction getHostname() {\n\t\tvar configUrl = nconf.get('url');\n\t\tvar parsed = url.parse(configUrl);\n\n\t\treturn parsed.hostname;\n\t}\n\n}(module.exports));\n\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/user.js":"'use strict';\n\nvar\tasync = require('async');\nvar _ = require('underscore');\n\nvar groups = require('./groups');\nvar plugins = require('./plugins');\nvar db = require('./database');\nvar topics = require('./topics');\nvar privileges = require('./privileges');\nvar meta = require('./meta');\n\n(function (User) {\n\n\tUser.email = require('./user/email');\n\tUser.notifications = require('./user/notifications');\n\tUser.reset = require('./user/reset');\n\tUser.digest = require('./user/digest');\n\n\trequire('./user/data')(User);\n\trequire('./user/auth')(User);\n\trequire('./user/bans')(User);\n\trequire('./user/create')(User);\n\trequire('./user/posts')(User);\n\trequire('./user/topics')(User);\n\trequire('./user/categories')(User);\n\trequire('./user/follow')(User);\n\trequire('./user/profile')(User);\n\trequire('./user/admin')(User);\n\trequire('./user/delete')(User);\n\trequire('./user/settings')(User);\n\trequire('./user/search')(User);\n\trequire('./user/jobs')(User);\n\trequire('./user/picture')(User);\n\trequire('./user/approval')(User);\n\trequire('./user/invite')(User);\n\trequire('./user/password')(User);\n\trequire('./user/info')(User);\n\n\tUser.updateLastOnlineTime = function (uid, callback) {\n\t\tcallback = callback || function () {};\n\t\tdb.getObjectFields('user:' + uid, ['status', 'lastonline'], function (err, userData) {\n\t\t\tvar now = Date.now();\n\t\t\tif (err || userData.status === 'offline' || now - parseInt(userData.lastonline, 10) < 300000) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tUser.setUserField(uid, 'lastonline', now, callback);\n\t\t});\n\t};\n\n\tUser.updateOnlineUsers = function (uid, callback) {\n\t\tcallback = callback || function () {};\n\n\t\tvar now = Date.now();\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.sortedSetScore('users:online', uid, next);\n\t\t\t},\n\t\t\tfunction (userOnlineTime, next) {\n\t\t\t\tif (now - parseInt(userOnlineTime, 10) < 300000) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\tdb.sortedSetAdd('users:online', now, uid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\ttopics.pushUnreadCount(uid);\n\t\t\t\tplugins.fireHook('action:user.online', {uid: uid, timestamp: now});\n\t\t\t\tnext();\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tUser.getUidsFromSet = function (set, start, stop, callback) {\n\t\tif (set === 'users:online') {\n\t\t\tvar count = parseInt(stop, 10) === -1 ? stop : stop - start + 1;\n\t\t\tvar now = Date.now();\n\t\t\tdb.getSortedSetRevRangeByScore(set, start, count, '+inf', now - 300000, callback);\n\t\t} else {\n\t\t\tdb.getSortedSetRevRange(set, start, stop, callback);\n\t\t}\n\t};\n\n\tUser.getUsersFromSet = function (set, uid, start, stop, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tUser.getUidsFromSet(set, start, stop, next);\n\t\t\t},\n\t\t\tfunction (uids, next) {\n\t\t\t\tUser.getUsers(uids, uid, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tUser.getUsersWithFields = function (uids, fields, uid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tplugins.fireHook('filter:users.addFields', {fields: fields}, next);\n\t\t\t},\n\t\t\tfunction (data, next) {\n\t\t\t\tdata.fields = data.fields.filter(function (field, index, array) {\n\t\t\t\t\treturn array.indexOf(field) === index;\n\t\t\t\t});\n\n\t\t\t\tasync.parallel({\n\t\t\t\t\tuserData: function (next) {\n\t\t\t\t\t\tUser.getUsersFields(uids, data.fields, next);\n\t\t\t\t\t},\n\t\t\t\t\tisAdmin: function (next) {\n\t\t\t\t\t\tUser.isAdministrator(uids, next);\n\t\t\t\t\t}\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tresults.userData.forEach(function (user, index) {\n\t\t\t\t\tif (user) {\n\t\t\t\t\t\tuser.status = User.getStatus(user);\n\t\t\t\t\t\tuser.administrator = results.isAdmin[index];\n\t\t\t\t\t\tuser.banned = parseInt(user.banned, 10) === 1;\n\t\t\t\t\t\tuser.banned_until = parseInt(user['banned:expire'], 10) || 0;\n\t\t\t\t\t\tuser.banned_until_readable = user.banned_until ? new Date(user.banned_until).toString() : 'Not Banned';\n\t\t\t\t\t\tuser['email:confirmed'] = parseInt(user['email:confirmed'], 10) === 1;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tplugins.fireHook('filter:userlist.get', {users: results.userData, uid: uid}, next);\n\t\t\t},\n\t\t\tfunction (data, next) {\n\t\t\t\tnext(null, data.users);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tUser.getUsers = function (uids, uid, callback) {\n\t\tvar fields = ['uid', 'username', 'userslug', 'picture', 'status', 'flags',\n\t\t\t'banned', 'banned:expire', 'joindate', 'postcount', 'reputation', 'email:confirmed', 'lastonline'];\n\n\t\tUser.getUsersWithFields(uids, fields, uid, callback);\n\t};\n\n\tUser.getStatus = function (userData) {\n\t\tvar isOnline = (Date.now() - parseInt(userData.lastonline, 10)) < 300000;\n\t\treturn isOnline ? (userData.status || 'online') : 'offline';\n\t};\n\n\tUser.isOnline = function (uid, callback) {\n\t\tif (Array.isArray(uid)) {\n\t\t\tdb.sortedSetScores('users:online', uid, function (err, lastonline) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\t\t\t\tvar now = Date.now();\n\t\t\t\tvar isOnline = uid.map(function (uid, index) {\n\t\t\t\t\treturn now - lastonline[index] < 300000;\n\t\t\t\t});\n\t\t\t\tcallback(null, isOnline);\n\t\t\t});\n\t\t} else {\n\t\t\tdb.sortedSetScore('users:online', uid, function (err, lastonline) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\t\t\t\tvar isOnline = Date.now() - parseInt(lastonline, 10) < 300000;\n\t\t\t\tcallback(null, isOnline);\n\t\t\t});\n\t\t}\n\n\t};\n\n\tUser.exists = function (uid, callback) {\n\t\tdb.isSortedSetMember('users:joindate', uid, callback);\n\t};\n\n\tUser.existsBySlug = function (userslug, callback) {\n\t\tUser.getUidByUserslug(userslug, function (err, exists) {\n\t\t\tcallback(err, !! exists);\n\t\t});\n\t};\n\n\tUser.getUidByUsername = function (username, callback) {\n\t\tif (!username) {\n\t\t\treturn callback(null, 0);\n\t\t}\n\t\tdb.sortedSetScore('username:uid', username, callback);\n\t};\n\n\tUser.getUidsByUsernames = function (usernames, callback) {\n\t\tdb.sortedSetScores('username:uid', usernames, callback);\n\t};\n\n\tUser.getUidByUserslug = function (userslug, callback) {\n\t\tif (!userslug) {\n\t\t\treturn callback(null, 0);\n\t\t}\n\t\tdb.sortedSetScore('userslug:uid', userslug, callback);\n\t};\n\n\tUser.getUsernamesByUids = function (uids, callback) {\n\t\tUser.getUsersFields(uids, ['username'], function (err, users) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tusers = users.map(function (user) {\n\t\t\t\treturn user.username;\n\t\t\t});\n\n\t\t\tcallback(null, users);\n\t\t});\n\t};\n\n\tUser.getUsernameByUserslug = function (slug, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tUser.getUidByUserslug(slug, next);\n\t\t\t},\n\t\t\tfunction (uid, next) {\n\t\t\t\tUser.getUserField(uid, 'username', next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tUser.getUidByEmail = function (email, callback) {\n\t\tdb.sortedSetScore('email:uid', email.toLowerCase(), callback);\n\t};\n\n\tUser.getUidsByEmails = function (emails, callback) {\n\t\temails = emails.map(function (email) {\n\t\t\treturn email && email.toLowerCase();\n\t\t});\n\t\tdb.sortedSetScores('email:uid', emails, callback);\n\t};\n\n\tUser.getUsernameByEmail = function (email, callback) {\n\t\tdb.sortedSetScore('email:uid', email.toLowerCase(), function (err, uid) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tUser.getUserField(uid, 'username', callback);\n\t\t});\n\t};\n\n\tUser.isModerator = function (uid, cid, callback) {\n\t\tprivileges.users.isModerator(uid, cid, callback);\n\t};\n\n\tUser.isModeratorOfAnyCategory = function (uid, callback) {\n\t\tUser.getModeratedCids(uid, function (err, cids) {\n\t\t\tcallback(err, Array.isArray(cids) ? !!cids.length : false);\n\t\t});\n\t};\n\n\tUser.isAdministrator = function (uid, callback) {\n\t\tprivileges.users.isAdministrator(uid, callback);\n\t};\n\n\tUser.isGlobalModerator = function (uid, callback) {\n\t\tprivileges.users.isGlobalModerator(uid, callback);\n\t};\n\n\tUser.isAdminOrGlobalMod = function (uid, callback) {\n\t\tasync.parallel({\n\t\t\tisAdmin: async.apply(User.isAdministrator, uid),\n\t\t\tisGlobalMod: async.apply(User.isGlobalModerator, uid)\n\t\t}, function (err, results) {\n\t\t\tcallback(err, results ? (results.isAdmin || results.isGlobalMod) : false);\n\t\t});\n\t};\n\n\tUser.isAdminOrSelf = function (callerUid, uid, callback) {\n\t\tif (parseInt(callerUid, 10) === parseInt(uid, 10)) {\n\t\t\treturn callback();\n\t\t}\n\t\tUser.isAdministrator(callerUid, function (err, isAdmin) {\n\t\t\tif (err || !isAdmin) {\n\t\t\t\treturn callback(err || new Error('[[error:no-privileges]]'));\n\t\t\t}\n\t\t\tcallback();\n\t\t});\n\t};\n\n\tUser.getAdminsandGlobalMods = function (callback) {\n\t\tasync.parallel({\n\t\t\tadmins: async.apply(groups.getMembers, 'administrators', 0, -1),\n\t\t\tmods: async.apply(groups.getMembers, 'Global Moderators', 0, -1)\n\t\t}, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tvar uids = results.admins.concat(results.mods).filter(function (uid, index, array) {\n\t\t\t\treturn uid && array.indexOf(uid) === index;\n\t\t\t});\n\t\t\tUser.getUsersData(uids, callback);\n\t\t});\n\t};\n\n\tUser.getAdminsandGlobalModsandModerators = function (callback) {\n\t\tasync.parallel([\n\t\t\tasync.apply(groups.getMembers, 'administrators', 0, -1),\n\t\t\tasync.apply(groups.getMembers, 'Global Moderators', 0, -1),\n\t\t\tasync.apply(User.getModeratorUids)\n\t\t], function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tUser.getUsersData(_.union.apply(_, results), callback);\n\t\t});\n\t};\n\n\tUser.getModeratorUids = function (callback) {\n\t\tasync.waterfall([\n\t\t\tasync.apply(db.getSortedSetRange, 'categories:cid', 0, -1),\n\t\t\tfunction (cids, next) {\n\t\t\t\tvar groupNames = cids.map(function (cid) {\n\t\t\t\t\treturn 'cid:' + cid + ':privileges:mods';\n\t\t\t\t});\n\n\t\t\t\tgroups.getMembersOfGroups(groupNames, function (err, memberSets) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tnext(null, _.union.apply(_, memberSets));\n\t\t\t\t});\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tUser.getModeratedCids = function (uid, callback) {\n\t\tvar cids;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.getSortedSetRange('categories:cid', 0, -1, next);\n\t\t\t},\n\t\t\tfunction (_cids, next) {\n\t\t\t\tcids = _cids;\n\t\t\t\tUser.isModerator(uid, cids, next);\n\t\t\t},\n\t\t\tfunction (isMods, next) {\n\t\t\t\tcids = cids.filter(function (cid, index) {\n\t\t\t\t\treturn cid && isMods[index];\n\t\t\t\t});\n\t\t\t\tnext(null, cids);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tUser.addInterstitials = function (callback) {\n\t\tplugins.registerHook('core', {\n\t\t\thook: 'filter:register.interstitial',\n\t\t\tmethod: function (data, callback) {\n\t\t\t\tif (meta.config.termsOfUse && !data.userData.acceptTos) {\n\t\t\t\t\tdata.interstitials.push({\n\t\t\t\t\t\ttemplate: 'partials/acceptTos',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\ttermsOfUse: meta.config.termsOfUse\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcallback: function (userData, formData, next) {\n\t\t\t\t\t\t\tif (formData['agree-terms'] === 'on') {\n\t\t\t\t\t\t\t\tuserData.acceptTos = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tnext(userData.acceptTos ? null : new Error('[[register:terms_of_use_error]]'));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tcallback(null, data);\n\t\t\t}\n\t\t});\n\n\t\tcallback();\n\t};\n\n\n}(exports));\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/groups.js":"'use strict';\n\nvar async = require('async');\nvar validator = require('validator');\n\nvar user = require('./user');\nvar db = require('./database');\nvar plugins = require('./plugins');\nvar posts = require('./posts');\nvar privileges = require('./privileges');\nvar utils = require('../public/src/utils');\n\n(function (Groups) {\n\n\trequire('./groups/create')(Groups);\n\trequire('./groups/delete')(Groups);\n\trequire('./groups/update')(Groups);\n\trequire('./groups/membership')(Groups);\n\trequire('./groups/ownership')(Groups);\n\trequire('./groups/search')(Groups);\n\trequire('./groups/cover')(Groups);\n\n\tvar ephemeralGroups = ['guests'],\n\n\t\tinternals = {\n\t\t\tgetEphemeralGroup: function (groupName) {\n\t\t\t\treturn {\n\t\t\t\t\tname: groupName,\n\t\t\t\t\tslug: utils.slugify(groupName),\n\t\t\t\t\tdescription: '',\n\t\t\t\t\tdeleted: '0',\n\t\t\t\t\thidden: '0',\n\t\t\t\t\tsystem: '1'\n\t\t\t\t};\n\t\t\t},\n\t\t\tremoveEphemeralGroups: function (groups) {\n\t\t\t\tvar x = groups.length;\n\t\t\t\twhile(x--) {\n\t\t\t\t\tif (ephemeralGroups.indexOf(groups[x]) !== -1) {\n\t\t\t\t\t\tgroups.splice(x, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn groups;\n\t\t\t}\n\t\t};\n\n\tGroups.internals = internals;\n\n\tvar isPrivilegeGroupRegex = /^cid:\\d+:privileges:[\\w:]+$/;\n\tGroups.isPrivilegeGroup = function (groupName) {\n\t\treturn isPrivilegeGroupRegex.test(groupName);\n\t};\n\n\tGroups.getEphemeralGroups = function () {\n\t\treturn ephemeralGroups;\n\t};\n\n\tGroups.getGroupsFromSet = function (set, uid, start, stop, callback) {\n\t\tvar method;\n\t\tvar args;\n\t\tif (set === 'groups:visible:name') {\n\t\t\tmethod = db.getSortedSetRangeByLex;\n\t\t\targs = [set, '-', '+', start, stop - start + 1, done];\n\t\t} else {\n\t\t\tmethod = db.getSortedSetRevRange;\n\t\t\targs = [set, start, stop, done];\n\t\t}\n\t\tmethod.apply(null, args);\n\n\t\tfunction done(err, groupNames) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tif (set === 'groups:visible:name') {\n\t\t\t\tgroupNames = groupNames.map(function (name) {\n\t\t\t\t\treturn name.split(':')[1];\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tGroups.getGroupsAndMembers(groupNames, callback);\n\t\t}\n\t};\n\n\tGroups.getGroups = function (set, start, stop, callback) {\n\t\tdb.getSortedSetRevRange(set, start, stop, callback);\n\t};\n\n\tGroups.getGroupsAndMembers = function (groupNames, callback) {\n\t\tasync.parallel({\n\t\t\tgroups: function (next) {\n\t\t\t\tGroups.getGroupsData(groupNames, next);\n\t\t\t},\n\t\t\tmembers: function (next) {\n\t\t\t\tGroups.getMemberUsers(groupNames, 0, 3, next);\n\t\t\t}\n\t\t}, function (err, data) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tdata.groups.forEach(function (group, index) {\n\t\t\t\tif (!group) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tgroup.members = data.members[index] || [];\n\t\t\t\tgroup.truncated = group.memberCount > data.members.length;\n\t\t\t});\n\n\t\t\tcallback(null, data.groups);\n\t\t});\n\t};\n\n\tGroups.get = function (groupName, options, callback) {\n\t\tif (!groupName) {\n\t\t\treturn callback(new Error('[[error:invalid-group]]'));\n\t\t}\n\n\t\tvar stop = -1;\n\n\t\tasync.parallel({\n\t\t\tbase: function (next) {\n\t\t\t\tdb.getObject('group:' + groupName, next);\n\t\t\t},\n\t\t\tmembers: function (next) {\n\t\t\t\tif (options.truncateUserList) {\n\t\t\t\t\tstop = (parseInt(options.userListCount, 10) || 4) - 1;\n\t\t\t\t}\n\n\t\t\t\tGroups.getOwnersAndMembers(groupName, options.uid, 0, stop, next);\n\t\t\t},\n\t\t\tpending: function (next) {\n\t\t\t\tasync.waterfall([\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.getSetMembers('group:' + groupName + ':pending', next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (uids, next) {\n\t\t\t\t\t\tuser.getUsersData(uids, next);\n\t\t\t\t\t}\n\t\t\t\t], next);\n\t\t\t},\n\t\t\tinvited: function (next) {\n\t\t\t\tasync.waterfall([\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.getSetMembers('group:' + groupName + ':invited', next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (uids, next) {\n\t\t\t\t\t\tuser.getUsersData(uids, next);\n\t\t\t\t\t}\n\t\t\t\t], next);\n\t\t\t},\n\t\t\tisMember: async.apply(Groups.isMember, options.uid, groupName),\n\t\t\tisPending: async.apply(Groups.isPending, options.uid, groupName),\n\t\t\tisInvited: async.apply(Groups.isInvited, options.uid, groupName),\n\t\t\tisOwner: async.apply(Groups.ownership.isOwner, options.uid, groupName)\n\t\t}, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t} else if (!results.base) {\n\t\t\t\treturn callback(new Error('[[error:no-group]]'));\n\t\t\t}\n\n\t\t\tresults.base['cover:url'] = results.base['cover:url'] || require('./coverPhoto').getDefaultGroupCover(groupName);\n\t\t\tresults.base['cover:position'] = results.base['cover:position'] || '50% 50%';\n\n\t\t\tplugins.fireHook('filter:parse.raw', results.base.description, function (err, descriptionParsed) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\tGroups.escapeGroupData(results.base);\n\n\t\t\t\tresults.base.descriptionParsed = descriptionParsed;\n\t\t\t\tresults.base.userTitleEnabled = results.base.userTitleEnabled ? !!parseInt(results.base.userTitleEnabled, 10) : true;\n\t\t\t\tresults.base.createtimeISO = utils.toISOString(results.base.createtime);\n\t\t\t\tresults.base.members = results.members;\n\t\t\t\tresults.base.membersNextStart = stop + 1;\n\t\t\t\tresults.base.pending = results.pending.filter(Boolean);\n\t\t\t\tresults.base.invited = results.invited.filter(Boolean);\n\t\t\t\tresults.base.deleted = !!parseInt(results.base.deleted, 10);\n\t\t\t\tresults.base.hidden = !!parseInt(results.base.hidden, 10);\n\t\t\t\tresults.base.system = !!parseInt(results.base.system, 10);\n\t\t\t\tresults.base.memberCount = parseInt(results.base.memberCount, 10);\n\t\t\t\tresults.base.private = (results.base.private === null || results.base.private === undefined) ? true : !!parseInt(results.base.private, 10);\n\t\t\t\tresults.base.disableJoinRequests = parseInt(results.base.disableJoinRequests, 10) === 1;\n\t\t\t\tresults.base.isMember = results.isMember;\n\t\t\t\tresults.base.isPending = results.isPending;\n\t\t\t\tresults.base.isInvited = results.isInvited;\n\t\t\t\tresults.base.isOwner = results.isOwner;\n\n\t\t\t\tplugins.fireHook('filter:group.get', {group: results.base}, function (err, data) {\n\t\t\t\t\tcallback(err, data ? data.group : null);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n\n\tGroups.getOwners = function (groupName, callback) {\n\t\tdb.getSetMembers('group:' + groupName + ':owners', callback);\n\t};\n\n\tGroups.getOwnersAndMembers = function (groupName, uid, start, stop, callback) {\n\t\tasync.parallel({\n\t\t\towners: function (next) {\n\t\t\t\tasync.waterfall([\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.getSetMembers('group:' + groupName + ':owners', next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (uids, next) {\n\t\t\t\t\t\tuser.getUsers(uids, uid, next);\n\t\t\t\t\t}\n\t\t\t\t], next);\n\t\t\t},\n\t\t\tmembers: function (next) {\n\t\t\t\tuser.getUsersFromSet('group:' + groupName + ':members', uid, start, stop, next);\n\t\t\t}\n\t\t}, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar ownerUids = [];\n\t\t\tresults.owners.forEach(function (user) {\n\t\t\t\tif (user) {\n\t\t\t\t\tuser.isOwner = true;\n\t\t\t\t\townerUids.push(user.uid.toString());\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tresults.members = results.members.filter(function (user) {\n\t\t\t\treturn user && user.uid && ownerUids.indexOf(user.uid.toString()) === -1;\n\t\t\t});\n\t\t\tresults.members = results.owners.concat(results.members);\n\n\t\t\tcallback(null, results.members);\n\t\t});\n\t};\n\n\tGroups.escapeGroupData = function (group) {\n\t\tif (group) {\n\t\t\tgroup.nameEncoded = encodeURIComponent(group.name);\n\t\t\tgroup.displayName = validator.escape(String(group.name));\n\t\t\tgroup.description = validator.escape(String(group.description || ''));\n\t\t\tgroup.userTitle = validator.escape(String(group.userTitle || '')) || group.displayName;\n\t\t}\n\t};\n\n\tGroups.getByGroupslug = function (slug, options, callback) {\n\t\tdb.getObjectField('groupslug:groupname', slug, function (err, groupName) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t} else if (!groupName) {\n\t\t\t\treturn callback(new Error('[[error:no-group]]'));\n\t\t\t}\n\n\t\t\tGroups.get(groupName, options, callback);\n\t\t});\n\t};\n\n\tGroups.getGroupNameByGroupSlug = function (slug, callback) {\n\t\tdb.getObjectField('groupslug:groupname', slug, callback);\n\t};\n\n\tGroups.getGroupFields = function (groupName, fields, callback) {\n\t\tGroups.getMultipleGroupFields([groupName], fields, function (err, groups) {\n\t\t\tcallback(err, groups ? groups[0] : null);\n\t\t});\n\t};\n\n\tGroups.getMultipleGroupFields = function (groups, fields, callback) {\n\t\tdb.getObjectsFields(groups.map(function (group) {\n\t\t\treturn 'group:' + group;\n\t\t}), fields, callback);\n\t};\n\n\tGroups.setGroupField = function (groupName, field, value, callback) {\n\t\tdb.setObjectField('group:' + groupName, field, value, function (err) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tplugins.fireHook('action:group.set', {field: field, value: value, type: 'set'});\n\t\t\tcallback();\n\t\t});\n\t};\n\n\tGroups.isPrivate = function (groupName, callback) {\n\t\tdb.getObjectField('group:' + groupName, 'private', function (err, isPrivate) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tcallback(null, (parseInt(isPrivate, 10) === 0) ? false : true);\n\t\t});\n\t};\n\n\tGroups.isHidden = function (groupName, callback) {\n\t\tdb.getObjectField('group:' + groupName, 'hidden', function (err, isHidden) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tcallback(null, parseInt(isHidden, 10) === 1);\n\t\t});\n\t};\n\n\tGroups.exists = function (name, callback) {\n\t\tif (Array.isArray(name)) {\n\t\t\tvar slugs = name.map(function (groupName) {\n\t\t\t\t\treturn utils.slugify(groupName);\n\t\t\t\t});\n\t\t\tasync.parallel([\n\t\t\t\tfunction (next) {\n\t\t\t\t\tnext(null, slugs.map(function (slug) {\n\t\t\t\t\t\treturn ephemeralGroups.indexOf(slug) !== -1;\n\t\t\t\t\t}));\n\t\t\t\t},\n\t\t\t\tasync.apply(db.isSortedSetMembers, 'groups:createtime', name)\n\t\t\t], function (err, results) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\t\t\t\tcallback(null, name.map(function (n, index) {\n\t\t\t\t\treturn results[0][index] || results[1][index];\n\t\t\t\t}));\n\t\t\t});\n\t\t} else {\n\t\t\tvar slug = utils.slugify(name);\n\t\t\tasync.parallel([\n\t\t\t\tfunction (next) {\n\t\t\t\t\tnext(null, ephemeralGroups.indexOf(slug) !== -1);\n\t\t\t\t},\n\t\t\t\tasync.apply(db.isSortedSetMember, 'groups:createtime', name)\n\t\t\t], function (err, results) {\n\t\t\t\tcallback(err, !err ? (results[0] || results[1]) : null);\n\t\t\t});\n\t\t}\n\t};\n\n\tGroups.existsBySlug = function (slug, callback) {\n\t\tif (Array.isArray(slug)) {\n\t\t\tdb.isObjectFields('groupslug:groupname', slug, callback);\n\t\t} else {\n\t\t\tdb.isObjectField('groupslug:groupname', slug, callback);\n\t\t}\n\t};\n\n\tGroups.getLatestMemberPosts = function (groupName, max, uid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tGroups.getMembers(groupName, 0, -1, next);\n\t\t\t},\n\t\t\tfunction (uids, next) {\n\t\t\t\tif (!Array.isArray(uids) || !uids.length) {\n\t\t\t\t\treturn callback(null, []);\n\t\t\t\t}\n\t\t\t\tvar keys = uids.map(function (uid) {\n\t\t\t\t\treturn 'uid:' + uid + ':posts';\n\t\t\t\t});\n\t\t\t\tdb.getSortedSetRevRange(keys, 0, max - 1, next);\n\t\t\t},\n\t\t\tfunction (pids, next) {\n\t\t\t\tprivileges.posts.filter('read', pids, uid, next);\n\t\t\t},\n\t\t\tfunction (pids, next) {\n\t\t\t\tposts.getPostSummaryByPids(pids, uid, {stripTags: false}, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tGroups.getGroupData = function (groupName, callback) {\n\t\tGroups.getGroupsData([groupName], function (err, groupsData) {\n\t\t\tcallback(err, Array.isArray(groupsData) && groupsData[0] ? groupsData[0] : null);\n\t\t});\n\t};\n\n\tGroups.getGroupsData = function (groupNames, callback) {\n\t\tif (!Array.isArray(groupNames) || !groupNames.length) {\n\t\t\treturn callback(null, []);\n\t\t}\n\n\t\tvar keys = groupNames.map(function (groupName) {\n\t\t\treturn 'group:' + groupName;\n\t\t});\n\n\t\tvar ephemeralIdx = groupNames.reduce(function (memo, cur, idx) {\n\t\t\tif (ephemeralGroups.indexOf(cur) !== -1) {\n\t\t\t\tmemo.push(idx);\n\t\t\t}\n\t\t\treturn memo;\n\t\t}, []);\n\n\t\tdb.getObjects(keys, function (err, groupData) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tif (ephemeralIdx.length) {\n\t\t\t\tephemeralIdx.forEach(function (idx) {\n\t\t\t\t\tgroupData[idx] = internals.getEphemeralGroup(groupNames[idx]);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tgroupData.forEach(function (group) {\n\t\t\t\tif (group) {\n\t\t\t\t\tGroups.escapeGroupData(group);\n\t\t\t\t\tgroup.userTitleEnabled = group.userTitleEnabled ? parseInt(group.userTitleEnabled, 10) === 1 : true;\n\t\t\t\t\tgroup.labelColor = group.labelColor || '#000000';\n\t\t\t\t\tgroup.createtimeISO = utils.toISOString(group.createtime);\n\t\t\t\t\tgroup.hidden = parseInt(group.hidden, 10) === 1;\n\t\t\t\t\tgroup.system = parseInt(group.system, 10) === 1;\n\t\t\t\t\tgroup.private = (group.private === null || group.private === undefined) ? true : !!parseInt(group.private, 10);\n\t\t\t\t\tgroup.disableJoinRequests = parseInt(group.disableJoinRequests) === 1;\n\n\t\t\t\t\tgroup['cover:url'] = group['cover:url'] || require('./coverPhoto').getDefaultGroupCover(group.name);\n\t\t\t\t\tgroup['cover:thumb:url'] = group['cover:thumb:url'] || group['cover:url'];\n\t\t\t\t\tgroup['cover:position'] = group['cover:position'] || '50% 50%';\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tplugins.fireHook('filter:groups.get', {groups: groupData}, function (err, data) {\n\t\t\t\tcallback(err, data ? data.groups : null);\n\t\t\t});\n\t\t});\n\t};\n\n\tGroups.getUserGroups = function (uids, callback) {\n\t\tGroups.getUserGroupsFromSet('groups:visible:createtime', uids, callback);\n\t};\n\n\tGroups.getUserGroupsFromSet = function (set, uids, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.getSortedSetRevRange(set, 0, -1, next);\n\t\t\t},\n\t\t\tfunction (groupNames, next) {\n\t\t\t\tvar groupSets = groupNames.map(function (name) {\n\t\t\t\t\treturn 'group:' + name + ':members';\n\t\t\t\t});\n\n\t\t\t\tasync.map(uids, function (uid, next) {\n\t\t\t\t\tdb.isMemberOfSortedSets(groupSets, uid, function (err, isMembers) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar memberOf = [];\n\t\t\t\t\t\tisMembers.forEach(function (isMember, index) {\n\t\t\t\t\t\t\tif (isMember) {\n\t\t\t\t\t\t\t\tmemberOf.push(groupNames[index]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tGroups.getGroupsData(memberOf, next);\n\t\t\t\t\t});\n\t\t\t\t}, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n}(module.exports));\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/emitter.js":"\"use strict\";\n\nvar eventEmitter = new (require('events')).EventEmitter();\n\n\neventEmitter.all = function (events, callback) {\n\tvar eventList = events.slice(0);\n\n\tevents.forEach(function onEvent(event) {\n\t\teventEmitter.on(event, function () {\n\t\t\tvar index = eventList.indexOf(event);\n\t\t\tif (index === -1) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\teventList.splice(index, 1);\n\t\t\tif (eventList.length === 0) {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t});\n};\n\neventEmitter.any = function (events, callback) {\n\tevents.forEach(function onEvent(event) {\n\t\teventEmitter.on(event, function () {\n\t\t\tif (events !== null) {\n\t\t\t\tcallback();\n\t\t\t}\n\n\t\t\tevents = null;\n\t\t});\n\t});\n};\n\nmodule.exports = eventEmitter;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/events.js":"\n'use strict';\n\nvar async = require('async');\nvar validator = require('validator');\n\nvar db =  require('./database');\nvar batch = require('./batch');\nvar user = require('./user');\nvar utils = require('../public/src/utils');\n\n(function (events) {\n\tevents.log = function (data, callback) {\n\t\tcallback = callback || function () {};\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.incrObjectField('global', 'nextEid', next);\n\t\t\t},\n\t\t\tfunction (eid, next) {\n\t\t\t\tdata.timestamp = Date.now();\n\t\t\t\tdata.eid = eid;\n\n\t\t\t\tasync.parallel([\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.sortedSetAdd('events:time', data.timestamp, eid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.setObject('event:' + eid, data, next);\n\t\t\t\t\t}\n\t\t\t\t], next);\n\t\t\t}\n\t\t], function (err, result) {\n\t\t\tcallback(err);\n\t\t});\n\t};\n\n\tevents.getEvents = function (start, stop, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.getSortedSetRevRange('events:time', start, stop, next);\n\t\t\t},\n\t\t\tfunction (eids, next) {\n\t\t\t\tvar keys = eids.map(function (eid) {\n\t\t\t\t\treturn 'event:' + eid;\n\t\t\t\t});\n\t\t\t\tdb.getObjects(keys, next);\n\t\t\t},\n\t\t\tfunction (eventsData, next) {\n\t\t\t\teventsData = eventsData.filter(Boolean);\n\t\t\t\taddUserData(eventsData, 'uid', 'user', next);\n\t\t\t},\n\t\t\tfunction (eventsData, next) {\n\t\t\t\taddUserData(eventsData, 'targetUid', 'targetUser', next);\n\t\t\t},\n\t\t\tfunction (eventsData, next) {\n\t\t\t\teventsData.forEach(function (event) {\n\t\t\t\t\tObject.keys(event).forEach(function (key) {\n\t\t\t\t\t\tif (typeof event[key] === 'string') {\n\t\t\t\t\t\t\tevent[key] = validator.escape(String(event[key] || ''));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tvar e = utils.merge(event);\n\t\t\t\t\te.eid = e.uid = e.type = e.ip = e.user = undefined;\n\t\t\t\t\tevent.jsonString = JSON.stringify(e, null, 4);\n\t\t\t\t\tevent.timestampISO = new Date(parseInt(event.timestamp, 10)).toUTCString();\n\t\t\t\t});\n\t\t\t\tnext(null, eventsData);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tfunction addUserData(eventsData, field, objectName, callback) {\n\t\tvar uids = eventsData.map(function (event) {\n\t\t\treturn event && event[field];\n\t\t}).filter(function (uid, index, array) {\n\t\t\treturn uid && array.indexOf(uid) === index;\n\t\t});\n\n\t\tif (!uids.length) {\n\t\t\treturn callback(null, eventsData);\n\t\t}\n\n\t\tasync.parallel({\n\t\t\tisAdmin: function (next) {\n\t\t\t\tuser.isAdministrator(uids, next);\n\t\t\t},\n\t\t\tuserData: function (next) {\n\t\t\t\tuser.getUsersFields(uids, ['username', 'userslug', 'picture'], next);\n\t\t\t}\n\t\t}, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar userData = results.userData;\n\n\t\t\tvar map = {};\n\t\t\tuserData.forEach(function (user, index) {\n\t\t\t\tuser.isAdmin = results.isAdmin[index];\n\t\t\t\tmap[user.uid] = user;\n\t\t\t});\n\n\t\t\teventsData.forEach(function (event) {\n\t\t\t\tif (map[event[field]]) {\n\t\t\t\t\tevent[objectName] = map[event[field]];\n\t\t\t\t}\n\t\t\t});\n\t\t\tcallback(null, eventsData);\n\t\t});\n\t}\n\n\tevents.deleteEvents = function (eids, callback) {\n\t\tcallback = callback || function () {};\n\t\tasync.parallel([\n\t\t\tfunction (next) {\n\t\t\t\tvar keys = eids.map(function (eid) {\n\t\t\t\t\treturn 'event:' + eid;\n\t\t\t\t});\n\t\t\t\tdb.deleteAll(keys, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tdb.sortedSetRemove('events:time', eids, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tevents.deleteAll = function (callback) {\n\t\tcallback = callback || function () {};\n\n\t\tbatch.processSortedSet('events:time', function (eids, next) {\n\t\t\tevents.deleteEvents(eids, next);\n\t\t}, {alwaysStartAt: 0}, callback);\n\t};\n\n\n}(module.exports));\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/plugins.js":"'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\nvar async = require('async');\nvar winston = require('winston');\nvar semver = require('semver');\nvar express = require('express');\nvar nconf = require('nconf');\n\nvar db = require('./database');\nvar utils = require('../public/src/utils');\nvar hotswap = require('./hotswap');\nvar file = require('./file');\nvar languages = require('./languages');\n\nvar app;\nvar middleware;\n\n(function (Plugins) {\n\trequire('./plugins/install')(Plugins);\n\trequire('./plugins/load')(Plugins);\n\trequire('./plugins/hooks')(Plugins);\n\n\tPlugins.libraries = {};\n\tPlugins.loadedHooks = {};\n\tPlugins.staticDirs = {};\n\tPlugins.cssFiles = [];\n\tPlugins.lessFiles = [];\n\tPlugins.clientScripts = [];\n\tPlugins.acpScripts = [];\n\tPlugins.customLanguages = {};\n\tPlugins.customLanguageFallbacks = {};\n\tPlugins.libraryPaths = [];\n\tPlugins.versionWarning = [];\n\tPlugins.languageCodes = [];\n\n\tPlugins.initialized = false;\n\n\tPlugins.requireLibrary = function (pluginID, libraryPath) {\n\t\tPlugins.libraries[pluginID] = require(libraryPath);\n\t\tPlugins.libraryPaths.push(libraryPath);\n\t};\n\n\tPlugins.init = function (nbbApp, nbbMiddleware, callback) {\n\t\tcallback = callback || function () {};\n\t\tif (Plugins.initialized) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tif (nbbApp) {\n\t\t\tapp = nbbApp;\n\t\t\tmiddleware = nbbMiddleware;\n\t\t\thotswap.prepare(nbbApp);\n\t\t}\n\n\t\tif (global.env === 'development') {\n\t\t\twinston.verbose('[plugins] Initializing plugins system');\n\t\t}\n\n\t\tPlugins.reload(function (err) {\n\t\t\tif (err) {\n\t\t\t\twinston.error('[plugins] NodeBB encountered a problem while loading plugins', err.message);\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tif (global.env === 'development') {\n\t\t\t\twinston.info('[plugins] Plugins OK');\n\t\t\t}\n\n\t\t\tPlugins.initialized = true;\n\t\t\tcallback();\n\t\t});\n\t};\n\n\tPlugins.reload = function (callback) {\n\t\t// Resetting all local plugin data\n\t\tPlugins.libraries = {};\n\t\tPlugins.loadedHooks = {};\n\t\tPlugins.staticDirs = {};\n\t\tPlugins.versionWarning = [];\n\t\tPlugins.cssFiles.length = 0;\n\t\tPlugins.lessFiles.length = 0;\n\t\tPlugins.clientScripts.length = 0;\n\t\tPlugins.acpScripts.length = 0;\n\t\tPlugins.libraryPaths.length = 0;\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\t// Build language code list\n\t\t\t\tlanguages.list(function (err, languages) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tPlugins.languageCodes = languages.map(function (data) {\n\t\t\t\t\t\treturn data.code;\n\t\t\t\t\t});\n\n\t\t\t\t\tnext();\n\t\t\t\t});\n\t\t\t},\n\t\t\tasync.apply(Plugins.getPluginPaths),\n\t\t\tfunction (paths, next) {\n\t\t\t\tasync.eachSeries(paths, Plugins.loadPlugin, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\t// If some plugins are incompatible, throw the warning here\n\t\t\t\tif (Plugins.versionWarning.length && nconf.get('isPrimary') === 'true') {\n\t\t\t\t\tprocess.stdout.write('\\n');\n\t\t\t\t\twinston.warn('[plugins/load] The following plugins may not be compatible with your version of NodeBB. This may cause unintended behaviour or crashing. In the event of an unresponsive NodeBB caused by this plugin, run `./nodebb reset -p PLUGINNAME` to disable it.');\n\t\t\t\t\tfor(var x = 0,numPlugins = Plugins.versionWarning.length; x < numPlugins; x++) {\n\t\t\t\t\t\tprocess.stdout.write('  * '.yellow + Plugins.versionWarning[x] + '\\n');\n\t\t\t\t\t}\n\t\t\t\t\tprocess.stdout.write('\\n');\n\t\t\t\t}\n\n\t\t\t\tObject.keys(Plugins.loadedHooks).forEach(function (hook) {\n\t\t\t\t\tvar hooks = Plugins.loadedHooks[hook];\n\t\t\t\t\thooks = hooks.sort(function (a, b) {\n\t\t\t\t\t\treturn a.priority - b.priority;\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tnext();\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tPlugins.reloadRoutes = function (callback) {\n\t\tcallback = callback || function () {};\n\t\tvar router = express.Router();\n\n\t\trouter.hotswapId = 'plugins';\n\t\trouter.render = function () {\n\t\t\tapp.render.apply(app, arguments);\n\t\t};\n\n\t\tvar controllers = require('./controllers');\n\t\tPlugins.fireHook('static:app.load', {app: app, router: router, middleware: middleware, controllers: controllers}, function (err) {\n\t\t\tif (err) {\n\t\t\t\treturn winston.error('[plugins] Encountered error while executing post-router plugins hooks: ' + err.message);\n\t\t\t}\n\n\t\t\thotswap.replace('plugins', router);\n\t\t\twinston.verbose('[plugins] All plugins reloaded and rerouted');\n\t\t\tcallback();\n\t\t});\n\t};\n\n\tPlugins.getTemplates = function (callback) {\n\t\tvar templates = {},\n\t\t\ttplName;\n\n\t\tasync.waterfall([\n\t\t\tasync.apply(db.getSortedSetRange, 'plugins:active', 0, -1),\n\t\t\tfunction (plugins, next) {\n\t\t\t\tvar pluginBasePath = path.join(__dirname, '../node_modules');\n\t\t\t\tvar paths = plugins.map(function (plugin) {\n\t\t\t\t\treturn path.join(pluginBasePath, plugin);\n\t\t\t\t});\n\n\t\t\t\t// Filter out plugins with invalid paths\n\t\t\t\tasync.filter(paths, file.exists, function (paths) {\n\t\t\t\t\tnext(null, paths);\n\t\t\t\t});\n\t\t\t},\n\t\t\tfunction (paths, next) {\n\t\t\t\tasync.map(paths, Plugins.loadPluginInfo, next);\n\t\t\t}\n\t\t], function (err, plugins) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tasync.eachSeries(plugins, function (plugin, next) {\n\t\t\t\tif (plugin.templates || plugin.id.startsWith('nodebb-theme-')) {\n\t\t\t\t\twinston.verbose('[plugins] Loading templates (' + plugin.id + ')');\n\t\t\t\t\tvar templatesPath = path.join(__dirname, '../node_modules', plugin.id, plugin.templates || 'templates');\n\t\t\t\t\tutils.walk(templatesPath, function (err, pluginTemplates) {\n\t\t\t\t\t\tif (pluginTemplates) {\n\t\t\t\t\t\t\tpluginTemplates.forEach(function (pluginTemplate) {\n\t\t\t\t\t\t\t\tif (pluginTemplate.endsWith('.tpl')) {\n\t\t\t\t\t\t\t\t\ttplName = \"/\" + pluginTemplate.replace(templatesPath, '').substring(1);\n\n\t\t\t\t\t\t\t\t\tif (templates.hasOwnProperty(tplName)) {\n\t\t\t\t\t\t\t\t\t\twinston.verbose('[plugins] ' + tplName + ' replaced by ' + plugin.id);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\ttemplates[tplName] = pluginTemplate;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\twinston.warn('[plugins] Skipping ' + pluginTemplate + ' by plugin ' + plugin.id);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\twinston.error(err);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\twinston.warn('[plugins/' + plugin.id + '] A templates directory was defined for this plugin, but was not found.');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnext(false);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tnext(false);\n\t\t\t\t}\n\t\t\t}, function (err) {\n\t\t\t\tcallback(err, templates);\n\t\t\t});\n\t\t});\n\t};\n\n\tPlugins.get = function (id, callback) {\n\t\tvar url = (nconf.get('registry') || 'https://packages.nodebb.org') + '/api/v1/plugins/' + id;\n\n\t\trequire('request')(url, {\n\t\t\tjson: true\n\t\t}, function (err, res, body) {\n\t\t\tif (res.statusCode === 404 || !body.payload) {\n\t\t\t\treturn callback(err, {});\n\t\t\t}\n\n\t\t\tPlugins.normalise([body.payload], function (err, normalised) {\n\t\t\t\tnormalised = normalised.filter(function (plugin) {\n\t\t\t\t\treturn plugin.id === id;\n\t\t\t\t});\n\t\t\t\treturn callback(err, !err ? normalised[0] : undefined);\n\t\t\t});\n\t\t});\n\t};\n\n\tPlugins.list = function (matching, callback) {\n\t\tif (arguments.length === 1 && typeof matching === 'function') {\n\t\t\tcallback = matching;\n\t\t\tmatching = true;\n\t\t}\n\t\tvar version = require(path.join(nconf.get('base_dir'), 'package.json')).version;\n\t\tvar url = (nconf.get('registry') || 'https://packages.nodebb.org') + '/api/v1/plugins' + (matching !== false ? '?version=' + version : '');\n\n\t\trequire('request')(url, {\n\t\t\tjson: true\n\t\t}, function (err, res, body) {\n\t\t\tif (err) {\n\t\t\t\twinston.error('Error parsing plugins : ' + err.message);\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tPlugins.normalise(body, callback);\n\t\t});\n\t};\n\n\tPlugins.normalise = function (apiReturn, callback) {\n\t\tvar pluginMap = {};\n\t\tvar dependencies = require(path.join(nconf.get('base_dir'), 'package.json')).dependencies;\n\t\tapiReturn = apiReturn || [];\n\t\tfor(var i = 0; i < apiReturn.length; ++i) {\n\t\t\tapiReturn[i].id = apiReturn[i].name;\n\t\t\tapiReturn[i].installed = false;\n\t\t\tapiReturn[i].active = false;\n\t\t\tapiReturn[i].url = apiReturn[i].url ? apiReturn[i].url : apiReturn[i].repository ? apiReturn[i].repository.url : '';\n\t\t\tapiReturn[i].latest = apiReturn[i].latest;\n\t\t\tpluginMap[apiReturn[i].name] = apiReturn[i];\n\t\t}\n\n\t\tPlugins.showInstalled(function (err, installedPlugins) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tinstalledPlugins = installedPlugins.filter(function (plugin) {\n\t\t\t\treturn plugin && !plugin.system;\n\t\t\t});\n\n\t\t\tasync.each(installedPlugins, function (plugin, next) {\n\t\t\t\t// If it errored out because a package.json or plugin.json couldn't be read, no need to do this stuff\n\t\t\t\tif (plugin.error) {\n\t\t\t\t\tpluginMap[plugin.id] = pluginMap[plugin.id] || {};\n\t\t\t\t\tpluginMap[plugin.id].installed = true;\n\t\t\t\t\tpluginMap[plugin.id].error = true;\n\t\t\t\t\treturn next();\n\t\t\t\t}\n\n\t\t\t\tpluginMap[plugin.id] = pluginMap[plugin.id] || {};\n\t\t\t\tpluginMap[plugin.id].id = pluginMap[plugin.id].id || plugin.id;\n\t\t\t\tpluginMap[plugin.id].name = plugin.name || pluginMap[plugin.id].name;\n\t\t\t\tpluginMap[plugin.id].description = plugin.description;\n\t\t\t\tpluginMap[plugin.id].url = pluginMap[plugin.id].url || plugin.url;\n\t\t\t\tpluginMap[plugin.id].installed = true;\n\t\t\t\tpluginMap[plugin.id].isTheme = !!plugin.id.match('nodebb-theme-');\n\t\t\t\tpluginMap[plugin.id].error = plugin.error || false;\n\t\t\t\tpluginMap[plugin.id].active = plugin.active;\n\t\t\t\tpluginMap[plugin.id].version = plugin.version;\n\n\t\t\t\t// If package.json defines a version to use, stick to that\n\t\t\t\tif (dependencies.hasOwnProperty(plugin.id) && semver.valid(dependencies[plugin.id])) {\n\t\t\t\t\tpluginMap[plugin.id].latest = dependencies[plugin.id];\n\t\t\t\t} else {\n\t\t\t\t\tpluginMap[plugin.id].latest = pluginMap[plugin.id].latest || plugin.version;\n\t\t\t\t}\n\t\t\t\tpluginMap[plugin.id].outdated = semver.gt(pluginMap[plugin.id].latest, pluginMap[plugin.id].version);\n\t\t\t\tnext();\n\t\t\t}, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\tvar pluginArray = [];\n\n\t\t\t\tfor (var key in pluginMap) {\n\t\t\t\t\tif (pluginMap.hasOwnProperty(key)) {\n\t\t\t\t\t\tpluginArray.push(pluginMap[key]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tpluginArray.sort(function (a, b) {\n\t\t\t\t\tif (a.name > b.name ) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t} else if (a.name < b.name ) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tcallback(null, pluginArray);\n\t\t\t});\n\t\t});\n\t};\n\n\tPlugins.showInstalled = function (callback) {\n\t\tvar npmPluginPath = path.join(__dirname, '../node_modules');\n\n\t\tasync.waterfall([\n\t\t\tasync.apply(fs.readdir, npmPluginPath),\n\n\t\t\tfunction (dirs, next) {\n\t\t\t\tdirs = dirs.filter(function (dir) {\n\t\t\t\t\treturn dir.startsWith('nodebb-plugin-') ||\n\t\t\t\t\t\tdir.startsWith('nodebb-widget-') ||\n\t\t\t\t\t\tdir.startsWith('nodebb-rewards-') ||\n\t\t\t\t\t\tdir.startsWith('nodebb-theme-');\n\t\t\t\t}).map(function (dir) {\n\t\t\t\t\treturn path.join(npmPluginPath, dir);\n\t\t\t\t});\n\n\t\t\t\tasync.filter(dirs, function (dir, callback) {\n\t\t\t\t\tfs.stat(dir, function (err, stats) {\n\t\t\t\t\t\tcallback(!err && stats.isDirectory());\n\t\t\t\t\t});\n\t\t\t\t}, function (plugins) {\n\t\t\t\t\tnext(null, plugins);\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tfunction (files, next) {\n\t\t\t\tvar plugins = [];\n\n\t\t\t\tasync.each(files, function (file, next) {\n\t\t\t\t\tasync.waterfall([\n\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\tPlugins.loadPluginInfo(file, next);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction (pluginData, next) {\n\t\t\t\t\t\t\tPlugins.isActive(pluginData.name, function (err, active) {\n\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\treturn next(new Error('no-active-state'));\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tdelete pluginData.hooks;\n\t\t\t\t\t\t\t\tdelete pluginData.library;\n\t\t\t\t\t\t\t\tpluginData.active = active;\n\t\t\t\t\t\t\t\tpluginData.installed = true;\n\t\t\t\t\t\t\t\tpluginData.error = false;\n\t\t\t\t\t\t\t\tnext(null, pluginData);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t], function (err, pluginData) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn next(); // Silently fail\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tplugins.push(pluginData);\n\t\t\t\t\t\tnext();\n\t\t\t\t\t});\n\t\t\t\t}, function (err) {\n\t\t\t\t\tnext(err, plugins);\n\t\t\t\t});\n\t\t\t}\n\t\t], callback);\n\t};\n\n}(exports));\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/hotswap.js":"\"use strict\";\n\nvar HotSwap = {},\n\twinston = require('winston'),\n\tstack;\n\nHotSwap.prepare = function (app) {\n\tstack = app._router.stack;\n};\n\nHotSwap.find = function (id) {\n\tif (stack) {\n\t\tfor(var x = 0,numEntries = stack.length; x < numEntries; x++) {\n\t\t\tif (stack[x].handle.hotswapId === id) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t}\n\t} else {\n\t\twinston.error('[hotswap] HotSwap module has not been prepared!');\n\t}\n};\n\nHotSwap.replace = function (id, router) {\n\tvar idx = HotSwap.find(id);\n\tif (idx) {\n\t\tdelete stack[idx].handle;\t// Destroy the old router\n\t\tstack[idx].handle = router;\t// Replace with the new one\n\t\twinston.verbose('[hotswap] Router with id `' + id + '` replaced successfully');\n\t} else {\n\t\twinston.warn('[hotswap] Could not find router in stack with hotswapId `' + id + '`');\n\t}\n};\n\nmodule.exports = HotSwap;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/image.js":"'use strict';\n\nvar fs = require('fs');\nvar Jimp = require('jimp');\nvar async = require('async');\nvar plugins = require('./plugins');\n\nvar image = module.exports;\n\nimage.resizeImage = function (data, callback) {\n\tif (plugins.hasListeners('filter:image.resize')) {\n\t\tplugins.fireHook('filter:image.resize', {\n\t\t\tpath: data.path,\n\t\t\ttarget: data.target,\n\t\t\textension: data.extension,\n\t\t\twidth: data.width,\n\t\t\theight: data.height\n\t\t}, function (err) {\n\t\t\tcallback(err);\n\t\t});\n\t} else {\n\t\tnew Jimp(data.path, function (err, image) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar w = image.bitmap.width,\n\t\t\t\th = image.bitmap.height,\n\t\t\t\torigRatio = w / h,\n\t\t\t\tdesiredRatio = data.width && data.height ? data.width / data.height : origRatio,\n\t\t\t\tx = 0,\n\t\t\t\ty = 0,\n\t\t\t\tcrop;\n\n\t\t\tif (origRatio !== desiredRatio) {\n\t\t\t\tif (desiredRatio > origRatio) {\n\t\t\t\t\tdesiredRatio = 1 / desiredRatio;\n\t\t\t\t}\n\t\t\t\tif (origRatio >= 1) {\n\t\t\t\t\ty = 0;\t// height is the smaller dimension here\n\t\t\t\t\tx = Math.floor((w / 2) - (h * desiredRatio / 2));\n\t\t\t\t\tcrop = async.apply(image.crop.bind(image), x, y, h * desiredRatio, h);\n\t\t\t\t} else {\n\t\t\t\t\tx = 0;\t// width is the smaller dimension here\n\t\t\t\t\ty = Math.floor(h / 2 - (w * desiredRatio / 2));\n\t\t\t\t\tcrop = async.apply(image.crop.bind(image), x, y, w, w * desiredRatio);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Simple resize given either width, height, or both\n\t\t\t\tcrop = async.apply(setImmediate);\n\t\t\t}\n\n\t\t\tasync.waterfall([\n\t\t\t\tcrop,\n\t\t\t\tfunction (_image, next) {\n\t\t\t\t\tif (typeof _image === 'function' && !next) {\n\t\t\t\t\t\tnext = _image;\n\t\t\t\t\t\t_image = image;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ((data.width && data.height) || (w > data.width) || (h > data.height)) {\n\t\t\t\t\t\t_image.resize(data.width || Jimp.AUTO, data.height || Jimp.AUTO, next);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnext(null, image);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction (image, next) {\n\t\t\t\t\timage.write(data.target || data.path, next);\n\t\t\t\t}\n\t\t\t], function (err) {\n\t\t\t\tcallback(err);\n\t\t\t});\n\t\t});\n\t}\n};\n\nimage.normalise = function (path, extension, callback) {\n\tif (plugins.hasListeners('filter:image.normalise')) {\n\t\tplugins.fireHook('filter:image.normalise', {\n\t\t\tpath: path,\n\t\t\textension: extension\n\t\t}, function (err) {\n\t\t\tcallback(err);\n\t\t});\n\t} else {\n\t\tnew Jimp(path, function (err, image) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\timage.write(path + '.png', function (err) {\n\t\t\t\tcallback(err);\n\t\t\t});\n\t\t});\n\t}\n};\n\nimage.size = function (path, callback) {\n\tif (plugins.hasListeners('filter:image.size')) {\n\t\tplugins.fireHook('filter:image.size', {\n\t\t\tpath: path,\n\t\t}, function (err, image) {\n\t\t\tcallback(err, image);\n\t\t});\n\t} else {\n\t\tnew Jimp(path, function (err, data) {\n\t\t\tcallback(err, data ? data.bitmap : null);\n\t\t});\n\t}\n};\n\nimage.convertImageToBase64 = function (path, callback) {\n\tfs.readFile(path, function (err, data) {\n\t\tcallback(err, data ? data.toString('base64') : null);\n\t});\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/install.js":"'use strict';\n\nvar async = require('async'),\n\tfs = require('fs'),\n\tpath = require('path'),\n\tprompt = require('prompt'),\n\twinston = require('winston'),\n\tnconf = require('nconf'),\n\tutils = require('../public/src/utils.js');\n\n\nvar install = {},\n\tquestions = {};\n\nquestions.main = [\n\t{\n\t\tname: 'url',\n\t\tdescription: 'URL used to access this NodeBB',\n\t\t'default':\n\t\t\tnconf.get('url') ||\n\t\t\t(nconf.get('base_url') ? (nconf.get('base_url') + (nconf.get('use_port') ? ':' + nconf.get('port') : '')) : null) ||\t// backwards compatibility (remove for v0.7.0)\n\t\t\t'http://localhost:4567',\n\t\tpattern: /^http(?:s)?:\\/\\//,\n\t\tmessage: 'Base URL must begin with \\'http://\\' or \\'https://\\'',\n\t},\n\t{\n\t\tname: 'secret',\n\t\tdescription: 'Please enter a NodeBB secret',\n\t\t'default': nconf.get('secret') || utils.generateUUID()\n\t},\n\t{\n\t\tname: 'database',\n\t\tdescription: 'Which database to use',\n\t\t'default': nconf.get('database') || 'mongo'\n\t}\n];\n\nquestions.optional = [\n\t{\n\t\tname: 'port',\n\t\tdefault: nconf.get('port') || 4567\n\t}\n];\n\nfunction checkSetupFlag(next) {\n\tvar setupVal;\n\n\ttry {\n\t\tif (nconf.get('setup')) {\n\t\t\tsetupVal = JSON.parse(nconf.get('setup'));\n\t\t}\n\t} catch (err) {\n\t\tsetupVal = undefined;\n\t}\n\n\tif (setupVal && setupVal instanceof Object) {\n\t\tif (setupVal['admin:username'] && setupVal['admin:password'] && setupVal['admin:password:confirm'] && setupVal['admin:email']) {\n\t\t\tinstall.values = setupVal;\n\t\t\tnext();\n\t\t} else {\n\t\t\twinston.error('Required values are missing for automated setup:');\n\t\t\tif (!setupVal['admin:username']) {\n\t\t\t\twinston.error('  admin:username');\n\t\t\t}\n\t\t\tif (!setupVal['admin:password']) {\n\t\t\t\twinston.error('  admin:password');\n\t\t\t}\n\t\t\tif (!setupVal['admin:password:confirm']) {\n\t\t\t\twinston.error('  admin:password:confirm');\n\t\t\t}\n\t\t\tif (!setupVal['admin:email']) {\n\t\t\t\twinston.error('  admin:email');\n\t\t\t}\n\n\t\t\tprocess.exit();\n\t\t}\n\t} else if (nconf.get('database')) {\n\t\tinstall.values = {\n\t\t\tdatabase: nconf.get('database')\n\t\t};\n\t\tnext();\n\t} else {\n\t\tnext();\n\t}\n}\n\nfunction checkCIFlag(next) {\n\tvar\tciVals;\n\ttry {\n\t\tciVals = JSON.parse(nconf.get('ci'));\n\t} catch (e) {\n\t\tciVals = undefined;\n\t}\n\n\tif (ciVals && ciVals instanceof Object) {\n\t\tif (ciVals.hasOwnProperty('host') && ciVals.hasOwnProperty('port') && ciVals.hasOwnProperty('database')) {\n\t\t\tinstall.ciVals = ciVals;\n\t\t\tnext();\n\t\t} else {\n\t\t\twinston.error('Required values are missing for automated CI integration:');\n\t\t\tif (!ciVals.hasOwnProperty('host')) {\n\t\t\t\twinston.error('  host');\n\t\t\t}\n\t\t\tif (!ciVals.hasOwnProperty('port')) {\n\t\t\t\twinston.error('  port');\n\t\t\t}\n\t\t\tif (!ciVals.hasOwnProperty('database')) {\n\t\t\t\twinston.error('  database');\n\t\t\t}\n\n\t\t\tprocess.exit();\n\t\t}\n\t} else {\n\t\tnext();\n\t}\n}\n\nfunction setupConfig(next) {\n\tvar configureDatabases = require('../install/databases');\n\n\t// prompt prepends \"prompt: \" to questions, let's clear that.\n\tprompt.start();\n\tprompt.message = '';\n\tprompt.delimiter = '';\n\tprompt.colors = false;\n\n\tif (!install.values) {\n\t\tprompt.get(questions.main, function (err, config) {\n\t\t\tif (err) {\n\t\t\t\tprocess.stdout.write('\\n\\n');\n\t\t\t\twinston.warn('NodeBB setup ' + err.message);\n\t\t\t\tprocess.exit();\n\t\t\t}\n\n\t\t\tconfigureDatabases(config, function (err, config) {\n\t\t\t\tcompleteConfigSetup(err, config, next);\n\t\t\t});\n\t\t});\n\t} else {\n\t\t// Use provided values, fall back to defaults\n\t\tvar\tconfig = {},\n\t\t\tredisQuestions = require('./database/redis').questions,\n\t\t\tmongoQuestions = require('./database/mongo').questions,\n\t\t\tallQuestions = questions.main.concat(questions.optional).concat(redisQuestions).concat(mongoQuestions);\n\n\t\tallQuestions.forEach(function (question) {\n\t\t\tconfig[question.name] = install.values[question.name] || question['default'] || undefined;\n\t\t});\n\n\t\tconfigureDatabases(config, function (err, config) {\n\t\t\tcompleteConfigSetup(err, config, next);\n\t\t});\n\t}\n}\n\nfunction completeConfigSetup(err, config, next) {\n\tif (err) {\n\t\treturn next(err);\n\t}\n\n\t// Add CI object\n\tif (install.ciVals) {\n\t\tconfig.test_database = {};\n\t\tfor(var prop in install.ciVals) {\n\t\t\tif (install.ciVals.hasOwnProperty(prop)) {\n\t\t\t\tconfig.test_database[prop] = install.ciVals[prop];\n\t\t\t}\n\t\t}\n\t}\n\n\tinstall.save(config, function (err) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\trequire('./database').init(next);\n\t});\n}\n\nfunction setupDefaultConfigs(next) {\n\tprocess.stdout.write('Populating database with default configs, if not already set...\\n');\n\tvar meta = require('./meta');\n\tvar defaults = require(path.join(__dirname, '../', 'install/data/defaults.json'));\n\n\tmeta.configs.setOnEmpty(defaults, function (err) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tmeta.configs.init(next);\n\t});\n}\n\nfunction enableDefaultTheme(next) {\n\tvar\tmeta = require('./meta');\n\n\tmeta.configs.get('theme:id', function (err, id) {\n\t\tif (err || id) {\n\t\t\tprocess.stdout.write('Previous theme detected, skipping enabling default theme\\n');\n\t\t\treturn next(err);\n\t\t}\n\t\tvar defaultTheme = nconf.get('defaultTheme') || 'nodebb-theme-persona';\n\t\tprocess.stdout.write('Enabling default theme: ' + defaultTheme + '\\n');\n\t\tmeta.themes.set({\n\t\t\ttype: 'local',\n\t\t\tid: defaultTheme\n\t\t}, next);\n\t});\n}\n\nfunction createAdministrator(next) {\n\tvar Groups = require('./groups');\n\tGroups.getMemberCount('administrators', function (err, memberCount) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\t\tif (memberCount > 0) {\n\t\t\tprocess.stdout.write('Administrator found, skipping Admin setup\\n');\n\t\t\tnext();\n\t\t} else {\n\t\t\tcreateAdmin(next);\n\t\t}\n\t});\n}\n\nfunction createAdmin(callback) {\n\tvar User = require('./user'),\n\t\tGroups = require('./groups'),\n\t\tpassword;\n\n\twinston.warn('No administrators have been detected, running initial user setup\\n');\n\n\tvar questions = [{\n\t\t\tname: 'username',\n\t\t\tdescription: 'Administrator username',\n\t\t\trequired: true,\n\t\t\ttype: 'string'\n\t\t}, {\n\t\t\tname: 'email',\n\t\t\tdescription: 'Administrator email address',\n\t\t\tpattern: /.+@.+/,\n\t\t\trequired: true\n\t\t}],\n\t\tpasswordQuestions = [{\n\t\t\tname: 'password',\n\t\t\tdescription: 'Password',\n\t\t\trequired: true,\n\t\t\thidden: true,\n\t\t\ttype: 'string'\n\t\t}, {\n\t\t\tname: 'password:confirm',\n\t\t\tdescription: 'Confirm Password',\n\t\t\trequired: true,\n\t\t\thidden: true,\n\t\t\ttype: 'string'\n\t\t}],\n\t\tsuccess = function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tif (!results) {\n\t\t\t\treturn callback(new Error('aborted'));\n\t\t\t}\n\n\t\t\tif (results['password:confirm'] !== results.password) {\n\t\t\t\twinston.warn(\"Passwords did not match, please try again\");\n\t\t\t\treturn retryPassword(results);\n\t\t\t}\n\t\t\tvar adminUid;\n\t\t\tasync.waterfall([\n\t\t\t\tfunction (next) {\n\t\t\t\t\tUser.create({username: results.username, password: results.password, email: results.email}, next);\n\t\t\t\t},\n\t\t\t\tfunction (uid, next) {\n\t\t\t\t\tadminUid = uid;\n\t\t\t\t\tGroups.join('administrators', uid, next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tGroups.show('administrators', next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tGroups.ownership.grant(adminUid, 'administrators', next);\n\t\t\t\t}\n\t\t\t], function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\t\t\t\tcallback(null, password ? results : undefined);\n\t\t\t});\n\t\t},\n\t\tretryPassword = function (originalResults) {\n\t\t\t// Ask only the password questions\n\t\t\tprompt.get(passwordQuestions, function (err, results) {\n\t\t\t\tif (!results) {\n\t\t\t\t\treturn callback(new Error('aborted'));\n\t\t\t\t}\n\n\t\t\t\t// Update the original data with newly collected password\n\t\t\t\toriginalResults.password = results.password;\n\t\t\t\toriginalResults['password:confirm'] = results['password:confirm'];\n\n\t\t\t\t// Send back to success to handle\n\t\t\t\tsuccess(err, originalResults);\n\t\t\t});\n\t\t};\n\n\t// Add the password questions\n\tquestions = questions.concat(passwordQuestions);\n\n\tif (!install.values) {\n\t\tprompt.get(questions, success);\n\t} else {\n\t\t// If automated setup did not provide a user password, generate one, it will be shown to the user upon setup completion\n\t\tif (!install.values.hasOwnProperty('admin:password') && !nconf.get('admin:password')) {\n\t\t\tprocess.stdout.write('Password was not provided during automated setup, generating one...\\n');\n\t\t\tpassword = utils.generateUUID().slice(0, 8);\n\t\t}\n\n\t\tvar results = {\n\t\t\tusername: install.values['admin:username'] || nconf.get('admin:username') || 'admin',\n\t\t\temail: install.values['admin:email'] || nconf.get('admin:email') || '',\n\t\t\tpassword: install.values['admin:password'] || nconf.get('admin:password') || password,\n\t\t\t'password:confirm': install.values['admin:password:confirm'] || nconf.get('admin:password') || password\n\t\t};\n\n\t\tsuccess(null, results);\n\t}\n}\n\nfunction createGlobalModeratorsGroup(next) {\n\tvar groups = require('./groups');\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tgroups.exists('Global Moderators', next);\n\t\t},\n\t\tfunction (exists, next) {\n\t\t\tif (exists) {\n\t\t\t\twinston.info('Global Moderators group found, skipping creation!');\n\t\t\t\treturn next(null, null);\n\t\t\t}\n\t\t\tgroups.create({\n\t\t\t\tname: 'Global Moderators',\n\t\t\t\tuserTitle: 'Global Moderator',\n\t\t\t\tdescription: 'Forum wide moderators',\n\t\t\t\thidden: 0,\n\t\t\t\tprivate: 1,\n\t\t\t\tdisableJoinRequests: 1\n\t\t\t}, next);\n\t\t},\n\t\tfunction (groupData, next) {\n\t\t\tgroups.show('Global Moderators', next);\n\t\t}\n\t], next);\n}\n\nfunction createCategories(next) {\n\tvar Categories = require('./categories');\n\n\tCategories.getAllCategories(0, function (err, categoryData) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tif (Array.isArray(categoryData) && categoryData.length) {\n\t\t\tprocess.stdout.write('Categories OK. Found ' + categoryData.length + ' categories.\\n');\n\t\t\treturn next();\n\t\t}\n\n\t\tprocess.stdout.write('No categories found, populating instance with default categories\\n');\n\n\t\tfs.readFile(path.join(__dirname, '../', 'install/data/categories.json'), function (err, default_categories) {\n\t\t\tif (err) {\n\t\t\t\treturn next(err);\n\t\t\t}\n\t\t\tdefault_categories = JSON.parse(default_categories);\n\n\t\t\tasync.eachSeries(default_categories, Categories.create, next);\n\t\t});\n\t});\n}\n\nfunction createMenuItems(next) {\n\tvar db = require('./database');\n\n\tdb.exists('navigation:enabled', function (err, exists) {\n\t\tif (err || exists) {\n\t\t\treturn next(err);\n\t\t}\n\t\tvar navigation = require('./navigation/admin'),\n\t\t\tdata = require('../install/data/navigation.json');\n\n\t\tnavigation.save(data, next);\n\t});\n}\n\nfunction createWelcomePost(next) {\n\tvar db = require('./database'),\n\t\tTopics = require('./topics');\n\n\tasync.parallel([\n\t\tfunction (next) {\n\t\t\tfs.readFile(path.join(__dirname, '../', 'install/data/welcome.md'), next);\n\t\t},\n\t\tfunction (next) {\n\t\t\tdb.getObjectField('global', 'topicCount', next);\n\t\t}\n\t], function (err, results) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tvar content = results[0],\n\t\t\tnumTopics = results[1];\n\n\t\tif (!parseInt(numTopics, 10)) {\n\t\t\tprocess.stdout.write('Creating welcome post!\\n');\n\t\t\tTopics.post({\n\t\t\t\tuid: 1,\n\t\t\t\tcid: 2,\n\t\t\t\ttitle: 'Welcome to your NodeBB!',\n\t\t\t\tcontent: content.toString()\n\t\t\t}, next);\n\t\t} else {\n\t\t\tnext();\n\t\t}\n\t});\n}\n\nfunction enableDefaultPlugins(next) {\n\n\tprocess.stdout.write('Enabling default plugins\\n');\n\n\tvar defaultEnabled = [\n\t\t\t'nodebb-plugin-composer-default',\n\t\t\t'nodebb-plugin-markdown',\n\t\t\t'nodebb-plugin-mentions',\n\t\t\t'nodebb-widget-essentials',\n\t\t\t'nodebb-rewards-essentials',\n\t\t\t'nodebb-plugin-soundpack-default',\n\t\t\t'nodebb-plugin-emoji-extended',\n\t\t\t'nodebb-plugin-emoji-one'\n\t\t],\n\t\tcustomDefaults = nconf.get('defaultPlugins');\n\n\twinston.info('[install/defaultPlugins] customDefaults', customDefaults);\n\n\tif (customDefaults && customDefaults.length) {\n\t\ttry {\n\t\t\tcustomDefaults = JSON.parse(customDefaults);\n\t\t\tdefaultEnabled = defaultEnabled.concat(customDefaults);\n\t\t} catch (e) {\n\t\t\t// Invalid value received\n\t\t\twinston.warn('[install/enableDefaultPlugins] Invalid defaultPlugins value received. Ignoring.');\n\t\t}\n\t}\n\n\tdefaultEnabled = defaultEnabled.filter(function (plugin, index, array) {\n\t\treturn array.indexOf(plugin) === index;\n\t});\n\n\twinston.info('[install/enableDefaultPlugins] activating default plugins', defaultEnabled);\n\n\tvar db = require('./database');\n\tvar order = defaultEnabled.map(function (plugin, index) {\n\t\treturn index;\n\t});\n\tdb.sortedSetAdd('plugins:active', order, defaultEnabled, next);\n}\n\nfunction setCopyrightWidget(next) {\n\tvar\tdb = require('./database');\n\tasync.parallel({\n\t\tfooterJSON: function (next) {\n\t\t\tfs.readFile(path.join(__dirname, '../', 'install/data/footer.json'), next);\n\t\t},\n\t\tfooter: function (next) {\n\t\t\tdb.getObjectField('widgets:global', 'footer', next);\n\t\t}\n\t}, function (err, results) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tif (!results.footer && results.footerJSON) {\n\t\t\tdb.setObjectField('widgets:global', 'footer', results.footerJSON.toString(), next);\n\t\t} else {\n\t\t\tnext();\n\t\t}\n\t});\n}\n\ninstall.setup = function (callback) {\n\n\n\tasync.series([\n\t\tcheckSetupFlag,\n\t\tcheckCIFlag,\n\t\tsetupConfig,\n\t\tsetupDefaultConfigs,\n\t\tenableDefaultTheme,\n\t\tcreateCategories,\n\t\tcreateAdministrator,\n\t\tcreateGlobalModeratorsGroup,\n\t\tcreateMenuItems,\n\t\tcreateWelcomePost,\n\t\tenableDefaultPlugins,\n\t\tsetCopyrightWidget,\n\t\tfunction (next) {\n\t\t\tvar upgrade = require('./upgrade');\n\t\t\tupgrade.check(function (err, uptodate) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn next(err);\n\t\t\t\t}\n\t\t\t\tif (!uptodate) { upgrade.upgrade(next); }\n\t\t\t\telse { next(); }\n\t\t\t});\n\t\t}\n\t], function (err, results) {\n\t\tif (err) {\n\t\t\twinston.warn('NodeBB Setup Aborted.\\n ' + err.stack);\n\t\t\tprocess.exit();\n\t\t} else {\n\t\t\tvar data = {};\n\t\t\tif (results[6]) {\n\t\t\t\tdata.username = results[6].username;\n\t\t\t\tdata.password = results[6].password;\n\t\t\t}\n\n\t\t\tcallback(null, data);\n\t\t}\n\t});\n};\n\ninstall.save = function (server_conf, callback) {\n\tvar\tserverConfigPath = path.join(__dirname, '../config.json');\n\n\tif (nconf.get('config')) {\n\t\tserverConfigPath = path.resolve(__dirname, '../', nconf.get('config'));\n\t}\n\n\tfs.writeFile(serverConfigPath, JSON.stringify(server_conf, null, 4), function (err) {\n\t\tif (err) {\n\t\t\twinston.error('Error saving server configuration! ' + err.message);\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tprocess.stdout.write('Configuration Saved OK\\n');\n\n\t\tnconf.file({\n\t\t\tfile: path.join(__dirname, '..', 'config.json')\n\t\t});\n\n\t\tcallback();\n\t});\n};\n\nmodule.exports = install;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/languages.js":"'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\nvar async = require('async');\nvar LRU = require('lru-cache');\n\nvar plugins = require('./plugins');\n\nvar Languages = {};\nvar\tlanguagesPath = path.join(__dirname, '../public/language');\n\nLanguages.init = function (next) {\n\tif (Languages.hasOwnProperty('_cache')) {\n\t\tLanguages._cache.reset();\n\t} else {\n\t\tLanguages._cache = LRU(100);\n\t}\n\n\tnext();\n};\n\nLanguages.get = function (language, namespace, callback) {\n\tvar langNamespace = language + '/' + namespace;\n\n\tif (Languages._cache && Languages._cache.has(langNamespace)) {\n\t\treturn callback(null, Languages._cache.get(langNamespace));\n\t}\n\n\tvar languageData;\n\n\tfs.readFile(path.join(languagesPath, language, namespace + '.json'), { encoding: 'utf-8' }, function (err, data) {\n\t\tif (err && err.code !== 'ENOENT') {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\t// If language file in core cannot be read, then no language file present\n\t\ttry {\n\t\t\tlanguageData = JSON.parse(data) || {};\n\t\t} catch (e) {\n\t\t\tlanguageData = {};\n\t\t}\n\n\t\tif (plugins.customLanguages.hasOwnProperty(langNamespace)) {\n\t\t\tObject.assign(languageData, plugins.customLanguages[langNamespace]);\n\t\t}\n\n\t\tif (Languages._cache) {\n\t\t\tLanguages._cache.set(langNamespace, languageData);\n\t\t}\n\n\t\tcallback(null, languageData);\n\t});\n};\n\nLanguages.list = function (callback) {\n\tvar languages = [];\n\n\tfs.readdir(languagesPath, function (err, files) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tasync.each(files, function (folder, next) {\n\t\t\tfs.stat(path.join(languagesPath, folder), function (err, stat) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn next(err);\n\t\t\t\t}\n\n\t\t\t\tif (!stat.isDirectory()) {\n\t\t\t\t\treturn next();\n\t\t\t\t}\n\n\t\t\t\tvar configPath = path.join(languagesPath, folder, 'language.json');\n\n\t\t\t\tfs.readFile(configPath, function (err, stream) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tnext();\n\t\t\t\t\t}\n\t\t\t\t\tlanguages.push(JSON.parse(stream.toString()));\n\t\t\t\t\tnext();\n\t\t\t\t});\n\t\t\t});\n\t\t}, function (err) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\t// Sort alphabetically\n\t\t\tlanguages = languages.sort(function (a, b) {\n\t\t\t\treturn a.code > b.code ? 1 : -1;\n\t\t\t});\n\n\t\t\tcallback(err, languages);\n\t\t});\n\t});\n};\n\nmodule.exports = Languages;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/logger.js":"'use strict';\n\n/*\n * Logger module: ability to dynamically turn on/off logging for http requests & socket.io events\n */\n\nvar fs = require('fs'),\n\tpath = require('path'),\n\twinston = require('winston'),\n\tutil = require('util'),\n\n\tfile = require('./file'),\n\tmeta = require('./meta'),\n\tmorgan = require('morgan');\n\nvar opts = {\n\t/*\n\t * state used by Logger\n\t */\n\texpress : {\n\t\tapp : {},\n\t\tset : 0,\n\t\tofn : null,\n\t},\n\tstreams : {\n\t\tlog : { f : process.stdout },\n\t}\n};\n\n\n/* -- Logger -- */\n\n(function (Logger) {\n\n\n\tLogger.init = function (app) {\n\t\topts.express.app = app;\n\t\t/* Open log file stream & initialize express logging if meta.config.logger* variables are set */\n\t\tLogger.setup();\n\t};\n\n\tLogger.setup = function () {\n\t\tLogger.setup_one('loggerPath', meta.config.loggerPath);\n\t};\n\n\tLogger.setup_one = function (key, value) {\n\t\t/*\n\t\t * 1. Open the logger stream: stdout or file\n\t\t * 2. Re-initialize the express logger hijack\n\t\t */\n\t\tif (key === 'loggerPath') {\n\t\t\tLogger.setup_one_log(value);\n\t\t\tLogger.express_open();\n\t\t}\n\t};\n\n\tLogger.setup_one_log = function (value) {\n\t\t/*\n\t\t * If logging is currently enabled, create a stream.\n\t\t * Otherwise, close the current stream\n\t\t */\n\t\tif(meta.config.loggerStatus > 0 || meta.config.loggerIOStatus) {\n\t\t\tvar stream = Logger.open(value);\n\t\t\tif(stream) {\n\t\t\t\topts.streams.log.f = stream;\n\t\t\t} else {\n\t\t\t\topts.streams.log.f = process.stdout;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tLogger.close(opts.streams.log);\n\t\t}\n\t};\n\n\tLogger.open = function (value) {\n\t\t/* Open the streams to log to: either a path or stdout */\n\t\tvar stream;\n\t\tif(value) {\n\t\t\tif(file.existsSync(value)) {\n\t\t\t\tvar stats = fs.statSync(value);\n\t\t\t\tif(stats) {\n\t\t\t\t\tif(stats.isDirectory()) {\n\t\t\t\t\t\tstream = fs.createWriteStream(path.join(value, 'nodebb.log'), {flags: 'a'});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstream = fs.createWriteStream(value, {flags: 'a'});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstream = fs.createWriteStream(value, {flags: 'a'});\n\n\t\t\t}\n\n\t\t\tif(stream) {\n\t\t\t\tstream.on('error', function (err) {\n\t\t\t\t\twinston.error(err.message);\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tstream = process.stdout;\n\t\t}\n\t\treturn stream;\n\t};\n\n\tLogger.close = function (stream) {\n\t\tif(stream.f !== process.stdout && stream.f) {\n\t\t\tstream.end();\n\t\t}\n\t\tstream.f = null;\n\t};\n\n\tLogger.monitorConfig = function (socket, data) {\n\t\t/*\n\t\t * This monitor's when a user clicks \"save\" in the Logger section of the admin panel\n\t\t */\n\t\tLogger.setup_one(data.key,data.value);\n\t\tLogger.io_close(socket);\n\t\tLogger.io(socket);\n\t};\n\n\tLogger.express_open = function () {\n\t\tif(opts.express.set !== 1) {\n\t\t\topts.express.set = 1;\n\t\t\topts.express.app.use(Logger.expressLogger);\n\t\t}\n\t\t/*\n\t\t * Always initialize \"ofn\" (original function) with the original logger function\n\t\t */\n\t\topts.express.ofn = morgan('combined', {stream : opts.streams.log.f});\n\t};\n\n\tLogger.expressLogger = function (req,res,next) {\n\t\t/*\n\t\t * The new express.logger\n\t\t *\n\t\t * This hijack allows us to turn logger on/off dynamically within express\n\t\t */\n\t\tif(meta.config.loggerStatus > 0) {\n\t\t\treturn opts.express.ofn(req,res,next);\n\t\t} else {\n\t\t\treturn next();\n\t\t}\n\t};\n\n\tLogger.prepare_io_string = function (_type, _uid, _args) {\n\t\t/*\n\t\t * This prepares the output string for intercepted socket.io events\n\t\t *\n\t\t * The format is: io: <uid> <event> <args>\n\t\t */\n\t\ttry {\n\t\t\treturn 'io: ' + _uid + ' ' + _type + ' ' + util.inspect(Array.prototype.slice.call(_args)) + '\\n';\n\t\t} catch(err) {\n\t\t\twinston.info(\"Logger.prepare_io_string: Failed\", err);\n\t\t\treturn \"error\";\n\t\t}\n\t};\n\n\tLogger.io_close = function (socket) {\n\t\t/*\n\t\t * Restore all hijacked sockets to their original emit/on functions\n\t\t */\n\t\tif (!socket || !socket.io || !socket.io.sockets || !socket.io.sockets.sockets) {\n\t\t\treturn;\n\t\t}\n\t\tvar clients = socket.io.sockets.sockets;\n\t\tfor (var sid in clients) {\n\t\t\tif (clients.hasOwnProperty(sid)) {\n\t\t\t\tvar client = clients[sid];\n\t\t\t\tif(client.oEmit && client.oEmit !== client.emit) {\n\t\t\t\t\tclient.emit = client.oEmit;\n\t\t\t\t}\n\n\t\t\t\tif(client.$oEmit && client.$oEmit !== client.$emit) {\n\t\t\t\t\tclient.$emit = client.$oEmit;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tLogger.io = function (socket) {\n\t\t/*\n\t\t * Go through all of the currently established sockets & hook their .emit/.on\n\t\t */\n\n\t\tif (!socket || !socket.io || !socket.io.sockets || !socket.io.sockets.sockets) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar clients = socket.io.sockets.sockets;\n\t\tfor(var sid in clients) {\n\t\t\tif (clients.hasOwnProperty(sid)) {\n\t\t\t\tLogger.io_one(clients[sid], clients[sid].uid);\n\t\t\t}\n\t\t}\n\t};\n\n\tLogger.io_one = function (socket, uid) {\n\t\t/*\n\t\t * This function replaces a socket's .emit/.on functions in order to intercept events\n\t\t */\n\t\tfunction override(method, name, errorMsg) {\n\t\t\treturn function () {\n\t\t\t\tif(opts.streams.log.f) {\n\t\t\t\t\topts.streams.log.f.write(Logger.prepare_io_string(name, uid, arguments));\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tmethod.apply(socket, arguments);\n\t\t\t\t} catch(err) {\n\t\t\t\t\twinston.info(errorMsg, err);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tif (socket && meta.config.loggerIOStatus > 0) {\n\t\t\t// courtesy of: http://stackoverflow.com/a/9674248\n\t\t\tsocket.oEmit = socket.emit;\n\t\t\tvar emit = socket.emit;\n\t\t\tsocket.emit = override(emit, 'emit', 'Logger.io_one: emit.apply: Failed');\n\n\t\t\tsocket.$oEmit = socket.$emit;\n\t\t\tvar $emit = socket.$emit;\n\t\t\tsocket.$emit = override($emit, 'on', 'Logger.io_one: $emit.apply: Failed');\n\t\t}\n\t};\n\n}(exports));\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/messaging.js":"'use strict';\n\n\nvar async = require('async');\nvar winston = require('winston');\nvar S = require('string');\n\nvar db = require('./database');\nvar user = require('./user');\nvar plugins = require('./plugins');\nvar meta = require('./meta');\nvar utils = require('../public/src/utils');\nvar notifications = require('./notifications');\nvar userNotifications = require('./user/notifications');\n\n(function (Messaging) {\n\n\trequire('./messaging/create')(Messaging);\n\trequire('./messaging/delete')(Messaging);\n\trequire('./messaging/edit')(Messaging);\n\trequire('./messaging/rooms')(Messaging);\n\trequire('./messaging/unread')(Messaging);\n\trequire('./messaging/notifications')(Messaging);\n\n\tMessaging.getMessageField = function (mid, field, callback) {\n\t\tMessaging.getMessageFields(mid, [field], function (err, fields) {\n\t\t\tcallback(err, fields ? fields[field] : null);\n\t\t});\n\t};\n\n\tMessaging.getMessageFields = function (mid, fields, callback) {\n\t\tdb.getObjectFields('message:' + mid, fields, callback);\n\t};\n\n\tMessaging.setMessageField = function (mid, field, content, callback) {\n\t\tdb.setObjectField('message:' + mid, field, content, callback);\n\t};\n\n\tMessaging.setMessageFields = function (mid, data, callback) {\n\t\tdb.setObject('message:' + mid, data, callback);\n\t};\n\n\tMessaging.getMessages = function (params, callback) {\n\t\tvar uid = params.uid;\n\t\tvar roomId = params.roomId;\n\t\tvar isNew = params.isNew || false;\n\t\tvar start = params.hasOwnProperty('start') ? params.start : 0;\n\t\tvar stop = parseInt(start, 10) + ((params.count || 50) - 1);\n\n\t\tvar indices = {};\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tcanGetMessages(params.callerUid, params.uid, next);\n\t\t\t},\n\t\t\tfunction (canGet, next) {\n\t\t\t\tif (!canGet) {\n\t\t\t\t\treturn callback(null, null);\n\t\t\t\t}\n\t\t\t\tdb.getSortedSetRevRange('uid:' + uid + ':chat:room:' + roomId + ':mids', start, stop, next);\n\t\t\t},\n\t\t\tfunction (mids, next) {\n\t\t\t\tif (!Array.isArray(mids) || !mids.length) {\n\t\t\t\t\treturn callback(null, []);\n\t\t\t\t}\n\n\t\t\t\tmids.forEach(function (mid, index) {\n\t\t\t\t\tindices[mid] = start + index;\n\t\t\t\t});\n\n\t\t\t\tmids.reverse();\n\n\t\t\t\tMessaging.getMessagesData(mids, uid, roomId, isNew, next);\n\t\t\t},\n\t\t\tfunction (messageData, next) {\n\t\t\t\tmessageData.forEach(function (messageData) {\n\t\t\t\t\tmessageData.index = indices[messageData.messageId.toString()];\n\t\t\t\t});\n\t\t\t\tnext(null, messageData);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tfunction canGetMessages(callerUid, uid, callback) {\n\t\tplugins.fireHook('filter:messaging.canGetMessages', {\n\t\t\tcallerUid: callerUid,\n\t\t\tuid: uid,\n\t\t\tcanGet: parseInt(callerUid, 10) === parseInt(uid, 10)\n\t\t}, function (err, data) {\n\t\t\tcallback(err, data ? data.canGet : false);\n\t\t});\n\t}\n\n\tMessaging.getMessagesData = function (mids, uid, roomId, isNew, callback) {\n\n\t\tvar keys = mids.map(function (mid) {\n\t\t\treturn 'message:' + mid;\n\t\t});\n\n\t\tvar messages;\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.getObjects(keys, next);\n\t\t\t},\n\t\t\tfunction (_messages, next) {\n\t\t\t\tmessages = _messages.map(function (msg, idx) {\n\t\t\t\t\tif (msg) {\n\t\t\t\t\t\tmsg.messageId = parseInt(mids[idx], 10);\n\t\t\t\t\t}\n\t\t\t\t\treturn msg;\n\t\t\t\t}).filter(Boolean);\n\n\t\t\t\tvar uids = messages.map(function (msg) {\n\t\t\t\t\treturn msg && msg.fromuid;\n\t\t\t\t});\n\n\t\t\t\tuser.getUsersFields(uids, ['uid', 'username', 'userslug', 'picture', 'status'], next);\n\t\t\t},\n\t\t\tfunction (users, next) {\n\t\t\t\tmessages.forEach(function (message, index) {\n\t\t\t\t\tmessage.fromUser = users[index];\n\t\t\t\t\tvar self = parseInt(message.fromuid, 10) === parseInt(uid, 10);\n\t\t\t\t\tmessage.self = self ? 1 : 0;\n\t\t\t\t\tmessage.timestampISO = utils.toISOString(message.timestamp);\n\t\t\t\t\tmessage.newSet = false;\n\t\t\t\t\tmessage.roomId = String(message.roomId || roomId);\n\t\t\t\t\tif (message.hasOwnProperty('edited')) {\n\t\t\t\t\t\tmessage.editedISO = new Date(parseInt(message.edited, 10)).toISOString();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tasync.map(messages, function (message, next) {\n\t\t\t\t\tMessaging.parse(message.content, message.fromuid, uid, roomId, isNew, function (err, result) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmessage.content = result;\n\t\t\t\t\t\tmessage.cleanedContent = S(result).stripTags().decodeHTMLEntities().s;\n\t\t\t\t\t\tnext(null, message);\n\t\t\t\t\t});\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (messages, next) {\n\t\t\t\tif (messages.length > 1) {\n\t\t\t\t\t// Add a spacer in between messages with time gaps between them\n\t\t\t\t\tmessages = messages.map(function (message, index) {\n\t\t\t\t\t\t// Compare timestamps with the previous message, and check if a spacer needs to be added\n\t\t\t\t\t\tif (index > 0 && parseInt(message.timestamp, 10) > parseInt(messages[index - 1].timestamp, 10) + (1000 * 60 * 5)) {\n\t\t\t\t\t\t\t// If it's been 5 minutes, this is a new set of messages\n\t\t\t\t\t\t\tmessage.newSet = true;\n\t\t\t\t\t\t} else if (index > 0 && message.fromuid !== messages[index - 1].fromuid) {\n\t\t\t\t\t\t\t// If the previous message was from the other person, this is also a new set\n\t\t\t\t\t\t\tmessage.newSet = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn message;\n\t\t\t\t\t});\n\n\t\t\t\t\tnext(undefined, messages);\n\t\t\t\t} else if (messages.length === 1) {\n\t\t\t\t\t// For single messages, we don't know the context, so look up the previous message and compare\n\t\t\t\t\tvar key = 'uid:' + uid + ':chat:room:' + roomId + ':mids';\n\t\t\t\t\tasync.waterfall([\n\t\t\t\t\t\tasync.apply(db.sortedSetRank, key, messages[0].messageId),\n\t\t\t\t\t\tfunction (index, next) {\n\t\t\t\t\t\t\t// Continue only if this isn't the first message in sorted set\n\t\t\t\t\t\t\tif (index > 0) {\n\t\t\t\t\t\t\t\tdb.getSortedSetRange(key, index - 1, index - 1, next);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tmessages[0].newSet = true;\n\t\t\t\t\t\t\t\treturn next(undefined, messages);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction (mid, next) {\n\t\t\t\t\t\t\tMessaging.getMessageFields(mid, ['fromuid', 'timestamp'], next);\n\t\t\t\t\t\t}\n\t\t\t\t\t], function (err, fields) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t(parseInt(messages[0].timestamp, 10) > parseInt(fields.timestamp, 10) + (1000 * 60 * 5)) ||\n\t\t\t\t\t\t\t(parseInt(messages[0].fromuid, 10) !== parseInt(fields.fromuid, 10))\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// If it's been 5 minutes, this is a new set of messages\n\t\t\t\t\t\t\tmessages[0].newSet = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnext(undefined, messages);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tnext(null, []);\n\t\t\t\t}\n\t\t\t}\n\t\t], callback);\n\n\t};\n\n\tMessaging.parse = function (message, fromuid, uid, roomId, isNew, callback) {\n\t\tplugins.fireHook('filter:parse.raw', message, function (err, parsed) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar messageData = {\n\t\t\t\tmessage: message,\n\t\t\t\tparsed: parsed,\n\t\t\t\tfromuid: fromuid,\n\t\t\t\tuid: uid,\n\t\t\t\troomId: roomId,\n\t\t\t\tisNew: isNew,\n\t\t\t\tparsedMessage: parsed\n\t\t\t};\n\n\t\t\tplugins.fireHook('filter:messaging.parse', messageData, function (err, messageData) {\n\t\t\t\tcallback(err, messageData ? messageData.parsedMessage : '');\n\t\t\t});\n\t\t});\n\t};\n\n\tMessaging.isNewSet = function (uid, roomId, timestamp, callback) {\n\t\tvar setKey = 'uid:' + uid + ':chat:room:' + roomId + ':mids';\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.getSortedSetRevRangeWithScores(setKey, 0, 0, next);\n\t\t\t},\n\t\t\tfunction (messages, next) {\n\t\t\t\tif (messages && messages.length) {\n\t\t\t\t\tnext(null, parseInt(timestamp, 10) > parseInt(messages[0].score, 10) + (1000 * 60 * 5));\n\t\t\t\t} else {\n\t\t\t\t\tnext(null, true);\n\t\t\t\t}\n\t\t\t}\n\t\t], callback);\n\t};\n\n\n\tMessaging.getRecentChats = function (callerUid, uid, start, stop, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tcanGetRecentChats(callerUid, uid, next);\n\t\t\t},\n\t\t\tfunction (canGet, next) {\n\t\t\t\tif (!canGet) {\n\t\t\t\t\treturn callback(null, null);\n\t\t\t\t}\n\t\t\t\tdb.getSortedSetRevRange('uid:' + uid + ':chat:rooms', start, stop, next);\n\t\t\t},\n\t\t\tfunction (roomIds, next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\troomData: function (next) {\n\t\t\t\t\t\tMessaging.getRoomsData(roomIds, next);\n\t\t\t\t\t},\n\t\t\t\t\tunread: function (next) {\n\t\t\t\t\t\tdb.isSortedSetMembers('uid:' + uid + ':chat:rooms:unread', roomIds, next);\n\t\t\t\t\t},\n\t\t\t\t\tusers: function (next) {\n\t\t\t\t\t\tasync.map(roomIds, function (roomId, next) {\n\t\t\t\t\t\t\tdb.getSortedSetRevRange('chat:room:' + roomId + ':uids', 0, 9, function (err, uids) {\n\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tuids = uids.filter(function (value) {\n\t\t\t\t\t\t\t\t\treturn value && parseInt(value, 10) !== parseInt(uid, 10);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tuser.getUsersFields(uids, ['uid', 'username', 'userslug', 'picture', 'status', 'lastonline'] , next);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}, next);\n\t\t\t\t\t},\n\t\t\t\t\tteasers: function (next) {\n\t\t\t\t\t\tasync.map(roomIds, function (roomId, next) {\n\t\t\t\t\t\t\tMessaging.getTeaser(uid, roomId, next);\n\t\t\t\t\t\t}, next);\n\t\t\t\t\t}\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tresults.roomData.forEach(function (room, index) {\n\t\t\t\t\troom.users = results.users[index];\n\t\t\t\t\troom.groupChat = room.hasOwnProperty('groupChat') ? room.groupChat : room.users.length > 2;\n\t\t\t\t\troom.unread = results.unread[index];\n\t\t\t\t\troom.teaser = results.teasers[index];\n\n\t\t\t\t\troom.users.forEach(function (userData) {\n\t\t\t\t\t\tif (userData && parseInt(userData.uid, 10)) {\n\t\t\t\t\t\t\tuserData.status = user.getStatus(userData);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\troom.users = room.users.filter(function (user) {\n\t\t\t\t\t\treturn user && parseInt(user.uid, 10);\n\t\t\t\t\t});\n\t\t\t\t\troom.lastUser = room.users[0];\n\n\t\t\t\t\troom.usernames = Messaging.generateUsernames(room.users, uid);\n\t\t\t\t});\n\n\t\t\t\tnext(null, {rooms: results.roomData, nextStart: stop + 1});\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tMessaging.generateUsernames = function (users, excludeUid) {\n\t\tusers = users.filter(function (user) {\n\t\t\treturn user && parseInt(user.uid, 10) !== excludeUid;\n\t\t});\n\t\treturn users.map(function (user) {\n\t\t\treturn user.username;\n\t\t}).join(', ');\n\t};\n\n\tfunction canGetRecentChats(callerUid, uid, callback) {\n\t\tplugins.fireHook('filter:messaging.canGetRecentChats', {\n\t\t\tcallerUid: callerUid,\n\t\t\tuid: uid,\n\t\t\tcanGet: parseInt(callerUid, 10) === parseInt(uid, 10)\n\t\t}, function (err, data) {\n\t\t\tcallback(err, data ? data.canGet : false);\n\t\t});\n\t}\n\n\tMessaging.getTeaser = function (uid, roomId, callback) {\n\t\tvar teaser;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.getSortedSetRevRange('uid:' + uid + ':chat:room:' + roomId + ':mids', 0, 0, next);\n\t\t\t},\n\t\t\tfunction (mids, next) {\n\t\t\t\tif (!mids || !mids.length) {\n\t\t\t\t\treturn next(null, null);\n\t\t\t\t}\n\t\t\t\tMessaging.getMessageFields(mids[0], ['fromuid', 'content', 'timestamp'], next);\n\t\t\t},\n\t\t\tfunction (_teaser, next) {\n\t\t\t\tteaser = _teaser;\n\t\t\t\tif (!teaser) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\tif (teaser.content) {\n\t\t\t\t\tteaser.content = S(teaser.content).stripTags().decodeHTMLEntities().s;\n\t\t\t\t}\n\n\t\t\t\tteaser.timestampISO = utils.toISOString(teaser.timestamp);\n\t\t\t\tuser.getUserFields(teaser.fromuid, ['uid', 'username', 'userslug', 'picture', 'status', 'lastonline'] , next);\n\t\t\t},\n\t\t\tfunction (user, next) {\n\t\t\t\tteaser.user = user;\n\t\t\t\tnext(null, teaser);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tMessaging.canMessageUser = function (uid, toUid, callback) {\n\t\tif (parseInt(meta.config.disableChat) === 1 || !uid || uid === toUid) {\n\t\t\treturn callback(new Error('[[error:chat-disabled]]'));\n\t\t}\n\n\t\tif (parseInt(uid, 10) === parseInt(toUid, 10)) {\n\t\t\treturn callback(new Error('[[error:cant-chat-with-yourself'));\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tuser.exists(toUid, next);\n\t\t\t},\n\t\t\tfunction (exists, next) {\n\t\t\t\tif (!exists) {\n\t\t\t\t\treturn callback(new Error('[[error:no-user]]'));\n\t\t\t\t}\n\t\t\t\tuser.getUserFields(uid, ['banned', 'email:confirmed'], next);\n\t\t\t},\n\t\t\tfunction (userData, next) {\n\t\t\t\tif (parseInt(userData.banned, 10) === 1) {\n\t\t\t\t\treturn callback(new Error('[[error:user-banned]]'));\n\t\t\t\t}\n\n\t\t\t\tif (parseInt(meta.config.requireEmailConfirmation, 10) === 1 && parseInt(userData['email:confirmed'], 10) !== 1) {\n\t\t\t\t\treturn callback(new Error('[[error:email-not-confirmed-chat]]'));\n\t\t\t\t}\n\n\t\t\t\tasync.parallel({\n\t\t\t\t\tsettings: async.apply(user.getSettings, toUid),\n\t\t\t\t\tisAdmin: async.apply(user.isAdministrator, uid),\n\t\t\t\t\tisFollowing: async.apply(user.isFollowing, toUid, uid)\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tif (!results.settings.restrictChat || results.isAdmin || results.isFollowing) {\n\t\t\t\t\treturn next();\n\t\t\t\t}\n\n \t\t\t\tnext(new Error('[[error:chat-restricted]]'));\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tMessaging.canMessageRoom = function (uid, roomId, callback) {\n\t\tif (parseInt(meta.config.disableChat) === 1 || !uid) {\n\t\t\treturn callback(new Error('[[error:chat-disabled]]'));\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tMessaging.isUserInRoom(uid, roomId, next);\n\t\t\t},\n\t\t\tfunction (inRoom, next) {\n\t\t\t\tif (!inRoom) {\n\t\t\t\t\treturn next(new Error('[[error:not-in-room]]'));\n\t\t\t\t}\n\n\t\t\t\tMessaging.getUserCountInRoom(roomId, next);\n\t\t\t},\n\t\t\tfunction (count, next) {\n\t\t\t\tif (count < 2) {\n\t\t\t\t\treturn next(new Error('[[error:no-users-in-room]]'));\n\t\t\t\t}\n\n\t\t\t\tuser.getUserFields(uid, ['banned', 'email:confirmed'], next);\n\t\t\t},\n\t\t\tfunction (userData, next) {\n\t\t\t\tif (parseInt(userData.banned, 10) === 1) {\n\t\t\t\t\treturn next(new Error('[[error:user-banned]]'));\n\t\t\t\t}\n\n\t\t\t\tif (parseInt(meta.config.requireEmailConfirmation, 10) === 1 && parseInt(userData['email:confirmed'], 10) !== 1) {\n\t\t\t\t\treturn next(new Error('[[error:email-not-confirmed-chat]]'));\n\t\t\t\t}\n\n\t\t\t\tnext();\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tMessaging.hasPrivateChat = function (uid, withUid, callback) {\n\t\tif (parseInt(uid, 10) === parseInt(withUid, 10)) {\n\t\t\treturn callback(null, 0);\n\t\t}\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\tmyRooms: async.apply(db.getSortedSetRevRange, 'uid:' + uid + ':chat:rooms', 0, -1),\n\t\t\t\t\ttheirRooms: async.apply(db.getSortedSetRevRange, 'uid:' + withUid + ':chat:rooms', 0, -1)\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tvar roomIds = results.myRooms.filter(function (roomId) {\n\t\t\t\t\treturn roomId && results.theirRooms.indexOf(roomId) !== -1;\n\t\t\t\t});\n\n\t\t\t\tif (!roomIds.length) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\n\t\t\t\tvar index = 0;\n\t\t\t\tvar roomId = 0;\n\t\t\t\tasync.whilst(function () {\n\t\t\t\t\treturn index < roomIds.length && !roomId;\n\t\t\t\t}, function (next) {\n\t\t\t\t\tMessaging.getUserCountInRoom(roomIds[index], function (err, count) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (count === 2) {\n\t\t\t\t\t\t\troomId = roomIds[index];\n\t\t\t\t\t\t\tnext(null, roomId);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t++ index;\n\t\t\t\t\t\t\tnext();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}, function (err) {\n\t\t\t\t\tnext(err, roomId);\n\t\t\t\t});\n\t\t\t}\n\t\t], callback);\n\t};\n\n\n}(exports));\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/notifications.js":"'use strict';\n\nvar async = require('async');\nvar winston = require('winston');\nvar cron = require('cron').CronJob;\nvar nconf = require('nconf');\nvar S = require('string');\nvar _ = require('underscore');\n\nvar db = require('./database');\nvar User = require('./user');\nvar groups = require('./groups');\nvar meta = require('./meta');\nvar batch = require('./batch');\nvar plugins = require('./plugins');\nvar utils = require('../public/src/utils');\n\n(function (Notifications) {\n\n\tNotifications.init = function () {\n\t\twinston.verbose('[notifications.init] Registering jobs.');\n\t\tnew cron('*/30 * * * *', Notifications.prune, null, true);\n\t};\n\n\tNotifications.get = function (nid, callback) {\n\t\tNotifications.getMultiple([nid], function (err, notifications) {\n\t\t\tcallback(err, Array.isArray(notifications) && notifications.length ? notifications[0] : null);\n\t\t});\n\t};\n\n\tNotifications.getMultiple = function (nids, callback) {\n\t\tvar keys = nids.map(function (nid) {\n\t\t\treturn 'notifications:' + nid;\n\t\t});\n\n\t\tdb.getObjects(keys, function (err, notifications) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tnotifications = notifications.filter(Boolean);\n\t\t\tif (!notifications.length) {\n\t\t\t\treturn callback(null, []);\n\t\t\t}\n\n\t\t\tvar userKeys = notifications.map(function (notification) {\n\t\t\t\treturn notification.from;\n\t\t\t});\n\n\t\t\tUser.getUsersFields(userKeys, ['username', 'userslug', 'picture'], function (err, usersData) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\t\t\t\tnotifications.forEach(function (notification, index) {\n\t\t\t\t\tnotification.datetimeISO = utils.toISOString(notification.datetime);\n\n\t\t\t\t\tif (notification.bodyLong) {\n\t\t\t\t\t\tnotification.bodyLong = S(notification.bodyLong).escapeHTML().s;\n\t\t\t\t\t}\n\n\t\t\t\t\tnotification.user = usersData[index];\n\t\t\t\t\tif (notification.user) {\n\t\t\t\t\t\tnotification.image = notification.user.picture || null;\n\t\t\t\t\t\tif (notification.user.username === '[[global:guest]]') {\n\t\t\t\t\t\t\tnotification.bodyShort = notification.bodyShort.replace(/([\\s\\S]*?),[\\s\\S]*?,([\\s\\S]*?)/, '$1, [[global:guest]], $2');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (notification.image === 'brand:logo' || !notification.image) {\n\t\t\t\t\t\tnotification.image = meta.config['brand:logo'] || nconf.get('relative_path') + '/logo.png';\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tcallback(null, notifications);\n\t\t\t});\n\t\t});\n\t};\n\n\tNotifications.filterExists = function (nids, callback) {\n\t\t// Removes nids that have been pruned\n\t\tdb.isSortedSetMembers('notifications', nids, function (err, exists) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tnids = nids.filter(function (notifId, idx) {\n\t\t\t\treturn exists[idx];\n\t\t\t});\n\n\t\t\tcallback(null, nids);\n\t\t});\n\t};\n\n\tNotifications.findRelated = function (mergeIds, set, callback) {\n\t\t// A related notification is one in a zset that has the same mergeId\n\t\tvar _nids;\n\n\t\tasync.waterfall([\n\t\t\tasync.apply(db.getSortedSetRevRange, set, 0, -1),\n\t\t\tfunction (nids, next) {\n\t\t\t\t_nids = nids;\n\n\t\t\t\tvar keys = nids.map(function (nid) {\n\t\t\t\t\treturn 'notifications:' + nid;\n\t\t\t\t});\n\n\t\t\t\tdb.getObjectsFields(keys, ['mergeId'], next);\n\t\t\t},\n\t\t], function (err, sets) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tsets = sets.map(function (set) {\n\t\t\t\treturn set.mergeId;\n\t\t\t});\n\n\t\t\tcallback(null, _nids.filter(function (nid, idx) {\n\t\t\t\treturn mergeIds.indexOf(sets[idx]) !== -1;\n\t\t\t}));\n\t\t});\n\t};\n\n\tNotifications.create = function (data, callback) {\n\t\tif (!data.nid) {\n\t\t\treturn callback(new Error('no-notification-id'));\n\t\t}\n\t\tdata.importance = data.importance || 5;\n\t\tdb.getObject('notifications:' + data.nid, function (err, oldNotification) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tif (oldNotification) {\n\t\t\t\tif (parseInt(oldNotification.pid, 10) === parseInt(data.pid, 10) && parseInt(oldNotification.importance, 10) > parseInt(data.importance, 10)) {\n\t\t\t\t\treturn callback(null, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar now = Date.now();\n\t\t\tdata.datetime = now;\n\t\t\tasync.parallel([\n\t\t\t\tfunction (next) {\n\t\t\t\t\tdb.sortedSetAdd('notifications', now, data.nid, next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tdb.setObject('notifications:' + data.nid, data, next);\n\t\t\t\t}\n\t\t\t], function (err) {\n\t\t\t\tcallback(err, data);\n\t\t\t});\n\t\t});\n\t};\n\n\tNotifications.push = function (notification, uids, callback) {\n\t\tcallback = callback || function () {};\n\n\t\tif (!notification || !notification.nid) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tif (!Array.isArray(uids)) {\n\t\t\tuids = [uids];\n\t\t}\n\n\t\tuids = uids.filter(function (uid, index, array) {\n\t\t\treturn parseInt(uid, 10) && array.indexOf(uid) === index;\n\t\t});\n\n\t\tif (!uids.length) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tsetTimeout(function () {\n\t\t\tbatch.processArray(uids, function (uids, next) {\n\t\t\t\tpushToUids(uids, notification, next);\n\t\t\t}, {interval: 1000}, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\twinston.error(err.stack);\n\t\t\t\t}\n\t\t\t});\n\t\t}, 1000);\n\n\t\tcallback();\n\t};\n\n\tfunction pushToUids(uids, notification, callback) {\n\t\tvar oneWeekAgo = Date.now() - 604800000;\n\t\tvar unreadKeys = [];\n\t\tvar readKeys = [];\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tplugins.fireHook('filter:notification.push', {notification: notification, uids: uids}, next);\n\t\t\t},\n\t\t\tfunction (data, next) {\n\t\t\t\tuids = data.uids;\n\t\t\t\tnotification = data.notification;\n\n\t\t\t\tuids.forEach(function (uid) {\n\t\t\t\t\tunreadKeys.push('uid:' + uid + ':notifications:unread');\n\t\t\t\t\treadKeys.push('uid:' + uid + ':notifications:read');\n\t\t\t\t});\n\n\t\t\t\tdb.sortedSetsAdd(unreadKeys, notification.datetime, notification.nid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tdb.sortedSetsRemove(readKeys, notification.nid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tdb.sortedSetsRemoveRangeByScore(unreadKeys, '-inf', oneWeekAgo, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tdb.sortedSetsRemoveRangeByScore(readKeys, '-inf', oneWeekAgo, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tvar websockets = require('./socket.io');\n\t\t\t\tif (websockets.server) {\n\t\t\t\t\tuids.forEach(function (uid) {\n\t\t\t\t\t\twebsockets.in('uid_' + uid).emit('event:new_notification', notification);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tplugins.fireHook('action:notification.pushed', {notification: notification, uids: uids});\n\t\t\t\tnext();\n\t\t\t}\n\t\t], callback);\n\t}\n\n\tNotifications.pushGroup = function (notification, groupName, callback) {\n\t\tcallback = callback || function () {};\n\t\tgroups.getMembers(groupName, 0, -1, function (err, members) {\n\t\t\tif (err || !Array.isArray(members) || !members.length) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tNotifications.push(notification, members, callback);\n\t\t});\n\t};\n\n\tNotifications.pushGroups = function (notification, groupNames, callback) {\n\t\tcallback = callback || function () {};\n\t\tgroups.getMembersOfGroups(groupNames, function (err, groupMembers) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar members = _.unique(_.flatten(groupMembers));\n\n\t\t\tNotifications.push(notification, members, callback);\n\t\t});\n\t};\n\n\tNotifications.rescind = function (nid, callback) {\n\t\tcallback = callback || function () {};\n\n\t\tasync.parallel([\n\t\t\tasync.apply(db.sortedSetRemove, 'notifications', nid),\n\t\t\tasync.apply(db.delete, 'notifications:' + nid)\n\t\t], function (err) {\n\t\t\tif (err) {\n\t\t\t\twinston.error('Encountered error rescinding notification (' + nid + '): ' + err.message);\n\t\t\t} else {\n\t\t\t\twinston.verbose('[notifications/rescind] Rescinded notification \"' + nid + '\"');\n\t\t\t}\n\n\t\t\tcallback(err, nid);\n\t\t});\n\t};\n\n\tNotifications.markRead = function (nid, uid, callback) {\n\t\tcallback = callback || function () {};\n\t\tif (!parseInt(uid, 10) || !nid) {\n\t\t\treturn callback();\n\t\t}\n\t\tNotifications.markReadMultiple([nid], uid, callback);\n\t};\n\n\tNotifications.markUnread = function (nid, uid, callback) {\n\t\tcallback = callback || function () {};\n\t\tif (!parseInt(uid, 10) || !nid) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tdb.getObject('notifications:' + nid, function (err, notification) {\n\t\t\tif (err || !notification) {\n\t\t\t\treturn callback(err || new Error('[[error:no-notification]]'));\n\t\t\t}\n\t\t\tnotification.datetime = notification.datetime || Date.now();\n\n\t\t\tasync.parallel([\n\t\t\t\tasync.apply(db.sortedSetRemove, 'uid:' + uid + ':notifications:read', nid),\n\t\t\t\tasync.apply(db.sortedSetAdd, 'uid:' + uid + ':notifications:unread', notification.datetime, nid)\n\t\t\t], callback);\n\t\t});\n\t};\n\n\tNotifications.markReadMultiple = function (nids, uid, callback) {\n\t\tcallback = callback || function () {};\n\t\tnids = nids.filter(Boolean);\n\t\tif (!Array.isArray(nids) || !nids.length) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tvar notificationKeys = nids.map(function (nid) {\n\t\t\treturn 'notifications:' + nid;\n\t\t});\n\n\t\tasync.waterfall([\n\t\t\tasync.apply(db.getObjectsFields, notificationKeys, ['mergeId']),\n\t\t\tfunction (mergeIds, next) {\n\t\t\t\t// Isolate mergeIds and find related notifications\n\t\t\t\tmergeIds = mergeIds.map(function (set) {\n\t\t\t\t\treturn set.mergeId;\n\t\t\t\t}).reduce(function (memo, mergeId, idx, arr) {\n\t\t\t\t\tif (mergeId && idx === arr.indexOf(mergeId)) {\n\t\t\t\t\t\tmemo.push(mergeId);\n\t\t\t\t\t}\n\t\t\t\t\treturn memo;\n\t\t\t\t}, []);\n\n\t\t\t\tNotifications.findRelated(mergeIds, 'uid:' + uid + ':notifications:unread', next);\n\t\t\t},\n\t\t\tfunction (relatedNids, next) {\n\t\t\t\tnotificationKeys = _.union(nids, relatedNids).map(function (nid) {\n\t\t\t\t\treturn 'notifications:' + nid;\n\t\t\t\t});\n\n\t\t\t\tdb.getObjectsFields(notificationKeys, ['nid', 'datetime'], next);\n\t\t\t}\n\t\t], function (err, notificationData) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\t// Filter out notifications that didn't exist\n\t\t\tnotificationData = notificationData.filter(function (notification) {\n\t\t\t\treturn notification && notification.nid;\n\t\t\t});\n\n\t\t\t// Extract nid\n\t\t\tnids = notificationData.map(function (notification) {\n\t\t\t\treturn notification.nid;\n\t\t\t});\n\n\t\t\tvar datetimes = notificationData.map(function (notification) {\n\t\t\t\treturn (notification && notification.datetime) || Date.now();\n\t\t\t});\n\n\t\t\tasync.parallel([\n\t\t\t\tfunction (next) {\n\t\t\t\t\tdb.sortedSetRemove('uid:' + uid + ':notifications:unread', nids, next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tdb.sortedSetAdd('uid:' + uid + ':notifications:read', datetimes, nids, next);\n\t\t\t\t}\n\t\t\t], function (err) {\n\t\t\t\tcallback(err);\n\t\t\t});\n\t\t});\n\t};\n\n\tNotifications.markAllRead = function (uid, callback) {\n\t\tdb.getSortedSetRevRange('uid:' + uid + ':notifications:unread', 0, 99, function (err, nids) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tif (!Array.isArray(nids) || !nids.length) {\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tNotifications.markReadMultiple(nids, uid, callback);\n\t\t});\n\t};\n\n\tNotifications.prune = function () {\n\t\tvar\tweek = 604800000,\n\t\t\tnumPruned = 0;\n\n\t\tvar\tcutoffTime = Date.now() - week;\n\n\t\tdb.getSortedSetRangeByScore('notifications', 0, 500, '-inf', cutoffTime, function (err, nids) {\n\t\t\tif (err) {\n\t\t\t\treturn winston.error(err.message);\n\t\t\t}\n\n\t\t\tif (!Array.isArray(nids) || !nids.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar\tkeys = nids.map(function (nid) {\n\t\t\t\treturn 'notifications:' + nid;\n\t\t\t});\n\n\t\t\tnumPruned = nids.length;\n\n\t\t\tasync.parallel([\n\t\t\t\tfunction (next) {\n\t\t\t\t\tdb.sortedSetRemove('notifications', nids, next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tdb.deleteAll(keys, next);\n\t\t\t\t}\n\t\t\t], function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn winston.error('Encountered error pruning notifications: ' + err.message);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n\n\tNotifications.merge = function (notifications, callback) {\n\t\t// When passed a set of notification objects, merge any that can be merged\n\t\tvar mergeIds = [\n\t\t\t\t'notifications:upvoted_your_post_in',\n\t\t\t\t'notifications:user_started_following_you',\n\t\t\t\t'notifications:user_posted_to',\n\t\t\t\t'notifications:user_flagged_post_in',\n\t\t\t\t'new_register'\n\t\t\t],\n\t\t\tisolated, differentiators, differentiator, modifyIndex, set;\n\n\t\tnotifications = mergeIds.reduce(function (notifications, mergeId) {\n\t\t\tisolated = notifications.filter(function (notifObj) {\n\t\t\t\tif (!notifObj || !notifObj.hasOwnProperty('mergeId')) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn notifObj.mergeId.split('|')[0] === mergeId;\n\t\t\t});\n\n\t\t\tif (isolated.length <= 1) {\n\t\t\t\treturn notifications;\t// Nothing to merge\n\t\t\t}\n\n\t\t\t// Each isolated mergeId may have multiple differentiators, so process each separately\n\t\t\tdifferentiators = isolated.reduce(function (cur, next) {\n\t\t\t\tdifferentiator = next.mergeId.split('|')[1] || 0;\n\t\t\t\tif (cur.indexOf(differentiator) === -1) {\n\t\t\t\t\tcur.push(differentiator);\n\t\t\t\t}\n\n\t\t\t\treturn cur;\n\t\t\t}, []);\n\n\t\t\tdifferentiators.forEach(function (differentiator) {\n\t\t\t\tif (differentiator === 0 && differentiators.length === 1) {\n\t\t\t\t\tset = isolated;\n\t\t\t\t} else {\n\t\t\t\t\tset = isolated.filter(function (notifObj) {\n\t\t\t\t\t\treturn notifObj.mergeId === (mergeId + '|' + differentiator);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tmodifyIndex = notifications.indexOf(set[0]);\n\t\t\t\tif (modifyIndex === -1 || set.length === 1) {\n\t\t\t\t\treturn notifications;\n\t\t\t\t}\n\n\t\t\t\tswitch(mergeId) {\n\t\t\t\t\t// intentional fall-through\n\t\t\t\t\tcase 'notifications:upvoted_your_post_in':\n\t\t\t\t\tcase 'notifications:user_started_following_you':\n\t\t\t\t\tcase 'notifications:user_posted_to':\n\t\t\t\t\tcase 'notifications:user_flagged_post_in':\n\t\t\t\t\t\tvar usernames = set.map(function (notifObj) {\n\t\t\t\t\t\t\treturn notifObj && notifObj.user && notifObj.user.username;\n\t\t\t\t\t\t}).filter(function (username, idx, array) {\n\t\t\t\t\t\t\treturn array.indexOf(username) === idx;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvar numUsers = usernames.length;\n\n\t\t\t\t\t\tvar title = S(notifications[modifyIndex].topicTitle || '').decodeHTMLEntities().s;\n\t\t\t\t\t\tvar titleEscaped = title.replace(/%/g, '&#37;').replace(/,/g, '&#44;');\n\t\t\t\t\t\ttitleEscaped = titleEscaped ? (', ' + titleEscaped) : '';\n\n\t\t\t\t\t\tif (numUsers === 2) {\n\t\t\t\t\t\t\tnotifications[modifyIndex].bodyShort = '[[' + mergeId + '_dual, ' + usernames.join(', ') + titleEscaped + ']]';\n\t\t\t\t\t\t} else if (numUsers > 2) {\n\t\t\t\t\t\t\tnotifications[modifyIndex].bodyShort = '[[' + mergeId + '_multiple, ' + usernames[0] + ', ' + (numUsers - 1) + titleEscaped + ']]';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnotifications[modifyIndex].path = set[set.length - 1].path;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'new_register':\n\t\t\t\t\t\tnotifications[modifyIndex].bodyShort = '[[notifications:' + mergeId + '_multiple, ' + set.length + ']]';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Filter out duplicates\n\t\t\t\tnotifications = notifications.filter(function (notifObj, idx) {\n\t\t\t\t\tif (!notifObj || !notifObj.mergeId) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn !(notifObj.mergeId === (mergeId + (differentiator ? '|' + differentiator : '')) && idx !== modifyIndex);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\treturn notifications;\n\t\t}, notifications);\n\n\t\tplugins.fireHook('filter:notifications.merge', {\n\t\t\tnotifications: notifications\n\t\t}, function (err, data) {\n\t\t\tcallback(err, data.notifications);\n\t\t});\n\t};\n\n}(exports));\n\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/pagination.js":"'use strict';\n\nvar qs = require('querystring');\n\nvar pagination = {};\n\npagination.create = function (currentPage, pageCount, queryObj) {\n\tif (pageCount <= 1) {\n\t\treturn {\n\t\t\tprev: {page: 1, active: currentPage > 1},\n\t\t\tnext: {page: 1, active: currentPage < pageCount},\n\t\t\trel: [],\n\t\t\tpages: [],\n\t\t\tcurrentPage: 1,\n\t\t\tpageCount: 1\n\t\t};\n\t}\n\tpageCount = parseInt(pageCount, 10);\n\tvar pagesToShow = [1, 2, pageCount - 1, pageCount];\n\n\tcurrentPage = parseInt(currentPage, 10) || 1;\n\tvar previous = Math.max(1, currentPage - 1);\n\tvar next = Math.min(pageCount, currentPage + 1);\n\n\tvar startPage = Math.max(1, currentPage - 2);\n\tif (startPage > pageCount - 5) {\n\t\tstartPage -= 2 - (pageCount - currentPage);\n\t}\n\tfor(var i = 0; i < 5; ++i) {\n\t\tpagesToShow.push(startPage + i);\n\t}\n\n\tpagesToShow = pagesToShow.filter(function (page, index, array) {\n\t\treturn page > 0 && page <= pageCount && array.indexOf(page) === index;\n\t}).sort(function (a, b) {\n\t\treturn a - b;\n\t});\n\n\tqueryObj = queryObj || {};\n\n\tdelete queryObj._;\n\n\tvar pages = pagesToShow.map(function (page) {\n\t\tqueryObj.page = page;\n\t\treturn {page: page, active: page === currentPage, qs: qs.stringify(queryObj)};\n\t});\n\n\tfor (i = pages.length - 1; i > 0; --i) {\n\t\tif (pages[i].page - 2 === pages[i - 1].page) {\n\t\t\tpages.splice(i, 0, {page: pages[i].page - 1, active: false, qs: qs.stringify(queryObj)});\n\t\t} else if (pages[i].page - 1 !== pages[i - 1].page) {\n\t\t\tpages.splice(i, 0, {separator: true});\n\t\t}\n\t}\n\n\tvar data = {rel: [], pages: pages, currentPage: currentPage, pageCount: pageCount};\n\tqueryObj.page = previous;\n\tdata.prev = {page: previous, active: currentPage > 1, qs: qs.stringify(queryObj)};\n\tqueryObj.page = next;\n\tdata.next = {page: next, active: currentPage < pageCount, qs: qs.stringify(queryObj)};\n\n\tif (currentPage < pageCount) {\n\t\tdata.rel.push({\n\t\t\trel: 'next',\n\t\t\thref: '?page=' + next\n\t\t});\n\t}\n\n\tif (currentPage > 1) {\n\t\tdata.rel.push({\n\t\t\trel: 'prev',\n\t\t\thref: '?page=' + previous\n\t\t});\n\t}\n\treturn data;\n};\n\n\nmodule.exports = pagination;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/password.js":"'use strict';\n\n(function (module) {\n\tvar fork = require('child_process').fork;\n\n\tmodule.hash = function (rounds, password, callback) {\n\t\tforkChild({type: 'hash', rounds: rounds, password: password}, callback);\n\t};\n\n\tmodule.compare = function (password, hash, callback) {\n\t\tforkChild({type: 'compare', password: password, hash: hash}, callback);\n\t};\n\n\tfunction forkChild(message, callback) {\n\t\tvar forkProcessParams = {};\n\t\tif(global.v8debug || parseInt(process.execArgv.indexOf('--debug'), 10) !== -1) {\n\t\t\tforkProcessParams = {execArgv: ['--debug=' + (5859), '--nolazy']};\n\t\t}\n\t\tvar child = fork('./bcrypt', [], forkProcessParams);\n\n\t\tchild.on('message', function (msg) {\n\t\t\tif (msg.err) {\n\t\t\t\treturn callback(new Error(msg.err));\n\t\t\t}\n\n\t\t\tcallback(null, msg.result);\n\t\t});\n\n\t\tchild.send(message);\n\t}\n\n\treturn module;\n}(exports));","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/posts.js":"'use strict';\n\nvar async = require('async');\nvar _ = require('underscore');\n\nvar db = require('./database');\nvar utils = require('../public/src/utils');\nvar user = require('./user');\nvar topics = require('./topics');\nvar privileges = require('./privileges');\nvar plugins = require('./plugins');\n\n(function (Posts) {\n\n\trequire('./posts/create')(Posts);\n\trequire('./posts/delete')(Posts);\n\trequire('./posts/edit')(Posts);\n\trequire('./posts/parse')(Posts);\n\trequire('./posts/user')(Posts);\n\trequire('./posts/topics')(Posts);\n\trequire('./posts/category')(Posts);\n\trequire('./posts/summary')(Posts);\n\trequire('./posts/recent')(Posts);\n\trequire('./posts/flags')(Posts);\n\trequire('./posts/tools')(Posts);\n\trequire('./posts/votes')(Posts);\n\trequire('./posts/bookmarks')(Posts);\n\n\tPosts.exists = function (pid, callback) {\n\t\tdb.isSortedSetMember('posts:pid', pid, callback);\n\t};\n\n\tPosts.getPidsFromSet = function (set, start, stop, reverse, callback) {\n\t\tif (isNaN(start) || isNaN(stop)) {\n\t\t\treturn callback(null, []);\n\t\t}\n\t\tdb[reverse ? 'getSortedSetRevRange' : 'getSortedSetRange'](set, start, stop, callback);\n\t};\n\n\tPosts.getPostsByPids = function (pids, uid, callback) {\n\t\tif (!Array.isArray(pids) || !pids.length) {\n\t\t\treturn callback(null, []);\n\t\t}\n\n\t\tvar keys = [];\n\n\t\tfor (var x = 0, numPids = pids.length; x < numPids; ++x) {\n\t\t\tkeys.push('post:' + pids[x]);\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.getObjects(keys, next);\n\t\t\t},\n\t\t\tfunction (posts, next) {\n\t\t\t\tasync.map(posts, function (post, next) {\n\t\t\t\t\tif (!post) {\n\t\t\t\t\t\treturn next();\n\t\t\t\t\t}\n\t\t\t\t\tpost.upvotes = parseInt(post.upvotes, 10) || 0;\n\t\t\t\t\tpost.downvotes = parseInt(post.downvotes, 10) || 0;\n\t\t\t\t\tpost.votes = post.upvotes - post.downvotes;\n\t\t\t\t\tpost.timestampISO = utils.toISOString(post.timestamp);\n\t\t\t\t\tpost.editedISO = parseInt(post.edited, 10) !== 0 ? utils.toISOString(post.edited) : '';\n\t\t\t\t\tPosts.parsePost(post, next);\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (posts, next) {\n\t\t\t\tplugins.fireHook('filter:post.getPosts', {posts: posts, uid: uid}, next);\n\t\t\t},\n\t\t\tfunction (data, next) {\n\t\t\t\tif (!data || !Array.isArray(data.posts)) {\n\t\t\t\t\treturn next(null, []);\n\t\t\t\t}\n\t\t\t\tdata.posts = data.posts.filter(Boolean);\n\t\t\t\tnext(null, data.posts);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tPosts.getPostSummariesFromSet = function (set, uid, start, stop, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.getSortedSetRevRange(set, start, stop, next);\n\t\t\t},\n\t\t\tfunction (pids, next) {\n\t\t\t\tprivileges.posts.filter('read', pids, uid, next);\n\t\t\t},\n\t\t\tfunction (pids, next) {\n\t\t\t\tPosts.getPostSummaryByPids(pids, uid, {stripTags: false}, next);\n\t\t\t},\n\t\t\tfunction (posts, next) {\n\t\t\t\tnext(null, {posts: posts, nextStart: stop + 1});\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tPosts.getPostData = function (pid, callback) {\n\t\tdb.getObject('post:' + pid, function (err, data) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tplugins.fireHook('filter:post.get', data, callback);\n\t\t});\n\t};\n\n\tPosts.getPostField = function (pid, field, callback) {\n\t\tPosts.getPostFields(pid, [field], function (err, data) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tcallback(null, data[field]);\n\t\t});\n\t};\n\n\tPosts.getPostFields = function (pid, fields, callback) {\n\t\tdb.getObjectFields('post:' + pid, fields, function (err, data) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tdata.pid = pid;\n\n\t\t\tplugins.fireHook('filter:post.getFields', {posts: [data], fields: fields}, function (err, data) {\n\t\t\t\tcallback(err, (data && Array.isArray(data.posts) && data.posts.length) ? data.posts[0] : null);\n\t\t\t});\n\t\t});\n\t};\n\n\tPosts.getPostsFields = function (pids, fields, callback) {\n\t\tif (!Array.isArray(pids) || !pids.length) {\n\t\t\treturn callback(null, []);\n\t\t}\n\n\t\tvar keys = pids.map(function (pid) {\n\t\t\treturn 'post:' + pid;\n\t\t});\n\n\t\tdb.getObjectsFields(keys, fields, function (err, posts) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tplugins.fireHook('filter:post.getFields', {posts: posts, fields: fields}, function (err, data) {\n\t\t\t\tcallback(err, (data && Array.isArray(data.posts)) ? data.posts : null);\n\t\t\t});\n\t\t});\n\t};\n\n\tPosts.setPostField = function (pid, field, value, callback) {\n\t\tdb.setObjectField('post:' + pid, field, value, function (err) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tvar data = {\n\t\t\t\tpid: pid\n\t\t\t};\n\t\t\tdata[field] = value;\n\t\t\tplugins.fireHook('action:post.setFields', data);\n\t\t\tcallback();\n\t\t});\n\t};\n\n\tPosts.setPostFields = function (pid, data, callback) {\n\t\tdb.setObject('post:' + pid, data, function (err) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tdata.pid = pid;\n\t\t\tplugins.fireHook('action:post.setFields', data);\n\t\t\tcallback();\n\t\t});\n\t};\n\n\tPosts.getPidIndex = function (pid, tid, topicPostSort, callback) {\n\t\tvar set = topicPostSort === 'most_votes' ? 'tid:' + tid + ':posts:votes' : 'tid:' + tid + ':posts';\n\t\tdb.sortedSetRank(set, pid, function (err, index) {\n\t\t\tif (!utils.isNumber(index)) {\n\t\t\t\treturn callback(err, 0);\n\t\t\t}\n\t\t\tcallback(err, parseInt(index, 10) + 1);\n\t\t});\n\t};\n\n\tPosts.getPostIndices = function (posts, uid, callback) {\n\t\tif (!Array.isArray(posts) || !posts.length) {\n\t\t\treturn callback(null, []);\n\t\t}\n\n\t\tuser.getSettings(uid, function (err, settings) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar byVotes = settings.topicPostSort === 'most_votes';\n\t\t\tvar sets = posts.map(function (post) {\n\t\t\t\treturn byVotes ? 'tid:' + post.tid + ':posts:votes' : 'tid:' + post.tid + ':posts';\n\t\t\t});\n\n\t\t\tvar uniqueSets = _.uniq(sets);\n\t\t\tvar method = 'sortedSetsRanks';\n\t\t\tif (uniqueSets.length === 1) {\n\t\t\t\tmethod = 'sortedSetRanks';\n\t\t\t\tsets = uniqueSets[0];\n\t\t\t}\n\n\t\t\tvar pids = posts.map(function (post) {\n\t\t\t\treturn post.pid;\n\t\t\t});\n\n\t\t\tdb[method](sets, pids, function (err, indices) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0; i < indices.length; ++i) {\n\t\t\t\t\tindices[i] = utils.isNumber(indices[i]) ? parseInt(indices[i], 10) + 1 : 0;\n\t\t\t\t}\n\n\t\t\t\tcallback(null, indices);\n\t\t\t});\n\t\t});\n\t};\n\n\tPosts.updatePostVoteCount = function (postData, callback) {\n\t\tif (!postData || !postData.pid || !postData.tid) {\n\t\t\treturn callback();\n\t\t}\n\t\tasync.parallel([\n\t\t\tfunction (next) {\n\t\t\t\tif (postData.uid) {\n\t\t\t\t\tif (postData.votes > 0) {\n\t\t\t\t\t\tdb.sortedSetAdd('uid:' + postData.uid + ':posts:votes', postData.votes, postData.pid, next);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdb.sortedSetRemove('uid:' + postData.uid + ':posts:votes', postData.pid, next);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tnext();\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tasync.waterfall([\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\ttopics.getTopicField(postData.tid, 'mainPid', next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (mainPid, next) {\n\t\t\t\t\t\tif (parseInt(mainPid, 10) === parseInt(postData.pid, 10)) {\n\t\t\t\t\t\t\treturn next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdb.sortedSetAdd('tid:' + postData.tid + ':posts:votes', postData.votes, postData.pid, next);\n\t\t\t\t\t}\n\t\t\t\t], next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tPosts.setPostFields(postData.pid, {upvotes: postData.upvotes, downvotes: postData.downvotes}, next);\n\t\t\t}\n\t\t], function (err) {\n\t\t\tcallback(err);\n\t\t});\n\t};\n\n\tPosts.modifyPostByPrivilege = function (post, isAdminOrMod) {\n\t\tif (post.deleted && !(isAdminOrMod || post.selfPost)) {\n\t\t\tpost.content = '[[topic:post_is_deleted]]';\n\t\t\tif (post.user) {\n\t\t\t\tpost.user.signature = '';\n\t\t\t}\n\t\t}\n\t};\n\n\n}(exports));\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/privileges.js":"\"use strict\";\n\nvar privileges = module.exports;\n\nprivileges.userPrivilegeList = [\n\t'find',\n\t'read',\n\t'topics:read',\n\t'topics:create',\n\t'topics:reply',\n\t'posts:edit',\n\t'posts:delete',\n\t'topics:delete',\n\t'upload:post:image',\n\t'upload:post:file',\n\t'purge',\n\t'mods'\n];\n\nprivileges.groupPrivilegeList = [\n\t'groups:find',\n\t'groups:read',\n\t'groups:topics:read',\n\t'groups:topics:create',\n\t'groups:topics:reply',\n\t'groups:posts:edit',\n\t'groups:posts:delete',\n\t'groups:topics:delete',\n\t'groups:upload:post:image',\n\t'groups:upload:post:file',\n\t'groups:purge',\n\t'groups:moderate'\n];\n\nprivileges.privilegeList = privileges.userPrivilegeList.concat(privileges.groupPrivilegeList);\n\nrequire('./privileges/categories')(privileges);\nrequire('./privileges/topics')(privileges);\nrequire('./privileges/posts')(privileges);\nrequire('./privileges/users')(privileges);\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/privileges/categories.js":"\n'use strict';\n\nvar async = require('async');\nvar _ = require('underscore');\n\nvar categories = require('../categories');\nvar user = require('../user');\nvar groups = require('../groups');\nvar helpers = require('./helpers');\nvar plugins = require('../plugins');\n\nmodule.exports = function (privileges) {\n\n\tprivileges.categories = {};\n\n\tprivileges.categories.list = function (cid, callback) {\n\t\t// Method used in admin/category controller to show all users/groups with privs in that given cid\n\n\t\tvar privilegeLabels = [\n\t\t\t{name: 'Find Category'},\n\t\t\t{name: 'Access Category'},\n\t\t\t{name: 'Access Topics'},\n\t\t\t{name: 'Create Topics'},\n\t\t\t{name: 'Reply to Topics'},\n\t\t\t{name: 'Edit Posts'},\n\t\t\t{name: 'Delete Posts'},\n\t\t\t{name: 'Delete Topics'},\n\t\t\t{name: 'Upload Images'},\n\t\t\t{name: 'Upload Files'},\n\t\t\t{name: 'Purge'},\n\t\t\t{name: 'Moderate'}\n\t\t];\n\n\t\tasync.parallel({\n\t\t\tlabels: function (next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\tusers: async.apply(plugins.fireHook, 'filter:privileges.list_human', privilegeLabels),\n\t\t\t\t\tgroups: async.apply(plugins.fireHook, 'filter:privileges.groups.list_human', privilegeLabels)\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tusers: function (next) {\n\t\t\t\tvar userPrivileges;\n\t\t\t\tasync.waterfall([\n\t\t\t\t\tasync.apply(plugins.fireHook, 'filter:privileges.list', privileges.userPrivilegeList),\n\t\t\t\t\tfunction (_privs, next) {\n\t\t\t\t\t\tuserPrivileges = _privs;\n\t\t\t\t\t\tgroups.getMembersOfGroups(userPrivileges.map(function (privilege) {\n\t\t\t\t\t\t\treturn 'cid:' + cid + ':privileges:' + privilege;\n\t\t\t\t\t\t}), next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (memberSets, next) {\n\n\t\t\t\t\t\tmemberSets = memberSets.map(function (set) {\n\t\t\t\t\t\t\treturn set.map(function (uid) {\n\t\t\t\t\t\t\t\treturn parseInt(uid, 10);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tvar members = _.unique(_.flatten(memberSets));\n\n\t\t\t\t\t\tuser.getUsersFields(members, ['picture', 'username'], function (err, memberData) {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmemberData.forEach(function (member) {\n\t\t\t\t\t\t\t\tmember.privileges = {};\n\t\t\t\t\t\t\t\tfor(var x = 0,numPrivs = userPrivileges.length; x < numPrivs; x++) {\n\t\t\t\t\t\t\t\t\tmember.privileges[userPrivileges[x]] = memberSets[x].indexOf(parseInt(member.uid, 10)) !== -1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tnext(null, memberData);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t], next);\n\t\t\t},\n\t\t\tgroups: function (next) {\n\t\t\t\tvar groupPrivileges;\n\t\t\t\tasync.waterfall([\n\t\t\t\t\tasync.apply(plugins.fireHook, 'filter:privileges.groups.list', privileges.groupPrivilegeList),\n\t\t\t\t\tfunction (_privs, next) {\n\t\t\t\t\t\tgroupPrivileges = _privs;\n\t\t\t\t\t\tgroups.getMembersOfGroups(groupPrivileges.map(function (privilege) {\n\t\t\t\t\t\t\treturn 'cid:' + cid + ':privileges:' + privilege;\n\t\t\t\t\t\t}), next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (memberSets, next) {\n\n\t\t\t\t\t\tvar uniqueGroups = _.unique(_.flatten(memberSets));\n\n\t\t\t\t\t\tgroups.getGroups('groups:createtime', 0, -1, function (err, groupNames) {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgroupNames = groupNames.filter(function (groupName) {\n\t\t\t\t\t\t\t\treturn groupName.indexOf(':privileges:') === -1 && uniqueGroups.indexOf(groupName) !== -1;\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tgroupNames = groups.getEphemeralGroups().concat(groupNames);\n\t\t\t\t\t\t\tvar registeredUsersIndex = groupNames.indexOf('registered-users');\n\t\t\t\t\t\t\tif (registeredUsersIndex !== -1) {\n\t\t\t\t\t\t\t\tgroupNames.splice(0, 0, groupNames.splice(registeredUsersIndex, 1)[0]);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tgroupNames = ['registered-users'].concat(groupNames);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar adminIndex = groupNames.indexOf('administrators');\n\t\t\t\t\t\t\tif (adminIndex !== -1) {\n\t\t\t\t\t\t\t\tgroupNames.splice(adminIndex, 1);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar memberPrivs;\n\n\t\t\t\t\t\t\tvar memberData = groupNames.map(function (member) {\n\t\t\t\t\t\t\t\tmemberPrivs = {};\n\n\t\t\t\t\t\t\t\tfor(var x = 0,numPrivs = groupPrivileges.length; x < numPrivs; x++) {\n\t\t\t\t\t\t\t\t\tmemberPrivs[groupPrivileges[x]] = memberSets[x].indexOf(member) !== -1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tname: member,\n\t\t\t\t\t\t\t\t\tprivileges: memberPrivs,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tnext(null, memberData);\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tfunction (memberData, next) {\n\t\t\t\t\t\t// Grab privacy info for the groups as well\n\t\t\t\t\t\tasync.map(memberData, function (member, next) {\n\t\t\t\t\t\t\tgroups.isPrivate(member.name, function (err, isPrivate) {\n\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tmember.isPrivate = isPrivate;\n\t\t\t\t\t\t\t\tnext(null, member);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}, next);\n\t\t\t\t\t}\n\t\t\t\t], next);\n\t\t\t}\n\t\t}, function (err, payload) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\t// This is a hack because I can't do {labels.users.length} to echo the count in templates.js\n\t\t\tpayload.columnCount = payload.labels.users.length + 2;\n\n\t\t\tcallback(null, payload);\n\t\t});\n\t};\n\n\tprivileges.categories.get = function (cid, uid, callback) {\n\t\tvar privs = ['topics:create', 'topics:read', 'read'];\n\t\tasync.parallel({\n\t\t\tprivileges: function (next) {\n\t\t\t\thelpers.isUserAllowedTo(privs, uid, cid, next);\n\t\t\t},\n\t\t\tisAdministrator: function (next) {\n\t\t\t\tuser.isAdministrator(uid, next);\n\t\t\t},\n\t\t\tisModerator: function (next) {\n\t\t\t\tuser.isModerator(uid, cid, next);\n\t\t\t}\n\t\t}, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tvar privData = _.object(privs, results.privileges);\n\t\t\tvar isAdminOrMod = results.isAdministrator || results.isModerator;\n\n\t\t\tplugins.fireHook('filter:privileges.categories.get', {\n\t\t\t\t'topics:create': privData['topics:create'] || isAdminOrMod,\n\t\t\t\t'topics:read': privData['topics:read'] || isAdminOrMod,\n\t\t\t\tread: privData.read || isAdminOrMod,\n\t\t\t\tcid: cid,\n\t\t\t\tuid: uid,\n\t\t\t\teditable: isAdminOrMod,\n\t\t\t\tview_deleted: isAdminOrMod,\n\t\t\t\tisAdminOrMod: isAdminOrMod\n\t\t\t}, callback);\n\t\t});\n\t};\n\n\tprivileges.categories.isAdminOrMod = function (cid, uid, callback) {\n\t\tif (!parseInt(uid, 10)) {\n\t\t\treturn callback(null, false);\n\t\t}\n\t\thelpers.some([\n\t\t\tfunction (next) {\n\t\t\t\tuser.isModerator(uid, cid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tuser.isAdministrator(uid, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tprivileges.categories.isUserAllowedTo = function (privilege, cid, uid, callback) {\n\t\tif (!cid) {\n\t\t\treturn callback(null, false);\n\t\t}\n\t\thelpers.isUserAllowedTo(privilege, uid, [cid], function (err, results) {\n\t\t\tcallback(err, Array.isArray(results) && results.length ? results[0] : false);\n\t\t});\n\t};\n\n\tprivileges.categories.can = function (privilege, cid, uid, callback) {\n\t\tif (!cid) {\n\t\t\treturn callback(null, false);\n\t\t}\n\n\t\tcategories.getCategoryField(cid, 'disabled', function (err, disabled) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tif (parseInt(disabled, 10) === 1) {\n\t\t\t\treturn callback(null, false);\n\t\t\t}\n\n\t\t\thelpers.some([\n\t\t\t\tfunction (next) {\n\t\t\t\t\thelpers.isUserAllowedTo(privilege, uid, [cid], function (err, results) {\n\t\t\t\t\t\tnext(err, Array.isArray(results) && results.length ? results[0] : false);\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tuser.isModerator(uid, cid, next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tuser.isAdministrator(uid, next);\n\t\t\t\t}\n\t\t\t], callback);\n\t\t});\n\t};\n\n\tprivileges.categories.filterCids = function (privilege, cids, uid, callback) {\n\t\tif (!Array.isArray(cids) || !cids.length) {\n\t\t\treturn callback(null, []);\n\t\t}\n\n\t\tcids = cids.filter(function (cid, index, array) {\n\t\t\treturn array.indexOf(cid) === index;\n\t\t});\n\n\t\tprivileges.categories.getBase(privilege, cids, uid, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tcids = cids.filter(function (cid, index) {\n\t\t\t\treturn !results.categories[index].disabled &&\n\t\t\t\t\t(results.allowedTo[index] || results.isAdmin || results.isModerators[index]);\n\t\t\t});\n\n\t\t\tcallback(null, cids.filter(Boolean));\n\t\t});\n\t};\n\n\tprivileges.categories.getBase = function (privilege, cids, uid, callback) {\n\t\tasync.parallel({\n\t\t\tcategories: function (next) {\n\t\t\t\tcategories.getCategoriesFields(cids, ['disabled'], next);\n\t\t\t},\n\t\t\tallowedTo: function (next) {\n\t\t\t\thelpers.isUserAllowedTo(privilege, uid, cids, next);\n\t\t\t},\n\t\t\tisModerators: function (next) {\n\t\t\t\tuser.isModerator(uid, cids, next);\n\t\t\t},\n\t\t\tisAdmin: function (next) {\n\t\t\t\tuser.isAdministrator(uid, next);\n\t\t\t}\n\t\t}, callback);\n\t};\n\n\tprivileges.categories.filterUids = function (privilege, cid, uids, callback) {\n\t\tif (!uids.length) {\n\t\t\treturn callback(null, []);\n\t\t}\n\n\t\tuids = uids.filter(function (uid, index, array) {\n\t\t\treturn array.indexOf(uid) === index;\n\t\t});\n\n\t\tasync.parallel({\n\t\t\tallowedTo: function (next) {\n\t\t\t\thelpers.isUsersAllowedTo(privilege, uids, cid, next);\n\t\t\t},\n\t\t\tisModerators: function (next) {\n\t\t\t\tuser.isModerator(uids, cid, next);\n\t\t\t},\n\t\t\tisAdmin: function (next) {\n\t\t\t\tuser.isAdministrator(uids, next);\n\t\t\t}\n\t\t}, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tuids = uids.filter(function (uid, index) {\n\t\t\t\treturn results.allowedTo[index] || results.isModerators[index] || results.isAdmin[index];\n\t\t\t});\n\t\t\tcallback(null, uids);\n\t\t});\n\t};\n\n\tprivileges.categories.give = function (privileges, cid, groupName, callback) {\n\t\tgiveOrRescind(groups.join, privileges, cid, groupName, callback);\n\t};\n\n\tprivileges.categories.rescind = function (privileges, cid, groupName, callback) {\n\t\tgiveOrRescind(groups.leave, privileges, cid, groupName, callback);\n\t};\n\n\tfunction giveOrRescind(method, privileges, cid, groupName, callback) {\n\t\tasync.each(privileges, function (privilege, next) {\n\t\t\tmethod('cid:' + cid + ':privileges:groups:' + privilege, groupName, next);\n\t\t}, callback);\n\t}\n\n\tprivileges.categories.canMoveAllTopics = function (currentCid, targetCid, uid, callback) {\n\t\tasync.parallel({\n\t\t\tisAdministrator: function (next) {\n\t\t\t\tuser.isAdministrator(uid, next);\n\t\t\t},\n\t\t\tmoderatorOfCurrent: function (next) {\n\t\t\t\tuser.isModerator(uid, currentCid, next);\n\t\t\t},\n\t\t\tmoderatorOfTarget: function (next) {\n\t\t\t\tuser.isModerator(uid, targetCid, next);\n\t\t\t}\n\t\t}, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tcallback(null, results.isAdministrator || (results.moderatorOfCurrent && results.moderatorOfTarget));\n\t\t});\n\t};\n\n\tprivileges.categories.userPrivileges = function (cid, uid, callback) {\n\t\tasync.parallel({\n\t\t\tfind: async.apply(groups.isMember, uid, 'cid:' + cid + ':privileges:find'),\n\t\t\tread: function (next) {\n\t\t\t\tgroups.isMember(uid, 'cid:' + cid + ':privileges:read', next);\n\t\t\t},\n\t\t\t'topics:create': function (next) {\n\t\t\t\tgroups.isMember(uid, 'cid:' + cid + ':privileges:topics:create', next);\n\t\t\t},\n\t\t\t'topics:read': function (next) {\n\t\t\t\tgroups.isMember(uid, 'cid:' + cid + ':privileges:topics:read', next);\n\t\t\t},\n\t\t\t'topics:reply': function (next) {\n\t\t\t\tgroups.isMember(uid, 'cid:' + cid + ':privileges:topics:reply', next);\n\t\t\t},\n\t\t\t'posts:edit': function (next) {\n\t\t\t\tgroups.isMember(uid, 'cid:' + cid + ':privileges:posts:edit', next);\n\t\t\t},\n\t\t\t'posts:delete': function (next) {\n\t\t\t\tgroups.isMember(uid, 'cid:' + cid + ':privileges:posts:delete', next);\n\t\t\t},\n\t\t\t'topics:delete': function (next) {\n\t\t\t\tgroups.isMember(uid, 'cid:' + cid + ':privileges:topics:delete', next);\n\t\t\t},\n\t\t\tmods: function (next) {\n\t\t\t\tuser.isModerator(uid, cid, next);\n\t\t\t}\n\t\t}, callback);\n\t};\n\n\tprivileges.categories.groupPrivileges = function (cid, groupName, callback) {\n\t\tasync.parallel({\n\t\t\t'groups:find': async.apply(groups.isMember, groupName, 'cid:' + cid + ':privileges:groups:find'),\n\t\t\t'groups:read': function (next) {\n\t\t\t\tgroups.isMember(groupName, 'cid:' + cid + ':privileges:groups:read', next);\n\t\t\t},\n\t\t\t'groups:topics:create': function (next) {\n\t\t\t\tgroups.isMember(groupName, 'cid:' + cid + ':privileges:groups:topics:create', next);\n\t\t\t},\n\t\t\t'groups:topics:reply': function (next) {\n\t\t\t\tgroups.isMember(groupName, 'cid:' + cid + ':privileges:groups:topics:reply', next);\n\t\t\t},\n\t\t\t'groups:posts:edit': function (next) {\n\t\t\t\tgroups.isMember(groupName, 'cid:' + cid + ':privileges:groups:posts:edit', next);\n\t\t\t},\n\t\t\t'groups:posts:delete': function (next) {\n\t\t\t\tgroups.isMember(groupName, 'cid:' + cid + ':privileges:groups:posts:delete', next);\n\t\t\t},\n\t\t\t'groups:topics:delete': function (next) {\n\t\t\t\tgroups.isMember(groupName, 'cid:' + cid + ':privileges:groups:topics:delete', next);\n\t\t\t},\n\t\t\t'groups:topics:read': function (next) {\n\t\t\t\tgroups.isMember(groupName, 'cid:' + cid + ':privileges:groups:topics:read', next);\n\t\t\t}\n\t\t}, callback);\n\t};\n\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/reset.js":"'use strict';\n\nvar winston = require('winston');\nvar nconf = require('nconf');\nvar async = require('async');\nvar db = require('./database');\n\nvar Reset = {};\n\n\nReset.reset = function () {\n\tdb.init(function (err) {\n\t\tif (err) {\n\t\t\twinston.error(err.message);\n\t\t\tprocess.exit();\n\t\t}\n\n\t\tif (nconf.get('t')) {\n\t\t\tif(nconf.get('t') === true) {\n\t\t\t\tresetThemes();\n\t\t\t} else {\n\t\t\t\tresetTheme(nconf.get('t'));\n\t\t\t}\n\t\t} else if (nconf.get('p')) {\n\t\t\tif (nconf.get('p') === true) {\n\t\t\t\tresetPlugins();\n\t\t\t} else {\n\t\t\t\tresetPlugin(nconf.get('p'));\n\t\t\t}\n\t\t} else if (nconf.get('w')) {\n\t\t\tresetWidgets();\n\t\t} else if (nconf.get('s')) {\n\t\t\tresetSettings();\n\t\t} else if (nconf.get('a')) {\n\t\t\trequire('async').series([resetWidgets, resetThemes, resetPlugins, resetSettings], function (err) {\n\t\t\t\tif (!err) {\n\t\t\t\t\twinston.info('[reset] Reset complete.');\n\t\t\t\t} else {\n\t\t\t\t\twinston.error('[reset] Errors were encountered while resetting your forum settings: %s', err.message);\n\t\t\t\t}\n\t\t\t\tprocess.exit();\n\t\t\t});\n\t\t} else {\n\t\t\tprocess.stdout.write('\\nNodeBB Reset\\n'.bold);\n\t\t\tprocess.stdout.write('No arguments passed in, so nothing was reset.\\n\\n'.yellow);\n\t\t\tprocess.stdout.write('Use ./nodebb reset ' + '{-t|-p|-w|-s|-a}\\n'.red);\n\t\t\tprocess.stdout.write('    -t\\tthemes\\n');\n\t\t\tprocess.stdout.write('    -p\\tplugins\\n');\n\t\t\tprocess.stdout.write('    -w\\twidgets\\n');\n\t\t\tprocess.stdout.write('    -s\\tsettings\\n');\n\t\t\tprocess.stdout.write('    -a\\tall of the above\\n');\n\n\t\t\tprocess.stdout.write('\\nPlugin and theme reset flags (-p & -t) can take a single argument\\n');\n\t\t\tprocess.stdout.write('    e.g. ./nodebb reset -p nodebb-plugin-mentions, ./nodebb reset -t nodebb-theme-persona\\n');\n\t\t\tprocess.exit();\n\t\t}\n\t});\n};\n\nfunction resetSettings(callback) {\n\tvar meta = require('./meta');\n\tmeta.configs.set('allowLocalLogin', 1, function (err) {\n\t\twinston.info('[reset] Settings reset to default');\n\t\tif (typeof callback === 'function') {\n\t\t\tcallback(err);\n\t\t} else {\n\t\t\tprocess.exit();\n\t\t}\n\t});\n}\n\nfunction resetTheme(themeId) {\n\tvar meta = require('./meta');\n\tvar fs = require('fs');\n\t\n\tfs.access('node_modules/' + themeId + '/package.json', function (err, fd) {\n\t\tif (err) {\n\t\t\twinston.warn('[reset] Theme `%s` is not installed on this forum', themeId);\n\t\t\tprocess.exit();\n\t\t} else {\n\t\t\tmeta.themes.set({\n\t\t\t\ttype: 'local',\n\t\t\t\tid: themeId\n\t\t\t}, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\twinston.warn('[reset] Failed to reset theme to ' + themeId);\n\t\t\t\t} else {\n\t\t\t\t\twinston.info('[reset] Theme reset to ' + themeId);\n\t\t\t\t}\n\n\t\t\t\tprocess.exit();\n\t\t\t});\t\t\n\t\t}\n\t});\n}\n\nfunction resetThemes(callback) {\n\tvar meta = require('./meta');\n\n\tmeta.themes.set({\n\t\ttype: 'local',\n\t\tid: 'nodebb-theme-persona'\n\t}, function (err) {\n\t\twinston.info('[reset] Theme reset to Persona');\n\t\tif (typeof callback === 'function') {\n\t\t\tcallback(err);\n\t\t} else {\n\t\t\tprocess.exit();\n\t\t}\n\t});\n}\n\nfunction resetPlugin(pluginId) {\n\tvar active = false;\n\n\tasync.waterfall([\n\t\tasync.apply(db.isSortedSetMember, 'plugins:active', pluginId),\n\t\tfunction (isMember, next) {\n\t\t\tactive = isMember;\n\n\t\t\tif (isMember) {\n\t\t\t\tdb.sortedSetRemove('plugins:active', pluginId, next);\n\t\t\t} else {\n\t\t\t\tnext();\n\t\t\t}\n\t\t}\n\t], function (err) {\n\t\tif (err) {\n\t\t\twinston.error('[reset] Could not disable plugin: %s encountered error %s', pluginId, err.message);\n\t\t} else {\n\t\t\tif (active) {\n\t\t\t\twinston.info('[reset] Plugin `%s` disabled', pluginId);\n\t\t\t} else {\n\t\t\t\twinston.warn('[reset] Plugin `%s` was not active on this forum', pluginId);\n\t\t\t\twinston.info('[reset] No action taken.');\n\t\t\t}\n\t\t}\n\n\t\tprocess.exit();\n\t});\n}\n\nfunction resetPlugins(callback) {\n\tdb.delete('plugins:active', function (err) {\n\t\twinston.info('[reset] All Plugins De-activated');\n\t\tif (typeof callback === 'function') {\n\t\t\tcallback(err);\n\t\t} else {\n\t\t\tprocess.exit();\n\t\t}\n\t});\n}\n\nfunction resetWidgets(callback) {\n\trequire('./widgets').reset(function (err) {\n\t\twinston.info('[reset] All Widgets moved to Draft Zone');\n\t\tif (typeof callback === 'function') {\n\t\t\tcallback(err);\n\t\t} else {\n\t\t\tprocess.exit();\n\t\t}\n\t});\n}\n\nmodule.exports = Reset;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/search.js":"'use strict';\n\nvar async = require('async');\nvar validator = require('validator');\n\nvar db = require('./database');\nvar posts = require('./posts');\nvar topics = require('./topics');\nvar categories = require('./categories');\nvar user = require('./user');\nvar plugins = require('./plugins');\nvar privileges = require('./privileges');\nvar utils = require('../public/src/utils');\n\nvar search = {};\n\nmodule.exports = search;\n\nsearch.search = function (data, callback) {\n\n\tvar start = process.hrtime();\n\tvar searchIn = data.searchIn || 'titlesposts';\n\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tif (searchIn === 'posts' || searchIn === 'titles' || searchIn === 'titlesposts') {\n\t\t\t\tsearchInContent(data, next);\n\t\t\t} else if (searchIn === 'users') {\n\t\t\t\tuser.search(data, next);\n\t\t\t} else if (searchIn === 'tags') {\n\t\t\t\ttopics.searchAndLoadTags(data, next);\n\t\t\t} else {\n\t\t\t\tnext(new Error('[[error:unknown-search-filter]]'));\n\t\t\t}\n\t\t},\n\t\tfunction (result, next) {\n\t\t\tresult.search_query = validator.escape(String(data.query || ''));\n\t\t\tresult.time = (process.elapsedTimeSince(start) / 1000).toFixed(2);\n\t\t\tnext(null, result);\n\t\t}\n\t], callback);\n};\n\nfunction searchInContent(data, callback) {\n\tdata.uid = data.uid || 0;\n\tasync.parallel({\n\t\tsearchCids: function (next) {\n\t\t\tgetSearchCids(data, next);\n\t\t},\n\t\tsearchUids: function (next) {\n\t\t\tgetSearchUids(data, next);\n\t\t}\n\t}, function (err, results) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tasync.parallel({\n\t\t\tpids: function (next) {\n\t\t\t\tif (data.searchIn === 'posts' || data.searchIn === 'titlesposts') {\n\t\t\t\t\tsearch.searchQuery('post', data.query, results.searchCids, results.searchUids, next);\n\t\t\t\t} else {\n\t\t\t\t\tnext(null, []);\n\t\t\t\t}\n\t\t\t},\n\t\t\ttids: function (next) {\n\t\t\t\tif (data.searchIn === 'titles' || data.searchIn === 'titlesposts') {\n\t\t\t\t\tsearch.searchQuery('topic', data.query, results.searchCids, results.searchUids, next);\n\t\t\t\t} else {\n\t\t\t\t\tnext(null, []);\n\t\t\t\t}\n\t\t\t}\n\t\t}, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar matchCount = 0;\n\t\t\tif (!results || (!results.pids.length && !results.tids.length)) {\n\t\t\t\treturn callback(null, {posts: [], matchCount: matchCount, pageCount: 1});\n\t\t\t}\n\n\t\t\tasync.waterfall([\n\t\t\t\tfunction (next) {\n\t\t\t\t\ttopics.getMainPids(results.tids, next);\n\t\t\t\t},\n\t\t\t\tfunction (mainPids, next) {\n\t\t\t\t\tresults.pids = mainPids.concat(results.pids).map(function (pid) {\n\t\t\t\t\t\treturn pid && pid.toString();\n\t\t\t\t\t}).filter(function (pid, index, array) {\n\t\t\t\t\t\treturn pid && array.indexOf(pid) === index;\n\t\t\t\t\t});\n\n\t\t\t\t\tprivileges.posts.filter('read', results.pids, data.uid, next);\n\t\t\t\t},\n\t\t\t\tfunction (pids, next) {\n\t\t\t\t\tfilterAndSort(pids, data, next);\n\t\t\t\t},\n\t\t\t\tfunction (pids, next) {\n\t\t\t\t\tmatchCount = pids.length;\n\t\t\t\t\tif (data.page) {\n\t\t\t\t\t\tvar start = Math.max(0, (data.page - 1)) * 10;\n\t\t\t\t\t\tpids = pids.slice(start, start + 10);\n\t\t\t\t\t}\n\n\t\t\t\t\tposts.getPostSummaryByPids(pids, data.uid, {}, next);\n\t\t\t\t},\n\t\t\t\tfunction (posts, next) {\n\t\t\t\t\tnext(null, {posts: posts, matchCount: matchCount, pageCount: Math.max(1, Math.ceil(parseInt(matchCount, 10) / 10))});\n\t\t\t\t}\n\t\t\t], callback);\n\t\t});\n\t});\n}\n\nfunction filterAndSort(pids, data, callback) {\n\tgetMatchedPosts(pids, data, function (err, posts) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tif (!Array.isArray(posts) || !posts.length) {\n\t\t\treturn callback(null, pids);\n\t\t}\n\t\tposts = posts.filter(Boolean);\n\n\t\tposts = filterByPostcount(posts, data.replies, data.repliesFilter);\n\t\tposts = filterByTimerange(posts, data.timeRange, data.timeFilter);\n\n\t\tsortPosts(posts, data);\n\n\t\tpids = posts.map(function (post) {\n\t\t\treturn post && post.pid;\n\t\t});\n\n\t\tcallback(null, pids);\n\t});\n}\n\nfunction getMatchedPosts(pids, data, callback) {\n\tvar postFields = ['pid', 'tid', 'timestamp', 'deleted'];\n\tvar topicFields = ['deleted'];\n\tvar categoryFields = [];\n\n\tif (data.replies) {\n\t\ttopicFields.push('postcount');\n\t}\n\n\tif (data.sortBy) {\n\t\tif (data.sortBy.startsWith('category')) {\n\t\t\ttopicFields.push('cid');\n\t\t} else if (data.sortBy.startsWith('topic.')) {\n\t\t\ttopicFields.push(data.sortBy.split('.')[1]);\n\t\t} else if (data.sortBy.startsWith('user.')) {\n\t\t\tpostFields.push('uid');\n\t\t} else if (data.sortBy.startsWith('category.')) {\n\t\t\tcategoryFields.push(data.sortBy.split('.')[1]);\n\t\t} else if (data.sortBy.startsWith('teaser')) {\n\t\t\ttopicFields.push('teaserPid');\n\t\t}\n\t}\n\n\tvar posts;\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tvar keys = pids.map(function (pid) {\n\t\t\t\treturn 'post:' + pid;\n\t\t\t});\n\t\t\tdb.getObjectsFields(keys, postFields, next);\n\t\t},\n\t\tfunction (_posts, next) {\n\t\t\tposts = _posts.filter(function (post) {\n\t\t\t\treturn post && parseInt(post.deleted, 10) !== 1;\n\t\t\t});\n\n\t\t\tasync.parallel({\n\t\t\t\tusers: function (next) {\n\t\t\t\t\tif (data.sortBy && data.sortBy.startsWith('user')) {\n\t\t\t\t\t\tvar uids = posts.map(function (post) {\n\t\t\t\t\t\t\treturn post.uid;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tuser.getUsersFields(uids, ['username'], next);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnext();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ttopics: function (next) {\n\t\t\t\t\tvar topics;\n\t\t\t\t\tasync.waterfall([\n\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\tvar topicKeys = posts.map(function (post) {\n\t\t\t\t\t\t\t\treturn 'topic:' + post.tid;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tdb.getObjectsFields(topicKeys, topicFields, next);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction (_topics, next) {\n\t\t\t\t\t\t\ttopics = _topics;\n\n\t\t\t\t\t\t\tasync.parallel({\n\t\t\t\t\t\t\t\tteasers: function (next) {\n\t\t\t\t\t\t\t\t\tif (topicFields.indexOf('teaserPid') !== -1) {\n\t\t\t\t\t\t\t\t\t\tvar teaserKeys = topics.map(function (topic) {\n\t\t\t\t\t\t\t\t\t\t\treturn 'post:' + topic.teaserPid;\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tdb.getObjectsFields(teaserKeys, ['timestamp'], next);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tnext();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcategories: function (next) {\n\t\t\t\t\t\t\t\t\tif (!categoryFields.length) {\n\t\t\t\t\t\t\t\t\t\treturn next();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tvar cids = topics.map(function (topic) {\n\t\t\t\t\t\t\t\t\t\treturn 'category:' + topic.cid;\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tdb.getObjectsFields(cids, categoryFields, next);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, next);\n\t\t\t\t\t\t}\n\t\t\t\t\t], function (err, results) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttopics.forEach(function (topic, index) {\n\t\t\t\t\t\t\tif (topic && results.categories && results.categories[index]) {\n\t\t\t\t\t\t\t\ttopic.category = results.categories[index];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (topic && results.teasers && results.teasers[index]) {\n\t\t\t\t\t\t\t\ttopic.teaser = results.teasers[index];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tnext(null, topics);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, next);\n\t\t},\n\t\tfunction (results, next) {\n\n\t\t\tposts.forEach(function (post, index) {\n\t\t\t\tif (results.topics && results.topics[index]) {\n\t\t\t\t\tpost.topic = results.topics[index];\n\t\t\t\t\tif (results.topics[index].category) {\n\t\t\t\t\t\tpost.category = results.topics[index].category;\n\t\t\t\t\t}\n\t\t\t\t\tif (results.topics[index].teaser) {\n\t\t\t\t\t\tpost.teaser = results.topics[index].teaser;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (results.users && results.users[index]) {\n\t\t\t\t\tpost.user = results.users[index];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tposts = posts.filter(function (post) {\n\t\t\t\treturn post && post.topic && parseInt(post.topic.deleted, 10) !== 1;\n\t\t\t});\n\n\t\t\tnext(null, posts);\n\t\t}\n\t], callback);\n}\n\nfunction filterByPostcount(posts, postCount, repliesFilter) {\n\tpostCount = parseInt(postCount, 10);\n\tif (postCount) {\n\t\tif (repliesFilter === 'atleast') {\n\t\t\tposts = posts.filter(function (post) {\n\t\t\t\treturn post.topic && post.topic.postcount >= postCount;\n\t\t\t});\n\t\t} else {\n\t\t\tposts = posts.filter(function (post) {\n\t\t\t\treturn post.topic && post.topic.postcount <= postCount;\n\t\t\t});\n\t\t}\n\t}\n\treturn posts;\n}\n\nfunction filterByTimerange(posts, timeRange, timeFilter) {\n\ttimeRange = parseInt(timeRange) * 1000;\n\tif (timeRange) {\n\t\tvar time = Date.now() - timeRange;\n\t\tif (timeFilter === 'newer') {\n\t\t\tposts = posts.filter(function (post) {\n\t\t\t\treturn post.timestamp >= time;\n\t\t\t});\n\t\t} else {\n\t\t\tposts = posts.filter(function (post) {\n\t\t\t\treturn post.timestamp <= time;\n\t\t\t});\n\t\t}\n\t}\n\treturn posts;\n}\n\nfunction sortPosts(posts, data) {\n\tif (!posts.length || !data.sortBy) {\n\t\treturn;\n\t}\n\n\tdata.sortDirection = data.sortDirection || 'desc';\n\tvar direction = data.sortDirection === 'desc' ? 1 : -1;\n\n\tif (data.sortBy === 'timestamp') {\n\t\tposts.sort(function (p1, p2) {\n\t\t\treturn direction * (p2.timestamp - p1.timestamp);\n\t\t});\n\n\t\treturn;\n\t}\n\n\tvar firstPost = posts[0];\n\tvar fields = data.sortBy.split('.');\n\n\tif (!fields || fields.length !== 2 || !firstPost[fields[0]] || !firstPost[fields[0]][fields[1]]) {\n\t\treturn;\n\t}\n\n\tvar isNumeric = utils.isNumber(firstPost[fields[0]][fields[1]]);\n\n\tif (isNumeric) {\n\t\tposts.sort(function (p1, p2) {\n\t\t\treturn direction * (p2[fields[0]][fields[1]] - p1[fields[0]][fields[1]]);\n\t\t});\n\t} else {\n\t\tposts.sort(function (p1, p2) {\n\t\t\tif (p1[fields[0]][fields[1]] > p2[fields[0]][fields[1]]) {\n\t\t\t\treturn direction;\n\t\t\t} else if (p1[fields[0]][fields[1]] < p2[fields[0]][fields[1]]) {\n\t\t\t\treturn -direction;\n\t\t\t}\n\t\t\treturn 0;\n\t\t});\n\t}\n}\n\nfunction getSearchCids(data, callback) {\n\tif (!Array.isArray(data.categories) || !data.categories.length) {\n\t\treturn callback(null, []);\n\t}\n\n\tif (data.categories.indexOf('all') !== -1) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.getSortedSetRange('categories:cid', 0, -1, next);\n\t\t\t},\n\t\t\tfunction (cids, next) {\n\t\t\t\tprivileges.categories.filterCids('read', cids, data.uid, next);\n\t\t\t}\n\t\t], callback);\n\t\treturn;\n\t}\n\n\tasync.parallel({\n\t\twatchedCids: function (next) {\n\t\t\tif (data.categories.indexOf('watched') !== -1) {\n\t\t\t\tuser.getWatchedCategories(data.uid, next);\n\t\t\t} else {\n\t\t\t\tnext(null, []);\n\t\t\t}\n\t\t},\n\t\tchildrenCids: function (next) {\n\t\t\tif (data.searchChildren) {\n\t\t\t\tgetChildrenCids(data.categories, data.uid, next);\n\t\t\t} else {\n\t\t\t\tnext(null, []);\n\t\t\t}\n\t\t}\n\t}, function (err, results) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tvar cids = results.watchedCids.concat(results.childrenCids).concat(data.categories).filter(function (cid, index, array) {\n\t\t\treturn cid && array.indexOf(cid) === index;\n\t\t});\n\n\t\tcallback(null, cids);\n\t});\n}\n\nfunction getChildrenCids(cids, uid, callback) {\n\tcategories.getChildren(cids, uid, function (err, childrenCategories) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tvar childrenCids = [];\n\t\tvar allCategories = [];\n\n\t\tchildrenCategories.forEach(function (childrens) {\n\t\t\tcategories.flattenCategories(allCategories, childrens);\n\t\t \tchildrenCids = childrenCids.concat(allCategories.map(function (category) {\n\t\t \t\treturn category && category.cid;\n\t\t \t}));\n\t\t });\n\n\t\tcallback(null, childrenCids);\n\t});\n}\n\nfunction getSearchUids(data, callback) {\n\tif (data.postedBy) {\n\t\tuser.getUidsByUsernames(Array.isArray(data.postedBy) ? data.postedBy : [data.postedBy], callback);\n\t} else {\n\t\tcallback(null, []);\n\t}\n}\n\nsearch.searchQuery = function (index, content, cids, uids, callback) {\n\tplugins.fireHook('filter:search.query', {\n\t\tindex: index,\n\t\tcontent: content,\n\t\tcid: cids,\n\t\tuid: uids\n\t}, callback);\n};\n\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/settings.js":"\"use strict\";\n\nvar meta = require('./meta');\n\nfunction expandObjBy(obj1, obj2) {\n\tvar key, val1, val2, xorValIsArray, changed = false;\n\tfor (key in obj2) {\n\t\tif (obj2.hasOwnProperty(key)) {\n\t\t\tval2 = obj2[key];\n\t\t\tval1 = obj1[key];\n\t\t\txorValIsArray = Array.isArray(val1) ^ Array.isArray(val2);\n\t\t\tif (xorValIsArray || !obj1.hasOwnProperty(key) || typeof val2 !== typeof val1) {\n\t\t\t\tobj1[key] = val2;\n\t\t\t\tchanged = true;\n\t\t\t} else if (typeof val2 === 'object' && !Array.isArray(val2)) {\n\t\t\t\tif (expandObjBy(val1, val2)) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn changed;\n}\n\nfunction trim(obj1, obj2) {\n\tvar key, val1;\n\tfor (key in obj1) {\n\t\tif (obj1.hasOwnProperty(key)) {\n\t\t\tval1 = obj1[key];\n\t\t\tif (!obj2.hasOwnProperty(key)) {\n\t\t\t\tdelete obj1[key];\n\t\t\t} else if (typeof val1 === 'object' && !Array.isArray(val1)) {\n\t\t\t\ttrim(val1, obj2[key]);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction mergeSettings(cfg, defCfg) {\n\tif (typeof defCfg !== 'object') {\n\t\treturn;\n\t}\n\tif (typeof cfg._ !== 'object') {\n\t\tcfg._ = defCfg;\n\t} else {\n\t\texpandObjBy(cfg._, defCfg);\n\t\ttrim(cfg._, defCfg);\n\t}\n}\n\n/**\n A class to manage Objects saved in {@link meta.settings} within property \"_\".\n Constructor, synchronizes the settings and repairs them if version differs.\n @param hash The hash to use for {@link meta.settings}.\n @param version The version of the settings, used to determine whether the saved settings may be corrupt.\n @param defCfg The default settings.\n @param callback Gets called once the Settings-object is ready.\n @param forceUpdate Whether to trigger structure-update even if the version doesn't differ from saved one.\n Should be true while plugin-development to ensure structure-changes within settings persist.\n @param reset Whether to reset the settings.\n */\nfunction Settings(hash, version, defCfg, callback, forceUpdate, reset) {\n\tthis.hash = hash;\n\tthis.version = version || this.version;\n\tthis.defCfg = defCfg;\n\tif (reset) {\n\t\tthis.reset(callback);\n\t} else {\n\t\tthis.sync(function () {\n\t\t\tthis.checkStructure(callback, forceUpdate);\n\t\t});\n\t}\n}\n\nSettings.prototype.hash = '';\nSettings.prototype.defCfg = {};\nSettings.prototype.cfg = {};\nSettings.prototype.version = '0.0.0';\n\n/**\n Synchronizes the local object with the saved object (reverts changes).\n @param callback Gets called when done.\n */\nSettings.prototype.sync = function (callback) {\n\tvar _this = this;\n\tmeta.settings.get(this.hash, function (err, settings) {\n\t\ttry {\n\t\t\tif (settings._) {\n\t\t\t\tsettings._ = JSON.parse(settings._);\n\t\t\t}\n\t\t} catch (_error) {}\n\t\t_this.cfg = settings;\n\t\tif (typeof _this.cfg._ !== 'object') {\n\t\t\t_this.cfg._ = _this.defCfg;\n\t\t\t_this.persist(callback);\n\t\t} else if (expandObjBy(_this.cfg._, _this.defCfg)) {\n\t\t\t_this.persist(callback);\n\t\t} else if (typeof callback === 'function') {\n\t\t\tcallback.apply(_this, err);\n\t\t}\n\t});\n};\n\n/**\n Persists the local object.\n @param callback Gets called when done.\n */\nSettings.prototype.persist = function (callback) {\n\tvar conf = this.cfg._,\n\t\t_this = this;\n\tif (typeof conf === 'object') {\n\t\tconf = JSON.stringify(conf);\n\t}\n\tmeta.settings.set(this.hash, this.createWrapper(this.cfg.v, conf), function () {\n\t\tif (typeof callback === 'function') {\n\t\t\tcallback.apply(_this, arguments || []);\n\t\t}\n\t});\n\treturn this;\n};\n\n/**\n Returns the setting of given key or default value if not set.\n @param key The key of the setting to return.\n @param def The default value, if not set global default value gets used.\n @returns Object The setting to be used.\n */\nSettings.prototype.get = function (key, def) {\n\tvar obj = this.cfg._,\n\t\tparts = (key || '').split('.'),\n\t\tpart;\n\tfor (var i = 0; i < parts.length; i++) {\n\t\tpart = parts[i];\n\t\tif (part && obj != null) {\n\t\t\tobj = obj[part];\n\t\t}\n\t}\n\tif (obj === void 0) {\n\t\tif (def === void 0) {\n\t\t\tdef = this.defCfg;\n\t\t\tfor (var j = 0; j < parts.length; j++) {\n\t\t\t\tpart = parts[j];\n\t\t\t\tif (part && def != null) {\n\t\t\t\t\tdef = def[part];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn def;\n\t}\n\treturn obj;\n};\n\n/**\n Returns the settings-wrapper object.\n @returns Object The settings-wrapper.\n */\nSettings.prototype.getWrapper = function () {\n\treturn this.cfg;\n};\n\n/**\n Creates a new wrapper for the given settings with the given version.\n @returns Object The new settings-wrapper.\n */\nSettings.prototype.createWrapper = function (version, settings) {\n\treturn {\n\t\tv: version,\n\t\t_: settings\n\t};\n};\n\n/**\n Creates a new wrapper for the default settings.\n @returns Object The new settings-wrapper.\n */\nSettings.prototype.createDefaultWrapper = function () {\n\treturn this.createWrapper(this.version, this.defCfg);\n};\n\n/**\n Sets the setting of given key to given value.\n @param key The key of the setting to set.\n @param val The value to set.\n */\nSettings.prototype.set = function (key, val) {\n\tvar part, obj, parts;\n\tthis.cfg.v = this.version;\n\tif (val == null || !key) {\n\t\tthis.cfg._ = val || key;\n\t} else {\n\t\tobj = this.cfg._;\n\t\tparts = key.split('.');\n\t\tfor (var i = 0, _len = parts.length - 1; i < _len; i++) {\n\t\t\tif (part = parts[i]) {\n\t\t\t\tif (!obj.hasOwnProperty(part)) {\n\t\t\t\t\tobj[part] = {};\n\t\t\t\t}\n\t\t\t\tobj = obj[part];\n\t\t\t}\n\t\t}\n\t\tobj[parts[parts.length - 1]] = val;\n\t}\n\treturn this;\n};\n\n/**\n Resets the saved settings to default settings.\n @param callback Gets called when done.\n */\nSettings.prototype.reset = function (callback) {\n\tthis.set(this.defCfg).persist(callback);\n\treturn this;\n};\n\n/**\n If the version differs the settings get updated and persisted.\n @param callback Gets called when done.\n @param force Whether to update and persist the settings even if the versions ara equal.\n */\nSettings.prototype.checkStructure = function (callback, force) {\n\tif (!force && this.cfg.v === this.version) {\n\t\tif (typeof callback === 'function') {\n\t\t\tcallback();\n\t\t}\n\t} else {\n\t\tmergeSettings(this.cfg, this.defCfg);\n\t\tthis.cfg.v = this.version;\n\t\tthis.persist(callback);\n\t}\n\treturn this;\n};\n\nmodule.exports = Settings;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/sitemap.js":"'use strict';\n\nvar async = require('async');\nvar sm = require('sitemap');\nvar nconf = require('nconf');\n\nvar db = require('./database');\nvar categories = require('./categories');\nvar topics = require('./topics');\nvar privileges = require('./privileges');\nvar meta = require('./meta');\nvar plugins = require('./plugins');\nvar utils = require('../public/src/utils');\n\nvar sitemap = {\n\tmaps: {\n\t\ttopics: []\n\t}\n};\n\nsitemap.render = function (callback) {\n\tvar numTopics = parseInt(meta.config.sitemapTopics, 10) || 500;\n\tvar returnData = {\n\t\t\turl: nconf.get('url'),\n\t\t\ttopics: []\n\t\t};\n\tvar numPages;\n\n\tasync.waterfall([\n\t\tasync.apply(db.getSortedSetRange, 'topics:recent', 0, -1),\n\t\tfunction (tids, next) {\n\t\t\tprivileges.topics.filterTids('read', tids, 0, next);\n\t\t}\n\t], function (err, tids) {\n\t\tif (err) {\n\t\t\tnumPages = 1;\n\t\t} else {\n\t\t\tnumPages = Math.ceil(tids.length / numTopics);\n\t\t}\n\n\t\tfor(var x = 1; x <= numPages; x++) {\n\t\t\treturnData.topics.push(x);\n\t\t}\n\n\t\tcallback(null, returnData);\n\t});\n};\n\nsitemap.getPages = function (callback) {\n\tif (\n\t\tsitemap.maps.pages &&\n\t\tDate.now() < parseInt(sitemap.maps.pages.cacheSetTimestamp, 10) + parseInt(sitemap.maps.pages.cacheResetPeriod, 10)\n\t) {\n\t\treturn sitemap.maps.pages.toXML(callback);\n\t}\n\n\tvar urls = [{\n\t\t\turl: '',\n\t\t\tchangefreq: 'weekly',\n\t\t\tpriority: 0.6\n\t\t}, {\n\t\t\turl: '/recent',\n\t\t\tchangefreq: 'daily',\n\t\t\tpriority: 0.4\n\t\t}, {\n\t\t\turl: '/users',\n\t\t\tchangefreq: 'daily',\n\t\t\tpriority: 0.4\n\t\t}, {\n\t\t\turl: '/groups',\n\t\t\tchangefreq: 'daily',\n\t\t\tpriority: 0.4\n\t\t}];\n\n\tplugins.fireHook('filter:sitemap.getPages', {urls: urls}, function (err, data) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\t\tsitemap.maps.pages = sm.createSitemap({\n\t\t\thostname: nconf.get('url'),\n\t\t\tcacheTime: 1000 * 60 * 60 * 24,\t// Cached for 24 hours\n\t\t\turls: data.urls\n\t\t});\n\n\t\tsitemap.maps.pages.toXML(callback);\n\t});\n};\n\nsitemap.getCategories = function (callback) {\n\tif (\n\t\tsitemap.maps.categories &&\n\t\tDate.now() < parseInt(sitemap.maps.categories.cacheSetTimestamp, 10) + parseInt(sitemap.maps.categories.cacheResetPeriod, 10)\n\t) {\n\t\treturn sitemap.maps.categories.toXML(callback);\n\t}\n\n\tvar categoryUrls = [];\n\tcategories.getCategoriesByPrivilege('categories:cid', 0, 'find', function (err, categoriesData) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tcategoriesData.forEach(function (category) {\n\t\t\tif (category) {\n\t\t\t\tcategoryUrls.push({\n\t\t\t\t\turl: '/category/' + category.slug,\n\t\t\t\t\tchangefreq: 'weekly',\n\t\t\t\t\tpriority: 0.4\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tsitemap.maps.categories = sm.createSitemap({\n\t\t\thostname: nconf.get('url'),\n\t\t\tcacheTime: 1000 * 60 * 60 * 24,\t// Cached for 24 hours\n\t\t\turls: categoryUrls\n\t\t});\n\n\t\tsitemap.maps.categories.toXML(callback);\n\t});\n};\n\nsitemap.getTopicPage = function (page, callback) {\n\tif (parseInt(page, 10) <= 0) {\n\t\treturn callback();\n\t}\n\n\tvar numTopics = parseInt(meta.config.sitemapTopics, 10) || 500;\n\tvar min = (parseInt(page, 10) - 1) * numTopics;\n\tvar max = min + numTopics;\n\n\tif (\n\t\tsitemap.maps.topics[page - 1] &&\n\t\tDate.now() < parseInt(sitemap.maps.topics[page - 1].cacheSetTimestamp, 10) + parseInt(sitemap.maps.topics[page - 1].cacheResetPeriod, 10)\n\t) {\n\t\treturn sitemap.maps.topics[page - 1].toXML(callback);\n\t}\n\n\tvar topicUrls = [];\n\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tdb.getSortedSetRevRange('topics:recent', min, max, next);\n\t\t},\n\t\tfunction (tids, next) {\n\t\t\tprivileges.topics.filterTids('read', tids, 0, next);\n\t\t},\n\t\tfunction (tids, next) {\n\t\t\ttopics.getTopicsFields(tids, ['tid', 'title', 'slug', 'lastposttime'], next);\n\t\t}\n\t], function (err, topics) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\ttopics.forEach(function (topic) {\n\t\t\tif (topic) {\n\t\t\t\ttopicUrls.push({\n\t\t\t\t\turl: '/topic/' + topic.slug,\n\t\t\t\t\tlastmodISO: utils.toISOString(topic.lastposttime),\n\t\t\t\t\tchangefreq: 'daily',\n\t\t\t\t\tpriority: 0.6\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tsitemap.maps.topics[page - 1] = sm.createSitemap({\n\t\t\thostname: nconf.get('url'),\n\t\t\tcacheTime: 1000 * 60 * 60,\t// Cached for 1 hour\n\t\t\turls: topicUrls\n\t\t});\n\n\t\tsitemap.maps.topics[page - 1].toXML(callback);\n\t});\n};\n\nsitemap.clearCache = function () {\n\tif (sitemap.obj) {\n\t\tsitemap.obj.clearCache();\n\t}\n};\n\nmodule.exports = sitemap;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/social.js":"\"use strict\";\n\nvar plugins = require('./plugins');\nvar db = require('./database');\nvar async = require('async');\n\nvar social = {};\n\nsocial.postSharing = null;\n\nsocial.getPostSharing = function (callback) {\n\tif (social.postSharing) {\n\t\treturn callback(null, social.postSharing);\n\t}\n\n\tvar networks = [\n\t\t{\n\t\t\tid: \"facebook\",\n\t\t\tname: \"Facebook\",\n\t\t\tclass: \"fa-facebook\"\n\t\t},\n\t\t{\n\t\t\tid: \"twitter\",\n\t\t\tname: \"Twitter\",\n\t\t\tclass: \"fa-twitter\"\n\t\t},\n\t\t{\n\t\t\tid: \"google\",\n\t\t\tname: \"Google+\",\n\t\t\tclass: \"fa-google-plus\"\n\t\t}\n\t];\n\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tplugins.fireHook('filter:social.posts', networks, next);\n\t\t},\n\t\tfunction (networks, next) {\n\t\t\tdb.getSetMembers('social:posts.activated', function (err, activated) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn next(err);\n\t\t\t\t}\n\n\t\t\t\tnetworks.forEach(function (network, i) {\n\t\t\t\t\tnetworks[i].activated = (activated.indexOf(network.id) !== -1);\n\t\t\t\t});\n\n\t\t\t\tsocial.postSharing = networks;\n\t\t\t\tnext(null, networks);\n\t\t\t});\n\t\t}\n\t], callback);\n};\n\nsocial.getActivePostSharing = function (callback) {\n\tsocial.getPostSharing(function (err, networks) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\t\tnetworks = networks.filter(function (network) {\n\t\t\treturn network && network.activated;\n\t\t});\n\t\tcallback(null, networks);\n\t});\n};\n\nsocial.setActivePostSharingNetworks = function (networkIDs, callback) {\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tdb.delete('social:posts.activated', next);\n\t\t},\n\t\tfunction (next) {\n\t\t\tif (!networkIDs.length) {\n\t\t\t\treturn next();\n\t\t\t}\n\t\t\tdb.setAdd('social:posts.activated', networkIDs, next);\n\t\t},\n\t\tfunction (next) {\n\t\t\tsocial.postSharing = null;\n\t\t\tnext();\n\t\t}\n\t], callback);\n};\n\nmodule.exports = social;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/topics.js":"\"use strict\";\n\nvar async = require('async');\nvar _ = require('underscore');\n\nvar db = require('./database');\nvar posts = require('./posts');\nvar utils = require('../public/src/utils');\nvar plugins = require('./plugins');\nvar user = require('./user');\nvar categories = require('./categories');\nvar privileges = require('./privileges');\nvar social = require('./social');\n\n(function (Topics) {\n\n\trequire('./topics/data')(Topics);\n\trequire('./topics/create')(Topics);\n\trequire('./topics/delete')(Topics);\n\trequire('./topics/unread')(Topics);\n\trequire('./topics/recent')(Topics);\n\trequire('./topics/popular')(Topics);\n\trequire('./topics/user')(Topics);\n\trequire('./topics/fork')(Topics);\n\trequire('./topics/posts')(Topics);\n\trequire('./topics/follow')(Topics);\n\trequire('./topics/tags')(Topics);\n\trequire('./topics/teaser')(Topics);\n\trequire('./topics/suggested')(Topics);\n\trequire('./topics/tools')(Topics);\n\trequire('./topics/thumb')(Topics);\n\n\tTopics.exists = function (tid, callback) {\n\t\tdb.isSortedSetMember('topics:tid', tid, callback);\n\t};\n\n\tTopics.getPageCount = function (tid, uid, callback) {\n\t\tTopics.getTopicField(tid, 'postcount', function (err, postCount) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tif (!parseInt(postCount, 10)) {\n\t\t\t\treturn callback(null, 1);\n\t\t\t}\n\t\t\tuser.getSettings(uid, function (err, settings) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\tcallback(null, Math.ceil((parseInt(postCount, 10) - 1) / settings.postsPerPage));\n\t\t\t});\n\t\t});\n\t};\n\n\tTopics.getTidPage = function (tid, uid, callback) {\n\t\tconsole.warn('[Topics.getTidPage] deprecated!');\n\t\tcallback(null, 1);\n\t};\n\n\tTopics.getTopicsFromSet = function (set, uid, start, stop, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.getSortedSetRevRange(set, start, stop, next);\n\t\t\t},\n\t\t\tfunction (tids, next) {\n\t\t\t\tTopics.getTopics(tids, uid, next);\n\t\t\t},\n\t\t\tfunction (topics, next) {\n\t\t\t\tnext(null, {topics: topics, nextStart: stop + 1});\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tTopics.getTopics = function (tids, uid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tprivileges.topics.filterTids('read', tids, uid, next);\n\t\t\t},\n\t\t\tfunction (tids, next) {\n\t\t\t\tTopics.getTopicsByTids(tids, uid, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tTopics.getTopicsByTids = function (tids, uid, callback) {\n\t\tif (!Array.isArray(tids) || !tids.length) {\n\t\t\treturn callback(null, []);\n\t\t}\n\n\t\tvar uids, cids, topics;\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tTopics.getTopicsData(tids, next);\n\t\t\t},\n\t\t\tfunction (_topics, next) {\n\t\t\t\tfunction mapFilter(array, field) {\n\t\t\t\t\treturn array.map(function (topic) {\n\t\t\t\t\t\treturn topic && topic[field] && topic[field].toString();\n\t\t\t\t\t}).filter(function (value, index, array) {\n\t\t\t\t\t\treturn utils.isNumber(value) && array.indexOf(value) === index;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\ttopics = _topics;\n\t\t\t\tuids = mapFilter(topics, 'uid');\n\t\t\t\tcids = mapFilter(topics, 'cid');\n\n\t\t\t\tasync.parallel({\n\t\t\t\t\tusers: function (next) {\n\t\t\t\t\t\tuser.getUsersFields(uids, ['uid', 'username', 'fullname', 'userslug', 'reputation', 'postcount', 'picture', 'signature', 'banned', 'status'], next);\n\t\t\t\t\t},\n\t\t\t\t\tcategories: function (next) {\n\t\t\t\t\t\tcategories.getCategoriesFields(cids, ['cid', 'name', 'slug', 'icon', 'image', 'bgColor', 'color', 'disabled'], next);\n\t\t\t\t\t},\n\t\t\t\t\thasRead: function (next) {\n\t\t\t\t\t\tTopics.hasReadTopics(tids, uid, next);\n\t\t\t\t\t},\n\t\t\t\t\tisIgnored: function (next) {\n\t\t\t\t\t\tTopics.isIgnoring(tids, uid, next);\n\t\t\t\t\t},\n\t\t\t\t\tbookmarks: function (next) {\n\t\t\t\t\t\tTopics.getUserBookmarks(tids, uid, next);\n\t\t\t\t\t},\n\t\t\t\t\tteasers: function (next) {\n\t\t\t\t\t\tTopics.getTeasers(topics, next);\n\t\t\t\t\t},\n\t\t\t\t\ttags: function (next) {\n\t\t\t\t\t\tTopics.getTopicsTagsObjects(tids, next);\n\t\t\t\t\t}\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tvar users = _.object(uids, results.users);\n\t\t\t\tvar categories = _.object(cids, results.categories);\n\n\t\t\t\tfor (var i = 0; i < topics.length; ++i) {\n\t\t\t\t\tif (topics[i]) {\n\t\t\t\t\t\ttopics[i].category = categories[topics[i].cid];\n\t\t\t\t\t\ttopics[i].user = users[topics[i].uid];\n\t\t\t\t\t\ttopics[i].teaser = results.teasers[i];\n\t\t\t\t\t\ttopics[i].tags = results.tags[i];\n\n\t\t\t\t\t\ttopics[i].isOwner = parseInt(topics[i].uid, 10) === parseInt(uid, 10);\n\t\t\t\t\t\ttopics[i].pinned = parseInt(topics[i].pinned, 10) === 1;\n\t\t\t\t\t\ttopics[i].locked = parseInt(topics[i].locked, 10) === 1;\n\t\t\t\t\t\ttopics[i].deleted = parseInt(topics[i].deleted, 10) === 1;\n\t\t\t\t\t\ttopics[i].ignored = results.isIgnored[i];\n\t\t\t\t\t\ttopics[i].unread = !results.hasRead[i] && !results.isIgnored[i];\n\t\t\t\t\t\ttopics[i].bookmark = results.bookmarks[i];\n\t\t\t\t\t\ttopics[i].unreplied = !topics[i].teaser;\n\n\t\t\t\t\t\ttopics[i].icons = [];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttopics = topics.filter(function (topic) {\n\t\t\t\t\treturn topic &&\ttopic.category && !topic.category.disabled;\n\t\t\t\t});\n\n\t\t\t\tplugins.fireHook('filter:topics.get', {topics: topics, uid: uid}, next);\n\t\t\t},\n\t\t\tfunction (data, next) {\n\t\t\t\tnext(null, data.topics);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tTopics.getTopicWithPosts = function (topicData, set, uid, start, stop, reverse, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\tposts: async.apply(getMainPostAndReplies, topicData, set, uid, start, stop, reverse),\n\t\t\t\t\tcategory: async.apply(Topics.getCategoryData, topicData.tid),\n\t\t\t\t\tthreadTools: async.apply(plugins.fireHook, 'filter:topic.thread_tools', {topic: topicData, uid: uid, tools: []}),\n\t\t\t\t\tisFollowing: async.apply(Topics.isFollowing, [topicData.tid], uid),\n\t\t\t\t\tisIgnoring: async.apply(Topics.isIgnoring, [topicData.tid], uid),\n\t\t\t\t\tbookmark: async.apply(Topics.getUserBookmark, topicData.tid, uid),\n\t\t\t\t\tpostSharing: async.apply(social.getActivePostSharing),\n\t\t\t\t\trelated: function (next) {\n\t\t\t\t\t\tasync.waterfall([\n\t\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\t\tTopics.getTopicTagsObjects(topicData.tid, next);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfunction (tags, next) {\n\t\t\t\t\t\t\t\ttopicData.tags = tags;\n\t\t\t\t\t\t\t\tTopics.getRelatedTopics(topicData, uid, next);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t], next);\n\t\t\t\t\t}\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\ttopicData.posts = results.posts;\n\t\t\t\ttopicData.category = results.category;\n\t\t\t\ttopicData.thread_tools = results.threadTools.tools;\n\t\t\t\ttopicData.isFollowing = results.isFollowing[0];\n\t\t\t\ttopicData.isNotFollowing = !results.isFollowing[0] && !results.isIgnoring[0];\n\t\t\t\ttopicData.isIgnoring = results.isIgnoring[0];\n\t\t\t\ttopicData.bookmark = results.bookmark;\n\t\t\t\ttopicData.postSharing = results.postSharing;\n\t\t\t\ttopicData.related = results.related || [];\n\n\t\t\t\ttopicData.unreplied = parseInt(topicData.postcount, 10) === 1;\n\t\t\t\ttopicData.deleted = parseInt(topicData.deleted, 10) === 1;\n\t\t\t\ttopicData.locked = parseInt(topicData.locked, 10) === 1;\n\t\t\t\ttopicData.pinned = parseInt(topicData.pinned, 10) === 1;\n\n\t\t\t\ttopicData.icons = [];\n\n\t\t\t\tplugins.fireHook('filter:topic.get', {topic: topicData, uid: uid}, next);\n\t\t\t},\n\t\t\tfunction (data, next) {\n\t\t\t\tnext(null, data.topic);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tfunction getMainPostAndReplies(topic, set, uid, start, stop, reverse, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tif (stop > 0) {\n\t\t\t\t\tstop--;\n\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\tstart --;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tposts.getPidsFromSet(set, start, stop, reverse, next);\n\t\t\t},\n\t\t\tfunction (pids, next) {\n\t\t\t\tif ((!Array.isArray(pids) || !pids.length) && !topic.mainPid) {\n\t\t\t\t\treturn callback(null, []);\n\t\t\t\t}\n\n\t\t\t\tif (topic.mainPid && start === 0) {\n\t\t\t\t\tpids.unshift(topic.mainPid);\n\t\t\t\t}\n\t\t\t\tposts.getPostsByPids(pids, uid, next);\n\t\t\t},\n\t\t\tfunction (posts, next) {\n\t\t\t\tif (!posts.length) {\n\t\t\t\t\treturn next(null, []);\n\t\t\t\t}\n\t\t\t\tvar replies = posts;\n\t\t\t\tif (topic.mainPid && start === 0) {\n\t\t\t\t\tposts[0].index = 0;\n\t\t\t\t\treplies = posts.slice(1);\n\t\t\t\t}\n\n\t\t\t\tTopics.calculatePostIndices(replies, start, stop, topic.postcount, reverse);\n\n\t\t\t\tTopics.addPostData(posts, uid, next);\n\t\t\t}\n\t\t], callback);\n\t}\n\n\tTopics.getMainPost = function (tid, uid, callback) {\n\t\tTopics.getMainPosts([tid], uid, function (err, mainPosts) {\n\t\t\tcallback(err, Array.isArray(mainPosts) && mainPosts.length ? mainPosts[0] : null);\n\t\t});\n\t};\n\n\tTopics.getMainPids = function (tids, callback) {\n\t\tif (!Array.isArray(tids) || !tids.length) {\n\t\t\treturn callback(null, []);\n\t\t}\n\n\t\tTopics.getTopicsFields(tids, ['mainPid'], function (err, topicData) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar mainPids = topicData.map(function (topic) {\n\t\t\t\treturn topic && topic.mainPid;\n\t\t\t});\n\t\t\tcallback(null, mainPids);\n\t\t});\n\t};\n\n\tTopics.getMainPosts = function (tids, uid, callback) {\n\t\tTopics.getMainPids(tids, function (err, mainPids) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tgetMainPosts(mainPids, uid, callback);\n\t\t});\n\t};\n\n\tfunction getMainPosts(mainPids, uid, callback) {\n\t\tposts.getPostsByPids(mainPids, uid, function (err, postData) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tpostData.forEach(function (post) {\n\t\t\t\tif (post) {\n\t\t\t\t\tpost.index = 0;\n\t\t\t\t}\n\t\t\t});\n\t\t\tTopics.addPostData(postData, uid, callback);\n\t\t});\n\t}\n\n\tTopics.getUserBookmark = function (tid, uid, callback) {\n\t\tdb.sortedSetScore('tid:' + tid + ':bookmarks', uid, callback);\n\t};\n\n\tTopics.getUserBookmarks = function (tids, uid, callback) {\n\t\tif (!parseInt(uid, 10)) {\n\t\t\treturn callback(null, tids.map(function () {\n\t\t\t\treturn null;\n\t\t\t}));\n\t\t}\n\t\tdb.sortedSetsScore(tids.map(function (tid) {\n\t\t\treturn 'tid:' + tid + ':bookmarks';\n\t\t}), uid, callback);\n\t};\n\n\tTopics.setUserBookmark = function (tid, uid, index, callback) {\n\t\tdb.sortedSetAdd('tid:' + tid + ':bookmarks', index, uid, callback);\n\t};\n\n\tTopics.isLocked = function (tid, callback) {\n\t\tTopics.getTopicField(tid, 'locked', function (err, locked) {\n\t\t\tcallback(err, parseInt(locked, 10) === 1);\n\t\t});\n\t};\n\n\tTopics.search = function (tid, term, callback) {\n\t\tif (plugins.hasListeners('filter:topic.search')) {\n\t\t\tplugins.fireHook('filter:topic.search', {\n\t\t\t\ttid: tid,\n\t\t\t\tterm: term\n\t\t\t}, callback);\n\t\t} else {\n\t\t\tcallback(new Error('no-plugins-available'), []);\n\t\t}\n\t};\n\n\tTopics.getTopicBookmarks = function (tid, callback) {\n\t\tdb.getSortedSetRangeWithScores(['tid:' + tid + ':bookmarks'], 0, -1, callback);\n\t};\n\n\tTopics.updateTopicBookmarks = function (tid, pids, callback) {\n\t\tvar maxIndex;\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tTopics.getPostCount(tid, next);\n\t\t\t},\n\t\t\tfunction (postcount, next) {\n\t\t\t\tmaxIndex = postcount;\n\t\t\t\tTopics.getTopicBookmarks(tid, next);\n\t\t\t},\n\t\t\tfunction (bookmarks, next) {\n\t\t\t\tvar forkedPosts = pids.map(function (pid) {\n\t\t\t\t\treturn {pid: pid, tid: tid};\n\t\t\t\t});\n\n\t\t\t\tvar uidData = bookmarks.map(function (bookmark) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tuid: bookmark.value,\n\t\t\t\t\t\tbookmark: bookmark.score\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\tasync.eachLimit(uidData, 50, function (data, next) {\n\t\t\t\t\tposts.getPostIndices(forkedPosts, data.uid, function (err, postIndices) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar bookmark = data.bookmark;\n\t\t\t\t\t\tbookmark = bookmark < maxIndex ? bookmark : maxIndex;\n\n\t\t\t\t\t\tfor (var i = 0; i < postIndices.length && postIndices[i] < data.bookmark; ++i) {\n\t\t\t\t\t\t\t--bookmark;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (parseInt(bookmark, 10) !== parseInt(data.bookmark, 10)) {\n\t\t\t\t\t\t\tTopics.setUserBookmark(tid, data.uid, bookmark, next);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnext();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}, next);\n\t\t\t}\n\t\t], function (err) {\n\t\t\tcallback(err);\n\t\t});\n\t};\n}(exports));\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/upgrade.js":"\"use strict\";\n\n/* globals console, require */\n\nvar db = require('./database'),\n\tasync = require('async'),\n\twinston = require('winston'),\n\n\tUpgrade = {},\n\n\tminSchemaDate = Date.UTC(2015, 10, 6),\t\t// This value gets updated every new MAJOR version\n\tschemaDate, thisSchemaDate,\n\n\t// IMPORTANT: REMEMBER TO UPDATE VALUE OF latestSchema\n\tlatestSchema = Date.UTC(2016, 10, 22);\n\nUpgrade.check = function (callback) {\n\tdb.get('schemaDate', function (err, value) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tif (!value) {\n\t\t\tdb.set('schemaDate', latestSchema, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\t\t\t\tcallback(null);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tvar schema_ok = parseInt(value, 10) >= latestSchema;\n\t\tcallback(!schema_ok ? new Error('schema-out-of-date') : null);\n\t});\n};\n\nUpgrade.update = function (schemaDate, callback) {\n\tdb.set('schemaDate', schemaDate, callback);\n};\n\nUpgrade.upgrade = function (callback) {\n\tvar updatesMade = false;\n\n\twinston.info('Beginning database schema update');\n\n\tasync.series([\n\t\tfunction (next) {\n\t\t\t// Prepare for upgrade & check to make sure the upgrade is possible\n\t\t\tdb.get('schemaDate', function (err, value) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn next(err);\n\t\t\t\t}\n\n\t\t\t\tif(!value) {\n\t\t\t\t\tdb.set('schemaDate', latestSchema, function () {\n\t\t\t\t\t\tnext();\n\t\t\t\t\t});\n\t\t\t\t\tschemaDate = latestSchema;\n\t\t\t\t} else {\n\t\t\t\t\tschemaDate = parseInt(value, 10);\n\t\t\t\t}\n\n\t\t\t\tif (schemaDate >= minSchemaDate) {\n\t\t\t\t\tnext();\n\t\t\t\t} else {\n\t\t\t\t\tnext(new Error('upgrade-not-possible'));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tfunction (next) {\n\t\t\tthisSchemaDate = Date.UTC(2015, 11, 15);\n\n\t\t\tif (schemaDate < thisSchemaDate) {\n\t\t\t\tupdatesMade = true;\n\t\t\t\twinston.info('[2015/12/15] Upgrading chats');\n\n\t\t\t\tdb.getObjectFields('global', ['nextMid', 'nextChatRoomId'], function (err, globalData) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar rooms = {};\n\t\t\t\t\tvar roomId = globalData.nextChatRoomId || 1;\n\t\t\t\t\tvar currentMid = 1;\n\n\t\t\t\t\tasync.whilst(function () {\n\t\t\t\t\t\treturn currentMid <= globalData.nextMid;\n\t\t\t\t\t}, function (next) {\n\t\t\t\t\t\tdb.getObject('message:' + currentMid, function (err, message) {\n\t\t\t\t\t\t\tfunction addMessageToUids(roomId, callback) {\n\t\t\t\t\t\t\t\tasync.parallel([\n\t\t\t\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\t\t\t\tdb.sortedSetAdd('uid:' + message.fromuid + ':chat:room:' + roomId + ':mids', msgTime, currentMid, next);\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\t\t\t\tdb.sortedSetAdd('uid:' + message.touid + ':chat:room:' + roomId + ':mids', msgTime, currentMid, next);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t], callback);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (err || !message)  {\n\t\t\t\t\t\t\t\twinston.info('skipping chat message ', currentMid);\n\t\t\t\t\t\t\t\tcurrentMid ++;\n\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar pairID = [parseInt(message.fromuid, 10), parseInt(message.touid, 10)].sort().join(':');\n\t\t\t\t\t\t\tvar msgTime = parseInt(message.timestamp, 10);\n\n\t\t\t\t\t\t\tif (rooms[pairID]) {\n\t\t\t\t\t\t\t\twinston.info('adding message ' + currentMid + ' to existing roomID ' + roomId);\n\t\t\t\t\t\t\t\taddMessageToUids(rooms[pairID], function (err) {\n\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcurrentMid ++;\n\t\t\t\t\t\t\t\t\tnext();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\twinston.info('adding message ' + currentMid + ' to new roomID ' + roomId);\n\t\t\t\t\t\t\t\tasync.parallel([\n\t\t\t\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\t\t\t\tdb.sortedSetAdd('uid:' + message.fromuid + ':chat:rooms', msgTime, roomId, next);\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\t\t\t\tdb.sortedSetAdd('uid:' + message.touid + ':chat:rooms', msgTime, roomId, next);\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\t\t\t\tdb.sortedSetAdd('chat:room:' + roomId + ':uids', [msgTime, msgTime + 1], [message.fromuid, message.touid], next);\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\t\t\t\taddMessageToUids(roomId, next);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t], function (err) {\n\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\trooms[pairID] = roomId;\n\t\t\t\t\t\t\t\t\troomId ++;\n\t\t\t\t\t\t\t\t\tcurrentMid ++;\n\t\t\t\t\t\t\t\t\tdb.setObjectField('global', 'nextChatRoomId', roomId, next);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}, function (err) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twinston.info('[2015/12/15] Chats upgrade done!');\n\t\t\t\t\t\tUpgrade.update(thisSchemaDate, next);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\twinston.info('[2015/12/15] Chats upgrade skipped!');\n\t\t\t\tnext();\n\t\t\t}\n\t\t},\n\t\tfunction (next) {\n\t\t\tthisSchemaDate = Date.UTC(2015, 11, 23);\n\n\t\t\tif (schemaDate < thisSchemaDate) {\n\t\t\t\tupdatesMade = true;\n\t\t\t\twinston.info('[2015/12/23] Upgrading chat room hashes');\n\n\t\t\t\tdb.getObjectField('global', 'nextChatRoomId', function (err, nextChatRoomId) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\t\t\t\t\tvar currentChatRoomId = 1;\n\t\t\t\t\tasync.whilst(function () {\n\t\t\t\t\t\treturn currentChatRoomId <= nextChatRoomId;\n\t\t\t\t\t}, function (next) {\n\t\t\t\t\t\tdb.getSortedSetRange('chat:room:' + currentChatRoomId + ':uids', 0, 0, function (err, uids) {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!Array.isArray(uids) || !uids.length || !uids[0]) {\n\t\t\t\t\t\t\t\t++ currentChatRoomId;\n\t\t\t\t\t\t\t\treturn next();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tdb.setObject('chat:room:' + currentChatRoomId, {owner: uids[0], roomId: currentChatRoomId}, function (err) {\n\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t++ currentChatRoomId;\n\t\t\t\t\t\t\t\tnext();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}, function (err) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twinston.info('[2015/12/23] Chats room hashes upgrade done!');\n\t\t\t\t\t\tUpgrade.update(thisSchemaDate, next);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\twinston.info('[2015/12/23] Chats room hashes upgrade skipped!');\n\t\t\t\tnext();\n\t\t\t}\n\t\t},\n\t\tfunction (next) {\n\t\t\tthisSchemaDate = Date.UTC(2016, 0, 11);\n\n\t\t\tif (schemaDate < thisSchemaDate) {\n\t\t\t\tupdatesMade = true;\n\t\t\t\twinston.info('[2015/12/23] Adding theme to active plugins sorted set');\n\n\t\t\t\tasync.waterfall([\n\t\t\t\t\tasync.apply(db.getObjectField, 'config', 'theme:id'),\n\t\t\t\t\tasync.apply(db.sortedSetAdd, 'plugins:active', 0)\n\t\t\t\t], function (err) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\n\t\t\t\t\twinston.info('[2015/12/23] Adding theme to active plugins sorted set done!');\n\t\t\t\t\tUpgrade.update(thisSchemaDate, next);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\twinston.info('[2015/12/23] Adding theme to active plugins sorted set skipped!');\n\t\t\t\tnext();\n\t\t\t}\n\t\t},\n\t\tfunction (next) {\n\t\t\tthisSchemaDate = Date.UTC(2016, 0, 14);\n\n\t\t\tif (schemaDate < thisSchemaDate) {\n\t\t\t\tupdatesMade = true;\n\t\t\t\twinston.info('[2016/01/14] Creating user best post sorted sets');\n\n\t\t\t\tvar batch = require('./batch');\n\n\t\t\t\tbatch.processSortedSet('posts:pid', function (ids, next) {\n\t\t\t\t\tasync.eachSeries(ids, function (id, next) {\n\t\t\t\t\t\tdb.getObjectFields('post:' + id, ['pid', 'uid', 'votes'], function (err, postData) {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!postData || !parseInt(postData.votes, 10) || !parseInt(postData.uid, 10)) {\n\t\t\t\t\t\t\t\treturn next();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\twinston.info('processing pid: ' + postData.pid + ' uid: ' + postData.uid + ' votes: ' + postData.votes);\n\t\t\t\t\t\t\tdb.sortedSetAdd('uid:' + postData.uid + ':posts:votes', postData.votes, postData.pid, next);\n\t\t\t\t\t\t});\n\t\t\t\t\t}, next);\n\t\t\t\t}, {}, function (err) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\t\t\t\t\twinston.info('[2016/01/14] Creating user best post sorted sets done!');\n\t\t\t\t\tUpgrade.update(thisSchemaDate, next);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\twinston.info('[2016/01/14] Creating user best post sorted sets skipped!');\n\t\t\t\tnext();\n\t\t\t}\n\t\t},\n\t\tfunction (next) {\n\t\t\tthisSchemaDate = Date.UTC(2016, 0, 20);\n\n\t\t\tif (schemaDate < thisSchemaDate) {\n\t\t\t\tupdatesMade = true;\n\t\t\t\twinston.info('[2016/01/20] Creating users:notvalidated');\n\n\t\t\t\tvar batch = require('./batch');\n\t\t\t\tvar now = Date.now();\n\t\t\t\tbatch.processSortedSet('users:joindate', function (ids, next) {\n\t\t\t\t\tasync.eachSeries(ids, function (id, next) {\n\t\t\t\t\t\tdb.getObjectFields('user:' + id, ['uid', 'email:confirmed'], function (err, userData) {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!userData || !parseInt(userData.uid, 10) || parseInt(userData['email:confirmed'], 10) === 1) {\n\t\t\t\t\t\t\t\treturn next();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\twinston.info('processing uid: ' + userData.uid + ' email:confirmed: ' + userData['email:confirmed']);\n\t\t\t\t\t\t\tdb.sortedSetAdd('users:notvalidated', now, userData.uid, next);\n\t\t\t\t\t\t});\n\t\t\t\t\t}, next);\n\t\t\t\t}, {}, function (err) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\t\t\t\t\twinston.info('[2016/01/20] Creating users:notvalidated done!');\n\t\t\t\t\tUpgrade.update(thisSchemaDate, next);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\twinston.info('[2016/01/20] Creating users:notvalidated skipped!');\n\t\t\t\tnext();\n\t\t\t}\n\t\t},\n\t\tfunction (next) {\n\t\t\tthisSchemaDate = Date.UTC(2016, 0, 23);\n\n\t\t\tif (schemaDate < thisSchemaDate) {\n\t\t\t\tupdatesMade = true;\n\t\t\t\twinston.info('[2016/01/23] Creating Global moderators group');\n\n\t\t\t\tvar groups = require('./groups');\n\t\t\t\tasync.waterfall([\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tgroups.exists('Global Moderators', next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (exists, next) {\n\t\t\t\t\t\tif (exists) {\n\t\t\t\t\t\t\treturn next(null, null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tgroups.create({\n\t\t\t\t\t\t\tname: 'Global Moderators',\n\t\t\t\t\t\t\tuserTitle: 'Global Moderator',\n\t\t\t\t\t\t\tdescription: 'Forum wide moderators',\n\t\t\t\t\t\t\thidden: 0,\n\t\t\t\t\t\t\tprivate: 1,\n\t\t\t\t\t\t\tdisableJoinRequests: 1\n\t\t\t\t\t\t}, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (groupData, next) {\n\t\t\t\t\t\tgroups.show('Global Moderators', next);\n\t\t\t\t\t}\n\t\t\t\t], function (err) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\n\t\t\t\t\twinston.info('[2016/01/23] Creating Global moderators group done!');\n\t\t\t\t\tUpgrade.update(thisSchemaDate, next);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\twinston.info('[2016/01/23] Creating Global moderators group skipped!');\n\t\t\t\tnext();\n\t\t\t}\n\t\t},\n\t\tfunction (next) {\n\t\t\tthisSchemaDate = Date.UTC(2016, 1, 25);\n\n\t\t\tif (schemaDate < thisSchemaDate) {\n\t\t\t\tupdatesMade = true;\n\t\t\t\twinston.info('[2016/02/25] Social: Post Sharing');\n\n\t\t\t\tvar social = require('./social');\n\t\t\t\tasync.parallel([\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tsocial.setActivePostSharingNetworks(['facebook', 'google', 'twitter'], next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.deleteObjectField('config', 'disableSocialButtons', next);\n\t\t\t\t\t}\n\t\t\t\t], function (err) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\n\t\t\t\t\twinston.info('[2016/02/25] Social: Post Sharing done!');\n\t\t\t\t\tUpgrade.update(thisSchemaDate, next);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\twinston.info('[2016/02/25] Social: Post Sharing skipped!');\n\t\t\t\tnext();\n\t\t\t}\n\t\t},\n\t\tfunction (next) {\n\t\t\tthisSchemaDate = Date.UTC(2016, 3, 14);\n\n\t\t\tif (schemaDate < thisSchemaDate) {\n\t\t\t\tupdatesMade = true;\n\t\t\t\twinston.info('[2016/04/14] Group title from settings to user profile');\n\n\t\t\t\tvar user = require('./user');\n\t\t\t\tvar batch = require('./batch');\n\t\t\t\tvar count = 0;\n\t\t\t\tbatch.processSortedSet('users:joindate', function (uids, next) {\n\t\t\t\t\twinston.info('upgraded ' + count + ' users');\n\t\t\t\t\tuser.getMultipleUserSettings(uids, function (err, settings) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcount += uids.length;\n\t\t\t\t\t\tsettings = settings.filter(function (setting) {\n\t\t\t\t\t\t\treturn setting && setting.groupTitle;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tasync.each(settings, function (setting, next) {\n\t\t\t\t\t\t\tdb.setObjectField('user:' + setting.uid, 'groupTitle', setting.groupTitle, next);\n\t\t\t\t\t\t}, next);\n\t\t\t\t\t});\n\t\t\t\t}, {}, function (err) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\n\t\t\t\t\twinston.info('[2016/04/14] Group title from settings to user profile done');\n\t\t\t\t\tUpgrade.update(thisSchemaDate, next);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\twinston.info('[2016/04/14] Group title from settings to user profile skipped!');\n\t\t\t\tnext();\n\t\t\t}\n\t\t},\n\t\tfunction (next) {\n\t\t\tthisSchemaDate = Date.UTC(2016, 3, 18);\n\n\t\t\tif (schemaDate < thisSchemaDate) {\n\t\t\t\tupdatesMade = true;\n\t\t\t\twinston.info('[2016/04/19] Users post count per tid');\n\n\t\t\t\tvar batch = require('./batch');\n\t\t\t\tvar topics = require('./topics');\n\t\t\t\tvar count = 0;\n\t\t\t\tbatch.processSortedSet('topics:tid', function (tids, next) {\n\t\t\t\t\twinston.info('upgraded ' + count + ' topics');\n\t\t\t\t\tcount += tids.length;\n\t\t\t\t\tasync.each(tids, function (tid, next) {\n\t\t\t\t\t\tdb.delete('tid:' + tid + ':posters', function (err) {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttopics.getPids(tid, function (err, pids) {\n\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (!pids.length) {\n\t\t\t\t\t\t\t\t\treturn next();\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tasync.eachSeries(pids, function (pid, next) {\n\t\t\t\t\t\t\t\t\tdb.getObjectField('post:' + pid, 'uid', function (err, uid) {\n\t\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (!parseInt(uid, 10)) {\n\t\t\t\t\t\t\t\t\t\t\treturn next();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tdb.sortedSetIncrBy('tid:' + tid + ':posters', 1, uid, next);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}, next);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}, next);\n\t\t\t\t}, {}, function (err) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\n\t\t\t\t\twinston.info('[2016/04/19] Users post count per tid done');\n\t\t\t\t\tUpgrade.update(thisSchemaDate, next);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\twinston.info('[2016/04/19] Users post count per tid skipped!');\n\t\t\t\tnext();\n\t\t\t}\n\t\t},\n\t\tfunction (next) {\n\t\t\tthisSchemaDate = Date.UTC(2016, 3, 29);\n\n\t\t\tif (schemaDate < thisSchemaDate) {\n\t\t\t\tupdatesMade = true;\n\t\t\t\twinston.info('[2016/04/29] Dismiss flags from deleted topics');\n\n\t\t\t\tvar posts = require('./posts'),\n\t\t\t\t\ttopics = require('./topics');\n\n\t\t\t\tvar pids, tids;\n\n\t\t\t\tasync.waterfall([\n\t\t\t\t\tasync.apply(db.getSortedSetRange, 'posts:flagged', 0, -1),\n\t\t\t\t\tfunction (_pids, next) {\n\t\t\t\t\t\tpids = _pids;\n\t\t\t\t\t\tposts.getPostsFields(pids, ['tid'], next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (_tids, next) {\n\t\t\t\t\t\ttids = _tids.map(function (a) {\n\t\t\t\t\t\t\treturn a.tid;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\ttopics.getTopicsFields(tids, ['deleted'], next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (state, next) {\n\t\t\t\t\t\tvar toDismiss = state.map(function (a, idx) {\n\t\t\t\t\t\t\treturn parseInt(a.deleted, 10) === 1 ? pids[idx] : null;\n\t\t\t\t\t\t}).filter(Boolean);\n\n\t\t\t\t\t\twinston.info('[2016/04/29] ' + toDismiss.length + ' dismissable flags found');\n\t\t\t\t\t\tasync.each(toDismiss, posts.dismissFlag, next);\n\t\t\t\t\t}\n\t\t\t\t], function (err) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\n\t\t\t\t\twinston.info('[2016/04/29] Dismiss flags from deleted topics done');\n\t\t\t\t\tUpgrade.update(thisSchemaDate, next);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\twinston.info('[2016/04/29] Dismiss flags from deleted topics skipped!');\n\t\t\t\tnext();\n\t\t\t}\n\t\t},\n\t\tfunction (next) {\n\t\t\tthisSchemaDate = Date.UTC(2016, 4, 28);\n\n\t\t\tif (schemaDate < thisSchemaDate) {\n\t\t\t\tupdatesMade = true;\n\t\t\t\twinston.info('[2016/05/28] Giving topics:read privs to any group that was previously allowed to Find & Access Category');\n\n\t\t\t\tvar groupsAPI = require('./groups');\n\t\t\t\tvar privilegesAPI = require('./privileges');\n\n\t\t\t\tdb.getSortedSetRange('categories:cid', 0, -1, function (err, cids) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tasync.eachSeries(cids, function (cid, next) {\n\t\t\t\t\t\tprivilegesAPI.categories.list(cid, function (err, data) {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar groups = data.groups;\n\t\t\t\t\t\t\tvar users = data.users;\n\n\t\t\t\t\t\t\tasync.waterfall([\n\t\t\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\t\t\tasync.eachSeries(groups, function (group, next) {\n\t\t\t\t\t\t\t\t\t\tif (group.privileges['groups:read']) {\n\t\t\t\t\t\t\t\t\t\t\treturn groupsAPI.join('cid:' + cid + ':privileges:groups:topics:read', group.name, function (err) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\t\t\t\t\t\t\twinston.info('cid:' + cid + ':privileges:groups:topics:read granted to gid: ' + group.name);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tnext(null);\n\t\t\t\t\t\t\t\t\t}, next);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\t\t\tasync.eachSeries(users, function (user, next) {\n\t\t\t\t\t\t\t\t\t\tif (user.privileges.read) {\n\t\t\t\t\t\t\t\t\t\t\treturn groupsAPI.join('cid:' + cid + ':privileges:topics:read', user.uid, function (err) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\t\t\t\t\t\t\twinston.info('cid:' + cid + ':privileges:topics:read granted to uid: ' + user.uid);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tnext(null);\n\t\t\t\t\t\t\t\t\t}, next);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t], function (err) {\n\t\t\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\t\t\twinston.info('-- cid ' + cid + ' upgraded');\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tnext(err);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}, function (err) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twinston.info('[2016/05/28] Giving topics:read privs to any group that was previously allowed to Find & Access Category - done');\n\t\t\t\t\t\tUpgrade.update(thisSchemaDate, next);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\twinston.info('[2016/05/28] Giving topics:read privs to any group that was previously allowed to Find & Access Category - skipped!');\n\t\t\t\tnext();\n\t\t\t}\n\t\t},\n\t\tfunction (next) {\n\t\t\tthisSchemaDate = Date.UTC(2016, 5, 13);\n\n\t\t\tif (schemaDate < thisSchemaDate) {\n\t\t\t\tupdatesMade = true;\n\t\t\t\twinston.info('[2016/06/13] Store upvotes/downvotes separately');\n\n\t\t\t\tvar batch = require('./batch');\n\t\t\t\tvar posts = require('./posts');\n\t\t\t\tvar count = 0;\n\t\t\t\tbatch.processSortedSet('posts:pid', function (pids, next) {\n\t\t\t\t\twinston.info('upgraded ' + count + ' posts');\n\t\t\t\t\tcount += pids.length;\n\t\t\t\t\tasync.each(pids, function (pid, next) {\n\t\t\t\t\t\tasync.parallel({\n\t\t\t\t\t\t\tupvotes: function (next) {\n\t\t\t\t\t\t\t\tdb.setCount('pid:' + pid + ':upvote', next);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdownvotes: function (next) {\n\t\t\t\t\t\t\t\tdb.setCount('pid:' + pid + ':downvote', next);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, function (err, results) {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar data = {};\n\n\t\t\t\t\t\t\tif (parseInt(results.upvotes, 10) > 0) {\n\t\t\t\t\t\t\t\tdata.upvotes = results.upvotes;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (parseInt(results.downvotes, 10) > 0) {\n\t\t\t\t\t\t\t\tdata.downvotes = results.downvotes;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (Object.keys(data).length) {\n\t\t\t\t\t\t\t\tposts.setPostFields(pid, data, next);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tnext();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, next);\n\t\t\t\t\t}, next);\n\t\t\t\t}, {}, function (err) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\n\t\t\t\t\twinston.info('[2016/06/13] Store upvotes/downvotes separately done');\n\t\t\t\t\tUpgrade.update(thisSchemaDate, next);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\twinston.info('[2016/06/13] Store upvotes/downvotes separately skipped!');\n\t\t\t\tnext();\n\t\t\t}\n\t\t},\n\t\tfunction (next) {\n\t\t\tthisSchemaDate = Date.UTC(2016, 6, 12);\n\n\t\t\tif (schemaDate < thisSchemaDate) {\n\t\t\t\tupdatesMade = true;\n\t\t\t\twinston.info('[2016/07/12] Giving upload privileges');\n\t\t\t\tvar privilegesAPI = require('./privileges');\n\t\t\t\tvar meta = require('./meta');\n\n\t\t\t\tdb.getSortedSetRange('categories:cid', 0, -1, function (err, cids) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tasync.eachSeries(cids, function (cid, next) {\n\t\t\t\t\t\tprivilegesAPI.categories.list(cid, function (err, data) {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tasync.eachSeries(data.groups, function (group, next) {\n\t\t\t\t\t\t\t\tif (group.name === 'guests' && parseInt(meta.config.allowGuestUploads, 10) !== 1) {\n\t\t\t\t\t\t\t\t\treturn next();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (group.privileges['groups:read']) {\n\t\t\t\t\t\t\t\t\tprivilegesAPI.categories.give(['upload:post:image'], cid, group.name, next);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnext();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, next);\n\t\t\t\t\t\t});\n\t\t\t\t\t}, function (err) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twinston.info('[2016/07/12] Upload privileges done');\n\t\t\t\t\t\tUpgrade.update(thisSchemaDate, next);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\twinston.info('[2016/07/12] Upload privileges skipped!');\n\t\t\t\tnext();\n\t\t\t}\n\t\t},\n\t\tfunction (next) {\n\t\t\tthisSchemaDate = Date.UTC(2016, 7, 5);\n\n\t\t\tif (schemaDate < thisSchemaDate) {\n\t\t\t\tupdatesMade = true;\n\t\t\t\twinston.info('[2016/08/05] Removing best posts with negative scores');\n\t\t\t\tvar batch = require('./batch');\n\t\t\t\tbatch.processSortedSet('users:joindate', function (ids, next) {\n\t\t\t\t\tasync.each(ids, function (id, next) {\n\t\t\t\t\t\tconsole.log('processing uid ' + id);\n\t\t\t\t\t\tdb.sortedSetsRemoveRangeByScore(['uid:' + id + ':posts:votes'], '-inf', 0, next);\n\t\t\t\t\t}, next);\n\t\t\t\t}, {}, function (err) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\t\t\t\t\twinston.info('[2016/08/05] Removing best posts with negative scores done!');\n\t\t\t\t\tUpgrade.update(thisSchemaDate, next);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\twinston.info('[2016/08/05] Removing best posts with negative scores skipped!');\n\t\t\t\tnext();\n\t\t\t}\n\t\t},\n\t\tfunction (next) {\n\t\t\tthisSchemaDate = Date.UTC(2016, 8, 7);\n\n\t\t\tif (schemaDate < thisSchemaDate) {\n\t\t\t\tupdatesMade = true;\n\t\t\t\twinston.info('[2016/08/07] Granting edit/delete/delete topic on existing categories');\n\n\t\t\t\tvar groupsAPI = require('./groups');\n\t\t\t\tvar privilegesAPI = require('./privileges');\n\n\t\t\t\tdb.getSortedSetRange('categories:cid', 0, -1, function (err, cids) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tasync.eachSeries(cids, function (cid, next) {\n\t\t\t\t\t\tprivilegesAPI.categories.list(cid, function (err, data) {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar groups = data.groups;\n\t\t\t\t\t\t\tvar users = data.users;\n\n\t\t\t\t\t\t\tasync.waterfall([\n\t\t\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\t\t\tasync.eachSeries(groups, function (group, next) {\n\t\t\t\t\t\t\t\t\t\tif (group.privileges['groups:topics:reply']) {\n\t\t\t\t\t\t\t\t\t\t\treturn async.parallel([\n\t\t\t\t\t\t\t\t\t\t\t\tasync.apply(groupsAPI.join, 'cid:' + cid + ':privileges:groups:posts:edit', group.name),\n\t\t\t\t\t\t\t\t\t\t\t\tasync.apply(groupsAPI.join, 'cid:' + cid + ':privileges:groups:posts:delete', group.name)\n\t\t\t\t\t\t\t\t\t\t\t], function (err) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\t\t\t\t\t\t\twinston.info('cid:' + cid + ':privileges:groups:posts:edit, cid:' + cid + ':privileges:groups:posts:delete granted to gid: ' + group.name);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tnext(null);\n\t\t\t\t\t\t\t\t\t}, next);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\t\t\tasync.eachSeries(groups, function (group, next) {\n\t\t\t\t\t\t\t\t\t\tif (group.privileges['groups:topics:create']) {\n\t\t\t\t\t\t\t\t\t\t\treturn groupsAPI.join('cid:' + cid + ':privileges:groups:topics:delete', group.name, function (err) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\t\t\t\t\t\t\twinston.info('cid:' + cid + ':privileges:groups:topics:delete granted to gid: ' + group.name);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tnext(null);\n\t\t\t\t\t\t\t\t\t}, next);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\t\t\tasync.eachSeries(users, function (user, next) {\n\t\t\t\t\t\t\t\t\t\tif (user.privileges['topics:reply']) {\n\t\t\t\t\t\t\t\t\t\t\treturn async.parallel([\n\t\t\t\t\t\t\t\t\t\t\t\tasync.apply(groupsAPI.join, 'cid:' + cid + ':privileges:posts:edit', user.uid),\n\t\t\t\t\t\t\t\t\t\t\t\tasync.apply(groupsAPI.join, 'cid:' + cid + ':privileges:posts:delete', user.uid)\n\t\t\t\t\t\t\t\t\t\t\t], function (err) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\t\t\t\t\t\t\twinston.info('cid:' + cid + ':privileges:posts:edit, cid:' + cid + ':privileges:posts:delete granted to uid: ' + user.uid);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tnext(null);\n\t\t\t\t\t\t\t\t\t}, next);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\t\t\tasync.eachSeries(users, function (user, next) {\n\t\t\t\t\t\t\t\t\t\tif (user.privileges['topics:create']) {\n\t\t\t\t\t\t\t\t\t\t\treturn groupsAPI.join('cid:' + cid + ':privileges:topics:delete', user.uid, function (err) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\t\t\t\t\t\t\twinston.info('cid:' + cid + ':privileges:topics:delete granted to uid: ' + user.uid);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tnext(null);\n\t\t\t\t\t\t\t\t\t}, next);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t], function (err) {\n\t\t\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\t\t\twinston.info('-- cid ' + cid + ' upgraded');\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tnext(err);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}, function (err) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twinston.info('[2016/08/07] Granting edit/delete/delete topic on existing categories - done');\n\t\t\t\t\t\tUpgrade.update(thisSchemaDate, next);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\twinston.info('[2016/08/07] Granting edit/delete/delete topic on existing categories - skipped!');\n\t\t\t\tnext();\n\t\t\t}\n\t\t},\n\t\tfunction (next) {\n\t\t\tthisSchemaDate = Date.UTC(2016, 8, 22);\n\n\t\t\tif (schemaDate < thisSchemaDate) {\n\t\t\t\tupdatesMade = true;\n\t\t\t\twinston.info('[2016/09/22] Setting category recent tids');\n\n\n\t\t\t\tdb.getSortedSetRange('categories:cid', 0, -1, function (err, cids) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tasync.eachSeries(cids, function (cid, next) {\n\t\t\t\t\t\tdb.getSortedSetRevRange('cid:' + cid + ':pids', 0, 0, function (err, pid) {\n\t\t\t\t\t\t\tif (err || !pid) {\n\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdb.getObjectFields('post:' + pid, ['tid', 'timestamp'], function (err, postData) {\n\t\t\t\t\t\t\t\tif (err || !postData || !postData.tid) {\n\t\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdb.sortedSetAdd('cid:' + cid + ':recent_tids', postData.timestamp, postData.tid, next);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}, function (err) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twinston.info('[2016/09/22] Setting category recent tids - done');\n\t\t\t\t\t\tUpgrade.update(thisSchemaDate, next);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\twinston.info('[2016/09/22] Setting category recent tids - skipped!');\n\t\t\t\tnext();\n\t\t\t}\n\t\t},\n\t\tfunction (next) {\n\t\t\tfunction upgradePosts(next) {\n\t\t\t\tvar batch = require('./batch');\n\n\t\t\t\tbatch.processSortedSet('posts:pid', function (ids, next) {\n\t\t\t\t\tasync.each(ids, function (id, next) {\n\t\t\t\t\t\tconsole.log('processing pid ' + id);\n\t\t\t\t\t\tasync.waterfall([\n\t\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\t\tdb.rename('pid:' + id + ':users_favourited', 'pid:' + id + ':users_bookmarked', next);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\t\tdb.getObjectField('post:' + id, 'reputation', next);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfunction (reputation, next) {\n\t\t\t\t\t\t\t\tif (parseInt(reputation, 10)) {\n\t\t\t\t\t\t\t\t\tdb.setObjectField('post:' + id, 'bookmarks', reputation, next);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnext();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\t\tdb.deleteObjectField('post:' + id, 'reputation', next);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t], next);\n\t\t\t\t\t}, next);\n\t\t\t\t}, {}, next);\n\t\t\t}\n\n\t\t\tfunction upgradeUsers(next) {\n\t\t\t\tvar batch = require('./batch');\n\n\t\t\t\tbatch.processSortedSet('users:joindate', function (ids, next) {\n\t\t\t\t\tasync.each(ids, function (id, next) {\n\t\t\t\t\t\tconsole.log('processing uid ' + id);\n\t\t\t\t\t\tdb.rename('uid:' + id + ':favourites', 'uid:' + id + ':bookmarks', next);\n\t\t\t\t\t}, next);\n\t\t\t\t}, {}, next);\n\t\t\t}\n\n\t\t\tthisSchemaDate = Date.UTC(2016, 9, 8);\n\n\t\t\tif (schemaDate < thisSchemaDate) {\n\t\t\t\tupdatesMade = true;\n\t\t\t\twinston.info('[2016/10/8] favourite -> bookmark refactor');\n\t\t\t\tasync.series([upgradePosts, upgradeUsers], function (err) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\t\t\t\t\twinston.info('[2016/08/05] favourite- bookmark refactor done!');\n\t\t\t\t\tUpgrade.update(thisSchemaDate, next);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\twinston.info('[2016/10/8] favourite -> bookmark refactor - skipped!');\n\t\t\t\tnext();\n\t\t\t}\n\t\t},\n\t\tfunction (next) {\n\t\t\tthisSchemaDate = Date.UTC(2016, 9, 14);\n\n\t\t\tif (schemaDate < thisSchemaDate) {\n\t\t\t\tupdatesMade = true;\n\t\t\t\twinston.info('[2016/10/14] Creating sorted sets for post replies');\n\n\t\t\t\tvar posts = require('./posts');\n\t\t\t\tvar batch = require('./batch');\n\t\t\t\tbatch.processSortedSet('posts:pid', function (ids, next) {\n\t\t\t\t\tposts.getPostsFields(ids, ['pid', 'toPid', 'timestamp'], function (err, data) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tasync.eachSeries(data, function (postData, next) {\n\t\t\t\t\t\t\tif (!parseInt(postData.toPid, 10)) {\n\t\t\t\t\t\t\t\treturn next(null);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconsole.log('processing pid: ' + postData.pid + ' toPid: ' + postData.toPid);\n\t\t\t\t\t\t\tasync.parallel([\n\t\t\t\t\t\t\t\tasync.apply(db.sortedSetAdd, 'pid:' + postData.toPid + ':replies', postData.timestamp, postData.pid),\n\t\t\t\t\t\t\t\tasync.apply(db.incrObjectField, 'post:' + postData.toPid, 'replies')\n\t\t\t\t\t\t\t], next);\n\t\t\t\t\t\t}, next);\n\t\t\t\t\t});\n\t\t\t\t}, function (err) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\n\t\t\t\t\twinston.info('[2016/10/14] Creating sorted sets for post replies - done');\n\t\t\t\t\tUpgrade.update(thisSchemaDate, next);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\twinston.info('[2016/10/14] Creating sorted sets for post replies - skipped!');\n\t\t\t\tnext();\n\t\t\t}\n\t\t},\n\t\tfunction (next) {\n\t\t\tthisSchemaDate = Date.UTC(2016, 10, 22);\n\n\t\t\tif (schemaDate < thisSchemaDate) {\n\t\t\t\tupdatesMade = true;\n\t\t\t\twinston.info('[2016/11/22] Update global and user language keys');\n\n\t\t\t\tvar user = require('./user');\n\t\t\t\tvar meta = require('./meta');\n\t\t\t\tvar batch = require('./batch');\n\t\t\t\tvar newLanguage;\n\t\t\t\tvar i = 0;\n\t\t\t\tvar j = 0;\n\t\t\t\tasync.parallel([\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tmeta.configs.get('defaultLang', function (err, defaultLang) {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (!defaultLang) {\n\t\t\t\t\t\t\t\treturn setImmediate(next);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tnewLanguage = defaultLang.replace('_', '-').replace('@', '-x-');\n\t\t\t\t\t\t\tif (newLanguage !== defaultLang) {\n\t\t\t\t\t\t\t\tmeta.configs.set('defaultLang', newLanguage, next);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsetImmediate(next);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tbatch.processSortedSet('users:joindate', function (ids, next) {\n\t\t\t\t\t\t\tasync.each(ids, function (uid, next) {\n\t\t\t\t\t\t\t\tasync.waterfall([\n\t\t\t\t\t\t\t\t\tasync.apply(db.getObjectField, 'user:' + uid + ':settings', 'userLang'),\n\t\t\t\t\t\t\t\t\tfunction (language, next) {\n\t\t\t\t\t\t\t\t\t\t++i;\n\t\t\t\t\t\t\t\t\t\tif (!language) {\n\t\t\t\t\t\t\t\t\t\t\treturn setImmediate(next);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tnewLanguage = language.replace('_', '-').replace('@', '-x-');\n\t\t\t\t\t\t\t\t\t\tif (newLanguage !== language) {\n\t\t\t\t\t\t\t\t\t\t\t++j;\n\t\t\t\t\t\t\t\t\t\t\tuser.setSetting(uid, 'userLang', newLanguage, next);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tsetImmediate(next);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t], next);\n\t\t\t\t\t\t\t}, next);\n\t\t\t\t\t\t}, next);\n\t\t\t\t\t}\n\t\t\t\t], function (err) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\n\t\t\t\t\twinston.info('[2016/11/22] Update global and user language keys - done (' + i + ' processed, ' + j + ' updated)');\n\t\t\t\t\tUpgrade.update(thisSchemaDate, next);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\twinston.info('[2016/11/22] Update global and user language keys - skipped!');\n\t\t\t\tnext();\n\t\t\t}\n\t\t},\n\t\tfunction (next) {\n\t\t\tthisSchemaDate = Date.UTC(2016, 10, 25);\n\n\t\t\tif (schemaDate < thisSchemaDate) {\n\t\t\t\tupdatesMade = true;\n\t\t\t\twinston.info('[2016/11/25] Creating sorted sets for pinned topcis');\n\n\t\t\t\tvar topics = require('./topics');\n\t\t\t\tvar batch = require('./batch');\n\t\t\t\tbatch.processSortedSet('topics:tid', function (ids, next) {\n\t\t\t\t\ttopics.getTopicsFields(ids, ['tid', 'cid', 'pinned', 'lastposttime'], function (err, data) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdata = data.filter(function (topicData) {\n\t\t\t\t\t\t\treturn parseInt(topicData.pinned, 10) === 1;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tasync.eachSeries(data, function (topicData, next) {\n\t\t\t\t\t\t\tconsole.log('processing tid: ' + topicData.tid);\n\n\t\t\t\t\t\t\tasync.parallel([\n\t\t\t\t\t\t\t\tasync.apply(db.sortedSetAdd, 'cid:' + topicData.cid + ':tids:pinned', Date.now(), topicData.tid),\n\t\t\t\t\t\t\t\tasync.apply(db.sortedSetRemove, 'cid:' + topicData.cid + ':tids', topicData.tid),\n\t\t\t\t\t\t\t\tasync.apply(db.sortedSetRemove, 'cid:' + topicData.cid + ':tids:posts', topicData.tid)\n\t\t\t\t\t\t\t], next);\n\t\t\t\t\t\t}, next);\n\t\t\t\t\t});\n\t\t\t\t}, function (err) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\n\t\t\t\t\twinston.info('[2016/11/25] Creating sorted sets for pinned topics - done');\n\t\t\t\t\tUpgrade.update(thisSchemaDate, next);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\twinston.info('[2016/11/25] Creating sorted sets for pinned topics - skipped!');\n\t\t\t\tnext();\n\t\t\t}\n\t\t},\n\t\t// Add new schema updates here\n\t\t// IMPORTANT: REMEMBER TO UPDATE VALUE OF latestSchema IN LINE 24!!!\n\t], function (err) {\n\t\tif (!err) {\n\t\t\tif(updatesMade) {\n\t\t\t\twinston.info('[upgrade] Schema update complete!');\n\t\t\t} else {\n\t\t\t\twinston.info('[upgrade] Schema already up to date!');\n\t\t\t}\n\t\t} else {\n\t\t\tswitch(err.message) {\n\t\t\tcase 'upgrade-not-possible':\n\t\t\t\twinston.error('[upgrade] NodeBB upgrade could not complete, as your database schema is too far out of date.');\n\t\t\t\twinston.error('[upgrade]   Please ensure that you did not skip any minor version upgrades.');\n\t\t\t\twinston.error('[upgrade]   (e.g. v0.1.x directly to v0.3.x)');\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\twinston.error('[upgrade] Errors were encountered while updating the NodeBB schema: ' + err.message);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (typeof callback === 'function') {\n\t\t\tcallback(err);\n\t\t} else {\n\t\t\tprocess.exit();\n\t\t}\n\t});\n};\n\nmodule.exports = Upgrade;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/webserver.js":"\n'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\nvar nconf = require('nconf');\nvar express = require('express');\nvar app = express();\nvar server;\nvar winston = require('winston');\nvar async = require('async');\nvar flash = require('connect-flash');\nvar compression = require('compression');\nvar bodyParser = require('body-parser');\nvar cookieParser = require('cookie-parser');\nvar session = require('express-session');\nvar useragent = require('express-useragent');\nvar favicon = require('serve-favicon');\n\nvar db = require('./database');\nvar file = require('./file');\nvar emailer = require('./emailer');\nvar meta = require('./meta');\nvar languages = require('./languages');\nvar logger = require('./logger');\nvar plugins = require('./plugins');\nvar routes = require('./routes');\nvar auth = require('./routes/authentication');\nvar templates = require('templates.js');\n\nvar helpers = require('../public/src/modules/helpers');\n\nif (nconf.get('ssl')) {\n\tserver = require('https').createServer({\n\t\tkey: fs.readFileSync(nconf.get('ssl').key),\n\t\tcert: fs.readFileSync(nconf.get('ssl').cert)\n\t}, app);\n} else {\n\tserver = require('http').createServer(app);\n}\n\nmodule.exports.server = server;\n\nserver.on('error', function (err) {\n\twinston.error(err);\n\tif (err.code === 'EADDRINUSE') {\n\t\twinston.error('NodeBB address in use, exiting...');\n\t\tprocess.exit(0);\n\t} else {\n\t\tthrow err;\n\t}\n});\n\nmodule.exports.listen = function (callback) {\n\tcallback = callback || function () {};\n\temailer.registerApp(app);\n\n\tsetupExpressApp(app);\n\n\thelpers.register();\n\n\tlogger.init(app);\n\n\tinitializeNodeBB(function (err) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\twinston.info('NodeBB Ready');\n\n\t\trequire('./socket.io').server.emit('event:nodebb.ready', {\n\t\t\t'cache-buster': meta.config['cache-buster']\n\t\t});\n\n\t\tplugins.fireHook('action:nodebb.ready');\n\n\t\tlisten(callback);\n\t});\n};\n\nfunction initializeNodeBB(callback) {\n\twinston.info('initializing NodeBB ...');\n\tvar middleware = require('./middleware');\n\n\tasync.waterfall([\n\t\tasync.apply(meta.themes.setupPaths),\n\t\tfunction (next) {\n\t\t\tplugins.init(app, middleware, next);\n\t\t},\n\t\tasync.apply(plugins.fireHook, 'static:assets.prepare', {}),\n\t\tasync.apply(meta.js.bridgeModules, app),\n\t\tfunction (next) {\n\t\t\tplugins.fireHook('static:app.preload', {\n\t\t\t\tapp: app,\n\t\t\t\tmiddleware: middleware\n\t\t\t}, next);\n\t\t},\n\t\tfunction (next) {\n\t\t\tplugins.fireHook('filter:hotswap.prepare', [], next);\n\t\t},\n\t\tfunction (hotswapIds, next) {\n\t\t\troutes(app, middleware, hotswapIds);\n\t\t\tnext();\n\t\t},\n\t\tfunction (next) {\n\t\t\tasync.series([\n\t\t\t\tasync.apply(meta.js.getFromFile, 'nodebb.min.js'),\n\t\t\t\tasync.apply(meta.js.getFromFile, 'acp.min.js'),\n\t\t\t\tasync.apply(meta.css.getFromFile),\n\t\t\t\tasync.apply(meta.sounds.init),\n\t\t\t\tasync.apply(languages.init),\n\t\t\t\tasync.apply(meta.blacklist.load)\n\t\t\t], next);\n\t\t}\n\t], callback);\n}\n\nfunction setupExpressApp(app) {\n\tvar middleware = require('./middleware');\n\n\tvar relativePath = nconf.get('relative_path');\n\n\tapp.engine('tpl', templates.__express);\n\tapp.set('view engine', 'tpl');\n\tapp.set('views', nconf.get('views_dir'));\n\tapp.set('json spaces', process.env.NODE_ENV === 'development' ? 4 : 0);\n\tapp.use(flash());\n\n\tapp.enable('view cache');\n\n\tif (global.env !== 'development') {\n\t\tapp.enable('cache');\n\t\tapp.enable('minification');\n\t}\n\n\tapp.use(compression());\n\n\tsetupFavicon(app);\n\n\tapp.use(relativePath + '/apple-touch-icon', middleware.routeTouchIcon);\n\n\tapp.use(bodyParser.urlencoded({extended: true}));\n\tapp.use(bodyParser.json());\n\tapp.use(cookieParser());\n\tapp.use(useragent.express());\n\n\tapp.use(session({\n\t\tstore: db.sessionStore,\n\t\tsecret: nconf.get('secret'),\n\t\tkey: nconf.get('sessionKey'),\n\t\tcookie: setupCookie(),\n\t\tresave: true,\n\t\tsaveUninitialized: true\n\t}));\n\n\tapp.use(middleware.addHeaders);\n\tapp.use(middleware.processRender);\n\tauth.initialize(app, middleware);\n\n\tvar toobusy = require('toobusy-js');\n\ttoobusy.maxLag(parseInt(meta.config.eventLoopLagThreshold, 10) || 100);\n\ttoobusy.interval(parseInt(meta.config.eventLoopInterval, 10) || 500);\n}\n\nfunction setupFavicon(app) {\n\tvar faviconPath = path.join(nconf.get('base_dir'), 'public', meta.config['brand:favicon'] ? meta.config['brand:favicon'] : 'favicon.ico');\n\tif (file.existsSync(faviconPath)) {\n\t\tapp.use(nconf.get('relative_path'), favicon(faviconPath));\n\t}\n}\n\nfunction setupCookie() {\n\tvar cookie = {\n\t\tmaxAge: 1000 * 60 * 60 * 24 * (parseInt(meta.config.loginDays, 10) || 14)\n\t};\n\n\tif (nconf.get('cookieDomain') || meta.config.cookieDomain) {\n\t\tcookie.domain = nconf.get('cookieDomain') || meta.config.cookieDomain;\n\t}\n\n\tif (nconf.get('secure')) {\n\t\tcookie.secure = true;\n\t}\n\n\tvar relativePath = nconf.get('relative_path');\n\tif (relativePath !== '') {\n\t\tcookie.path = relativePath;\n\t}\n\n\treturn cookie;\n}\n\nfunction listen(callback) {\n\tcallback = callback || function () {};\n\tvar port = parseInt(nconf.get('port'), 10);\n\tvar isSocket = isNaN(port);\n\tvar socketPath = isSocket ? nconf.get('port') : '';\n\n\tif (Array.isArray(port)) {\n\t\tif (!port.length) {\n\t\t\twinston.error('[startup] empty ports array in config.json');\n\t\t\tprocess.exit();\n\t\t}\n\n\t\twinston.warn('[startup] If you want to start nodebb on multiple ports please use loader.js');\n\t\twinston.warn('[startup] Defaulting to first port in array, ' + port[0]);\n\t\tport = port[0];\n\t\tif (!port) {\n\t\t\twinston.error('[startup] Invalid port, exiting');\n\t\t\tprocess.exit();\n\t\t}\n\t}\n\n\tif ((port !== 80 && port !== 443) || nconf.get('trust_proxy') === true) {\n\t\twinston.info('Enabling \\'trust proxy\\'');\n\t\tapp.enable('trust proxy');\n\t}\n\n\tif ((port === 80 || port === 443) && process.env.NODE_ENV !== 'development') {\n\t\twinston.info('Using ports 80 and 443 is not recommend; use a proxy instead. See README.md');\n\t}\n\n\tvar bind_address = ((nconf.get('bind_address') === \"0.0.0.0\" || !nconf.get('bind_address')) ? '0.0.0.0' : nconf.get('bind_address'));\n\tvar args = isSocket ? [socketPath] : [port, bind_address];\n\tvar oldUmask;\n\n\targs.push(function (err) {\n\t\tif (err) {\n\t\t\twinston.info('[startup] NodeBB was unable to listen on: ' + bind_address + ':' + port);\n\t\t\tprocess.exit();\n\t\t}\n\n\t\twinston.info('NodeBB is now listening on: ' + (isSocket ? socketPath : bind_address + ':' + port));\n\t\tif (oldUmask) {\n\t\t\tprocess.umask(oldUmask);\n\t\t}\n\t\tcallback();\n\t});\n\n\t// Alter umask if necessary\n\tif (isSocket) {\n\t\toldUmask = process.umask('0000');\n\t\tmodule.exports.testSocket(socketPath, function (err) {\n\t\t\tif (!err) {\n\t\t\t\tserver.listen.apply(server, args);\n\t\t\t} else {\n\t\t\t\twinston.error('[startup] NodeBB was unable to secure domain socket access (' + socketPath + ')');\n\t\t\t\twinston.error('[startup] ' + err.message);\n\t\t\t\tprocess.exit();\n\t\t\t}\n\t\t});\n\t} else {\n\t\tserver.listen.apply(server, args);\n\t}\n}\n\nmodule.exports.testSocket = function (socketPath, callback) {\n\tif (typeof socketPath !== 'string') {\n\t\treturn callback(new Error('invalid socket path : ' + socketPath));\n\t}\n\tvar net = require('net');\n\tvar file = require('./file');\n\tasync.series([\n\t\tfunction (next) {\n\t\t\tfile.exists(socketPath, function (exists) {\n\t\t\t\tif (exists) {\n\t\t\t\t\tnext();\n\t\t\t\t} else {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tfunction (next) {\n\t\t\tvar testSocket = new net.Socket();\n\t\t\ttestSocket.on('error', function (err) {\n\t\t\t\tnext(err.code !== 'ECONNREFUSED' ? err : null);\n\t\t\t});\n\t\t\ttestSocket.connect({ path: socketPath }, function () {\n\t\t\t\t// Something's listening here, abort\n\t\t\t\tcallback(new Error('port-in-use'));\n\t\t\t});\n\t\t},\n\t\tasync.apply(fs.unlink, socketPath),\t// The socket was stale, kick it out of the way\n\t], callback);\n};\n\n\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/ajaxify.js":"\"use strict\";\n/*global app, bootbox, templates, socket, config, RELATIVE_PATH*/\n\nvar ajaxify = ajaxify || {};\n\n$(document).ready(function () {\n\tvar location = document.location || window.location;\n\tvar rootUrl = location.protocol + '//' + (location.hostname || location.host) + (location.port ? ':' + location.port : '');\n\tvar apiXHR = null;\n\tvar ajaxifyTimer;\n\n\tvar translator;\n\tvar retry = true;\n\tvar previousBodyClass = '';\n\n\t// Dumb hack to fool ajaxify into thinking translator is still a global\n\t// When ajaxify is migrated to a require.js module, then this can be merged into the \"define\" call\n\trequire(['translator'], function (_translator) {\n\t\ttranslator = _translator;\n\t});\n\n\t$(window).on('popstate', function (ev) {\n\t\tev = ev.originalEvent;\n\n\t\tif (ev !== null && ev.state) {\n\t\t\tif (ev.state.url === null && ev.state.returnPath !== undefined) {\n\t\t\t\twindow.history.replaceState({\n\t\t\t\t\turl: ev.state.returnPath\n\t\t\t\t}, ev.state.returnPath, config.relative_path + '/' + ev.state.returnPath);\n\t\t\t} else if (ev.state.url !== undefined) {\n\t\t\t\tajaxify.go(ev.state.url, function () {\n\t\t\t\t\t$(window).trigger('action:popstate', {url: ev.state.url});\n\t\t\t\t}, true);\n\t\t\t}\n\t\t}\n\t});\n\n\tajaxify.currentPage = null;\n\n\tajaxify.go = function (url, callback, quiet) {\n\t\tif (!socket.connected) {\n\t\t\tif (ajaxify.reconnectAction) {\n\t\t\t\t$(window).off('action:reconnected', ajaxify.reconnectAction);\n\t\t\t}\n\t\t\tajaxify.reconnectAction = function (e) {\n\t\t\t\tajaxify.go(url, callback, quiet);\n\t\t\t\t$(window).off(e);\n\t\t\t};\n\t\t\t$(window).on('action:reconnected', ajaxify.reconnectAction);\n\t\t}\n\n\t\t// Abort subsequent requests if clicked multiple times within a short window of time\n\t\tif (ajaxifyTimer && (Date.now() - ajaxifyTimer) < 500) {\n\t\t\treturn true;\n\t\t}\n\t\tajaxifyTimer = Date.now();\n\n\t\tif (ajaxify.handleRedirects(url)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tapp.leaveCurrentRoom();\n\n\t\t$(window).off('scroll');\n\n\t\tif ($('#content').hasClass('ajaxifying') && apiXHR) {\n\t\t\tapiXHR.abort();\n\t\t}\n\n\t\tif (!window.location.pathname.match(/\\/(403|404)$/g)) {\n\t\t\tapp.previousUrl = window.location.href;\n\t\t}\n\n\t\turl = ajaxify.start(url);\n\n\t\t// If any listeners alter url and set it to an empty string, abort the ajaxification\n\t\tif (url === null) {\n\t\t\t$(window).trigger('action:ajaxify.end', {url: url, tpl_url: ajaxify.data.template.name, title: ajaxify.data.title});\n\t\t\treturn false;\n\t\t}\n\n\t\tpreviousBodyClass = ajaxify.data.bodyClass;\n\t\t$('#footer, #content').removeClass('hide').addClass('ajaxifying');\n\n\t\tajaxify.loadData(url, function (err, data) {\n\n\t\t\tif (!err || (err && err.data && (parseInt(err.data.status, 10) !== 302 && parseInt(err.data.status, 10) !== 308))) {\n\t\t\t\tajaxify.updateHistory(url, quiet);\n\t\t\t}\n\n\t\t\tif (err) {\n\t\t\t\treturn onAjaxError(err, url, callback, quiet);\n\t\t\t}\n\n\t\t\tretry = true;\n\t\t\tapp.template = data.template.name;\n\n\t\t\trequire(['translator'], function (translator) {\n\t\t\t\ttranslator.load(config.defaultLang, data.template.name);\n\t\t\t\trenderTemplate(url, data.template.name, data, callback);\n\t\t\t});\n\t\t});\n\n\t\treturn true;\n\t};\n\n\tajaxify.handleRedirects = function (url) {\n\t\turl = ajaxify.removeRelativePath(url.replace(/\\/$/, '')).toLowerCase();\n\t\tvar isClientToAdmin = url.startsWith('admin') && window.location.pathname.indexOf(RELATIVE_PATH + '/admin') !== 0;\n\t\tvar isAdminToClient = !url.startsWith('admin') && window.location.pathname.indexOf(RELATIVE_PATH + '/admin') === 0;\n\t\tvar uploadsOrApi = url.startsWith('uploads') || url.startsWith('api');\n\t\tif (isClientToAdmin || isAdminToClient || uploadsOrApi) {\n\t\t\twindow.open(RELATIVE_PATH + '/' + url, '_top');\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\n\tajaxify.start = function (url) {\n\t\turl = ajaxify.removeRelativePath(url.replace(/^\\/|\\/$/g, ''));\n\n\t\tvar payload = {\n\t\t\turl: url\n\t\t};\n\n\t\t$(window).trigger('action:ajaxify.start', payload);\n\n\t\treturn payload.url;\n\t};\n\n\tajaxify.updateHistory = function (url, quiet) {\n\t\tajaxify.currentPage = url.split(/[?#]/)[0];\n\t\tif (window.history && window.history.pushState) {\n\t\t\twindow.history[!quiet ? 'pushState' : 'replaceState']({\n\t\t\t\turl: url\n\t\t\t}, url, RELATIVE_PATH + '/' + url);\n\t\t}\n\t};\n\n\tfunction onAjaxError(err, url, callback, quiet) {\n\t\tvar data = err.data;\n\t\tvar textStatus = err.textStatus;\n\n\t\tif (data) {\n\t\t\tvar status = parseInt(data.status, 10);\n\t\t\tif (status === 403 || status === 404 || status === 500 || status === 502 || status === 503) {\n\t\t\t\tif (status === 502 && retry) {\n\t\t\t\t\tretry = false;\n\t\t\t\t\tajaxifyTimer = undefined;\n\t\t\t\t\treturn ajaxify.go(url, callback, quiet);\n\t\t\t\t}\n\t\t\t\tif (status === 502) {\n\t\t\t\t\tstatus = 500;\n\t\t\t\t}\n\t\t\t\tif (data.responseJSON) {\n\t\t\t\t\tdata.responseJSON.config = config;\n\t\t\t\t}\n\n\t\t\t\t$('#footer, #content').removeClass('hide').addClass('ajaxifying');\n\t\t\t\treturn renderTemplate(url, status.toString(), data.responseJSON || {}, callback);\n\t\t\t} else if (status === 401) {\n\t\t\t\tapp.alertError('[[global:please_log_in]]');\n\t\t\t\tapp.previousUrl = url;\n\t\t\t\twindow.location.href = config.relative_path + '/login';\n\t\t\t\treturn;\n\t\t\t} else if (status === 302 || status === 308) {\n\t\t\t\tif (data.responseJSON && data.responseJSON.external) {\n\t\t\t\t\twindow.location.href = data.responseJSON.external;\n\t\t\t\t} else if (typeof data.responseJSON === 'string') {\n\t\t\t\t\tajaxifyTimer = undefined;\n\t\t\t\t\tajaxify.go(data.responseJSON.slice(1), callback, quiet);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (textStatus !== 'abort') {\n\t\t\tapp.alertError(data.responseJSON.error);\n\t\t}\n\t}\n\n\tfunction renderTemplate(url, tpl_url, data, callback) {\n\t\t$(window).trigger('action:ajaxify.loadingTemplates', {});\n\n\t\ttemplates.parse(tpl_url, data, function (template) {\n\t\t\ttranslator.translate(template, function (translatedTemplate) {\n\t\t\t\ttranslatedTemplate = translator.unescape(translatedTemplate);\n\t\t\t\t$('body').removeClass(previousBodyClass).addClass(data.bodyClass);\n\t\t\t\t$('#content').html(translatedTemplate);\n\n\t\t\t\tajaxify.end(url, tpl_url);\n\n\t\t\t\tif (typeof callback === 'function') {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\n\t\t\t\t$('#content, #footer').removeClass('ajaxifying');\n\n\t\t\t\tapp.refreshTitle(data.title);\n\t\t\t});\n\t\t});\n\t}\n\n\tajaxify.end = function (url, tpl_url) {\n\t\tfunction done() {\n\t\t\tif (--count === 0) {\n\t\t\t\t$(window).trigger('action:ajaxify.end', {url: url, tpl_url: tpl_url, title: ajaxify.data.title});\n\t\t\t}\n\t\t}\n\t\tvar count = 2;\n\n\t\tajaxify.loadScript(tpl_url, done);\n\n\t\tajaxify.widgets.render(tpl_url, url, done);\n\n\t\t$(window).trigger('action:ajaxify.contentLoaded', {url: url, tpl: tpl_url});\n\n\t\tapp.processPage();\n\n\t\tvar timeElapsed = Date.now() - ajaxifyTimer;\n\t\tif (config.environment === 'development' && !isNaN(timeElapsed)) {\n\t\t\tconsole.info('[ajaxify /' + url + '] Time elapsed:', timeElapsed + 'ms');\n\t\t}\n\t};\n\n\tajaxify.parseData = function () {\n\t\tvar dataEl = $('#ajaxify-data');\n\t\tif (dataEl.length) {\n\t\t\tajaxify.data = JSON.parse(dataEl.text());\n\t\t\tdataEl.remove();\n\t\t}\n\t};\n\n\tajaxify.removeRelativePath = function (url) {\n\t\tif (url.startsWith(RELATIVE_PATH.slice(1))) {\n\t\t\turl = url.slice(RELATIVE_PATH.length);\n\t\t}\n\t\treturn url;\n\t};\n\n\tajaxify.refresh = function (callback) {\n\t\tajaxify.go(ajaxify.currentPage + window.location.search + window.location.hash, callback, true);\n\t};\n\n\tajaxify.loadScript = function (tpl_url, callback) {\n\t\tvar location = !app.inAdmin ? 'forum/' : '';\n\n\t\tif (tpl_url.startsWith('admin')) {\n\t\t\tlocation = '';\n\t\t}\n\t\tvar data = {\n\t\t\ttpl_url: tpl_url,\n\t\t\tscripts: [location + tpl_url]\n\t\t};\n\n\t\t$(window).trigger('action:script.load', data);\n\n\t\trequire(data.scripts, function (script) {\n\t\t\tif (script && script.init) {\n\t\t\t\tscript.init();\n\t\t\t}\n\n\t\t\tif (callback) {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t};\n\n\tajaxify.loadData = function (url, callback) {\n\t\turl = ajaxify.removeRelativePath(url);\n\n\t\t$(window).trigger('action:ajaxify.loadingData', {url: url});\n\n\t\tapiXHR = $.ajax({\n\t\t\turl: RELATIVE_PATH + '/api/' + url,\n\t\t\tcache: false,\n\t\t\theaders: {\n\t\t\t\t'X-Return-To': app.previousUrl\n\t\t\t},\n\t\t\tsuccess: function (data) {\n\t\t\t\tif (!data) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tajaxify.data = data;\n\t\t\t\tdata.config = config;\n\n\t\t\t\t$(window).trigger('action:ajaxify.dataLoaded', {url: url, data: data});\n\n\t\t\t\tcallback(null, data);\n\t\t\t},\n\t\t\terror: function (data, textStatus) {\n\t\t\t\tif (data.status === 0 && textStatus === 'error') {\n\t\t\t\t\tdata.status = 500;\n\t\t\t\t}\n\t\t\t\tcallback({\n\t\t\t\t\tdata: data,\n\t\t\t\t\ttextStatus: textStatus\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n\n\tajaxify.loadTemplate = function (template, callback) {\n\t\tif (templates.cache[template]) {\n\t\t\tcallback(templates.cache[template]);\n\t\t} else {\n\t\t\t$.ajax({\n\t\t\t\turl: RELATIVE_PATH + '/templates/' + template + '.tpl' + (config['cache-buster'] ? '?v=' + config['cache-buster'] : ''),\n\t\t\t\ttype: 'GET',\n\t\t\t\tsuccess: function (data) {\n\t\t\t\t\tcallback(data.toString());\n\t\t\t\t},\n\t\t\t\terror: function (error) {\n\t\t\t\t\tthrow new Error(\"Unable to load template: \" + template + \" (\" + error.statusText + \")\");\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\tfunction ajaxifyAnchors() {\n\t\tfunction hrefEmpty(href) {\n\t\t\treturn href === undefined || href === '' || href === 'javascript:;';\n\t\t}\n\n\t\tvar contentEl = document.getElementById('content');\n\n\t\t// Enhancing all anchors to ajaxify...\n\t\t$(document.body).on('click', 'a', function (e) {\n\t\t\tvar _self = this;\n\t\t\tvar process = function () {\n\t\t\t\tif (!e.ctrlKey && !e.shiftKey && !e.metaKey && e.which === 1) {\n\t\t\t\t\tif (internalLink) {\n\t\t\t\t\t\tvar pathname = this.href.replace(rootUrl + RELATIVE_PATH + '/', '');\n\n\t\t\t\t\t\t// Special handling for urls with hashes\n\t\t\t\t\t\tif (window.location.pathname === this.pathname && this.hash.length) {\n\t\t\t\t\t\t\twindow.location.hash = this.hash;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (ajaxify.go(pathname)) {\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (window.location.pathname !== '/outgoing') {\n\t\t\t\t\t\tif (config.openOutgoingLinksInNewTab && $.contains(contentEl, this)) {\n\t\t\t\t\t\t\twindow.open(this.href, '_blank');\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t} else if (config.useOutgoingLinksPage) {\n\t\t\t\t\t\t\tajaxify.go('outgoing?url=' + encodeURIComponent(this.href));\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (this.target !== '' || (this.protocol !== 'http:' && this.protocol !== 'https:')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar internalLink = utils.isInternalURI(this, window.location, RELATIVE_PATH);\n\n\t\t\tif ($(this).attr('data-ajaxify') === 'false') {\n\t\t\t\tif (!internalLink) {\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\treturn e.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Default behaviour for rss feeds\n\t\t\tif (internalLink && $(this).attr('href').endsWith('.rss')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (hrefEmpty(this.href) || this.protocol === 'javascript:' || $(this).attr('href') === '#') {\n\t\t\t\treturn e.preventDefault();\n\t\t\t}\n\n\t\t\tif (app.flags && app.flags.hasOwnProperty('_unsaved') && app.flags._unsaved === true) {\n\t\t\t\ttranslator.translate('[[global:unsaved-changes]]', function (text) {\n\t\t\t\t\tbootbox.confirm(text, function (navigate) {\n\t\t\t\t\t\tif (navigate) {\n\t\t\t\t\t\t\tapp.flags._unsaved = false;\n\t\t\t\t\t\t\tprocess.call(_self);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\treturn e.preventDefault();\n\t\t\t}\n\n\t\t\tprocess.call(_self);\n\t\t});\n\t}\n\n\ttemplates.registerLoader(ajaxify.loadTemplate);\n\n\tif (window.history && window.history.pushState) {\n\t\t// Progressive Enhancement, ajaxify available only to modern browsers\n\t\tajaxifyAnchors();\n\t}\n\n\tapp.load();\n\n\t$('[type=\"text/tpl\"][data-template]').each(function () {\n\t\ttemplates.cache[$(this).attr('data-template')] = $('<div/>').html($(this).html()).text();\n\t\t$(this).parent().remove();\n\t});\n\n});","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/overrides.js":"'use strict';\n\n/* global bootbox */\n\nvar overrides = overrides || {};\n\nif ('undefined' !== typeof window) {\n\n\t(function ($, undefined) {\n\t\trequire(['translator'], function (translator) {\n\t\t\t$.fn.getCursorPosition = function () {\n\t\t\t\tvar el = $(this).get(0);\n\t\t\t\tvar pos = 0;\n\t\t\t\tif('selectionStart' in el) {\n\t\t\t\t\tpos = el.selectionStart;\n\t\t\t\t} else if('selection' in document) {\n\t\t\t\t\tel.focus();\n\t\t\t\t\tvar Sel = document.selection.createRange();\n\t\t\t\t\tvar SelLength = document.selection.createRange().text.length;\n\t\t\t\t\tSel.moveStart('character', -el.value.length);\n\t\t\t\t\tpos = Sel.text.length - SelLength;\n\t\t\t\t}\n\t\t\t\treturn pos;\n\t\t\t};\n\n\t\t\t$.fn.selectRange = function (start, end) {\n\t\t\t\tif(!end) {\n\t\t\t\t\tend = start;\n\t\t\t\t}\n\t\t\t\treturn this.each(function () {\n\t\t\t\t\tif (this.setSelectionRange) {\n\t\t\t\t\t\tthis.focus();\n\t\t\t\t\t\tthis.setSelectionRange(start, end);\n\t\t\t\t\t} else if (this.createTextRange) {\n\t\t\t\t\t\tvar range = this.createTextRange();\n\t\t\t\t\t\trange.collapse(true);\n\t\t\t\t\t\trange.moveEnd('character', end);\n\t\t\t\t\t\trange.moveStart('character', start);\n\t\t\t\t\t\trange.select();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t//http://stackoverflow.com/questions/511088/use-javascript-to-place-cursor-at-end-of-text-in-text-input-element\n\t\t\t$.fn.putCursorAtEnd = function () {\n\t\t\t\treturn this.each(function () {\n\t\t\t\t\t$(this).focus();\n\n\t\t\t\t\tif (this.setSelectionRange) {\n\t\t\t\t\t\tvar len = $(this).val().length * 2;\n\t\t\t\t\t\tthis.setSelectionRange(len, len);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$(this).val($(this).val());\n\t\t\t\t\t}\n\t\t\t\t\tthis.scrollTop = 999999;\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t$.fn.translateHtml = function (str) {\n\t\t\t\treturn translate(this, 'html', str);\n\t\t\t};\n\n\t\t\t$.fn.translateText = function (str) {\n\t\t\t\treturn translate(this, 'text', str);\n\t\t\t};\n\n\t\t\t$.fn.translateVal = function (str) {\n\t\t\t\treturn translate(this, 'val', str);\n\t\t\t};\n\n\t\t\t$.fn.translateAttr = function (attr, str) {\n\t\t\t\treturn this.each(function () {\n\t\t\t\t\tvar el = $(this);\n\t\t\t\t\ttranslator.translate(str, function (translated) {\n\t\t\t\t\t\tel.attr(attr, translated);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tfunction translate(elements, type, str) {\n\t\t\t\treturn elements.each(function () {\n\t\t\t\t\tvar el = $(this);\n\t\t\t\t\ttranslator.translate(str, function (translated) {\n\t\t\t\t\t\tel[type](translated);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}(jQuery || {fn:{}}));\n\n\t(function () {\n\t\t// FIX FOR #1245 - https://github.com/NodeBB/NodeBB/issues/1245\n\t\t// from http://stackoverflow.com/questions/15931962/bootstrap-dropdown-disappear-with-right-click-on-firefox\n\t\t// obtain a reference to the original handler\n\t\tvar _clearMenus = $._data(document, \"events\").click.filter(function (el) {\n\t\t\treturn el.namespace === 'bs.data-api.dropdown' && el.selector === undefined;\n\t\t});\n\n\t\tif(_clearMenus.length) {\n\t\t\t_clearMenus = _clearMenus[0].handler;\n\t\t}\n\n\t\t// disable the old listener\n\t\t$(document)\n\t\t\t.off('click.data-api.dropdown', _clearMenus)\n\t\t\t.on('click.data-api.dropdown', function (e) {\n\t\t\t\t// call the handler only when not right-click\n\t\t\t\tif (e.button !== 2) {\n\t\t\t\t\t_clearMenus();\n\t\t\t\t}\n\t\t\t});\n\t}());\n\n\toverrides.overrideBootbox = function () {\n\t\trequire(['translator'], function (translator) {\n\t\t\tvar dialog = bootbox.dialog,\n\t\t\t\tprompt = bootbox.prompt,\n\t\t\t\tconfirm = bootbox.confirm;\n\n\t\t\tfunction translate(modal) {\n\t\t\t\tvar header = modal.find('.modal-header'),\n\t\t\t\t\tfooter = modal.find('.modal-footer');\n\t\t\t\ttranslator.translate(header.html(), function (html) {\n\t\t\t\t\theader.html(html);\n\t\t\t\t});\n\t\t\t\ttranslator.translate(footer.html(), function (html) {\n\t\t\t\t\tfooter.html(html);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tbootbox.dialog = function () {\n\t\t\t\tvar modal = $(dialog.apply(this, arguments)[0]);\n\t\t\t\ttranslate(modal);\n\t\t\t\treturn modal;\n\t\t\t};\n\n\t\t\tbootbox.prompt = function () {\n\t\t\t\tvar modal = $(prompt.apply(this, arguments)[0]);\n\t\t\t\ttranslate(modal);\n\t\t\t\treturn modal;\n\t\t\t};\n\n\t\t\tbootbox.confirm = function () {\n\t\t\t\tvar modal = $(confirm.apply(this, arguments)[0]);\n\t\t\t\ttranslate(modal);\n\t\t\t\treturn modal;\n\t\t\t};\n\t\t});\n\t};\n\n\toverrides.overrideTimeago = function () {\n\t\tvar timeagoFn = $.fn.timeago;\n\t\tif (parseInt(config.timeagoCutoff, 10) === 0) {\n\t\t\t$.timeago.settings.cutoff = 1;\n\t\t} else if (parseInt(config.timeagoCutoff, 10) > 0) {\n\t\t\t$.timeago.settings.cutoff = 1000 * 60 * 60 * 24 * (parseInt(config.timeagoCutoff, 10) || 30);\n\t\t}\n\n\t\t$.fn.timeago = function () {\n\t\t\tvar els = $(this);\n\n\t\t\t// Convert \"old\" format to new format (#5108)\n\t\t\tvar options = { year: 'numeric', month: 'short', day: 'numeric', hour: 'numeric', minute: 'numeric' };\n\t\t\tvar iso;\n\t\t\tels.each(function () {\n\t\t\t\tiso = this.getAttribute('title');\n\t\t\t\tthis.setAttribute('datetime', iso);\n\t\t\t\t$(this).text(new Date(iso).toLocaleString(config.userLang.replace('_', '-'), options));\n\t\t\t});\n\n\t\t\ttimeagoFn.apply(this, arguments);\n\t\t};\n\t};\n\n}\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/require-config.js":"require.config({\n\tbaseUrl: config.relative_path + \"/src/modules\",\n\twaitSeconds: 7,\n\turlArgs: \"v=\" + config['cache-buster'],\n\tpaths: {\n\t\t'forum': '../client',\n\t\t'admin': '../admin',\n\t\t'vendor': '../../vendor',\n\t\t'plugins': '../../plugins'\n\t}\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/sockets.js":"'use strict';\n/* globals config, io, ajaxify */\n\nvar app = app || {};\nvar socket;\napp.isConnected = false;\n\n(function () {\n\tvar reconnecting = false;\n\n\tvar ioParams = {\n\t\treconnectionAttempts: config.maxReconnectionAttempts,\n\t\treconnectionDelay: config.reconnectionDelay,\n\t\ttransports: config.socketioTransports,\n\t\tpath: config.relative_path + '/socket.io'\n\t};\n\n\tsocket = io(config.websocketAddress, ioParams);\n\n\tsocket.on('connect', onConnect);\n\n\tsocket.on('reconnecting', onReconnecting);\n\n\tsocket.on('disconnect', onDisconnect);\n\n\tsocket.on('reconnect_failed', function () {\n\t\t// Wait ten times the reconnection delay and then start over\n\t\tsetTimeout(socket.connect.bind(socket), parseInt(config.reconnectionDelay, 10) * 10);\n\t});\n\n\tsocket.on('checkSession', function (uid) {\n\t\tif (parseInt(uid, 10) !== parseInt(app.user.uid, 10)) {\n\t\t\tapp.handleInvalidSession();\n\t\t}\n\t});\n\n\tsocket.on('event:banned', onEventBanned);\n\n\tsocket.on('event:alert', app.alert);\n\n\tfunction onConnect() {\n\t\tapp.isConnected = true;\n\n\t\tif (!reconnecting) {\n\t\t\tapp.showMessages();\n\t\t\t$(window).trigger('action:connected');\n\t\t}\n\n\t\tif (reconnecting) {\n\t\t\tvar reconnectEl = $('#reconnect');\n\t\t\tvar reconnectAlert = $('#reconnect-alert');\n\n\t\t\treconnectEl.tooltip('destroy');\n\t\t\treconnectEl.html('<i class=\"fa fa-check\"></i>');\n\t\t\treconnectAlert.fadeOut(500);\n\t\t\treconnecting = false;\n\n\t\t\treJoinCurrentRoom();\n\n\t\t\tsocket.emit('meta.reconnected');\n\n\t\t\t$(window).trigger('action:reconnected');\n\n\t\t\tsetTimeout(function () {\n\t\t\t\treconnectEl.removeClass('active').addClass('hide');\n\t\t\t}, 3000);\n\t\t}\n\t}\n\n\tfunction reJoinCurrentRoom() {\n\t\tvar\turl_parts = window.location.pathname.slice(config.relative_path.length).split('/').slice(1);\n\t\tvar room;\n\n\t\tswitch(url_parts[0]) {\n\t\t\tcase 'user':\n\t\t\t\troom = 'user/' + (ajaxify.data ? ajaxify.data.theirid : 0);\n\t\t\tbreak;\n\t\t\tcase 'topic':\n\t\t\t\troom = 'topic_' + url_parts[1];\n\t\t\tbreak;\n\t\t\tcase 'category':\n\t\t\t\troom = 'category_' + url_parts[1];\n\t\t\tbreak;\n\t\t\tcase 'recent':\n\t\t\t\troom = 'recent_topics';\n\t\t\tbreak;\n\t\t\tcase 'unread':\n\t\t\t\troom = 'unread_topics';\n\t\t\tbreak;\n\t\t\tcase 'popular':\n\t\t\t\troom = 'popular_topics';\n\t\t\tbreak;\n\t\t\tcase 'admin':\n\t\t\t\troom = 'admin';\n\t\t\tbreak;\n\t\t\tcase 'categories':\n\t\t\t\troom = 'categories';\n\t\t\tbreak;\n\t\t}\n\t\tapp.currentRoom = '';\n\t\tapp.enterRoom(room);\n\t}\n\n\tfunction onReconnecting() {\n\t\treconnecting = true;\n\t\tvar reconnectEl = $('#reconnect');\n\t\tvar reconnectAlert = $('#reconnect-alert');\n\n\t\tif (!reconnectEl.hasClass('active')) {\n\t\t\treconnectEl.html('<i class=\"fa fa-spinner fa-spin\"></i>');\n\t\t\treconnectAlert.fadeIn(500).removeClass('hide');\n\t\t}\n\n\t\treconnectEl.addClass('active').removeClass('hide').tooltip({\n\t\t\tplacement: 'bottom'\n\t\t});\n\t}\n\n\tfunction onDisconnect() {\n\t\t$(window).trigger('action:disconnected');\n\t\tapp.isConnected = false;\n\t}\n\n\tfunction onEventBanned() {\n\t\twindow.location.href = config.relative_path + '/';\n\t}\n\n}());","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/widgets.js":"\"use strict\";\n/*global ajaxify, templates, config, utils*/\n\n(function (ajaxify) {\n\tajaxify.widgets = {};\n\n\tajaxify.widgets.reposition = function (location) {\n\t\t$('body [has-widget-class]').each(function () {\n\t\t\tvar $this = $(this);\n\t\t\tif ($this.attr('has-widget-target') === location) {\n\t\t\t\t$this.removeClass();\n\t\t\t\t$this.addClass($this.attr('has-widget-class'));\n\t\t\t}\n\t\t});\n\t};\n\n\tajaxify.widgets.render = function (template, url, callback) {\n\t\tcallback = callback || function () {};\n\t\tif (template.match(/^admin/)) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tvar widgetLocations = ['sidebar', 'footer', 'header'];\n\n\t\t$('#content [widget-area]').each(function () {\n\t\t\tvar location = $(this).attr('widget-area');\n\t\t\tif ($.inArray(location, widgetLocations) === -1) {\n\t\t\t\twidgetLocations.push(location);\n\t\t\t}\n\t\t});\n\n\t\t$.get(config.relative_path + '/api/widgets/render' + (config['cache-buster'] ? '?v=' + config['cache-buster'] : ''), {\n\t\t\tlocations: widgetLocations,\n\t\t\ttemplate: template + '.tpl',\n\t\t\turl: url,\n\t\t\tisMobile: utils.isMobile()\n\t\t}, function (renderedAreas) {\n\t\t\tfor (var x = 0; x < renderedAreas.length; ++x) {\n\t\t\t\tvar renderedWidgets = renderedAreas[x].widgets;\n\t\t\t\tvar location = renderedAreas[x].location;\n\t\t\t\tvar html = '';\n\n\t\t\t\tfor (var i = 0; i < renderedWidgets.length; ++i) {\n\t\t\t\t\thtml += templates.parse(renderedWidgets[i].html, {});\n\t\t\t\t}\n\n\t\t\t\tvar area = $('#content [widget-area=\"' + location + '\"]');\n\n\t\t\t\tif (!area.length && window.location.pathname.indexOf('/admin') === -1 && renderedWidgets.length) {\n\t\t\t\t\tif (location === 'footer' && !$('#content [widget-area=\"footer\"]').length) {\n\t\t\t\t\t\t$('#content').append($('<div class=\"row\"><div widget-area=\"footer\" class=\"col-xs-12\"></div></div>'));\n\t\t\t\t\t} else if (location === 'sidebar' && !$('#content [widget-area=\"sidebar\"]').length) {\n\t\t\t\t\t\tif ($('[component=\"account/cover\"]').length) {\n\t\t\t\t\t\t\t$('[component=\"account/cover\"]').nextAll().wrapAll($('<div class=\"row\"><div class=\"col-lg-9 col-xs-12\"></div><div widget-area=\"sidebar\" class=\"col-lg-3 col-xs-12\"></div></div></div>'));\n\t\t\t\t\t\t} else if ($('[component=\"groups/cover\"]').length) {\n\t\t\t\t\t\t\t$('[component=\"groups/cover\"]').nextAll().wrapAll($('<div class=\"row\"><div class=\"col-lg-9 col-xs-12\"></div><div widget-area=\"sidebar\" class=\"col-lg-3 col-xs-12\"></div></div></div>'));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$('#content > *').wrapAll($('<div class=\"row\"><div class=\"col-lg-9 col-xs-12\"></div><div widget-area=\"sidebar\" class=\"col-lg-3 col-xs-12\"></div></div></div>'));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (location === 'header' && !$('#content [widget-area=\"header\"]').length) {\n\t\t\t\t\t\t$('#content').prepend($('<div class=\"row\"><div widget-area=\"header\" class=\"col-xs-12\"></div></div>'));\n\t\t\t\t\t}\n\n\t\t\t\t\tarea = $('#content [widget-area=\"' + location + '\"]');\n\t\t\t\t}\n\n\t\t\t\tarea.html(html);\n\n\t\t\t\tif (renderedWidgets.length) {\n\t\t\t\t\tarea.removeClass('hidden');\n\t\t\t\t\tajaxify.widgets.reposition(location);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar widgetAreas = $('#content [widget-area]');\n\t\t\twidgetAreas.find('img:not(.not-responsive)').addClass('img-responsive');\n\t\t\twidgetAreas.find('.timeago').timeago();\n\t\t\twidgetAreas.find('img[title].teaser-pic,img[title].user-img').each(function () {\n\t\t\t\t$(this).tooltip({\n\t\t\t\t\tplacement: 'top',\n\t\t\t\t\ttitle: $(this).attr('title')\n\t\t\t\t});\n\t\t\t});\n\t\t\t$(window).trigger('action:widgets.loaded', {});\n\n\t\t\tcallback(renderedAreas);\n\t\t});\n\t};\n}(ajaxify || {}));\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/categories/activeusers.js":"'use strict';\n\nvar async = require('async');\nvar posts = require('../posts');\nvar db = require('../database');\n\nmodule.exports = function (Categories) {\n\n\tCategories.getActiveUsers = function (cid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.getSortedSetRevRange('cid:' + cid + ':pids', 0, 24, next);\n\t\t\t},\n\t\t\tfunction (pids, next) {\n\t\t\t\tposts.getPostsFields(pids, ['uid'], next);\n\t\t\t},\n\t\t\tfunction (posts, next) {\n\t\t\t\tvar uids = posts.map(function (post) {\n\t\t\t\t\treturn post.uid;\n\t\t\t\t}).filter(function (uid, index, array) {\n\t\t\t\t\treturn parseInt(uid, 10) && array.indexOf(uid) === index;\n\t\t\t\t});\n\n\t\t\t\tnext(null, uids);\n\t\t\t}\n\t\t], callback);\n\t};\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/categories/create.js":"'use strict';\n\nvar async = require('async');\n\nvar db = require('../database');\nvar groups = require('../groups');\nvar plugins = require('../plugins');\nvar privileges = require('../privileges');\nvar utils = require('../../public/src/utils');\n\nmodule.exports = function (Categories) {\n\n\tCategories.create = function (data, callback) {\n\t\tvar category;\n\t\tvar parentCid = data.parentCid ? data.parentCid : 0;\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.incrObjectField('global', 'nextCid', next);\n\t\t\t},\n\t\t\tfunction (cid, next) {\n\t\t\t\tdata.name = data.name || 'Category ' + cid;\n\t\t\t\tvar slug = cid + '/' + utils.slugify(data.name);\n\t\t\t\tvar order = data.order || cid;\t// If no order provided, place it at the end\n\t\t\t\tvar colours = Categories.assignColours();\n\n\t\t\t\tcategory = {\n\t\t\t\t\tcid: cid,\n\t\t\t\t\tname: data.name,\n\t\t\t\t\tdescription: data.description ? data.description : '',\n\t\t\t\t\tdescriptionParsed: data.descriptionParsed ? data.descriptionParsed : '',\n\t\t\t\t\ticon: data.icon ? data.icon : '',\n\t\t\t\t\tbgColor: data.bgColor || colours[0],\n\t\t\t\t\tcolor: data.color || colours[1],\n\t\t\t\t\tslug: slug,\n\t\t\t\t\tparentCid: parentCid,\n\t\t\t\t\ttopic_count: 0,\n\t\t\t\t\tpost_count: 0,\n\t\t\t\t\tdisabled: 0,\n\t\t\t\t\torder: order,\n\t\t\t\t\tlink: '',\n\t\t\t\t\tnumRecentReplies: 1,\n\t\t\t\t\tclass: ( data.class ? data.class : 'col-md-3 col-xs-6' ),\n\t\t\t\t\timageClass: 'cover'\n\t\t\t\t};\n\n\t\t\t\tplugins.fireHook('filter:category.create', {category: category, data: data}, next);\n\t\t\t},\n\t\t\tfunction (data, next) {\n\t\t\t\tcategory = data.category;\n\n\t\t\t\tvar defaultPrivileges = ['find', 'read', 'topics:read', 'topics:create', 'topics:reply', 'posts:edit', 'posts:delete', 'topics:delete', 'upload:post:image'];\n\n\t\t\t\tasync.series([\n\t\t\t\t\tasync.apply(db.setObject, 'category:' + category.cid, category),\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tif (category.descriptionParsed) {\n\t\t\t\t\t\t\treturn next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tCategories.parseDescription(category.cid, category.description, next);\n\t\t\t\t\t},\n\t\t\t\t\tasync.apply(db.sortedSetAdd, 'categories:cid', category.order, category.cid),\n\t\t\t\t\tasync.apply(db.sortedSetAdd, 'cid:' + parentCid + ':children', category.order, category.cid),\n\t\t\t\t\tasync.apply(privileges.categories.give, defaultPrivileges, category.cid, 'administrators'),\n\t\t\t\t\tasync.apply(privileges.categories.give, defaultPrivileges, category.cid, 'registered-users'),\n\t\t\t\t\tasync.apply(privileges.categories.give, ['find', 'read', 'topics:read'], category.cid, 'guests')\n\t\t\t\t], next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tif (data.cloneFromCid && parseInt(data.cloneFromCid, 10)) {\n\t\t\t\t\treturn Categories.copySettingsFrom(data.cloneFromCid, category.cid, !data.parentCid, next);\n\t\t\t\t}\n\t\t\t\tnext(null, category);\n\t\t\t},\n\t\t\tfunction (category, next) {\n\t\t\t\tplugins.fireHook('action:category.create', category);\n\t\t\t\tnext(null, category);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tCategories.assignColours = function () {\n\t\tvar backgrounds = ['#AB4642', '#DC9656', '#F7CA88', '#A1B56C', '#86C1B9', '#7CAFC2', '#BA8BAF', '#A16946'];\n\t\tvar text = ['#fff', '#fff', '#333', '#fff', '#333', '#fff', '#fff', '#fff'];\n\t\tvar index = Math.floor(Math.random() * backgrounds.length);\n\n\t\treturn [backgrounds[index], text[index]];\n\t};\n\n\tCategories.copySettingsFrom = function (fromCid, toCid, copyParent, callback) {\n\t\tvar destination;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\tsource: async.apply(db.getObject, 'category:' + fromCid),\n\t\t\t\t\tdestination: async.apply(db.getObject, 'category:' + toCid)\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tif (!results.source) {\n\t\t\t\t\treturn next(new Error('[[error:invalid-cid]]'));\n\t\t\t\t}\n\t\t\t\tdestination = results.destination;\n\n\t\t\t\tvar tasks = [];\n\n\t\t\t\tif (copyParent && utils.isNumber(destination.parentCid)) {\n\t\t\t\t\ttasks.push(async.apply(db.sortedSetRemove, 'cid:' + destination.parentCid + ':children', toCid));\n\t\t\t\t}\n\n\t\t\t\tif (copyParent && utils.isNumber(results.source.parentCid)) {\n\t\t\t\t\ttasks.push(async.apply(db.sortedSetAdd, 'cid:' + results.source.parentCid + ':children', results.source.order, toCid));\n\t\t\t\t}\n\n\t\t\t\tdestination.description = results.source.description;\n\t\t\t\tdestination.descriptionParsed = results.source.descriptionParsed;\n\t\t\t\tdestination.icon = results.source.icon;\n\t\t\t\tdestination.bgColor = results.source.bgColor;\n\t\t\t\tdestination.color = results.source.color;\n\t\t\t\tdestination.link = results.source.link;\n\t\t\t\tdestination.numRecentReplies = results.source.numRecentReplies;\n\t\t\t\tdestination.class = results.source.class;\n\t\t\t\tdestination.imageClass = results.source.imageClass;\n\n\t\t\t\tif (copyParent) {\n\t\t\t\t\tdestination.parentCid = results.source.parentCid || 0;\n\t\t\t\t}\n\n\t\t\t\ttasks.push(async.apply(db.setObject, 'category:' + toCid, destination));\n\n\t\t\t\tasync.series(tasks, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tCategories.copyPrivilegesFrom(fromCid, toCid, next);\n\t\t\t}\n\t\t], function (err) {\n\t\t\tcallback(err, destination);\n\t\t});\n\t};\n\n\tCategories.copyPrivilegesFrom = function (fromCid, toCid, callback) {\n\t\tasync.each(privileges.privilegeList, function (privilege, next) {\n\t\t\tcopyPrivilege(privilege, fromCid, toCid, next);\n\t\t}, callback);\n\t};\n\n\tfunction copyPrivilege(privilege, fromCid, toCid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.getSortedSetRange('group:cid:' + toCid + ':privileges:' + privilege + ':members', 0, -1, next);\n\t\t\t},\n\t\t\tfunction (currentMembers, next) {\n\t\t\t\tasync.eachSeries(currentMembers, function (member, next) {\n\t\t\t\t\tgroups.leave('cid:' + toCid + ':privileges:' + privilege, member, next);\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tdb.getSortedSetRange('group:cid:' + fromCid + ':privileges:' + privilege + ':members', 0, -1, next);\n\t\t\t},\n\t\t\tfunction (members, next) {\n\t\t\t\tif (!members || !members.length) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\n\t\t\t\tasync.eachSeries(members, function (member, next) {\n\t\t\t\t\tgroups.join('cid:' + toCid + ':privileges:' + privilege, member, next);\n\t\t\t\t}, next);\n\t\t\t}\n\t\t], callback);\n\t}\n\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/categories/data.js":"'use strict';\n\nvar async = require('async');\nvar validator = require('validator');\nvar winston = require('winston');\n\nvar db = require('../database');\n\nmodule.exports = function (Categories) {\n\n\tCategories.getCategoryData = function (cid, callback) {\n\t\tdb.getObject('category:' + cid, function (err, category) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tmodifyCategory(category);\n\t\t\tcallback(null, category);\n\t\t});\n\t};\n\n\tCategories.getCategoriesData = function (cids, callback) {\n\t\tif (!Array.isArray(cids) || !cids.length) {\n\t\t\treturn callback(null, []);\n\t\t}\n\t\tvar keys = cids.map(function (cid) {\n\t\t\treturn 'category:' + cid;\n\t\t});\n\n\t\tdb.getObjects(keys, function (err, categories) {\n\t\t\tif (err || !Array.isArray(categories) || !categories.length) {\n\t\t\t\treturn callback(err, []);\n\t\t\t}\n\n\t\t\tcategories.forEach(modifyCategory);\n\t\t\tcallback(null, categories);\n\t\t});\n\t};\n\n\tfunction modifyCategory(category) {\n\t\tif (!category) {\n\t\t\treturn;\n\t\t}\n\n\t\tcategory.name = validator.escape(String(category.name || ''));\n\t\tcategory.disabled = category.hasOwnProperty('disabled') ? parseInt(category.disabled, 10) === 1 : undefined;\n\t\tcategory.icon = category.icon || 'hidden';\n\t\tif (category.hasOwnProperty('post_count')) {\n\t\t\tcategory.post_count = category.totalPostCount = category.post_count || 0;\n\t\t}\n\n\t\tif (category.hasOwnProperty('topic_count')) {\n\t\t\tcategory.topic_count = category.totalTopicCount = category.topic_count || 0;\n\t\t}\n\n\t\tif (category.image) {\n\t\t\tcategory.backgroundImage = category.image;\n\t\t}\n\n\t\tif (category.description) {\n\t\t\tcategory.description = validator.escape(String(category.description));\n\t\t\tcategory.descriptionParsed = category.descriptionParsed || category.description;\n\t\t}\n\t}\n\n\tCategories.getCategoryField = function (cid, field, callback) {\n\t\tdb.getObjectField('category:' + cid, field, callback);\n\t};\n\n\tCategories.getCategoriesFields = function (cids, fields, callback) {\n\t\tif (!Array.isArray(cids) || !cids.length) {\n\t\t\treturn callback(null, []);\n\t\t}\n\n\t\tvar keys = cids.map(function (cid) {\n\t\t\treturn 'category:' + cid;\n\t\t});\n\n\t\tdb.getObjectsFields(keys, fields, function (err, categories) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tcategories.forEach(modifyCategory);\n\t\t\tcallback(null, categories);\n\t\t});\n\t};\n\n\tCategories.getMultipleCategoryFields = function (cids, fields, callback) {\n\t\twinston.warn('[deprecated] Categories.getMultipleCategoryFields is deprecated please use Categories.getCategoriesFields');\n\t\tCategories.getCategoriesFields(cids, fields, callback);\n\t};\n\n\tCategories.getAllCategoryFields = function (fields, callback) {\n\t\tasync.waterfall([\n\t\t\tasync.apply(db.getSortedSetRange, 'categories:cid', 0, -1),\n\t\t\tfunction (cids, next) {\n\t\t\t\tCategories.getCategoriesFields(cids, fields, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tCategories.getCategoryFields = function (cid, fields, callback) {\n\t\tdb.getObjectFields('category:' + cid, fields, callback);\n\t};\n\n\tCategories.setCategoryField = function (cid, field, value, callback) {\n\t\tdb.setObjectField('category:' + cid, field, value, callback);\n\t};\n\n\tCategories.incrementCategoryFieldBy = function (cid, field, value, callback) {\n\t\tdb.incrObjectFieldBy('category:' + cid, field, value, callback);\n\t};\n\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/categories/delete.js":"'use strict';\n\nvar async = require('async');\nvar db = require('../database');\nvar batch = require('../batch');\nvar plugins = require('../plugins');\nvar topics = require('../topics');\nvar groups = require('../groups');\nvar privileges = require('../privileges');\n\nmodule.exports = function (Categories) {\n\n\tCategories.purge = function (cid, uid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tbatch.processSortedSet('cid:' + cid + ':tids', function (tids, next) {\n\t\t\t\t\tasync.eachLimit(tids, 10, function (tid, next) {\n\t\t\t\t\t\ttopics.purgePostsAndTopic(tid, uid, next);\n\t\t\t\t\t}, next);\n\t\t\t\t}, {alwaysStartAt: 0}, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tCategories.getPinnedTids('cid:' + cid + ':tids:pinned', 0, -1, next);\n\t\t\t},\n\t\t\tfunction (pinnedTids, next) {\n\t\t\t\tasync.eachLimit(pinnedTids, 10, function (tid, next) {\n\t\t\t\t\ttopics.purgePostsAndTopic(tid, uid, next);\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tpurgeCategory(cid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tplugins.fireHook('action:category.delete', cid);\n\t\t\t\tnext();\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tfunction purgeCategory(cid, callback) {\n\t\tasync.series([\n\t\t\tfunction (next) {\n\t\t\t\tdb.sortedSetRemove('categories:cid', cid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tremoveFromParent(cid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tdb.deleteAll([\n\t\t\t\t\t'cid:' + cid + ':tids',\n\t\t\t\t\t'cid:' + cid + ':tids:pinned',\n\t\t\t\t\t'cid:' + cid + ':tids:posts',\n\t\t\t\t\t'cid:' + cid + ':pids',\n\t\t\t\t\t'cid:' + cid + ':read_by_uid',\n\t\t\t\t\t'cid:' + cid + ':ignorers',\n\t\t\t\t\t'cid:' + cid + ':children',\n\t\t\t\t\t'category:' + cid\n\t\t\t\t], next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tasync.each(privileges.privilegeList, function (privilege, next) {\n\t\t\t\t\tgroups.destroy('cid:' + cid + ':privileges:' + privilege, next);\n\t\t\t\t}, next);\n\t\t\t}\n\t\t], function (err) {\n\t\t\tcallback(err);\n\t\t});\n\t}\n\n\tfunction removeFromParent(cid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\tparentCid: function (next) {\n\t\t\t\t\t\tCategories.getCategoryField(cid, 'parentCid', next);\n\t\t\t\t\t},\n\t\t\t\t\tchildren: function (next) {\n\t\t\t\t\t\tdb.getSortedSetRange('cid:' + cid + ':children', 0, -1, next);\n\t\t\t\t\t}\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tasync.parallel([\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tresults.parentCid = parseInt(results.parentCid, 10) || 0;\n\t\t\t\t\t\tdb.sortedSetRemove('cid:' + results.parentCid + ':children', cid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tasync.each(results.children, function (cid, next) {\n\t\t\t\t\t\t\tasync.parallel([\n\t\t\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\t\t\tdb.setObjectField('category:' + cid, 'parentCid', 0, next);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\t\t\tdb.sortedSetAdd('cid:0:children', cid, cid, next);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t], next);\n\t\t\t\t\t\t}, next);\n\t\t\t\t\t}\n\t\t\t\t], next);\n\t\t\t}\n\t\t], function (err) {\n\t\t\tcallback(err);\n\t\t});\n\t}\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/categories/recentreplies.js":"\n'use strict';\n\nvar async = require('async');\nvar winston = require('winston');\nvar validator = require('validator');\nvar _ = require('underscore');\n\nvar db = require('../database');\nvar posts = require('../posts');\nvar topics = require('../topics');\nvar privileges = require('../privileges');\nvar batch = require('../batch');\n\n\nmodule.exports = function (Categories) {\n\n\tCategories.getRecentReplies = function (cid, uid, count, callback) {\n\t\tif (!parseInt(count, 10)) {\n\t\t\treturn callback(null, []);\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.getSortedSetRevRange('cid:' + cid + ':pids', 0, count - 1, next);\n\t\t\t},\n\t\t\tfunction (pids, next) {\n\t\t\t\tprivileges.posts.filter('read', pids, uid, next);\n\t\t\t},\n\t\t\tfunction (pids, next) {\n\t\t\t\tposts.getPostSummaryByPids(pids, uid, {stripTags: true}, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tCategories.updateRecentTid = function (cid, tid, callback) {\n\t\tasync.parallel({\n\t\t\tcount: function (next) {\n\t\t\t\tdb.sortedSetCard('cid:' + cid + ':recent_tids', next);\n\t\t\t},\n\t\t\tnumRecentReplies: function (next) {\n\t\t\t\tdb.getObjectField('category:' + cid, 'numRecentReplies', next);\n\t\t\t}\n\t\t}, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tif (results.count < results.numRecentReplies) {\n\t\t\t\treturn db.sortedSetAdd('cid:' + cid + ':recent_tids', Date.now(), tid, callback);\n\t\t\t}\n\t\t\tasync.waterfall([\n\t\t\t\tfunction (next) {\n\t\t\t\t\tdb.getSortedSetRangeWithScores('cid:' + cid + ':recent_tids', 0, results.count - results.numRecentReplies, next);\n\t\t\t\t},\n\t\t\t\tfunction (data, next) {\n\t\t\t\t\tif (!data.length) {\n\t\t\t\t\t\treturn next();\n\t\t\t\t\t}\n\t\t\t\t\tdb.sortedSetsRemoveRangeByScore(['cid:' + cid + ':recent_tids'], '-inf', data[data.length - 1].score, next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tdb.sortedSetAdd('cid:' + cid + ':recent_tids', Date.now(), tid, next);\n\t\t\t\t}\n\t\t\t], callback);\n\t\t});\n\t};\n\n\tCategories.getRecentTopicReplies = function (categoryData, uid, callback) {\n\t\tif (!Array.isArray(categoryData) || !categoryData.length) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tvar keys = categoryData.map(function (category) {\n\t\t\t\t\treturn 'cid:' + category.cid + ':recent_tids';\n\t\t\t\t});\n\t\t\t\tdb.getSortedSetsMembers(keys, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tvar tids = _.flatten(results);\n\n\t\t\t\ttids = tids.filter(function (tid, index, array) {\n\t\t\t\t\treturn !!tid && array.indexOf(tid) === index;\n\t\t\t\t});\n\t\t\t\tprivileges.topics.filterTids('read', tids, uid, next);\n\t\t\t},\n\t\t\tfunction (tids, next) {\n\t\t\t\tgetTopics(tids, next);\n\t\t\t},\n\t\t\tfunction (topics, next) {\n\t\t\t\tassignTopicsToCategories(categoryData, topics);\n\n\t\t\t\tbubbleUpChildrenPosts(categoryData);\n\n\t\t\t\tnext();\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tfunction getTopics(tids, callback) {\n\t\tvar topicData;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\ttopics.getTopicsFields(tids, ['tid', 'mainPid', 'slug', 'title', 'teaserPid', 'cid', 'postcount'], next);\n\t\t\t},\n\t\t\tfunction (_topicData, next) {\n\t\t\t\ttopicData = _topicData;\n\t\t\t\ttopicData.forEach(function (topic) {\n\t\t\t\t\tif (topic) {\n\t\t\t\t\t\ttopic.teaserPid = topic.teaserPid || topic.mainPid;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tvar cids = _topicData.map(function (topic) {\n\t\t\t\t\treturn topic && topic.cid;\n\t\t\t\t}).filter(function (cid, index, array) {\n\t\t\t\t\treturn cid && array.indexOf(cid) === index;\n\t\t\t\t});\n\n\t\t\t\tasync.parallel({\n\t\t\t\t\tcategoryData: async.apply(Categories.getCategoriesFields, cids, ['cid', 'parentCid']),\n\t\t\t\t\tteasers: async.apply(topics.getTeasers, _topicData),\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tvar parentCids = {};\n\t\t\t\tresults.categoryData.forEach(function (category) {\n\t\t\t\t\tparentCids[category.cid] = category.parentCid;\n\t\t\t\t});\n\t\t\t\tresults.teasers.forEach(function (teaser, index) {\n\t\t\t\t\tif (teaser) {\n\t\t\t\t\t\tteaser.cid = topicData[index].cid;\n\t\t\t\t\t\tteaser.parentCid = parseInt(parentCids[teaser.cid]) || 0;\n\t\t\t\t\t\tteaser.tid = teaser.uid = teaser.user.uid = undefined;\n\t\t\t\t\t\tteaser.topic = {\n\t\t\t\t\t\t\tslug: topicData[index].slug,\n\t\t\t\t\t\t\ttitle: validator.escape(String(topicData[index].title))\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresults.teasers = results.teasers.filter(Boolean);\n\t\t\t\tnext(null, results.teasers);\n\t\t\t}\n\t\t], callback);\n\t}\n\n\tfunction assignTopicsToCategories(categories, topics) {\n\t\tcategories.forEach(function (category) {\n\t\t\tcategory.posts = topics.filter(function (topic) {\n\t\t\t\treturn topic.cid && (parseInt(topic.cid, 10) === parseInt(category.cid, 10) ||\n\t\t\t\t\tparseInt(topic.parentCid, 10) === parseInt(category.cid, 10));\n\t\t\t}).sort(function (a, b) {\n\t\t\t\treturn b.pid - a.pid;\n\t\t\t}).slice(0, parseInt(category.numRecentReplies, 10));\n\t\t});\n\t}\n\n\tfunction bubbleUpChildrenPosts(categoryData) {\n\t\tcategoryData.forEach(function (category) {\n\t\t\tif (category.posts.length) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar posts = [];\n\t\t\tgetPostsRecursive(category, posts);\n\n\t\t\tposts.sort(function (a, b) {\n\t\t\t\treturn b.pid - a.pid;\n\t\t\t});\n\t\t\tif (posts.length) {\n\t\t\t\tcategory.posts = [posts[0]];\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction getPostsRecursive(category, posts) {\n\t\tcategory.posts.forEach(function (p) {\n\t\t\tposts.push(p);\n\t\t});\n\n\t\tcategory.children.forEach(function (child) {\n\t\t\tgetPostsRecursive(child, posts);\n\t\t});\n\t}\n\n\tCategories.moveRecentReplies = function (tid, oldCid, cid, callback) {\n\t\tcallback = callback || function () {};\n\t\tupdatePostCount(tid, oldCid, cid);\n\t\ttopics.getPids(tid, function (err, pids) {\n\t\t\tif (err) {\n\t\t\t\treturn winston.error(err.message);\n\t\t\t}\n\n\t\t\tif (!Array.isArray(pids) || !pids.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tbatch.processArray(pids, function (pids, next) {\n\t\t\t\tasync.waterfall([\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tposts.getPostsFields(pids, ['timestamp'], next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (postData, next) {\n\t\t\t\t\t\tvar timestamps = postData.map(function (post) {\n\t\t\t\t\t\t\treturn post && post.timestamp;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tasync.parallel([\n\t\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\t\tdb.sortedSetRemove('cid:' + oldCid + ':pids', pids, next);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\t\tdb.sortedSetAdd('cid:' + cid + ':pids', timestamps, pids, next);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t], next);\n\t\t\t\t\t}\n\t\t\t\t], next);\n\t\t\t}, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\twinston.error(err.stack);\n\t\t\t\t}\n\t\t\t\tcallback(err);\n\t\t\t});\n\t\t});\n\t};\n\n\tfunction updatePostCount(tid, oldCid, newCid) {\n\t\ttopics.getTopicField(tid, 'postcount', function (err, postCount) {\n\t\t\tif (err) {\n\t\t\t\treturn winston.error(err.message);\n\t\t\t}\n\t\t\tif (!parseInt(postCount, 10)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tasync.parallel([\n\t\t\t\tfunction (next) {\n\t\t\t\t\tdb.incrObjectFieldBy('category:' + oldCid, 'post_count', -postCount, next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tdb.incrObjectFieldBy('category:' + newCid, 'post_count', postCount, next);\n\t\t\t\t}\n\t\t\t], function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\twinston.error(err.message);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n};\n\n\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/categories/topics.js":"'use strict';\n\nvar async = require('async');\n\nvar db = require('../database');\nvar topics = require('../topics');\nvar plugins = require('../plugins');\n\nmodule.exports = function (Categories) {\n\n\tCategories.getCategoryTopics = function (data, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tplugins.fireHook('filter:category.topics.prepare', data, next);\n\t\t\t},\n\t\t\tfunction (data, next) {\n\t\t\t\tCategories.getTopicIds(data.cid, data.set, data.reverse, data.start, data.stop, next);\n\t\t\t},\n\t\t\tfunction (tids, next) {\n\t\t\t\ttopics.getTopicsByTids(tids, data.uid, next);\n\t\t\t},\n\t\t\tfunction (topics, next) {\n\t\t\t\tif (!Array.isArray(topics) || !topics.length) {\n\t\t\t\t\treturn next(null, {topics: [], uid: data.uid});\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0; i < topics.length; ++i) {\n\t\t\t\t\ttopics[i].index = data.start + i;\n\t\t\t\t}\n\n\t\t\t\tplugins.fireHook('filter:category.topics.get', {topics: topics, uid: data.uid}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tnext(null, {topics: results.topics, nextStart: data.stop + 1});\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tCategories.getTopicIds = function (cid, set, reverse, start, stop, callback) {\n\t \tvar pinnedTids;\n\t\tvar pinnedCount;\n\t\tvar totalPinnedCount;\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tCategories.getPinnedTids(cid, 0, -1, next);\n\t\t\t},\n\t\t\tfunction (_pinnedTids, next) {\n\t\t\t\ttotalPinnedCount = _pinnedTids.length;\n\n\t\t\t\tpinnedTids = _pinnedTids.slice(start, stop === -1 ? undefined : stop + 1);\n\n\t\t\t\tpinnedCount = pinnedTids.length;\n\n\t\t\t\tvar topicsPerPage = stop - start + 1;\n\n\t\t\t\tvar normalTidsToGet = Math.max(0, topicsPerPage - pinnedCount);\n\n\t\t\t\tif (!normalTidsToGet && stop !== -1) {\n\t\t\t\t\treturn next(null, []);\n\t\t\t\t}\n\t\t\t\tif (start > 0 && totalPinnedCount) {\n\t\t\t\t\tstart -= totalPinnedCount - pinnedCount;\n\t\t\t\t}\n\t\t\t\tstop = stop === -1 ? stop : start + normalTidsToGet - 1;\n\n\t\t\t\tif (Array.isArray(set)) {\n\t\t\t\t\tdb[reverse ? 'getSortedSetRevIntersect' : 'getSortedSetIntersect']({sets: set, start: start, stop: stop}, next);\n\t\t\t\t} else {\n\t\t\t\t\tdb[reverse ? 'getSortedSetRevRange' : 'getSortedSetRange'](set, start, stop, next);\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction (normalTids, next) {\n\t\t\t\tnormalTids = normalTids.filter(function (tid) {\n\t\t\t\t\treturn pinnedTids.indexOf(tid) === -1;\n\t\t\t\t});\n\n\t\t\t\tnext(null, pinnedTids.concat(normalTids));\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tCategories.getAllTopicIds = function (cid, start, stop, callback) {\n\t\tdb.getSortedSetRange(['cid:' + cid + ':tids:pinned', 'cid:' + cid + ':tids'], start, stop, callback);\n\t};\n\n\tCategories.getPinnedTids = function (cid, start, stop, callback) {\n\t\tdb.getSortedSetRevRange('cid:' + cid + ':tids:pinned', start, stop, callback);\n\t};\n\n\tCategories.modifyTopicsByPrivilege = function (topics, privileges) {\n\t\tif (!Array.isArray(topics) || !topics.length || privileges.isAdminOrMod) {\n\t\t\treturn;\n\t\t}\n\n\t\ttopics.forEach(function (topic) {\n\t\t\tif (topic.deleted && !topic.isOwner) {\n\t\t\t\ttopic.title = '[[topic:topic_is_deleted]]';\n\t\t\t\ttopic.slug = topic.tid;\n\t\t\t\ttopic.teaser = null;\n\t\t\t\ttopic.noAnchor = true;\n\t\t\t\ttopic.tags = [];\n\t\t\t}\n\t\t});\n\t};\n\n\tCategories.getTopicIndex = function (tid, callback) {\n\t\tconsole.warn('[Categories.getTopicIndex] deprecated');\n\t\tcallback(null, 1);\n\t};\n\n\tCategories.onNewPostMade = function (cid, pinned, postData, callback) {\n\t\tif (!cid || !postData) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tasync.parallel([\n\t\t\tfunction (next) {\n\t\t\t\tdb.sortedSetAdd('cid:' + cid + ':pids', postData.timestamp, postData.pid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tdb.incrObjectField('category:' + cid, 'post_count', next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tif (parseInt(pinned, 10) === 1) {\n\t\t\t\t\tnext();\n\t\t\t\t} else {\n\t\t\t\t\tdb.sortedSetAdd('cid:' + cid + ':tids', postData.timestamp, postData.tid, next);\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tCategories.updateRecentTid(cid, postData.tid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tdb.sortedSetIncrBy('cid:' + cid + ':tids:posts', 1, postData.tid, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/categories/unread.js":"\n\"use strict\";\n\nvar async = require('async');\nvar db = require('../database');\n\nmodule.exports = function (Categories) {\n\n\tCategories.markAsRead = function (cids, uid, callback) {\n\t\tcallback = callback || function () {};\n\t\tif (!Array.isArray(cids) || !cids.length) {\n\t\t\treturn callback();\n\t\t}\n\t\tvar keys = cids.map(function (cid) {\n\t\t\treturn 'cid:' + cid + ':read_by_uid';\n\t\t});\n\n\t\tdb.isMemberOfSets(keys, uid, function (err, hasRead) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tkeys = keys.filter(function (key, index) {\n\t\t\t\treturn !hasRead[index];\n\t\t\t});\n\n\t\t\tif (!keys.length) {\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tdb.setsAdd(keys, uid, callback);\n\t\t});\n\t};\n\n\tCategories.markAsUnreadForAll = function (cid, callback) {\n\t\tif (!parseInt(cid, 10)) {\n\t\t\treturn callback();\n\t\t}\n\t\tcallback = callback || function () {};\n\t\tdb.delete('cid:' + cid + ':read_by_uid', callback);\n\t};\n\n\tCategories.hasReadCategories = function (cids, uid, callback) {\n\t\tvar sets = [];\n\n\t\tfor (var i = 0, ii = cids.length; i < ii; i++) {\n\t\t\tsets.push('cid:' + cids[i] + ':read_by_uid');\n\t\t}\n\n\t\tdb.isMemberOfSets(sets, uid, callback);\n\t};\n\n\tCategories.hasReadCategory = function (cid, uid, callback) {\n\t\tdb.isSetMember('cid:' + cid + ':read_by_uid', uid, callback);\n\t};\n\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/categories/update.js":"\n'use strict';\n\nvar async = require('async');\nvar db = require('../database');\nvar utils = require('../../public/src/utils');\nvar translator = require('../../public/src/modules/translator');\nvar plugins = require('../plugins');\n\nmodule.exports = function (Categories) {\n\n\tCategories.update = function (modified, callback) {\n\n\t\tvar cids = Object.keys(modified);\n\n\t\tasync.each(cids, function (cid, next) {\n\t\t\tupdateCategory(cid, modified[cid], next);\n\t\t}, function (err) {\n\t\t\tcallback(err, cids);\n\t\t});\n\t};\n\n\tfunction updateCategory(cid, modifiedFields, callback) {\n\t\tvar category;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tCategories.exists(cid, next);\n\t\t\t},\n\t\t\tfunction (exists, next) {\n\t\t\t\tif (!exists) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\n\t\t\t\tif (modifiedFields.hasOwnProperty('name')) {\n\t\t\t\t\ttranslator.translate(modifiedFields.name, function (translated) {\n\t\t\t\t\t\tmodifiedFields.slug = cid + '/' + utils.slugify(translated);\n\t\t\t\t\t\tnext();\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tnext();\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tplugins.fireHook('filter:category.update', {category: modifiedFields}, next);\n\t\t\t},\n\t\t\tfunction (categoryData, next) {\n\t\t\t\tcategory = categoryData.category;\n\t\t\t\tvar fields = Object.keys(category);\n\t\t\t\t// move parent to front, so its updated first\n\t\t\t\tvar parentCidIndex = fields.indexOf('parentCid');\n\t\t\t\tif (parentCidIndex !== -1 && fields.length > 1) {\n\t\t\t\t\tfields.splice(0, 0, fields.splice(parentCidIndex, 1)[0]);\n\t\t\t\t}\n\n\t\t\t\tasync.eachSeries(fields, function (key, next) {\n\t\t\t\t\tupdateCategoryField(cid, key, category[key], next);\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tplugins.fireHook('action:category.update', {cid: cid, modified: category});\n\t\t\t\tnext();\n\t\t\t}\n\t\t], callback);\n\t}\n\n\tfunction updateCategoryField(cid, key, value, callback) {\n\t\tif (key === 'parentCid') {\n\t\t\treturn updateParent(cid, value, callback);\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.setObjectField('category:' + cid, key, value, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tif (key === 'order') {\n\t\t\t\t\tupdateOrder(cid, value, next);\n\t\t\t\t} else if (key === 'description') {\n\t\t\t\t\tCategories.parseDescription(cid, value, next);\n\t\t\t\t} else {\n\t\t\t\t\tnext();\n\t\t\t\t}\n\t\t\t}\n\t\t], callback);\n\t}\n\n\tfunction updateParent(cid, newParent, callback) {\n\t\tif (parseInt(cid, 10) === parseInt(newParent, 10)) {\n\t\t\treturn callback(new Error('[[error:cant-set-self-as-parent]]'));\n\t\t}\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tCategories.getCategoryField(cid, 'parentCid', next);\n\t\t\t},\n\t\t\tfunction (oldParent, next) {\n\t\t\t\tasync.series([\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\toldParent = parseInt(oldParent, 10) || 0;\n\t\t\t\t\t\tdb.sortedSetRemove('cid:' + oldParent + ':children', cid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tnewParent = parseInt(newParent, 10) || 0;\n\t\t\t\t\t\tdb.sortedSetAdd('cid:' + newParent + ':children', cid, cid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.setObjectField('category:' + cid, 'parentCid', newParent, next);\n\t\t\t\t\t}\n\t\t\t\t], next);\n\t\t\t}\n\t\t], function (err) {\n\t\t\tcallback(err);\n\t\t});\n\t}\n\n\tfunction updateOrder(cid, order, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tCategories.getCategoryField(cid, 'parentCid', next);\n\t\t\t},\n\t\t\tfunction (parentCid, next) {\n\t\t\t\tasync.parallel([\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.sortedSetAdd('categories:cid', order, cid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tparentCid = parseInt(parentCid, 10) || 0;\n\t\t\t\t\t\tdb.sortedSetAdd('cid:' + parentCid + ':children', order, cid, next);\n\t\t\t\t\t}\n\t\t\t\t], next);\n\t\t\t}\n\t\t], function (err) {\n\t\t\tcallback(err);\n\t\t});\n\t}\n\n\tCategories.parseDescription = function (cid, description, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tplugins.fireHook('filter:parse.raw', description, next);\n\t\t\t},\n\t\t\tfunction (parsedDescription, next) {\n\t\t\t\tCategories.setCategoryField(cid, 'descriptionParsed', parsedDescription, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/accounts.js":"'use strict';\n\nvar accountsController = {\n\tprofile: require('./accounts/profile'),\n\tedit: require('./accounts/edit'),\n\tinfo: require('./accounts/info'),\n\tsettings: require('./accounts/settings'),\n\tgroups: require('./accounts/groups'),\n\tfollow: require('./accounts/follow'),\n\tposts: require('./accounts/posts'),\n\tnotifications: require('./accounts/notifications'),\n\tchats: require('./accounts/chats'),\n\tsession: require('./accounts/session')\n};\n\nmodule.exports = accountsController;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/accounts/profile.js":"'use strict';\n\nvar nconf = require('nconf');\nvar async = require('async');\nvar S = require('string');\n\nvar user = require('../../user');\nvar posts = require('../../posts');\nvar plugins = require('../../plugins');\nvar meta = require('../../meta');\nvar accountHelpers = require('./helpers');\nvar helpers = require('../helpers');\nvar pagination = require('../../pagination');\nvar messaging = require('../../messaging');\n\nvar profileController = {};\n\nprofileController.get = function (req, res, callback) {\n\tvar lowercaseSlug = req.params.userslug.toLowerCase();\n\n\tif (req.params.userslug !== lowercaseSlug) {\n\t\tif (res.locals.isAPI) {\n\t\t\treq.params.userslug = lowercaseSlug;\n\t\t} else {\n\t\t\treturn res.redirect(nconf.get('relative_path') + '/user/' + lowercaseSlug);\n\t\t}\n\t}\n\tvar page = Math.max(1, parseInt(req.query.page, 10) || 1);\n\tvar itemsPerPage = 10;\n\tvar start = (page - 1) * itemsPerPage;\n\tvar stop = start + itemsPerPage - 1;\n\tvar userData;\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\taccountHelpers.getUserDataByUserSlug(req.params.userslug, req.uid, next);\n\t\t},\n\t\tfunction (_userData, next) {\n\t\t\tif (!_userData) {\n\t\t\t\treturn callback();\n\t\t\t}\n\t\t\tuserData = _userData;\n\n\t\t\treq.session.uids_viewed = req.session.uids_viewed || {};\n\t\t\tif (req.uid !== parseInt(userData.uid, 10) && (!req.session.uids_viewed[userData.uid] || req.session.uids_viewed[userData.uid] < Date.now() - 3600000)) {\n\t\t\t\tuser.incrementUserFieldBy(userData.uid, 'profileviews', 1);\n\t\t\t\treq.session.uids_viewed[userData.uid] = Date.now();\n\t\t\t}\n\n\t\t\tasync.parallel({\n\t\t\t\thasPrivateChat: function (next) {\n\t\t\t\t\tmessaging.hasPrivateChat(req.uid, userData.uid, next);\n\t\t\t\t},\n\t\t\t\tposts: function (next) {\n\t\t\t\t\tposts.getPostSummariesFromSet('uid:' + userData.theirid + ':posts', req.uid, start, stop, next);\n\t\t\t\t},\n\t\t\t\tsignature: function (next) {\n\t\t\t\t\tposts.parseSignature(userData, req.uid, next);\n\t\t\t\t},\n\t\t\t\taboutme: function (next) {\n\t\t\t\t\tif (userData.aboutme) {\n\t\t\t\t\t\tplugins.fireHook('filter:parse.aboutme', userData.aboutme, next);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnext();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, next);\n\t\t},\n\t\tfunction (results, next) {\n\t\t\tif (parseInt(meta.config['reputation:disabled'], 10) === 1) {\n\t\t\t\tdelete userData.reputation;\n\t\t\t}\n\n\t\t\tuserData.posts = results.posts.posts.filter(function (p) {\n\t\t\t\treturn p && parseInt(p.deleted, 10) !== 1;\n\t\t\t});\n\t\t\tuserData.hasPrivateChat = results.hasPrivateChat;\n\t\t\tuserData.aboutme = results.aboutme;\n\t\t\tuserData.nextStart = results.posts.nextStart;\n\t\t\tuserData.breadcrumbs = helpers.buildBreadcrumbs([{text: userData.username}]);\n\t\t\tuserData.title = userData.username;\n\t\t\tvar pageCount = Math.ceil(userData.postcount / itemsPerPage);\n\t\t\tuserData.pagination = pagination.create(page, pageCount, req.query);\n\n\t\t\tuserData['cover:url'] = userData['cover:url'] || require('../../coverPhoto').getDefaultProfileCover(userData.uid);\n\t\t\tuserData['cover:position'] = userData['cover:position'] || '50% 50%';\n\n\t\t\tif (!parseInt(userData.profileviews, 10)) {\n\t\t\t\tuserData.profileviews = 1;\n\t\t\t}\n\n\t\t\tvar plainAboutMe = userData.aboutme ? S(userData.aboutme).decodeHTMLEntities().stripTags().s : '';\n\n\t\t\tres.locals.metaTags = [\n\t\t\t\t{\n\t\t\t\t\tname: \"title\",\n\t\t\t\t\tcontent: userData.fullname || userData.username\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"description\",\n\t\t\t\t\tcontent: plainAboutMe\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'og:title',\n\t\t\t\t\tcontent: userData.fullname || userData.username\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'og:description',\n\t\t\t\t\tcontent: plainAboutMe\n\t\t\t\t}\n\t\t\t];\n\n\t\t\tif (userData.picture) {\n\t\t\t\tres.locals.metaTags.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tproperty: 'og:image',\n\t\t\t\t\t\tcontent: userData.picture,\n\t\t\t\t\t\tnoEscape: true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tproperty: \"og:image:url\",\n\t\t\t\t\t\tcontent: userData.picture,\n\t\t\t\t\t\tnoEscape: true\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t\tuserData.selectedGroup = userData.groups.find(function (group) {\n\t\t\t\treturn group && group.name === userData.groupTitle;\n\t\t\t});\n\n\t\t\tplugins.fireHook('filter:user.account', {userData: userData, uid: req.uid}, next);\n\t\t}\n\t], function (err, results) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\t\tres.render('account/profile', results.userData);\n\t});\n};\n\nmodule.exports = profileController;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/admin.js":"\"use strict\";\n\nvar adminController = {\n\tdashboard: require('./admin/dashboard'),\n\tcategories: require('./admin/categories'),\n\ttags: require('./admin/tags'),\n\tflags: require('./admin/flags'),\n\tblacklist: require('./admin/blacklist'),\n\tgroups: require('./admin/groups'),\n\tappearance: require('./admin/appearance'),\n\textend: {\n\t\twidgets: require('./admin/widgets'),\n\t\trewards: require('./admin/rewards')\n\t},\n\tevents: require('./admin/events'),\n\tlogs: require('./admin/logs'),\n\terrors: require('./admin/errors'),\n\tdatabase: require('./admin/database'),\n\tcache: require('./admin/cache'),\n\tplugins: require('./admin/plugins'),\n\tlanguages: require('./admin/languages'),\n\tsettings: require('./admin/settings'),\n\tlogger: require('./admin/logger'),\n\tsounds: require('./admin/sounds'),\n\thomepage: require('./admin/homepage'),\n\tnavigation: require('./admin/navigation'),\n\tsocial: require('./admin/social'),\n\tthemes: require('./admin/themes'),\n\tusers: require('./admin/users'),\n\tuploads: require('./admin/uploads'),\n\tinfo: require('./admin/info')\n};\n\n\nmodule.exports = adminController;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/admin/dashboard.js":"'use strict';\n\nvar async = require('async');\nvar nconf = require('nconf');\n\nvar db = require('../../database');\nvar meta = require('../../meta');\nvar plugins = require('../../plugins');\n\nvar dashboardController = {};\n\n\ndashboardController.get = function (req, res, next) {\n\tasync.parallel({\n\t\tstats: function (next) {\n\t\t\tgetStats(next);\n\t\t},\n\t\tnotices: function (next) {\n\t\t\tvar notices = [\n\t\t\t\t{\n\t\t\t\t\tdone: !meta.reloadRequired,\n\t\t\t\t\tdoneText: 'Restart not required',\n\t\t\t\t\tnotDoneText:'Restart required'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdone: plugins.hasListeners('filter:search.query'),\n\t\t\t\t\tdoneText: 'Search Plugin Installed',\n\t\t\t\t\tnotDoneText:'Search Plugin not installed',\n\t\t\t\t\ttooltip: 'Install a search plugin from the plugin page in order to activate search functionality',\n\t\t\t\t\tlink:'/admin/extend/plugins'\n\t\t\t\t}\n\t\t\t];\n\t\t\tplugins.fireHook('filter:admin.notices', notices, next);\n\t\t}\n\t}, function (err, results) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\t\tres.render('admin/general/dashboard', {\n\t\t\tversion: nconf.get('version'),\n\t\t\tnotices: results.notices,\n\t\t\tstats: results.stats\n\t\t});\n\t});\n};\n\nfunction getStats(callback) {\n\tasync.parallel([\n\t\tfunction (next) {\n\t\t\tgetStatsForSet('ip:recent', 'uniqueIPCount', next);\n\t\t},\n\t\tfunction (next) {\n\t\t\tgetStatsForSet('users:joindate', 'userCount', next);\n\t\t},\n\t\tfunction (next) {\n\t\t\tgetStatsForSet('posts:pid', 'postCount', next);\n\t\t},\n\t\tfunction (next) {\n\t\t\tgetStatsForSet('topics:tid', 'topicCount', next);\n\t\t}\n\t], function (err, results) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\t\tresults[0].name = 'Unique Visitors';\n\t\tresults[1].name = 'Users';\n\t\tresults[2].name = 'Posts';\n\t\tresults[3].name = 'Topics';\n\n\t\tcallback(null, results);\n\t});\n}\n\nfunction getStatsForSet(set, field, callback) {\n\tvar terms = {\n\t\tday: 86400000,\n\t\tweek: 604800000,\n\t\tmonth: 2592000000\n\t};\n\n\tvar now = Date.now();\n\tasync.parallel({\n\t\tday: function (next) {\n\t\t\tdb.sortedSetCount(set, now - terms.day, '+inf', next);\n\t\t},\n\t\tweek: function (next) {\n\t\t\tdb.sortedSetCount(set, now - terms.week, '+inf', next);\n\t\t},\n\t\tmonth: function (next) {\n\t\t\tdb.sortedSetCount(set, now - terms.month, '+inf', next);\n\t\t},\n\t\talltime: function (next) {\n\t\t\tgetGlobalField(field, next);\n\t\t}\n\t}, callback);\n}\n\nfunction getGlobalField(field, callback) {\n\tdb.getObjectField('global', field, function (err, count) {\n\t\tcallback(err, parseInt(count, 10) || 0);\n\t});\n}\n\nmodule.exports = dashboardController;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/api.js":"\"use strict\";\n\nvar async = require('async');\nvar validator = require('validator');\nvar nconf = require('nconf');\n\nvar meta = require('../meta');\nvar user = require('../user');\nvar posts = require('../posts');\nvar topics = require('../topics');\nvar categories = require('../categories');\nvar privileges = require('../privileges');\nvar plugins = require('../plugins');\nvar widgets = require('../widgets');\nvar translator = require('../../public/src/modules/translator');\nvar accountHelpers = require('../controllers/accounts/helpers');\n\nvar apiController = {};\n\napiController.getConfig = function (req, res, next) {\n\tvar config = {};\n\tconfig.environment = process.env.NODE_ENV;\n\tconfig.relative_path = nconf.get('relative_path');\n\tconfig.version = nconf.get('version');\n\tconfig.siteTitle = validator.escape(String(meta.config.title || meta.config.browserTitle || 'NodeBB'));\n\tconfig.browserTitle = validator.escape(String(meta.config.browserTitle || meta.config.title || 'NodeBB'));\n\tconfig.titleLayout = (meta.config.titleLayout || '{pageTitle} | {browserTitle}').replace(/{/g, '&#123;').replace(/}/g, '&#125;');\n\tconfig.showSiteTitle = parseInt(meta.config.showSiteTitle, 10) === 1;\n\tconfig.minimumTitleLength = meta.config.minimumTitleLength;\n\tconfig.maximumTitleLength = meta.config.maximumTitleLength;\n\tconfig.minimumPostLength = meta.config.minimumPostLength;\n\tconfig.maximumPostLength = meta.config.maximumPostLength;\n\tconfig.minimumTagsPerTopic = meta.config.minimumTagsPerTopic || 0;\n\tconfig.maximumTagsPerTopic = meta.config.maximumTagsPerTopic || 5;\n\tconfig.minimumTagLength = meta.config.minimumTagLength || 3;\n\tconfig.maximumTagLength = meta.config.maximumTagLength || 15;\n\tconfig.hasImageUploadPlugin = plugins.hasListeners('filter:uploadImage');\n\tconfig.useOutgoingLinksPage = parseInt(meta.config.useOutgoingLinksPage, 10) === 1;\n\tconfig.allowGuestSearching = parseInt(meta.config.allowGuestSearching, 10) === 1;\n\tconfig.allowGuestUserSearching = parseInt(meta.config.allowGuestUserSearching, 10) === 1;\n\tconfig.allowGuestHandles = parseInt(meta.config.allowGuestHandles, 10) === 1;\n\tconfig.allowFileUploads = parseInt(meta.config.allowFileUploads, 10) === 1;\n\tconfig.allowTopicsThumbnail = parseInt(meta.config.allowTopicsThumbnail, 10) === 1;\n\tconfig.usePagination = parseInt(meta.config.usePagination, 10) === 1;\n\tconfig.disableChat = parseInt(meta.config.disableChat, 10) === 1;\n\tconfig.disableChatMessageEditing = parseInt(meta.config.disableChatMessageEditing, 10) === 1;\n\tconfig.socketioTransports = nconf.get('socket.io:transports') || ['polling', 'websocket'];\n\tconfig.websocketAddress = nconf.get('socket.io:address') || '';\n\tconfig.maxReconnectionAttempts = meta.config.maxReconnectionAttempts || 5;\n\tconfig.reconnectionDelay = meta.config.reconnectionDelay || 1500;\n\tconfig.topicsPerPage = meta.config.topicsPerPage || 20;\n\tconfig.postsPerPage = meta.config.postsPerPage || 20;\n\tconfig.maximumFileSize = meta.config.maximumFileSize;\n\tconfig['theme:id'] = meta.config['theme:id'];\n\tconfig['theme:src'] = meta.config['theme:src'];\n\tconfig.defaultLang = meta.config.defaultLang || 'en-GB';\n\tconfig.userLang = req.query.lang ? validator.escape(String(req.query.lang)) : config.defaultLang;\n\tconfig.loggedIn = !!req.user;\n\tconfig['cache-buster'] = meta.config['cache-buster'] || '';\n\tconfig.requireEmailConfirmation = parseInt(meta.config.requireEmailConfirmation, 10) === 1;\n\tconfig.topicPostSort = meta.config.topicPostSort || 'oldest_to_newest';\n\tconfig.categoryTopicSort = meta.config.categoryTopicSort || 'newest_to_oldest';\n\tconfig.csrf_token = req.csrfToken();\n\tconfig.searchEnabled = plugins.hasListeners('filter:search.query');\n\tconfig.bootswatchSkin = 'default';\n\n\tvar timeagoCutoff = meta.config.timeagoCutoff === undefined ? 30 : meta.config.timeagoCutoff;\n\tconfig.timeagoCutoff = timeagoCutoff !== '' ? Math.max(0, parseInt(timeagoCutoff, 10)) : timeagoCutoff;\n\n\tconfig.cookies = {\n\t\tenabled: parseInt(meta.config.cookieConsentEnabled, 10) === 1,\n\t\tmessage: translator.escape(meta.config.cookieConsentMessage || '[[global:cookies.message]]').replace(/\\\\/g, '\\\\\\\\'),\n\t\tdismiss: translator.escape(meta.config.cookieConsentDismiss || '[[global:cookies.accept]]').replace(/\\\\/g, '\\\\\\\\'),\n\t\tlink: translator.escape(meta.config.cookieConsentLink || '[[global:cookies.learn_more]]').replace(/\\\\/g, '\\\\\\\\')\n\t};\n\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tif (!req.user) {\n\t\t\t\treturn next(null, config);\n\t\t\t}\n\t\t\tuser.getSettings(req.uid, next);\n\t\t},\n\t\tfunction (settings, next) {\n\t\t\tconfig.usePagination = settings.usePagination;\n\t\t\tconfig.topicsPerPage = settings.topicsPerPage;\n\t\t\tconfig.postsPerPage = settings.postsPerPage;\n\t\t\tconfig.userLang = (req.query.lang ? validator.escape(String(req.query.lang)) : null) || settings.userLang || config.defaultLang;\n\t\t\tconfig.openOutgoingLinksInNewTab = settings.openOutgoingLinksInNewTab;\n\t\t\tconfig.topicPostSort = settings.topicPostSort || config.topicPostSort;\n\t\t\tconfig.categoryTopicSort = settings.categoryTopicSort || config.categoryTopicSort;\n\t\t\tconfig.topicSearchEnabled = settings.topicSearchEnabled || false;\n\t\t\tconfig.delayImageLoading = settings.delayImageLoading !== undefined ? settings.delayImageLoading : true;\n\t\t\tconfig.bootswatchSkin = settings.bootswatchSkin || config.bootswatchSkin;\n\t\t\tplugins.fireHook('filter:config.get', config, next);\n\t\t}\n\t], function (err, config) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tif (res.locals.isAPI) {\n\t\t\tres.json(config);\n\t\t} else {\n\t\t\tnext(null, config);\n\t\t}\n\t});\n};\n\n\napiController.renderWidgets = function (req, res, next) {\n\tvar areas = {\n\t\ttemplate: req.query.template,\n\t\tlocations: req.query.locations,\n\t\turl: req.query.url\n\t};\n\n\tif (!areas.template || !areas.locations) {\n\t\treturn res.status(200).json({});\n\t}\n\n\twidgets.render(req.uid,\n\t\t{\n\t\t\ttemplate: areas.template,\n\t\t\turl: areas.url,\n\t\t\tlocations: areas.locations,\n\t\t\tisMobile: req.query.isMobile === 'true'\n\t\t},\n\t\treq,\n\t\tres,\n\t\tfunction (err, widgets) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\t\tres.status(200).json(widgets);\n\t});\n};\n\napiController.getPostData = function (pid, uid, callback) {\n\tasync.parallel({\n\t\tprivileges: function (next) {\n\t\t\tprivileges.posts.get([pid], uid, next);\n\t\t},\n\t\tpost: function (next) {\n\t\t\tposts.getPostData(pid, next);\n\t\t}\n\t}, function (err, results) {\n\t\tif (err || !results.post) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tvar post = results.post;\n\t\tvar privileges = results.privileges[0];\n\n\t\tif (!privileges.read || !privileges['topics:read']) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tpost.ip = privileges.isAdminOrMod ? post.ip : undefined;\n\t\tvar selfPost = uid && uid === parseInt(post.uid, 10);\n\t\tif (post.deleted && !(privileges.isAdminOrMod || selfPost)) {\n\t\t\tpost.content = '[[topic:post_is_deleted]]';\n\t\t}\n\t\tcallback(null, post);\n\t});\n};\n\napiController.getTopicData = function (tid, uid, callback) {\n\tasync.parallel({\n\t\tprivileges: function (next) {\n\t\t\tprivileges.topics.get(tid, uid, next);\n\t\t},\n\t\ttopic: function (next) {\n\t\t\ttopics.getTopicData(tid, next);\n\t\t}\n\t}, function (err, results) {\n\t\tif (err || !results.topic) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tif (!results.privileges.read || !results.privileges['topics:read'] || (parseInt(results.topic.deleted, 10) && !results.privileges.view_deleted)) {\n\t\t\treturn callback();\n\t\t}\n\t\tcallback(null, results.topic);\n\t});\n};\n\napiController.getCategoryData = function (cid, uid, callback) {\n\tasync.parallel({\n\t\tprivileges: function (next) {\n\t\t\tprivileges.categories.get(cid, uid, next);\n\t\t},\n\t\tcategory: function (next) {\n\t\t\tcategories.getCategoryData(cid, next);\n\t\t}\n\t}, function (err, results) {\n\t\tif (err || !results.category) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tif (!results.privileges.read) {\n\t\t\treturn callback();\n\t\t}\n\t\tcallback(null, results.category);\n\t});\n};\n\n\napiController.getObject = function (req, res, next) {\n\tvar methods = {\n\t\tpost: apiController.getPostData,\n\t\ttopic: apiController.getTopicData,\n\t\tcategory: apiController.getCategoryData\n\t};\n\tvar method = methods[req.params.type];\n\tif (!method) {\n\t\treturn next();\n\t}\n\tmethod(req.params.id, req.uid, function (err, result) {\n\t\tif (err || !result) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tres.json(result);\n\t});\n};\n\napiController.getCurrentUser = function (req, res, next) {\n\tif (!req.uid) {\n\t\treturn res.status(401).json('not-authorized');\n\t}\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tuser.getUserField(req.uid, 'userslug', next);\n\t\t},\n\t\tfunction (userslug, next) {\n\t\t\taccountHelpers.getUserDataByUserSlug(userslug, req.uid, next);\n\t\t}\n\t], function (err, userData) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\t\tres.json(userData);\n\t});\n};\n\napiController.getUserByUID = function (req, res, next) {\n\tbyType('uid', req, res, next);\n};\n\napiController.getUserByUsername = function (req, res, next) {\n\tbyType('username', req, res, next);\n};\n\napiController.getUserByEmail = function (req, res, next) {\n\tbyType('email', req, res, next);\n};\n\nfunction byType(type, req, res, next) {\n\tapiController.getUserDataByField(req.uid, type, req.params[type], function (err, data) {\n\t\tif (err || !data) {\n\t\t\treturn next(err);\n\t\t}\n\t\tres.json(data);\n\t});\n}\n\napiController.getUserDataByField = function (callerUid, field, fieldValue, callback) {\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tif (field === 'uid') {\n\t\t\t\tnext(null, fieldValue);\n\t\t\t} else if (field === 'username') {\n\t\t\t\tuser.getUidByUsername(fieldValue, next);\n\t\t\t} else if (field === 'email') {\n\t\t\t\tuser.getUidByEmail(fieldValue, next);\n\t\t\t} else {\n\t\t\t\tnext();\n\t\t\t}\n\t\t},\n\t\tfunction (uid, next) {\n\t\t\tif (!uid) {\n\t\t\t\treturn next();\n\t\t\t}\n\t\t\tapiController.getUserDataByUID(callerUid, uid, next);\n\t\t}\n\t], callback);\n};\n\napiController.getUserDataByUID = function (callerUid, uid, callback) {\n\tif (!parseInt(callerUid, 10) && parseInt(meta.config.privateUserInfo, 10) === 1) {\n\t\treturn callback(new Error('[[error:no-privileges]]'));\n\t}\n\n\tif (!parseInt(uid, 10)) {\n\t\treturn callback(new Error('[[error:no-user]]'));\n\t}\n\n\tasync.parallel({\n\t\tuserData: async.apply(user.getUserData, uid),\n\t\tsettings: async.apply(user.getSettings, uid)\n\t}, function (err, results) {\n\t\tif (err || !results.userData) {\n\t\t\treturn callback(err || new Error('[[error:no-user]]'));\n\t\t}\n\n\t\tresults.userData.email = results.settings.showemail ? results.userData.email : undefined;\n\t\tresults.userData.fullname = results.settings.showfullname ? results.userData.fullname : undefined;\n\n\t\tcallback(null, results.userData);\n\t});\n};\n\napiController.getModerators = function (req, res, next) {\n\tcategories.getModerators(req.params.cid, function (err, moderators) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\t\tres.json({moderators: moderators});\n\t});\n};\n\n\napiController.getRecentPosts = function (req, res, next) {\n\tposts.getRecentPosts(req.uid, 0, 19, req.params.term, function (err, data) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tres.json(data);\n\t});\n};\n\nmodule.exports = apiController;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/authentication.js":"\"use strict\";\n\nvar async = require('async');\nvar winston = require('winston');\nvar passport = require('passport');\nvar nconf = require('nconf');\nvar validator = require('validator');\nvar _ = require('underscore');\nvar url = require('url');\n\nvar db = require('../database');\nvar meta = require('../meta');\nvar user = require('../user');\nvar plugins = require('../plugins');\nvar utils = require('../../public/src/utils');\nvar Password = require('../password');\n\nvar sockets = require('../socket.io');\n\nvar authenticationController = {};\n\nauthenticationController.register = function (req, res, next) {\n\tvar registrationType = meta.config.registrationType || 'normal';\n\n\tif (registrationType === 'disabled') {\n\t\treturn res.sendStatus(403);\n\t}\n\n\tvar userData = {};\n\n\tfor (var key in req.body) {\n\t\tif (req.body.hasOwnProperty(key)) {\n\t\t\tuserData[key] = req.body[key];\n\t\t}\n\t}\n\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tif (registrationType === 'invite-only' || registrationType === 'admin-invite-only') {\n\t\t\t\tuser.verifyInvitation(userData, next);\n\t\t\t} else {\n\t\t\t\tnext();\n\t\t\t}\n\t\t},\n\t\tfunction (next) {\n\t\t\tif (!userData.email) {\n\t\t\t\treturn next(new Error('[[error:invalid-email]]'));\n\t\t\t}\n\n\t\t\tif (!userData.username || userData.username.length < meta.config.minimumUsernameLength) {\n\t\t\t\treturn next(new Error('[[error:username-too-short]]'));\n\t\t\t}\n\n\t\t\tif (userData.username.length > meta.config.maximumUsernameLength) {\n\t\t\t\treturn next(new Error('[[error:username-too-long'));\n\t\t\t}\n\n\t\t\tuser.isPasswordValid(userData.password, next);\n\t\t},\n\t\tfunction (next) {\n\t\t\tif (registrationType === 'normal' || registrationType === 'invite-only' || registrationType === 'admin-invite-only') {\n\t\t\t\tnext(null, false);\n\t\t\t} else if (registrationType === 'admin-approval') {\n\t\t\t\tnext(null, true);\n\t\t\t} else if (registrationType === 'admin-approval-ip') {\n\t\t\t\tdb.sortedSetCard('ip:' + req.ip + ':uid', function (err, count) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tnext(err);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnext(null, !!count);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tfunction (queue, next) {\n\t\t\tres.locals.processLogin = true;\t// set it to false in plugin if you wish to just register only\n\t\t\tplugins.fireHook('filter:register.check', {req: req, res: res, userData: userData, queue: queue}, next);\n\t\t},\n\t\tfunction (data, next) {\n\t\t\tif (data.queue) {\n\t\t\t\taddToApprovalQueue(req, userData, next);\n\t\t\t} else {\n\t\t\t\tregisterAndLoginUser(req, res, userData, next);\n\t\t\t}\n\t\t}\n\t], function (err, data) {\n\t\tif (err) {\n\t\t\treturn res.status(400).send(err.message);\n\t\t}\n\n\t\tif (req.body.userLang) {\n\t\t\tuser.setSetting(data.uid, 'userLang', req.body.userLang);\n\t\t}\n\n\t\tres.json(data);\n\t});\n};\n\nfunction registerAndLoginUser(req, res, userData, callback) {\n\tvar uid;\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tplugins.fireHook('filter:register.interstitial', {\n\t\t\t\tuserData: userData,\n\t\t\t\tinterstitials: []\n\t\t\t}, function (err, data) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn next(err);\n\t\t\t\t}\n\n\t\t\t\t// If interstitials are found, save registration attempt into session and abort\n\t\t\t\tvar deferRegistration = data.interstitials.length;\n\n\t\t\t\tif (!deferRegistration) {\n\t\t\t\t\treturn next();\n\t\t\t\t} else {\n\t\t\t\t\tuserData.register = true;\n\t\t\t\t\treq.session.registration = userData;\n\t\t\t\t\treturn res.json({ referrer: nconf.get('relative_path') + '/register/complete' });\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tfunction (next) {\n\t\t\tuser.create(userData, next);\n\t\t},\n\t\tfunction (_uid, next) {\n\t\t\tuid = _uid;\n\t\t\tif (res.locals.processLogin) {\n\t\t\t\tauthenticationController.doLogin(req, uid, next);\n\t\t\t} else {\n\t\t\t\tnext();\n\t\t\t}\n\t\t},\n\t\tfunction (next) {\n\t\t\tuser.deleteInvitationKey(userData.email);\n\t\t\tplugins.fireHook('filter:register.complete', {uid: uid, referrer: req.body.referrer || nconf.get('relative_path') + '/'}, next);\n\t\t}\n\t], callback);\n}\n\nfunction addToApprovalQueue(req, userData, callback) {\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tuserData.ip = req.ip;\n\t\t\tuser.addToApprovalQueue(userData, next);\n\t\t},\n\t\tfunction (next) {\n\t\t\tnext(null, {message: '[[register:registration-added-to-queue]]'});\n\t\t}\n\t], callback);\n}\n\nauthenticationController.registerComplete = function (req, res, next) {\n\t// For the interstitials that respond, execute the callback with the form body\n\tplugins.fireHook('filter:register.interstitial', {\n\t\tuserData: req.session.registration,\n\t\tinterstitials: []\n\t}, function (err, data) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tvar callbacks = data.interstitials.reduce(function (memo, cur) {\n\t\t\tif (cur.hasOwnProperty('callback') && typeof cur.callback === 'function') {\n\t\t\t\tmemo.push(async.apply(cur.callback, req.session.registration, req.body));\n\t\t\t}\n\n\t\t\treturn memo;\n\t\t}, []);\n\n\t\tvar done = function () {\n\t\t\tdelete req.session.registration;\n\n\t\t\tif (req.session.returnTo) {\n\t\t\t\tres.redirect(req.session.returnTo);\n\t\t\t} else {\n\t\t\t\tres.redirect(nconf.get('relative_path') + '/');\n\t\t\t}\n\t\t};\n\n\t\tasync.parallel(callbacks, function (err) {\n\t\t\tif (err) {\n\t\t\t\treq.flash('error', err.message);\n\t\t\t\treturn res.redirect(nconf.get('relative_path') + '/register/complete');\n\t\t\t}\n\n\t\t\tif (req.session.registration.register === true) {\n\t\t\t\tres.locals.processLogin = true;\n\t\t\t\tregisterAndLoginUser(req, res, req.session.registration, done);\n\t\t\t} else {\n\t\t\t\t// Clear registration data in session\n\t\t\t\tdone();\n\t\t\t}\n\t\t});\n\t});\n};\n\nauthenticationController.registerAbort = function (req, res) {\n\t// End the session and redirect to home\n\treq.session.destroy(function () {\n\t\tres.redirect(nconf.get('relative_path') + '/');\n\t});\n};\n\nauthenticationController.login = function (req, res, next) {\n\tif (plugins.hasListeners('action:auth.overrideLogin')) {\n\t\treturn continueLogin(req, res, next);\n\t}\n\n\tvar loginWith = meta.config.allowLoginWith || 'username-email';\n\n\tif (req.body.username && utils.isEmailValid(req.body.username) && loginWith.indexOf('email') !== -1) {\n\t\tuser.getUsernameByEmail(req.body.username, function (err, username) {\n\t\t\tif (err) {\n\t\t\t\treturn next(err);\n\t\t\t}\n\t\t\treq.body.username = username ? username : req.body.username;\n\t\t\tcontinueLogin(req, res, next);\n\t\t});\n\t} else if (loginWith.indexOf('username') !== -1 && !validator.isEmail(req.body.username)) {\n\t\tcontinueLogin(req, res, next);\n\t} else {\n\t\tres.status(500).send('[[error:wrong-login-type-' + loginWith + ']]');\n\t}\n};\n\nfunction continueLogin(req, res, next) {\n\tpassport.authenticate('local', function (err, userData, info) {\n\t\tif (err) {\n\t\t\treturn res.status(403).send(err.message);\n\t\t}\n\n\t\tif (!userData) {\n\t\t\tif (typeof info === 'object') {\n\t\t\t\tinfo = '[[error:invalid-username-or-password]]';\n\t\t\t}\n\n\t\t\treturn res.status(403).send(info);\n\t\t}\n\n\t\tvar passwordExpiry = userData.passwordExpiry !== undefined ? parseInt(userData.passwordExpiry, 10) : null;\n\n\t\t// Alter user cookie depending on passed-in option\n\t\tif (req.body.remember === 'on') {\n\t\t\tvar duration = 1000 * 60 * 60 * 24 * (parseInt(meta.config.loginDays, 10) || 14);\n\t\t\treq.session.cookie.maxAge = duration;\n\t\t\treq.session.cookie.expires = new Date(Date.now() + duration);\n\t\t} else {\n\t\t\treq.session.cookie.maxAge = false;\n\t\t\treq.session.cookie.expires = false;\n\t\t}\n\n\t\tif (passwordExpiry && passwordExpiry < Date.now()) {\n\t\t\twinston.verbose('[auth] Triggering password reset for uid ' + userData.uid + ' due to password policy');\n\t\t\treq.session.passwordExpired = true;\n\t\t\tuser.reset.generate(userData.uid, function (err, code) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn res.status(403).send(err.message);\n\t\t\t\t}\n\n\t\t\t\tres.status(200).send(nconf.get('relative_path') + '/reset/' + code);\n\t\t\t});\n\t\t} else {\n\t\t\tauthenticationController.doLogin(req, userData.uid, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn res.status(403).send(err.message);\n\t\t\t\t}\n\n\t\t\t\tif (!req.session.returnTo) {\n\t\t\t\t\tres.status(200).send(nconf.get('relative_path') + '/');\n\t\t\t\t} else {\n\t\t\t\t\tvar next = req.session.returnTo;\n\t\t\t\t\tdelete req.session.returnTo;\n\n\t\t\t\t\tres.status(200).send(next);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t})(req, res, next);\n}\n\nauthenticationController.doLogin = function (req, uid, callback) {\n\tif (!uid) {\n\t\treturn callback();\n\t}\n\n\treq.login({uid: uid}, function (err) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tauthenticationController.onSuccessfulLogin(req, uid, callback);\n\t});\n};\n\nauthenticationController.onSuccessfulLogin = function (req, uid, callback) {\n\tcallback = callback || function () {};\n\tvar uuid = utils.generateUUID();\n\treq.session.meta = {};\n\n\tdelete req.session.forceLogin;\n\n\t// Associate IP used during login with user account\n\tuser.logIP(uid, req.ip);\n\treq.session.meta.ip = req.ip;\n\n\t// Associate metadata retrieved via user-agent\n\treq.session.meta = _.extend(req.session.meta, {\n\t\tuuid: uuid,\n\t\tdatetime: Date.now(),\n\t\tplatform: req.useragent.platform,\n\t\tbrowser: req.useragent.browser,\n\t\tversion: req.useragent.version\n\t});\n\n\t// Associate login session with user\n\tasync.parallel([\n\t\tfunction (next) {\n\t\t\tuser.auth.addSession(uid, req.sessionID, next);\n\t\t},\n\t\tfunction (next) {\n\t\t\tdb.setObjectField('uid:' + uid + 'sessionUUID:sessionId', uuid, req.sessionID, next);\n\t\t},\n\t\tfunction (next) {\n\t\t\tuser.updateLastOnlineTime(uid, next);\n\t\t}\n\t], function (err) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\t// Force session check for all connected socket.io clients with the same session id\n\t\tsockets.in('sess_' + req.sessionID).emit('checkSession', uid);\n\n\t\tplugins.fireHook('action:user.loggedIn', uid);\n\t\tcallback();\n\t});\n};\n\nauthenticationController.localLogin = function (req, username, password, next) {\n\tif (!username) {\n\t\treturn next(new Error('[[error:invalid-username]]'));\n\t}\n\n\tvar userslug = utils.slugify(username);\n\tvar uid, userData = {};\n\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tuser.isPasswordValid(password, next);\n\t\t},\n\t\tfunction (next) {\n\t\t\tuser.getUidByUserslug(userslug, next);\n\t\t},\n\t\tfunction (_uid, next) {\n\t\t\tif (!_uid) {\n\t\t\t\treturn next(new Error('[[error:no-user]]'));\n\t\t\t}\n\t\t\tuid = _uid;\n\t\t\tuser.auth.logAttempt(uid, req.ip, next);\n\t\t},\n\t\tfunction (next) {\n\t\t\tasync.parallel({\n\t\t\t\tuserData: function (next) {\n\t\t\t\t\tdb.getObjectFields('user:' + uid, ['password', 'passwordExpiry'], next);\n\t\t\t\t},\n\t\t\t\tisAdmin: function (next) {\n\t\t\t\t\tuser.isAdministrator(uid, next);\n\t\t\t\t},\n\t\t\t\tbanned: function (next) {\n\t\t\t\t\tuser.isBanned(uid, next);\n\t\t\t\t}\n\t\t\t}, next);\n\t\t},\n\t\tfunction (result, next) {\n\t\t\tuserData = result.userData;\n\t\t\tuserData.uid = uid;\n\t\t\tuserData.isAdmin = result.isAdmin;\n\n\t\t\tif (!result.isAdmin && parseInt(meta.config.allowLocalLogin, 10) === 0) {\n\t\t\t\treturn next(new Error('[[error:local-login-disabled]]'));\n\t\t\t}\n\t\t\tif (!userData || !userData.password) {\n\t\t\t\treturn next(new Error('[[error:invalid-user-data]]'));\n\t\t\t}\n\t\t\tif (result.banned) {\n\t\t\t\t// Retrieve ban reason and show error\n\t\t\t\treturn user.getLatestBanInfo(uid, function (err, banInfo) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tif (err.message === 'no-ban-info') {\n\t\t\t\t\t\t\tnext(new Error('[[error:user-banned]]'));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnext(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (banInfo.reason) {\n\t\t\t\t\t\tnext(new Error('[[error:user-banned-reason, ' + banInfo.reason + ']]'));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnext(new Error('[[error:user-banned]]'));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tPassword.compare(password, userData.password, next);\n\t\t},\n\t\tfunction (passwordMatch, next) {\n\t\t\tif (!passwordMatch) {\n\t\t\t\treturn next(new Error('[[error:invalid-password]]'));\n\t\t\t}\n\t\t\tuser.auth.clearLoginAttempts(uid);\n\t\t\tnext(null, userData, '[[success:authentication-successful]]');\n\t\t}\n\t], next);\n};\n\nauthenticationController.logout = function (req, res, next) {\n\tif (req.user && parseInt(req.user.uid, 10) > 0 && req.sessionID) {\n\t\tvar uid = parseInt(req.user.uid, 10);\n\t\tvar sessionID = req.sessionID;\n\n\t\tuser.auth.revokeSession(sessionID, uid, function (err) {\n\t\t\tif (err) {\n\t\t\t\treturn next(err);\n\t\t\t}\n\t\t\treq.logout();\n\t\t\treq.session.destroy();\n\n\t\t\tuser.setUserField(uid, 'lastonline', Date.now() - 300000);\n\n\t\t\tplugins.fireHook('static:user.loggedOut', {req: req, res: res, uid: uid}, function () {\n\t\t\t\tres.status(200).send('');\n\n\t\t\t\t// Force session check for all connected socket.io clients with the same session id\n\t\t\t\tsockets.in('sess_' + sessionID).emit('checkSession', 0);\n\t\t\t});\n\t\t});\n\t} else {\n\t\tres.status(200).send('');\n\t}\n};\n\n\nmodule.exports = authenticationController;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/categories.js":"\"use strict\";\n\nvar async = require('async');\nvar nconf = require('nconf');\nvar validator = require('validator');\n\nvar categories = require('../categories');\nvar meta = require('../meta');\nvar helpers = require('./helpers');\n\nvar categoriesController = {};\n\ncategoriesController.list = function (req, res, next) {\n\tres.locals.metaTags = [{\n\t\tname: \"title\",\n\t\tcontent: validator.escape(String(meta.config.title || 'NodeBB'))\n\t}, {\n\t\tname: \"description\",\n\t\tcontent: validator.escape(String(meta.config.description || ''))\n\t}, {\n\t\tproperty: 'og:title',\n\t\tcontent: '[[pages:categories]]'\n\t}, {\n\t\tproperty: 'og:type',\n\t\tcontent: 'website'\n\t}];\n\n\tvar ogImage = meta.config['og:image'] || meta.config['brand:logo'] || '';\n\tif (ogImage) {\n\t\tif (!ogImage.startsWith('http')) {\n\t\t\togImage = nconf.get('url') + ogImage;\n\t\t}\n\t\tres.locals.metaTags.push({\n\t\t\tproperty: 'og:image',\n\t\t\tcontent: ogImage\n\t\t});\n\t}\n\n\tvar categoryData;\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tcategories.getCategoriesByPrivilege('cid:0:children', req.uid, 'find', next);\n\t\t},\n\t\tfunction (_categoryData, next) {\n\t\t\tcategoryData = _categoryData;\n\n\t\t\tvar allCategories = [];\n\t\t\tcategories.flattenCategories(allCategories, categoryData);\n\n\t\t\tcategories.getRecentTopicReplies(allCategories, req.uid, next);\n\t\t}\n\t], function (err) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tvar data = {\n\t\t\ttitle: '[[pages:categories]]',\n\t\t\tcategories: categoryData\n\t\t};\n\n\t\tif (req.path.startsWith('/api/categories') || req.path.startsWith('/categories')) {\n\t\t\tdata.breadcrumbs = helpers.buildBreadcrumbs([{text: data.title}]);\n\t\t}\n\n\t\tdata.categories.forEach(function (category) {\n\t\t\tif (category && Array.isArray(category.posts) && category.posts.length) {\n\t\t\t\tcategory.teaser = {\n\t\t\t\t\turl: nconf.get('relative_path') + '/topic/' + category.posts[0].topic.slug + '/' + category.posts[0].index,\n\t\t\t\t\ttimestampISO: category.posts[0].timestampISO,\n\t\t\t\t\tpid: category.posts[0].pid\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\n\t\tres.render('categories', data);\n\t});\n};\n\nmodule.exports = categoriesController;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/category.js":"\"use strict\";\n\n\nvar async = require('async');\nvar nconf = require('nconf');\n\nvar db = require('../database');\nvar privileges = require('../privileges');\nvar user = require('../user');\nvar categories = require('../categories');\nvar meta = require('../meta');\nvar pagination = require('../pagination');\nvar helpers = require('./helpers');\nvar utils = require('../../public/src/utils');\n\nvar categoryController = {};\n\ncategoryController.get = function (req, res, callback) {\n\tvar cid = req.params.category_id;\n\tvar currentPage = parseInt(req.query.page, 10) || 1;\n\tvar pageCount = 1;\n\tvar userPrivileges;\n\tvar settings;\n\n\tif ((req.params.topic_index && !utils.isNumber(req.params.topic_index)) || !utils.isNumber(cid)) {\n\t\treturn callback();\n\t}\n\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tasync.parallel({\n\t\t\t\tcategoryData: function (next) {\n\t\t\t\t\tcategories.getCategoryFields(cid, ['slug', 'disabled', 'topic_count'], next);\n\t\t\t\t},\n\t\t\t\tprivileges: function (next) {\n\t\t\t\t\tprivileges.categories.get(cid, req.uid, next);\n\t\t\t\t},\n\t\t\t\tuserSettings: function (next) {\n\t\t\t\t\tuser.getSettings(req.uid, next);\n\t\t\t\t}\n\t\t\t}, next);\n\t\t},\n\t\tfunction (results, next) {\n\t\t\tuserPrivileges = results.privileges;\n\n\t\t\tif (!results.categoryData.slug || (results.categoryData && parseInt(results.categoryData.disabled, 10) === 1)) {\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tif (!results.privileges.read) {\n\t\t\t\treturn helpers.notAllowed(req, res);\n\t\t\t}\n\n\t\t\tif (!res.locals.isAPI && (!req.params.slug || results.categoryData.slug !== cid + '/' + req.params.slug) && (results.categoryData.slug && results.categoryData.slug !== cid + '/')) {\n\t\t\t\treturn helpers.redirect(res, '/category/' + results.categoryData.slug);\n\t\t\t}\n\n\t\t\tsettings = results.userSettings;\n\t\t\tvar topicIndex = utils.isNumber(req.params.topic_index) ? parseInt(req.params.topic_index, 10) - 1 : 0;\n\t\t\tvar topicCount = parseInt(results.categoryData.topic_count, 10);\n\t\t\tpageCount = Math.max(1, Math.ceil(topicCount / settings.topicsPerPage));\n\n\t\t\tif (topicIndex < 0 || topicIndex > Math.max(topicCount - 1, 0)) {\n\t\t\t\treturn helpers.redirect(res, '/category/' + cid + '/' + req.params.slug + (topicIndex > topicCount ? '/' + topicCount : ''));\n\t\t\t}\n\n\t\t\tif (settings.usePagination && (currentPage < 1 || currentPage > pageCount)) {\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tif (!settings.usePagination) {\n\t\t\t\ttopicIndex = Math.max(topicIndex - (settings.topicsPerPage - 1), 0);\n\t\t\t} else if (!req.query.page) {\n\t\t\t\tvar index = Math.max(parseInt((topicIndex || 0), 10), 0);\n\t\t\t\tcurrentPage = Math.ceil((index + 1) / settings.topicsPerPage);\n\t\t\t\ttopicIndex = 0;\n\t\t\t}\n\n\t\t\tvar set = 'cid:' + cid + ':tids';\n\t\t\tvar reverse = false;\n\t\t\t// `sort` qs has priority over user setting\n\t\t\tvar sort = req.query.sort || settings.categoryTopicSort;\n\t\t\tif (sort === 'newest_to_oldest') {\n\t\t\t\treverse = true;\n\t\t\t} else if (sort === 'most_posts') {\n\t\t\t\treverse = true;\n\t\t\t\tset = 'cid:' + cid + ':tids:posts';\n\t\t\t}\n\n\t\t\tvar start = (currentPage - 1) * settings.topicsPerPage + topicIndex;\n\t\t\tvar stop = start + settings.topicsPerPage - 1;\n\n\t\t\tvar payload = {\n\t\t\t\tcid: cid,\n\t\t\t\tset: set,\n\t\t\t\treverse: reverse,\n\t\t\t\tstart: start,\n\t\t\t\tstop: stop,\n\t\t\t\tuid: req.uid,\n\t\t\t\tsettings: settings\n\t\t\t};\n\n\t\t\tasync.waterfall([\n\t\t\t\tfunction (next) {\n\t\t\t\t\tuser.getUidByUserslug(req.query.author, next);\n\t\t\t\t},\n\t\t\t\tfunction (uid, next) {\n\t\t\t\t\tpayload.targetUid = uid;\n\t\t\t\t\tif (uid) {\n\t\t\t\t\t\tpayload.set = 'cid:' + cid + ':uid:' + uid + ':tids';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (req.query.tag) {\n\t\t\t\t\t\tpayload.set = [payload.set, 'tag:' + req.query.tag + ':topics'];\n\t\t\t\t\t}\n\t\t\t\t\tcategories.getCategoryById(payload, next);\n\t\t\t\t}\n\t\t\t], next);\n\t\t},\n\t\tfunction (categoryData, next) {\n\n\t\t\tcategories.modifyTopicsByPrivilege(categoryData.topics, userPrivileges);\n\n\t\t\tif (categoryData.link) {\n\t\t\t\tdb.incrObjectField('category:' + categoryData.cid, 'timesClicked');\n\t\t\t\treturn res.redirect(categoryData.link);\n\t\t\t}\n\n\t\t\tvar breadcrumbs = [\n\t\t\t\t{\n\t\t\t\t\ttext: categoryData.name,\n\t\t\t\t\turl: nconf.get('relative_path') + '/category/' + categoryData.slug\n\t\t\t\t}\n\t\t\t];\n\t\t\thelpers.buildCategoryBreadcrumbs(categoryData.parentCid, function (err, crumbs) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn next(err);\n\t\t\t\t}\n\t\t\t\tcategoryData.breadcrumbs = crumbs.concat(breadcrumbs);\n\t\t\t\tnext(null, categoryData);\n\t\t\t});\n\t\t},\n\t\tfunction (categoryData, next) {\n\t\t\tif (!categoryData.children.length) {\n\t\t\t\treturn next(null, categoryData);\n\t\t\t}\n\t\t\tvar allCategories = [];\n\t\t\tcategories.flattenCategories(allCategories, categoryData.children);\n\t\t\tcategories.getRecentTopicReplies(allCategories, req.uid, function (err) {\n\t\t\t\tnext(err, categoryData);\n\t\t\t});\n\t\t}\n\t], function (err, categoryData) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tcategoryData.privileges = userPrivileges;\n\t\tcategoryData.showSelect = categoryData.privileges.editable;\n\n\t\tres.locals.metaTags = [\n\t\t\t{\n\t\t\t\tname: 'title',\n\t\t\t\tcontent: categoryData.name\n\t\t\t},\n\t\t\t{\n\t\t\t\tproperty: 'og:title',\n\t\t\t\tcontent: categoryData.name\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'description',\n\t\t\t\tcontent: categoryData.description\n\t\t\t},\n\t\t\t{\n\t\t\t\tproperty: \"og:type\",\n\t\t\t\tcontent: 'website'\n\t\t\t}\n\t\t];\n\n\t\tif (categoryData.backgroundImage) {\n\t\t\tres.locals.metaTags.push({\n\t\t\t\tname: 'og:image',\n\t\t\t\tcontent: categoryData.backgroundImage\n\t\t\t});\n\t\t}\n\n\t\tres.locals.linkTags = [\n\t\t\t{\n\t\t\t\trel: 'alternate',\n\t\t\t\ttype: 'application/rss+xml',\n\t\t\t\thref: nconf.get('url') + '/category/' + cid + '.rss'\n\t\t\t},\n\t\t\t{\n\t\t\t\trel: 'up',\n\t\t\t\thref: nconf.get('url')\n\t\t\t}\n\t\t];\n\n\t\tif (parseInt(req.uid, 10)) {\n\t\t\tcategories.markAsRead([cid], req.uid);\n\t\t}\n\n\t\tcategoryData['feeds:disableRSS'] = parseInt(meta.config['feeds:disableRSS'], 10) === 1;\n\t\tcategoryData.rssFeedUrl = nconf.get('relative_path') + '/category/' + categoryData.cid + '.rss';\n\t\tcategoryData.title = categoryData.name;\n\t\tpageCount = Math.max(1, Math.ceil(categoryData.topic_count / settings.topicsPerPage));\n\t\tcategoryData.pagination = pagination.create(currentPage, pageCount, req.query);\n\t\tcategoryData.pagination.rel.forEach(function (rel) {\n\t\t\trel.href = nconf.get('url') + '/category/' + categoryData.slug + rel.href;\n\t\t\tres.locals.linkTags.push(rel);\n\t\t});\n\n\t\tres.render('category', categoryData);\n\t});\n};\n\n\nmodule.exports = categoryController;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/globalmods.js":"\"use strict\";\n\nvar user = require('../user');\nvar adminBlacklistController = require('./admin/blacklist');\n\nvar globalModsController = {};\n\nglobalModsController.ipBlacklist = function (req, res, next) {\n\tuser.isAdminOrGlobalMod(req.uid, function (err, isAdminOrGlobalMod) {\n\t\tif (err || !isAdminOrGlobalMod) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tadminBlacklistController.get(req, res, next);\n\t});\n};\n\nmodule.exports = globalModsController;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/groups.js":"\"use strict\";\n\nvar async = require('async');\nvar nconf = require('nconf');\nvar validator = require('validator');\n\nvar meta = require('../meta');\nvar groups = require('../groups');\nvar user = require('../user');\nvar helpers = require('./helpers');\n\nvar groupsController = {};\n\ngroupsController.list = function (req, res, next) {\n\tvar sort = req.query.sort || 'alpha';\n\n\tgroupsController.getGroupsFromSet(req.uid, sort, 0, 14, function (err, data) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\t\tdata.title = '[[pages:groups]]';\n\t\tdata.breadcrumbs = helpers.buildBreadcrumbs([{text: '[[pages:groups]]'}]);\n\t\tres.render('groups/list', data);\n\t});\n};\n\ngroupsController.getGroupsFromSet = function (uid, sort, start, stop, callback) {\n\tvar set = 'groups:visible:name';\n\tif (sort === 'count') {\n\t\tset = 'groups:visible:memberCount';\n\t} else if (sort === 'date') {\n\t\tset = 'groups:visible:createtime';\n\t}\n\n\tgroups.getGroupsFromSet(set, uid, start, stop, function (err, groups) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tcallback(null, {\n\t\t\tgroups: groups,\n\t\t\tallowGroupCreation: parseInt(meta.config.allowGroupCreation, 10) === 1,\n\t\t\tnextStart: stop + 1\n\t\t});\n\t});\n};\n\ngroupsController.details = function (req, res, callback) {\n\tvar groupName;\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tgroups.getGroupNameByGroupSlug(req.params.slug, next);\n\t\t},\n\t\tfunction (_groupName, next) {\n\t\t\tgroupName = _groupName;\n\t\t\tif (!groupName) {\n\t\t\t\treturn callback();\n\t\t\t}\n\t\t\tasync.parallel({\n\t\t\t\texists: async.apply(groups.exists, groupName),\n\t\t\t\thidden: async.apply(groups.isHidden, groupName)\n\t\t\t}, next);\n\t\t},\n\t\tfunction (results, next) {\n\t\t\tif (!results.exists) {\n\t\t\t\treturn callback();\n\t\t\t}\n\t\t\tif (!results.hidden) {\n\t\t\t\treturn next();\n\t\t\t}\n\t\t\tasync.parallel({\n\t\t\t\tisMember: async.apply(groups.isMember, req.uid, groupName),\n\t\t\t\tisInvited: async.apply(groups.isInvited, req.uid, groupName)\n\t\t\t}, function (err, checks) {\n\t\t\t\tif (err || checks.isMember || checks.isInvited) {\n\t\t\t\t\treturn next(err);\n\t\t\t\t}\n\t\t\t\tcallback();\n\t\t\t});\n\t\t},\n\t\tfunction (next) {\n\t\t\tasync.parallel({\n\t\t\t\tgroup: function (next) {\n\t\t\t\t\tgroups.get(groupName, {\n\t\t\t\t\t\tuid: req.uid,\n\t\t\t\t\t\ttruncateUserList: true,\n\t\t\t\t\t\tuserListCount: 20\n\t\t\t\t\t}, next);\n\t\t\t\t},\n\t\t\t\tposts: function (next) {\n\t\t\t\t\tgroups.getLatestMemberPosts(groupName, 10, req.uid, next);\n\t\t\t\t},\n\t\t\t\tisAdmin:function (next) {\n\t\t\t\t\tuser.isAdministrator(req.uid, next);\n\t\t\t\t},\n\t\t\t\tisGlobalMod: function (next) {\n\t\t\t\t\tuser.isGlobalModerator(req.uid, next);\n\t\t\t\t}\n\t\t\t}, next);\n\t\t}\n\t], function (err, results) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tif (!results.group) {\n\t\t\treturn callback();\n\t\t}\n\t\tresults.group.isOwner = results.group.isOwner || results.isAdmin || (results.isGlobalMod && !results.group.system);\n\t\tresults.title = '[[pages:group, ' + results.group.displayName + ']]';\n\t\tresults.breadcrumbs = helpers.buildBreadcrumbs([{text: '[[pages:groups]]', url: '/groups' }, {text: results.group.displayName}]);\n\t\tresults.allowPrivateGroups = parseInt(meta.config.allowPrivateGroups, 10) === 1;\n\n\t\tres.render('groups/details', results);\n\t});\n};\n\ngroupsController.members = function (req, res, callback) {\n\tvar groupName;\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tgroups.getGroupNameByGroupSlug(req.params.slug, next);\n\t\t},\n\t\tfunction (_groupName, next) {\n\t\t\tif (!_groupName) {\n\t\t\t\treturn callback();\n\t\t\t}\n\t\t\tgroupName = _groupName;\n\t\t\tasync.parallel({\n\t\t\t\tisAdminOrGlobalMod: async.apply(user.isAdminOrGlobalMod, req.uid),\n\t\t\t\tisMember: async.apply(groups.isMember, req.uid, groupName),\n\t\t\t\tisHidden: async.apply(groups.isHidden, groupName)\n\t\t\t}, next);\n\t\t},\n\t\tfunction (results, next) {\n\t\t\tif (results.isHidden && !results.isMember && !results.isAdminOrGlobalMod) {\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tuser.getUsersFromSet('group:' + groupName + ':members', req.uid, 0, 49, next);\n\t\t},\n\t], function (err, users) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tvar breadcrumbs = helpers.buildBreadcrumbs([\n\t\t\t{text: '[[pages:groups]]', url: '/groups' },\n\t\t\t{text: validator.escape(String(groupName)), url: '/groups/' + req.params.slug},\n\t\t\t{text: '[[groups:details.members]]'}\n\t\t]);\n\n\t\tres.render('groups/members', {\n\t\t\tusers: users,\n\t\t\tnextStart: 50,\n\t\t\tloadmore_display: users.length > 50 ? 'block' : 'hide',\n\t\t\tbreadcrumbs: breadcrumbs\n\t\t});\n\t});\n};\n\ngroupsController.uploadCover = function (req, res, next) {\n\tvar params = JSON.parse(req.body.params);\n\n\tgroups.updateCover(req.uid, {\n\t\tfile: req.files.files[0].path,\n\t\tgroupName: params.groupName\n\t}, function (err, image) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tres.json([{url: image.url.startsWith('http') ? image.url : nconf.get('relative_path') + image.url}]);\n\t});\n};\n\nmodule.exports = groupsController;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/helpers.js":"'use strict';\n\nvar nconf = require('nconf');\nvar async = require('async');\nvar validator = require('validator');\nvar winston = require('winston');\n\nvar user = require('../user');\nvar privileges = require('../privileges');\nvar categories = require('../categories');\nvar plugins = require('../plugins');\nvar meta = require('../meta');\n\nvar helpers = {};\n\nhelpers.notAllowed = function (req, res, error) {\n\tplugins.fireHook('filter:helpers.notAllowed', {\n\t\treq: req,\n\t\tres: res,\n\t\terror: error\n\t}, function (err, data) {\n\t\tif (err) {\n\t\t\treturn winston.error(err);\n\t\t}\n\t\tif (req.uid) {\n\t\t\tif (res.locals.isAPI) {\n\t\t\t\tres.status(403).json({\n\t\t\t\t\tpath: req.path.replace(/^\\/api/, ''),\n\t\t\t\t\tloggedIn: !!req.uid, error: error,\n\t\t\t\t\ttitle: '[[global:403.title]]'\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tres.status(403).render('403', {\n\t\t\t\t\tpath: req.path,\n\t\t\t\t\tloggedIn: !!req.uid, error: error,\n\t\t\t\t\ttitle: '[[global:403.title]]'\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif (res.locals.isAPI) {\n\t\t\t\treq.session.returnTo = nconf.get('relative_path') + req.url.replace(/^\\/api/, '');\n\t\t\t\tres.status(401).json('not-authorized');\n\t\t\t} else {\n\t\t\t\treq.session.returnTo = nconf.get('relative_path') + req.url;\n\t\t\t\tres.redirect(nconf.get('relative_path') + '/login');\n\t\t\t}\n\t\t}\n\t});\n};\n\nhelpers.redirect = function (res, url) {\n\tif (res.locals.isAPI) {\n\t\tres.status(308).json(url);\n\t} else {\n\t\tres.redirect(nconf.get('relative_path') + encodeURI(url));\n\t}\n};\n\nhelpers.buildCategoryBreadcrumbs = function (cid, callback) {\n\tvar breadcrumbs = [];\n\n\tasync.whilst(function () {\n\t\treturn parseInt(cid, 10);\n\t}, function (next) {\n\t\tcategories.getCategoryFields(cid, ['name', 'slug', 'parentCid', 'disabled'], function (err, data) {\n\t\t\tif (err) {\n\t\t\t\treturn next(err);\n\t\t\t}\n\n\t\t\tif (!parseInt(data.disabled, 10)) {\n\t\t\t\tbreadcrumbs.unshift({\n\t\t\t\t\ttext: validator.escape(String(data.name)),\n\t\t\t\t\turl: nconf.get('relative_path') + '/category/' + data.slug\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tcid = data.parentCid;\n\t\t\tnext();\n\t\t});\n\t}, function (err) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tif (!meta.config.homePageRoute && meta.config.homePageCustom) {\n\t\t\tbreadcrumbs.unshift({\n\t\t\t\ttext: '[[global:header.categories]]',\n\t\t\t\turl: nconf.get('relative_path') + '/categories'\n\t\t\t});\n\t\t}\n\n\t\tbreadcrumbs.unshift({\n\t\t\ttext: '[[global:home]]',\n\t\t\turl: nconf.get('relative_path') + '/'\n\t\t});\n\n\t\tcallback(null, breadcrumbs);\n\t});\n};\n\nhelpers.buildBreadcrumbs = function (crumbs) {\n\tvar breadcrumbs = [\n\t\t{\n\t\t\ttext: '[[global:home]]',\n\t\t\turl: nconf.get('relative_path') + '/'\n\t\t}\n\t];\n\n\tcrumbs.forEach(function (crumb) {\n\t\tif (crumb) {\n\t\t\tif (crumb.url) {\n\t\t\t\tcrumb.url = nconf.get('relative_path') + crumb.url;\n\t\t\t}\n\t\t\tbreadcrumbs.push(crumb);\n\t\t}\n\t});\n\n\treturn breadcrumbs;\n};\n\nhelpers.buildTitle = function (pageTitle) {\n\tvar titleLayout = meta.config.titleLayout || '{pageTitle} | {browserTitle}';\n\n\tvar browserTitle = validator.escape(String(meta.config.browserTitle || meta.config.title || 'NodeBB'));\n\tpageTitle = pageTitle || '';\n\tvar title = titleLayout.replace('{pageTitle}', function () {\n\t\treturn pageTitle;\n\t}).replace('{browserTitle}', function () {\n\t\treturn browserTitle;\n\t});\n\treturn title;\n};\n\nhelpers.getWatchedCategories = function (uid, selectedCid, callback) {\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tuser.getWatchedCategories(uid, next);\n\t\t},\n\t\tfunction (cids, next) {\n\t\t\tprivileges.categories.filterCids('read', cids, uid, next);\n\t\t},\n\t\tfunction (cids, next) {\n\t\t\tcategories.getCategoriesFields(cids, ['cid', 'name', 'slug', 'icon', 'link', 'color', 'bgColor', 'parentCid'], next);\n\t\t},\n\t\tfunction (categoryData, next) {\n\t\t\tcategoryData = categoryData.filter(function (category) {\n\t\t\t\treturn category && !category.link;\n\t\t\t});\n\n\t\t\tvar selectedCategory;\n\t\t\tcategoryData.forEach(function (category) {\n\t\t\t\tcategory.selected = parseInt(category.cid, 10) === parseInt(selectedCid, 10);\n\t\t\t\tif (category.selected) {\n\t\t\t\t\tselectedCategory = category;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar categoriesData = [];\n\t\t\tvar tree = categories.getTree(categoryData, 0);\n\n\t\t\ttree.forEach(function (category) {\n\t\t\t\trecursive(category, categoriesData, '');\n\t\t\t});\n\n\t\t\tnext(null, {categories: categoriesData, selectedCategory: selectedCategory});\n\t\t}\n\t], callback);\n};\n\nfunction recursive(category, categoriesData, level) {\n\tcategory.level = level;\n\tcategoriesData.push(category);\n\n\tcategory.children.forEach(function (child) {\n\t\trecursive(child, categoriesData, '&nbsp;&nbsp;&nbsp;&nbsp;' + level);\n\t});\n}\n\nmodule.exports = helpers;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/index.js":"\"use strict\";\n\nvar async = require('async');\nvar nconf = require('nconf');\nvar validator = require('validator');\nvar winston = require('winston');\n\nvar meta = require('../meta');\nvar user = require('../user');\nvar plugins = require('../plugins');\nvar helpers = require('./helpers');\n\nvar Controllers = {\n\ttopics: require('./topics'),\n\tposts: require('./posts'),\n\tcategories: require('./categories'),\n\tcategory: require('./category'),\n\tunread: require('./unread'),\n\trecent: require('./recent'),\n\tpopular: require('./popular'),\n\ttags: require('./tags'),\n\tsearch: require('./search'),\n\tusers: require('./users'),\n\tgroups: require('./groups'),\n\taccounts: require('./accounts'),\n\tauthentication: require('./authentication'),\n\tapi: require('./api'),\n\tadmin: require('./admin'),\n\tglobalMods: require('./globalmods'),\n\tmods: require('./mods'),\n\tsitemap: require('./sitemap')\n};\n\n\nControllers.home = function (req, res, next) {\n\tvar route = meta.config.homePageRoute || (meta.config.homePageCustom || '').replace(/^\\/+/, '') || 'categories';\n\n\tuser.getSettings(req.uid, function (err, settings) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\t\tif (parseInt(meta.config.allowUserHomePage, 10) === 1 && settings.homePageRoute !== 'undefined' && settings.homePageRoute !== 'none') {\n\t\t\troute = settings.homePageRoute || route;\n\t\t}\n\n\t\tvar hook = 'action:homepage.get:' + route;\n\n\t\tif (plugins.hasListeners(hook)) {\n\t\t\treturn plugins.fireHook(hook, {req: req, res: res, next: next});\n\t\t}\n\n\t\tif (route === 'categories' || route === '/') {\n\t\t\tControllers.categories.list(req, res, next);\n\t\t} else if (route === 'unread') {\n\t\t\tControllers.unread.get(req, res, next);\n\t\t} else if (route === 'recent') {\n\t\t\tControllers.recent.get(req, res, next);\n\t\t} else if (route === 'popular') {\n\t\t\tControllers.popular.get(req, res, next);\n\t\t} else {\n\t\t\tvar match = /^category\\/(\\d+)\\/(.*)$/.exec(route);\n\n\t\t\tif (match) {\n\t\t\t\treq.params.topic_index = \"1\";\n\t\t\t\treq.params.category_id = match[1];\n\t\t\t\treq.params.slug = match[2];\n\t\t\t\tControllers.category.get(req, res, next);\n\t\t\t} else {\n\t\t\t\tres.redirect(route);\n\t\t\t}\n\t\t}\n\t});\n};\n\nControllers.reset = function (req, res, next) {\n\tif (req.params.code) {\n\t\tuser.reset.validate(req.params.code, function (err, valid) {\n\t\t\tif (err) {\n\t\t\t\treturn next(err);\n\t\t\t}\n\t\t\tres.render('reset_code', {\n\t\t\t\tvalid: valid,\n\t\t\t\tdisplayExpiryNotice: req.session.passwordExpired,\n\t\t\t\tcode: req.params.code,\n\t\t\t\tminimumPasswordLength: parseInt(meta.config.minimumPasswordLength, 10),\n\t\t\t\tbreadcrumbs: helpers.buildBreadcrumbs([{text: '[[reset_password:reset_password]]', url: '/reset'}, {text: '[[reset_password:update_password]]'}]),\n\t\t\t\ttitle: '[[pages:reset]]'\n\t\t\t});\n\n\t\t\tdelete req.session.passwordExpired;\n\t\t});\n\t} else {\n\t\tres.render('reset', {\n\t\t\tcode: null,\n\t\t\tbreadcrumbs: helpers.buildBreadcrumbs([{text: '[[reset_password:reset_password]]'}]),\n\t\t\ttitle: '[[pages:reset]]'\n\t\t});\n\t}\n};\n\nControllers.login = function (req, res, next) {\n\tvar data = {};\n\tvar loginStrategies = require('../routes/authentication').getLoginStrategies();\n\tvar registrationType = meta.config.registrationType || 'normal';\n\n\tvar allowLoginWith = (meta.config.allowLoginWith || 'username-email');\n\tvar returnTo = (req.headers['x-return-to'] || '').replace(nconf.get('base_url'), '');\n\n\tvar errorText;\n\tif (req.query.error === 'csrf-invalid') {\n\t\terrorText = '[[error:csrf-invalid]]';\n\t} else if (req.query.error) {\n\t\terrorText = validator.escape(String(req.query.error));\n\t}\n\n\tif (returnTo) {\n\t\treq.session.returnTo = returnTo;\n\t}\n\n\tdata.alternate_logins = loginStrategies.length > 0;\n\tdata.authentication = loginStrategies;\n\tdata.allowLocalLogin = parseInt(meta.config.allowLocalLogin, 10) === 1 || parseInt(req.query.local, 10) === 1;\n\tdata.allowRegistration = registrationType === 'normal' || registrationType === 'admin-approval' || registrationType === 'admin-approval-ip';\n\tdata.allowLoginWith = '[[login:' + allowLoginWith + ']]';\n\tdata.breadcrumbs = helpers.buildBreadcrumbs([{text: '[[global:login]]'}]);\n\tdata.error = req.flash('error')[0] || errorText;\n\tdata.title = '[[pages:login]]';\n\n\tif (!data.allowLocalLogin && !data.allowRegistration && data.alternate_logins && data.authentication.length === 1) {\n\t\tif (res.locals.isAPI) {\n\t\t\treturn helpers.redirect(res, {\n\t\t\t\texternal: data.authentication[0].url\n\t\t\t});\n\t\t} else {\n\t\t\treturn res.redirect(nconf.get('relative_path') + data.authentication[0].url);\n\t\t}\n\t}\n\tif (req.uid) {\n\t\tuser.getUserFields(req.uid, ['username', 'email'], function (err, user) {\n\t\t\tif (err) {\n\t\t\t\treturn next(err);\n\t\t\t}\n\t\t\tdata.username = allowLoginWith === 'email' ? user.email : user.username;\n\t\t\tdata.alternate_logins = [];\n\t\t\tres.render('login', data);\n\t\t});\n\t} else {\n\t\tres.render('login', data);\n\t}\n\n};\n\nControllers.register = function (req, res, next) {\n\tvar registrationType = meta.config.registrationType || 'normal';\n\n\tif (registrationType === 'disabled') {\n\t\treturn next();\n\t}\n\n\tvar errorText;\n\tif (req.query.error === 'csrf-invalid') {\n\t\terrorText = '[[error:csrf-invalid]]';\n\t}\n\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tif (registrationType === 'invite-only' || registrationType === 'admin-invite-only') {\n\t\t\t\tuser.verifyInvitation(req.query, next);\n\t\t\t} else {\n\t\t\t\tnext();\n\t\t\t}\n\t\t},\n\t\tfunction (next) {\n\t\t\tplugins.fireHook('filter:parse.post', {postData: {content: meta.config.termsOfUse || ''}}, next);\n\t\t}\n\t], function (err, termsOfUse) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\t\tvar loginStrategies = require('../routes/authentication').getLoginStrategies();\n\t\tvar data = {\n\t\t\t'register_window:spansize': loginStrategies.length ? 'col-md-6' : 'col-md-12',\n\t\t\t'alternate_logins': !!loginStrategies.length\n\t\t};\n\n\t\tdata.authentication = loginStrategies;\n\n\t\tdata.minimumUsernameLength = parseInt(meta.config.minimumUsernameLength, 10);\n\t\tdata.maximumUsernameLength = parseInt(meta.config.maximumUsernameLength, 10);\n\t\tdata.minimumPasswordLength = parseInt(meta.config.minimumPasswordLength, 10);\n\t\tdata.termsOfUse = termsOfUse.postData.content;\n\t\tdata.breadcrumbs = helpers.buildBreadcrumbs([{text: '[[register:register]]'}]);\n\t\tdata.regFormEntry = [];\n\t\tdata.error = req.flash('error')[0] || errorText;\n\t\tdata.title = '[[pages:register]]';\n\n\t\tres.render('register', data);\n\t});\n};\n\nControllers.registerInterstitial = function (req, res, next) {\n\tif (!req.session.hasOwnProperty('registration')) {\n\t\treturn res.redirect(nconf.get('relative_path') + '/register');\n\t}\n\n\tplugins.fireHook('filter:register.interstitial', {\n\t\tuserData: req.session.registration,\n\t\tinterstitials: []\n\t}, function (err, data) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tif (!data.interstitials.length) {\n\t\t\treturn next();\n\t\t}\n\n\t\tvar renders = data.interstitials.map(function (interstitial) {\n\t\t\treturn async.apply(req.app.render.bind(req.app), interstitial.template, interstitial.data || {});\n\t\t});\n\t\tvar errors = req.flash('error');\n\n\t\tasync.parallel(renders, function (err, sections) {\n\t\t\tif (err) {\n\t\t\t\treturn next(err);\n\t\t\t}\n\n\t\t\tres.render('registerComplete', {\n\t\t\t\ttitle: '[[pages:registration-complete]]',\n\t\t\t\terrors: errors,\n\t\t\t\tsections: sections\n\t\t\t});\n\t\t});\n\t});\n};\n\nControllers.compose = function (req, res, next) {\n\tplugins.fireHook('filter:composer.build', {\n\t\treq: req,\n\t\tres: res,\n\t\tnext: next,\n\t\ttemplateData: {}\n\t}, function (err, data) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tif (data.templateData.disabled) {\n\t\t\tres.render('', {\n\t\t\t\ttitle: '[[modules:composer.compose]]'\n\t\t\t});\n\t\t} else {\n\t\t\tdata.templateData.title = '[[modules:composer.compose]]';\n\t\t\tres.render('compose', data.templateData);\n\t\t}\n\t});\n};\n\nControllers.confirmEmail = function (req, res) {\n\tuser.email.confirm(req.params.code, function (err) {\n\t\tres.render('confirm', {\n\t\t\terror: err ? err.message : '',\n\t\t\ttitle: '[[pages:confirm]]',\n\t\t});\n\t});\n};\n\nControllers.robots = function (req, res) {\n\tres.set('Content-Type', 'text/plain');\n\n\tif (meta.config[\"robots.txt\"]) {\n\t\tres.send(meta.config[\"robots.txt\"]);\n\t} else {\n\t\tres.send(\"User-agent: *\\n\" +\n\t\t\t\"Disallow: \" + nconf.get('relative_path') + \"/admin/\\n\" +\n\t\t\t\"Sitemap: \" + nconf.get('url') + \"/sitemap.xml\");\n\t}\n};\n\nControllers.manifest = function (req, res) {\n\tvar manifest = {\n\t\tname: meta.config.title || 'NodeBB',\n\t\tstart_url: nconf.get('relative_path') + '/',\n\t\tdisplay: 'standalone',\n\t\torientation: 'portrait',\n\t\ticons: []\n\t};\n\n\tif (meta.config['brand:touchIcon']) {\n\t\tmanifest.icons.push({\n\t\t\tsrc: nconf.get('relative_path') + '/uploads/system/touchicon-36.png',\n\t\t\tsizes: '36x36',\n\t\t\ttype: 'image/png',\n\t\t\tdensity: 0.75\n\t\t}, {\n\t\t\tsrc: nconf.get('relative_path') + '/uploads/system/touchicon-48.png',\n\t\t\tsizes: '48x48',\n\t\t\ttype: 'image/png',\n\t\t\tdensity: 1.0\n\t\t}, {\n\t\t\tsrc: nconf.get('relative_path') + '/uploads/system/touchicon-72.png',\n\t\t\tsizes: '72x72',\n\t\t\ttype: 'image/png',\n\t\t\tdensity: 1.5\n\t\t}, {\n\t\t\tsrc: nconf.get('relative_path') + '/uploads/system/touchicon-96.png',\n\t\t\tsizes: '96x96',\n\t\t\ttype: 'image/png',\n\t\t\tdensity: 2.0\n\t\t}, {\n\t\t\tsrc: nconf.get('relative_path') + '/uploads/system/touchicon-144.png',\n\t\t\tsizes: '144x144',\n\t\t\ttype: 'image/png',\n\t\t\tdensity: 3.0\n\t\t}, {\n\t\t\tsrc: nconf.get('relative_path') + '/uploads/system/touchicon-192.png',\n\t\t\tsizes: '192x192',\n\t\t\ttype: 'image/png',\n\t\t\tdensity: 4.0\n\t\t});\n\t}\n\n\tres.status(200).json(manifest);\n};\n\nControllers.outgoing = function (req, res) {\n\tvar url = req.query.url || '';\n\tvar data = {\n\t\toutgoing: validator.escape(String(url)),\n\t\ttitle: meta.config.title,\n\t\tbreadcrumbs: helpers.buildBreadcrumbs([{text: '[[notifications:outgoing_link]]'}])\n\t};\n\n\tif (url) {\n\t\tres.render('outgoing', data);\n\t} else {\n\t\tres.status(404).redirect(nconf.get('relative_path') + '/404');\n\t}\n};\n\nControllers.termsOfUse = function (req, res, next) {\n\tif (!meta.config.termsOfUse) {\n\t\treturn next();\n\t}\n\tres.render('tos', {termsOfUse: meta.config.termsOfUse});\n};\n\nControllers.ping = function (req, res) {\n\tres.status(200).send(req.path === '/sping' ? 'healthy' : '200');\n};\n\nControllers.handle404 = function (req, res) {\n\tvar relativePath = nconf.get('relative_path');\n\tvar isLanguage = new RegExp('^' + relativePath + '/api/language/.*/.*');\n\tvar isClientScript = new RegExp('^' + relativePath + '\\\\/src\\\\/.+\\\\.js');\n\n\tif (plugins.hasListeners('action:meta.override404')) {\n\t\treturn plugins.fireHook('action:meta.override404', {\n\t\t\treq: req,\n\t\t\tres: res,\n\t\t\terror: {}\n\t\t});\n\t}\n\n\tif (isClientScript.test(req.url)) {\n\t\tres.type('text/javascript').status(200).send('');\n\t} else if (isLanguage.test(req.url)) {\n\t\tres.status(200).json({});\n\t} else if (req.path.startsWith(relativePath + '/uploads') || (req.get('accept') && req.get('accept').indexOf('text/html') === -1) || req.path === '/favicon.ico') {\n\t\tmeta.errors.log404(req.path || '');\n\t\tres.sendStatus(404);\n\t} else if (req.accepts('html')) {\n\t\tif (process.env.NODE_ENV === 'development') {\n\t\t\twinston.warn('Route requested but not found: ' + req.url);\n\t\t}\n\n\t\tmeta.errors.log404(req.path.replace(/^\\/api/, '') || '');\n\t\tres.status(404);\n\n\t\tvar path = String(req.path || '');\n\n\t\tif (res.locals.isAPI) {\n\t\t\treturn res.json({path: validator.escape(path.replace(/^\\/api/, '')), title: '[[global:404.title]]'});\n\t\t}\n\t\tvar middleware = require('../middleware');\n\t\tmiddleware.buildHeader(req, res, function () {\n\t\t\tres.render('404', {path: validator.escape(path), title: '[[global:404.title]]'});\n\t\t});\n\t} else {\n\t\tres.status(404).type('txt').send('Not found');\n\t}\n};\n\nControllers.handleURIErrors = function (err, req, res, next) {\n\t// Handle cases where malformed URIs are passed in\n\tif (err instanceof URIError) {\n\t\tvar tidMatch = req.path.match(/^\\/topic\\/(\\d+)\\//);\n\t\tvar cidMatch = req.path.match(/^\\/category\\/(\\d+)\\//);\n\n\t\tif (tidMatch) {\n\t\t\tres.redirect(nconf.get('relative_path') + tidMatch[0]);\n\t\t} else if (cidMatch) {\n\t\t\tres.redirect(nconf.get('relative_path') + cidMatch[0]);\n\t\t} else {\n\t\t\twinston.warn('[controller] Bad request: ' + req.path);\n\t\t\tif (res.locals.isAPI) {\n\t\t\t\tres.status(400).json({\n\t\t\t\t\terror: '[[global:400.title]]'\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tvar middleware = require('../middleware');\n\t\t\t\tmiddleware.buildHeader(req, res, function () {\n\t\t\t\t\tres.render('400', { error: validator.escape(String(err.message)) });\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn;\n\t} else {\n\t\tnext(err);\n\t}\n};\n\nControllers.handleErrors = function (err, req, res, next) {\n\tswitch (err.code) {\n\t\tcase 'EBADCSRFTOKEN':\n\t\t\twinston.error(req.path + '\\n', err.message);\n\t\t\treturn res.sendStatus(403);\n\t\tcase 'blacklisted-ip':\n\t\t\treturn res.status(403).type('text/plain').send(err.message);\n\t}\n\n\tif (parseInt(err.status, 10) === 302 && err.path) {\n\t\treturn res.locals.isAPI ? res.status(302).json(err.path) : res.redirect(err.path);\n\t}\n\n\twinston.error(req.path + '\\n', err.stack);\n\n\tres.status(err.status || 500);\n\n\tvar path = String(req.path || '');\n\tif (res.locals.isAPI) {\n\t\tres.json({path: validator.escape(path), error: err.message});\n\t} else {\n\t\tvar middleware = require('../middleware');\n\t\tmiddleware.buildHeader(req, res, function () {\n\t\t\tres.render('500', { path: validator.escape(path), error: validator.escape(String(err.message)) });\n\t\t});\n\t}\n};\n\nmodule.exports = Controllers;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/mods.js":"\"use strict\";\n\nvar async = require('async');\n\nvar user = require('../user');\nvar adminFlagsController = require('./admin/flags');\n\nvar modsController = {};\n\nmodsController.flagged = function (req, res, next) {\n\tasync.parallel({\n\t\tisAdminOrGlobalMod: async.apply(user.isAdminOrGlobalMod, req.uid),\n\t\tmoderatedCids: async.apply(user.getModeratedCids, req.uid)\n\t}, function (err, results) {\n\t\tif (err || !(results.isAdminOrGlobalMod || !!results.moderatedCids.length)) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tif (!results.isAdminOrGlobalMod && results.moderatedCids.length) {\n\t\t\tres.locals.cids = results.moderatedCids;\n\t\t}\n\n\t\tadminFlagsController.get(req, res, next);\n\t});\n};\n\nmodule.exports = modsController;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/popular.js":"\n'use strict';\n\nvar nconf = require('nconf');\nvar topics = require('../topics');\nvar meta = require('../meta');\nvar helpers = require('./helpers');\n\nvar popularController = {};\n\nvar anonCache = {};\nvar lastUpdateTime = 0;\n\nvar terms = {\n\tdaily: 'day',\n\tweekly: 'week',\n\tmonthly: 'month'\n};\n\npopularController.get = function (req, res, next) {\n\n\tvar term = terms[req.params.term];\n\n\tif (!term && req.params.term) {\n\t\treturn next();\n\t}\n\tterm = term || 'alltime';\n\n\tvar termToBreadcrumb = {\n\t\tday: '[[recent:day]]',\n\t\tweek: '[[recent:week]]',\n\t\tmonth: '[[recent:month]]',\n\t\talltime: '[[global:header.popular]]'\n\t};\n\n\tif (!req.uid) {\n\t\tif (anonCache[term] && (Date.now() - lastUpdateTime) < 60 * 60 * 1000) {\n\t\t\treturn res.render('popular', anonCache[term]);\n\t\t}\n\t}\n\n\ttopics.getPopular(term, req.uid, meta.config.topicsPerList, function (err, topics) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tvar data = {\n\t\t\ttopics: topics,\n\t\t\t'feeds:disableRSS': parseInt(meta.config['feeds:disableRSS'], 10) === 1,\n\t\t\trssFeedUrl: nconf.get('relative_path') + '/popular/' + (req.params.term || 'daily') + '.rss',\n\t\t\ttitle: '[[pages:popular-' + term + ']]',\n\t\t\tterm: term\n\t\t};\n\n\t\tif (req.path.startsWith('/api/popular') || req.path.startsWith('/popular')) {\n\t\t\tvar breadcrumbs = [{text: termToBreadcrumb[term]}];\n\n\t\t\tif (req.params.term) {\n\t\t\t\tbreadcrumbs.unshift({text: '[[global:header.popular]]', url: '/popular'});\n\t\t\t}\n\n\t\t\tdata.breadcrumbs = helpers.buildBreadcrumbs(breadcrumbs);\n\t\t}\n\n\t\tif (!req.uid) {\n\t\t\tanonCache[term] = data;\n\t\t\tlastUpdateTime = Date.now();\n\t\t}\n\n\t\tres.render('popular', data);\n\t});\n};\n\nmodule.exports = popularController;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/posts.js":"\"use strict\";\n\nvar posts = require('../posts');\nvar helpers = require('./helpers');\n\nvar postsController = {};\n\npostsController.redirectToPost = function (req, res, callback) {\n\tvar pid = parseInt(req.params.pid, 10);\n\tif (!pid) {\n\t\treturn callback();\n\t}\n\n\tposts.generatePostPath(pid, req.uid, function (err, path) {\n\t\tif (err || !path) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\thelpers.redirect(res, path);\n\t});\n};\n\n\nmodule.exports = postsController;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/recent.js":"\n'use strict';\n\nvar async = require('async');\nvar nconf = require('nconf');\nvar validator = require('validator');\n\nvar user = require('../user');\nvar topics = require('../topics');\nvar meta = require('../meta');\nvar helpers = require('./helpers');\nvar pagination = require('../pagination');\n\nvar recentController = {};\n\nvar validFilter = {'': true, 'new': true, 'watched': true};\n\nrecentController.get = function (req, res, next) {\n\tvar page = parseInt(req.query.page, 10) || 1;\n\tvar stop = 0;\n\tvar settings;\n\tvar cid = req.query.cid;\n\tvar filter = req.params.filter || '';\n\tvar categoryData;\n\n\tif (!validFilter[filter]) {\n\t\treturn next();\n\t}\n\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tasync.parallel({\n\t\t\t\tsettings: function (next) {\n\t\t\t\t\tuser.getSettings(req.uid, next);\n\t\t\t\t},\n\t\t\t\twatchedCategories: function (next) {\n\t\t\t\t\thelpers.getWatchedCategories(req.uid, cid, next);\n\t\t\t\t}\n\t\t\t}, next);\n\t\t},\n\t\tfunction (results, next) {\n\t\t\tsettings = results.settings;\n\t\t\tcategoryData = results.watchedCategories;\n\n\t\t\tvar start = Math.max(0, (page - 1) * settings.topicsPerPage);\n\t\t\tstop = start + settings.topicsPerPage - 1;\n\n\t\t\ttopics.getRecentTopics(cid, req.uid, start, stop, filter, next);\n\t\t}\n\t], function (err, data) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tdata.categories = categoryData.categories;\n\t\tdata.selectedCategory = categoryData.selectedCategory;\n\t\tdata.nextStart = stop + 1;\n\t\tdata.set = 'topics:recent';\n\t\tdata['feeds:disableRSS'] = parseInt(meta.config['feeds:disableRSS'], 10) === 1;\n\t\tdata.rssFeedUrl = nconf.get('relative_path') + '/recent.rss';\n\t\tdata.title = '[[pages:recent]]';\n\t\tdata.filters = [{\n\t\t\tname: '[[unread:all-topics]]',\n\t\t\turl: 'recent',\n\t\t\tselected: filter === '',\n\t\t\tfilter: ''\n\t\t}, {\n\t\t\tname: '[[unread:new-topics]]',\n\t\t\turl: 'recent/new',\n\t\t\tselected: filter === 'new',\n\t\t\tfilter: 'new'\n\t\t}, {\n\t\t\tname: '[[unread:watched-topics]]',\n\t\t\turl: 'recent/watched',\n\t\t\tselected: filter === 'watched',\n\t\t\tfilter: 'watched'\n\t\t}];\n\n\t\tdata.selectedFilter = data.filters.find(function (filter) {\n\t\t\treturn filter && filter.selected;\n\t\t});\n\n\t\tvar pageCount = Math.max(1, Math.ceil(data.topicCount / settings.topicsPerPage));\n\t\tdata.pagination = pagination.create(page, pageCount, req.query);\n\n\t\tif (req.path.startsWith('/api/recent') || req.path.startsWith('/recent')) {\n\t\t\tdata.breadcrumbs = helpers.buildBreadcrumbs([{text: '[[recent:title]]'}]);\n\t\t}\n\n\t\tdata.querystring = cid ? ('?cid=' + validator.escape(String(cid))) : '';\n\t\tres.render('recent', data);\n\t});\n};\n\nmodule.exports = recentController;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/search.js":"\n'use strict';\n\nvar async = require('async');\n\nvar meta = require('../meta');\nvar plugins = require('../plugins');\nvar search = require('../search');\nvar categories = require('../categories');\nvar pagination = require('../pagination');\nvar helpers = require('./helpers');\n\n\nvar searchController = {};\n\nsearchController.search = function (req, res, next) {\n\tif (!plugins.hasListeners('filter:search.query')) {\n\t\treturn next();\n\t}\n\n\tif (!req.user && parseInt(meta.config.allowGuestSearching, 10) !== 1) {\n\t\treturn helpers.notAllowed(req, res);\n\t}\n\n\tvar page = Math.max(1, parseInt(req.query.page, 10)) || 1;\n\tif (req.query.categories && !Array.isArray(req.query.categories)) {\n\t\treq.query.categories = [req.query.categories];\n\t}\n\n\tvar data = {\n\t\tquery: req.query.term,\n\t\tsearchIn: req.query.in || 'posts',\n\t\tpostedBy: req.query.by,\n\t\tcategories: req.query.categories,\n\t\tsearchChildren: req.query.searchChildren,\n\t\treplies: req.query.replies,\n\t\trepliesFilter: req.query.repliesFilter,\n\t\ttimeRange: req.query.timeRange,\n\t\ttimeFilter: req.query.timeFilter,\n\t\tsortBy: req.query.sortBy,\n\t\tsortDirection: req.query.sortDirection,\n\t\tpage: page,\n\t\tuid: req.uid,\n\t\tqs: req.query\n\t};\n\n\tasync.parallel({\n\t\tcategories: async.apply(categories.buildForSelect, req.uid),\n\t\tsearch: async.apply(search.search, data)\n\t}, function (err, results) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tvar categoriesData = [\n\t\t\t{value: 'all', text: '[[unread:all_categories]]'},\n\t\t\t{value: 'watched', text: '[[category:watched-categories]]'}\n\t\t].concat(results.categories);\n\n\t\tvar searchData = results.search;\n\t\tsearchData.categories = categoriesData;\n\t\tsearchData.categoriesCount = results.categories.length;\n\t\tsearchData.pagination = pagination.create(page, searchData.pageCount, req.query);\n\t\tsearchData.showAsPosts = !req.query.showAs || req.query.showAs === 'posts';\n\t\tsearchData.showAsTopics = req.query.showAs === 'topics';\n\t\tsearchData.title = '[[global:header.search]]';\n\t\tsearchData.breadcrumbs = helpers.buildBreadcrumbs([{text: '[[global:search]]'}]);\n\t\tsearchData.expandSearch = !req.query.term;\n\n\t\tres.render('search', searchData);\n\t});\n};\n\nmodule.exports = searchController;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/sitemap.js":"'use strict';\n\nvar sitemap = require('../sitemap');\nvar meta = require('../meta');\n\nvar sitemapController = {};\nsitemapController.render = function (req, res, next) {\n\tsitemap.render(function (err, tplData) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\treq.app.render('sitemap', tplData, function (err, xml) {\n\t\t\tif (err) {\n\t\t\t\treturn next(err);\n\t\t\t}\n\t\t\tres.header('Content-Type', 'application/xml');\n\t\t\tres.send(xml);\n\t\t});\n\t});\n};\n\nsitemapController.getPages = function (req, res, next) {\n\tif (parseInt(meta.config['feeds:disableSitemap'], 10) === 1) {\n\t\treturn next();\n\t}\n\n\tsitemap.getPages(function (err, xml) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\t\tres.header('Content-Type', 'application/xml');\n\t\tres.send(xml);\n\t});\n};\n\nsitemapController.getCategories = function (req, res, next) {\n\tif (parseInt(meta.config['feeds:disableSitemap'], 10) === 1) {\n\t\treturn next();\n\t}\n\n\tsitemap.getCategories(function (err, xml) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\t\tres.header('Content-Type', 'application/xml');\n\t\tres.send(xml);\n\t});\n};\n\nsitemapController.getTopicPage = function (req, res, next) {\n\tif (parseInt(meta.config['feeds:disableSitemap'], 10) === 1) {\n\t\treturn next();\n\t}\n\n\tsitemap.getTopicPage(parseInt(req.params[0], 10), function (err, xml) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t} else if (!xml) {\n\t\t\treturn next();\n\t\t}\n\n\t\tres.header('Content-Type', 'application/xml');\n\t\tres.send(xml);\n\t});\n};\n\nmodule.exports = sitemapController;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/tags.js":"\"use strict\";\n\n\nvar async = require('async');\nvar nconf = require('nconf');\nvar validator = require('validator');\n\nvar user = require('../user');\nvar topics = require('../topics');\nvar pagination = require('../pagination');\nvar helpers =  require('./helpers');\n\nvar tagsController = {};\n\ntagsController.getTag = function (req, res, next) {\n\tvar tag = validator.escape(String(req.params.tag));\n\tvar page = parseInt(req.query.page, 10) || 1;\n\n\tvar templateData = {\n\t\ttopics: [],\n\t\ttag: tag,\n\t\tbreadcrumbs: helpers.buildBreadcrumbs([{text: '[[tags:tags]]', url: '/tags'}, {text: tag}]),\n\t\ttitle: '[[pages:tag, ' + tag + ']]'\n\t};\n\tvar settings;\n\tvar topicCount = 0;\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tuser.getSettings(req.uid, next);\n\t\t},\n\t\tfunction (_settings, next) {\n\t\t\tsettings = _settings;\n\t\t\tvar start = Math.max(0, (page - 1) * settings.topicsPerPage);\n\t\t\tvar stop = start + settings.topicsPerPage - 1;\n\t\t\ttemplateData.nextStart = stop + 1;\n\t\t\tasync.parallel({\n\t\t\t\ttopicCount: function (next) {\n\t\t\t\t\ttopics.getTagTopicCount(tag, next);\n\t\t\t\t},\n\t\t\t\ttids: function (next) {\n\t\t\t\t\ttopics.getTagTids(req.params.tag, start, stop, next);\n\t\t\t\t}\n\t\t\t}, next);\n\t\t},\n\t\tfunction (results, next) {\n\t\t\tif (Array.isArray(results.tids) && !results.tids.length) {\n\t\t\t\treturn res.render('tag', templateData);\n\t\t\t}\n\t\t\ttopicCount = results.topicCount;\n\t\t\ttopics.getTopics(results.tids, req.uid, next);\n\t\t}\n\t], function (err, topics) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tres.locals.metaTags = [\n\t\t\t{\n\t\t\t\tname: 'title',\n\t\t\t\tcontent: tag\n\t\t\t},\n\t\t\t{\n\t\t\t\tproperty: 'og:title',\n\t\t\t\tcontent: tag\n\t\t\t},\n\t\t\t{\n\t\t\t\tproperty: 'og:url',\n\t\t\t\tcontent: nconf.get('url') + '/tags/' + tag\n\t\t\t}\n\t\t];\n\t\ttemplateData.topics = topics;\n\n\t\tvar pageCount =\tMath.max(1, Math.ceil(topicCount / settings.topicsPerPage));\n\t\ttemplateData.pagination = pagination.create(page, pageCount);\n\n\t\tres.render('tag', templateData);\n\t});\n};\n\ntagsController.getTags = function (req, res, next) {\n\ttopics.getTags(0, 99, function (err, tags) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\t\ttags = tags.filter(Boolean);\n\t\tvar data = {\n\t\t\ttags: tags,\n\t\t\tnextStart: 100,\n\t\t\tbreadcrumbs: helpers.buildBreadcrumbs([{text: '[[tags:tags]]'}]),\n\t\t\ttitle: '[[pages:tags]]'\n\t\t};\n\t\tres.render('tags', data);\n\t});\n};\n\nmodule.exports = tagsController;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/topics.js":"\"use strict\";\n\n\nvar async = require('async');\nvar S = require('string');\nvar nconf = require('nconf');\n\nvar user = require('../user');\nvar meta = require('../meta');\nvar topics = require('../topics');\nvar posts = require('../posts');\nvar privileges = require('../privileges');\nvar plugins = require('../plugins');\nvar helpers = require('./helpers');\nvar pagination = require('../pagination');\nvar utils = require('../../public/src/utils');\n\nvar topicsController = {};\n\ntopicsController.get = function (req, res, callback) {\n\tvar tid = req.params.topic_id;\n\tvar currentPage = parseInt(req.query.page, 10) || 1;\n\tvar pageCount = 1;\n\tvar userPrivileges;\n\tvar settings;\n\n\tif ((req.params.post_index && !utils.isNumber(req.params.post_index)) || !utils.isNumber(tid)) {\n\t\treturn callback();\n\t}\n\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tasync.parallel({\n\t\t\t\tprivileges: function (next) {\n\t\t\t\t\tprivileges.topics.get(tid, req.uid, next);\n\t\t\t\t},\n\t\t\t\tsettings: function (next) {\n\t\t\t\t\tuser.getSettings(req.uid, next);\n\t\t\t\t},\n\t\t\t\ttopic: function (next) {\n\t\t\t\t\ttopics.getTopicData(tid, next);\n\t\t\t\t}\n\t\t\t}, next);\n\t\t},\n\t\tfunction (results, next) {\n\t\t\tif (!results.topic) {\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tuserPrivileges = results.privileges;\n\n\t\t\tif (!userPrivileges.read || !userPrivileges['topics:read'] || (parseInt(results.topic.deleted, 10) && !userPrivileges.view_deleted)) {\n\t\t\t\treturn helpers.notAllowed(req, res);\n\t\t\t}\n\n\t\t\tif (!res.locals.isAPI && (!req.params.slug || results.topic.slug !== tid + '/' + req.params.slug) && (results.topic.slug && results.topic.slug !== tid + '/')) {\n\t\t\t\tvar url = '/topic/' + results.topic.slug;\n\t\t\t\tif (req.params.post_index) {\n\t\t\t\t\turl += '/' + req.params.post_index;\n\t\t\t\t}\n\t\t\t\tif (currentPage > 1) {\n\t\t\t\t\turl += '?page=' + currentPage;\n\t\t\t\t}\n\t\t\t\treturn helpers.redirect(res, url);\n\t\t\t}\n\n\t\t\tsettings = results.settings;\n\t\t\tvar postCount = parseInt(results.topic.postcount, 10);\n\t\t\tpageCount = Math.max(1, Math.ceil(postCount / settings.postsPerPage));\n\n\t\t\tif (utils.isNumber(req.params.post_index) && (req.params.post_index < 1 || req.params.post_index > postCount)) {\n\t\t\t\treturn helpers.redirect(res, '/topic/' + req.params.topic_id + '/' + req.params.slug + (req.params.post_index > postCount ? '/' + postCount : ''));\n\t\t\t}\n\n\t\t\tif (settings.usePagination && (currentPage < 1 || currentPage > pageCount)) {\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tvar set = 'tid:' + tid + ':posts';\n\t\t\tvar reverse = false;\n\t\t\t// `sort` qs has priority over user setting\n\t\t\tvar sort = req.query.sort || settings.topicPostSort;\n\t\t\tif (sort === 'newest_to_oldest') {\n\t\t\t\treverse = true;\n\t\t\t} else if (sort === 'most_votes') {\n\t\t\t\treverse = true;\n\t\t\t\tset = 'tid:' + tid + ':posts:votes';\n\t\t\t}\n\n\t\t\tvar postIndex = 0;\n\n\t\t\treq.params.post_index = parseInt(req.params.post_index, 10) || 0;\n\t\t\tif (reverse && req.params.post_index === 1) {\n\t\t\t\treq.params.post_index = 0;\n\t\t\t}\n\t\t\tif (!settings.usePagination) {\n\t\t\t\tif (req.params.post_index !== 0) {\n\t\t\t\t\tcurrentPage = 1;\n\t\t\t\t}\n\t\t\t\tif (reverse) {\n\t\t\t\t\tpostIndex = Math.max(0, postCount - (req.params.post_index || postCount) - Math.ceil(settings.postsPerPage / 2));\n\t\t\t\t} else {\n\t\t\t\t\tpostIndex = Math.max(0, (req.params.post_index || 1) - Math.ceil(settings.postsPerPage / 2));\n\t\t\t\t}\n\t\t\t} else if (!req.query.page) {\n\t\t\t\tvar index;\n\t\t\t\tif (reverse) {\n\t\t\t\t\tindex = Math.max(0, postCount - (req.params.post_index || postCount) + 2);\n\t\t\t\t} else {\n\t\t\t\t\tindex = Math.max(0, req.params.post_index) || 0;\n\t\t\t\t}\n\n\t\t\t\tcurrentPage = Math.max(1, Math.ceil(index / settings.postsPerPage));\n\t\t\t}\n\n\t\t\tvar start = (currentPage - 1) * settings.postsPerPage + postIndex;\n\t\t\tvar stop = start + settings.postsPerPage - 1;\n\n\t\t\ttopics.getTopicWithPosts(results.topic, set, req.uid, start, stop, reverse, next);\n\t\t},\n\t\tfunction (topicData, next) {\n\t\t\tif (topicData.category.disabled) {\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\ttopics.modifyPostsByPrivilege(topicData, userPrivileges);\n\n\t\t\tplugins.fireHook('filter:controllers.topic.get', {topicData: topicData, uid: req.uid}, next);\n\t\t},\n\t\tfunction (data, next) {\n\n\t\t\tvar breadcrumbs = [\n\t\t\t\t{\n\t\t\t\t\ttext: data.topicData.category.name,\n\t\t\t\t\turl: nconf.get('relative_path') + '/category/' + data.topicData.category.slug\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttext: data.topicData.title\n\t\t\t\t}\n\t\t\t];\n\n\t\t\thelpers.buildCategoryBreadcrumbs(data.topicData.category.parentCid, function (err, crumbs) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn next(err);\n\t\t\t\t}\n\t\t\t\tdata.topicData.breadcrumbs = crumbs.concat(breadcrumbs);\n\t\t\t\tnext(null, data.topicData);\n\t\t\t});\n\t\t},\n\t\tfunction (topicData, next) {\n\t\t\tfunction findPost(index) {\n\t\t\t\tfor(var i = 0; i < topicData.posts.length; ++i) {\n\t\t\t\t\tif (parseInt(topicData.posts[i].index, 10) === parseInt(index, 10)) {\n\t\t\t\t\t\treturn topicData.posts[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar description = '';\n\t\t\tvar postAtIndex = findPost(Math.max(0, req.params.post_index - 1));\n\n\t\t\tif (postAtIndex && postAtIndex.content) {\n\t\t\t\tdescription = S(postAtIndex.content).decodeHTMLEntities().stripTags().s;\n\t\t\t}\n\n\t\t\tif (description.length > 255) {\n\t\t\t\tdescription = description.substr(0, 255) + '...';\n\t\t\t}\n\n\t\t\tvar ogImageUrl = '';\n\t\t\tif (topicData.thumb) {\n\t\t\t\togImageUrl = topicData.thumb;\n\t\t\t} else if (postAtIndex && postAtIndex.user && postAtIndex.user.picture) {\n\t\t\t\togImageUrl = postAtIndex.user.picture;\n\t\t\t} else if (meta.config['og:image']) {\n\t\t\t\togImageUrl = meta.config['og:image'];\n\t\t\t} else if (meta.config['brand:logo']) {\n\t\t\t\togImageUrl = meta.config['brand:logo'];\n\t\t\t} else {\n\t\t\t\togImageUrl = '/logo.png';\n\t\t\t}\n\n\t\t\tif (typeof ogImageUrl === 'string' && ogImageUrl.indexOf('http') === -1) {\n\t\t\t\togImageUrl = nconf.get('url') + ogImageUrl;\n\t\t\t}\n\n\t\t\tdescription = description.replace(/\\n/g, ' ');\n\n\t\t\tres.locals.metaTags = [\n\t\t\t\t{\n\t\t\t\t\tname: \"title\",\n\t\t\t\t\tcontent: topicData.titleRaw\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"description\",\n\t\t\t\t\tcontent: description\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'og:title',\n\t\t\t\t\tcontent: topicData.titleRaw\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'og:description',\n\t\t\t\t\tcontent: description\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: \"og:type\",\n\t\t\t\t\tcontent: 'article'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: \"og:url\",\n\t\t\t\t\tcontent: nconf.get('url') + '/topic/' + topicData.slug + (req.params.post_index ? ('/' + req.params.post_index) : ''),\n\t\t\t\t\tnoEscape: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'og:image',\n\t\t\t\t\tcontent: ogImageUrl,\n\t\t\t\t\tnoEscape: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: \"og:image:url\",\n\t\t\t\t\tcontent: ogImageUrl,\n\t\t\t\t\tnoEscape: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: \"article:published_time\",\n\t\t\t\t\tcontent: utils.toISOString(topicData.timestamp)\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'article:modified_time',\n\t\t\t\t\tcontent: utils.toISOString(topicData.lastposttime)\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'article:section',\n\t\t\t\t\tcontent: topicData.category ? topicData.category.name : ''\n\t\t\t\t}\n\t\t\t];\n\n\t\t\tres.locals.linkTags = [\n\t\t\t\t{\n\t\t\t\t\trel: 'alternate',\n\t\t\t\t\ttype: 'application/rss+xml',\n\t\t\t\t\thref: nconf.get('url') + '/topic/' + tid + '.rss'\n\t\t\t\t}\n\t\t\t];\n\n\t\t\tif (topicData.category) {\n\t\t\t\tres.locals.linkTags.push({\n\t\t\t\t\trel: 'up',\n\t\t\t\t\thref: nconf.get('url') + '/category/' + topicData.category.slug\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tnext(null, topicData);\n\t\t}\n\t], function (err, data) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tdata.privileges = userPrivileges;\n\t\tdata.topicStaleDays = parseInt(meta.config.topicStaleDays, 10) || 60;\n\t\tdata['reputation:disabled'] = parseInt(meta.config['reputation:disabled'], 10) === 1;\n\t\tdata['downvote:disabled'] = parseInt(meta.config['downvote:disabled'], 10) === 1;\n\t\tdata['feeds:disableRSS'] = parseInt(meta.config['feeds:disableRSS'], 10) === 1;\n\t\tdata.bookmarkThreshold = parseInt(meta.config.bookmarkThreshold, 10) || 5;\n\t\tdata.postEditDuration = parseInt(meta.config.postEditDuration, 10) || 0;\n\t\tdata.postDeleteDuration = parseInt(meta.config.postDeleteDuration, 10) || 0;\n\t\tdata.scrollToMyPost = settings.scrollToMyPost;\n\t\tdata.rssFeedUrl = nconf.get('relative_path') + '/topic/' + data.tid + '.rss';\n\t\tdata.pagination = pagination.create(currentPage, pageCount, req.query);\n\t\tdata.pagination.rel.forEach(function (rel) {\n\t\t\trel.href = nconf.get('url') + '/topic/' + data.slug + rel.href;\n\t\t\tres.locals.linkTags.push(rel);\n\t\t});\n\n\t\treq.session.tids_viewed = req.session.tids_viewed || {};\n\t\tif (!req.session.tids_viewed[tid] || req.session.tids_viewed[tid] < Date.now() - 3600000) {\n\t\t\ttopics.increaseViewCount(tid);\n\t\t\treq.session.tids_viewed[tid] = Date.now();\n\t\t}\n\n\t\tif (req.uid) {\n\t\t\ttopics.markAsRead([tid], req.uid, function (err, markedRead) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\t\t\t\tif (markedRead) {\n\t\t\t\t\ttopics.pushUnreadCount(req.uid);\n\t\t\t\t\ttopics.markTopicNotificationsRead([tid], req.uid);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tres.render('topic', data);\n\t});\n};\n\ntopicsController.teaser = function (req, res, next) {\n\tvar tid = req.params.topic_id;\n\n\tif (!utils.isNumber(tid)) {\n\t\treturn next(new Error('[[error:invalid-tid]]'));\n\t}\n\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tprivileges.topics.can('read', tid, req.uid, next);\n\t\t},\n\t\tfunction (canRead, next) {\n\t\t\tif (!canRead) {\n\t\t\t\treturn res.status(403).json('[[error:no-privileges]]');\n\t\t\t}\n\t\t\ttopics.getLatestUndeletedPid(tid, next);\n\t\t},\n\t\tfunction (pid, next) {\n\t\t\tif (!pid) {\n\t\t\t\treturn res.status(404).json('not-found');\n\t\t\t}\n\t\t\tposts.getPostSummaryByPids([pid], req.uid, {stripTags: false}, next);\n\t\t}\n\t], function (err, posts) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tif (!Array.isArray(posts) || !posts.length) {\n\t\t\treturn res.status(404).json('not-found');\n\t\t}\n\t\tres.json(posts[0]);\n\t});\n};\n\ntopicsController.pagination = function (req, res, callback) {\n\tvar tid = req.params.topic_id;\n\tvar currentPage = parseInt(req.query.page, 10) || 1;\n\n\tif (!utils.isNumber(tid)) {\n\t\treturn callback();\n\t}\n\n\tasync.parallel({\n\t\tprivileges: async.apply(privileges.topics.get, tid, req.uid),\n\t\tsettings: async.apply(user.getSettings, req.uid),\n\t\ttopic: async.apply(topics.getTopicData, tid)\n\t}, function (err, results) {\n\t\tif (err || !results.topic) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tif (!results.privileges.read || (parseInt(results.topic.deleted, 10) && !results.privileges.view_deleted)) {\n\t\t\treturn helpers.notAllowed(req, res);\n\t\t}\n\n\t\tvar postCount = parseInt(results.topic.postcount, 10);\n\t\tvar pageCount = Math.max(1, Math.ceil((postCount - 1) / results.settings.postsPerPage));\n\n\t\tvar paginationData = pagination.create(currentPage, pageCount);\n\t\tpaginationData.rel.forEach(function (rel) {\n\t\t\trel.href = nconf.get('url') + '/topic/' + results.topic.slug + rel.href;\n\t\t});\n\n\t\tres.json(paginationData);\n\t});\n};\n\nmodule.exports = topicsController;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/unread.js":"\n'use strict';\n\nvar async = require('async');\nvar querystring = require('querystring');\nvar validator = require('validator');\n\nvar pagination = require('../pagination');\nvar user = require('../user');\nvar topics = require('../topics');\nvar helpers = require('./helpers');\n\nvar unreadController = {};\n\nvar validFilter = {'': true, 'new': true, 'watched': true};\n\nunreadController.get = function (req, res, next) {\n\tvar page = parseInt(req.query.page, 10) || 1;\n\tvar results;\n\tvar cid = req.query.cid;\n\tvar filter = req.params.filter || '';\n\n\tif (!validFilter[filter]) {\n\t\treturn next();\n\t}\n\tvar settings;\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tasync.parallel({\n\t\t\t\twatchedCategories: function (next) {\n\t\t\t\t\thelpers.getWatchedCategories(req.uid, cid, next);\n\t\t\t\t},\n\t\t\t\tsettings: function (next) {\n\t\t\t\t\tuser.getSettings(req.uid, next);\n\t\t\t\t}\n\t\t\t}, next);\n\t\t},\n\t\tfunction (_results, next) {\n\t\t\tresults = _results;\n\t\t\tsettings = results.settings;\n\t\t\tvar start = Math.max(0, (page - 1) * settings.topicsPerPage);\n\t\t\tvar stop = start + settings.topicsPerPage - 1;\n\t\t\ttopics.getUnreadTopics(cid, req.uid, start, stop, filter, next);\n\t\t}\n\t], function (err, data) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tdata.pageCount = Math.max(1, Math.ceil(data.topicCount / settings.topicsPerPage));\n\t\tdata.pagination = pagination.create(page, data.pageCount, req.query);\n\n\t\tif (settings.usePagination && (page < 1 || page > data.pageCount)) {\n\t\t\treq.query.page = Math.max(1, Math.min(data.pageCount, page));\n\t\t\treturn helpers.redirect(res, '/unread?' + querystring.stringify(req.query));\n\t\t}\n\n\t\tdata.categories = results.watchedCategories.categories;\n\t\tdata.selectedCategory = results.watchedCategories.selectedCategory;\n\n\t\tif (req.path.startsWith('/api/unread') || req.path.startsWith('/unread')) {\n\t\t\tdata.breadcrumbs = helpers.buildBreadcrumbs([{text: '[[unread:title]]'}]);\n\t\t}\n\n\t\tdata.title = '[[pages:unread]]';\n\t\tdata.filters = [{\n\t\t\tname: '[[unread:all-topics]]',\n\t\t\turl: 'unread',\n\t\t\tselected: filter === '',\n\t\t\tfilter: ''\n\t\t}, {\n\t\t\tname: '[[unread:new-topics]]',\n\t\t\turl: 'unread/new',\n\t\t\tselected: filter === 'new',\n\t\t\tfilter: 'new'\n\t\t}, {\n\t\t\tname: '[[unread:watched-topics]]',\n\t\t\turl: 'unread/watched',\n\t\t\tselected: filter === 'watched',\n\t\t\tfilter: 'watched'\n\t\t}];\n\n\t\tdata.selectedFilter = data.filters.find(function (filter) {\n\t\t\treturn filter && filter.selected;\n\t\t});\n\n\t\tdata.querystring = cid ? ('?cid=' + validator.escape(String(cid))) : '';\n\n\t\tres.render('unread', data);\n\t});\n};\n\nunreadController.unreadTotal = function (req, res, next) {\n\tvar filter = req.params.filter || '';\n\n\tif (!validFilter[filter]) {\n\t\treturn next();\n\t}\n\n\ttopics.getTotalUnread(req.uid, filter, function (err, data) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tres.json(data);\n\t});\n};\n\nmodule.exports = unreadController;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/uploads.js":"\"use strict\";\n\nvar fs = require('fs');\nvar path = require('path');\nvar async = require('async');\nvar nconf = require('nconf');\nvar validator = require('validator');\nvar winston = require('winston');\nvar mime = require('mime');\n\nvar meta = require('../meta');\nvar file = require('../file');\nvar plugins = require('../plugins');\nvar image = require('../image');\nvar privileges = require('../privileges');\n\nvar uploadsController = {};\n\nuploadsController.upload = function (req, res, filesIterator) {\n\tvar files = req.files.files;\n\n\tif (!Array.isArray(files)) {\n\t\treturn res.status(500).json('invalid files');\n\t}\n\n\tif (Array.isArray(files[0])) {\n\t\tfiles = files[0];\n\t}\n\n\tasync.map(files, filesIterator, function (err, images) {\n\t\tdeleteTempFiles(files);\n\n\t\tif (err) {\n\t\t\treturn res.status(500).send(err.message);\n\t\t}\n\n\t\tres.status(200).send(images);\n\t});\n};\n\nuploadsController.uploadPost = function (req, res, next) {\n\tuploadsController.upload(req, res, function (uploadedFile, next) {\n\t\tvar isImage = uploadedFile.type.match(/image./);\n\t\tif (isImage) {\n\t\t\tuploadAsImage(req, uploadedFile, next);\n\t\t} else {\n\t\t\tuploadAsFile(req, uploadedFile, next);\n\t\t}\n\t}, next);\n};\n\nfunction uploadAsImage(req, uploadedFile, callback) {\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tprivileges.categories.can('upload:post:image', req.body.cid, req.uid, next);\n\t\t},\n\t\tfunction (canUpload, next) {\n\t\t\tif (!canUpload) {\n\t\t\t\treturn next(new Error('[[error:no-privileges]]'));\n\t\t\t}\n\t\t\tif (plugins.hasListeners('filter:uploadImage')) {\n\t\t\t\treturn plugins.fireHook('filter:uploadImage', {image: uploadedFile, uid: req.uid}, callback);\n\t\t\t}\n\t\t\tfile.isFileTypeAllowed(uploadedFile.path, next);\n\t\t},\n\t\tfunction (next) {\n\t\t\tuploadFile(req.uid, uploadedFile, next);\n\t\t},\n\t\tfunction (fileObj, next) {\n\t\t\tif (parseInt(meta.config.maximumImageWidth, 10) === 0) {\n\t\t\t\treturn next(null, fileObj);\n\t\t\t}\n\n\t\t\tresizeImage(fileObj, next);\n\t\t}\n\t], callback);\n}\n\nfunction uploadAsFile(req, uploadedFile, callback) {\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tprivileges.categories.can('upload:post:file', req.body.cid, req.uid, next);\n\t\t},\n\t\tfunction (canUpload, next) {\n\t\t\tif (!canUpload) {\n\t\t\t\treturn next(new Error('[[error:no-privileges]]'));\n\t\t\t}\n\t\t\tif (parseInt(meta.config.allowFileUploads, 10) !== 1) {\n\t\t\t\treturn next(new Error('[[error:uploads-are-disabled]]'));\n\t\t\t}\n\t\t\tuploadFile(req.uid, uploadedFile, next);\n\t\t}\n\t], callback);\n}\n\nfunction resizeImage(fileObj, callback) {\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\timage.size(fileObj.path, next);\n\t\t},\n\t\tfunction (imageData, next) {\n\t\t\tif (imageData.width < (parseInt(meta.config.maximumImageWidth, 10) || 760)) {\n\t\t\t\treturn callback(null, fileObj);\n\t\t\t}\n\n\t\t\tvar dirname = path.dirname(fileObj.path);\n\t\t\tvar extname = path.extname(fileObj.path);\n\t\t\tvar basename = path.basename(fileObj.path, extname);\n\n\t\t\timage.resizeImage({\n\t\t\t\tpath: fileObj.path,\n\t\t\t\ttarget: path.join(dirname, basename + '-resized' + extname),\n\t\t\t\textension: extname,\n\t\t\t\twidth: parseInt(meta.config.maximumImageWidth, 10) || 760\n\t\t\t}, next);\n\t\t},\n\t\tfunction (next) {\n\n\t\t\t// Return the resized version to the composer/postData\n\t\t\tvar dirname = path.dirname(fileObj.url);\n\t\t\tvar extname = path.extname(fileObj.url);\n\t\t\tvar basename = path.basename(fileObj.url, extname);\n\n\t\t\tfileObj.url = path.join(dirname, basename + '-resized' + extname);\n\n\t\t\tnext(null, fileObj);\n\t\t}\n\t], callback);\n}\n\nuploadsController.uploadThumb = function (req, res, next) {\n\tif (parseInt(meta.config.allowTopicsThumbnail, 10) !== 1) {\n\t\tdeleteTempFiles(req.files.files);\n\t\treturn next(new Error('[[error:topic-thumbnails-are-disabled]]'));\n\t}\n\n\tuploadsController.upload(req, res, function (uploadedFile, next) {\n\t\tfile.isFileTypeAllowed(uploadedFile.path, function (err) {\n\t\t\tif (err) {\n\t\t\t\treturn next(err);\n\t\t\t}\n\n\t\t\tif (!uploadedFile.type.match(/image./)) {\n\t\t\t\treturn next(new Error('[[error:invalid-file]]'));\n\t\t\t}\n\n\t\t\tvar size = parseInt(meta.config.topicThumbSize, 10) || 120;\n\t\t\timage.resizeImage({\n\t\t\t\tpath: uploadedFile.path,\n\t\t\t\textension: path.extname(uploadedFile.name),\n\t\t\t\twidth: size,\n\t\t\t\theight: size\n\t\t\t}, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn next(err);\n\t\t\t\t}\n\n\t\t\t\tif (plugins.hasListeners('filter:uploadImage')) {\n\t\t\t\t\treturn plugins.fireHook('filter:uploadImage', {image: uploadedFile, uid: req.uid}, next);\n\t\t\t\t}\n\n\t\t\t\tuploadFile(req.uid, uploadedFile, next);\n\t\t\t});\n\t\t});\n\t}, next);\n};\n\nuploadsController.uploadGroupCover = function (uid, uploadedFile, callback) {\n\tif (plugins.hasListeners('filter:uploadImage')) {\n\t\treturn plugins.fireHook('filter:uploadImage', {image: uploadedFile, uid: uid}, callback);\n\t}\n\n\tif (plugins.hasListeners('filter:uploadFile')) {\n\t\treturn plugins.fireHook('filter:uploadFile', {file: uploadedFile, uid: uid}, callback);\n\t}\n\n\tfile.isFileTypeAllowed(uploadedFile.path, function (err) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\t\tsaveFileToLocal(uploadedFile, callback);\n\t});\n};\n\nfunction uploadFile(uid, uploadedFile, callback) {\n\tif (plugins.hasListeners('filter:uploadFile')) {\n\t\treturn plugins.fireHook('filter:uploadFile', {file: uploadedFile, uid: uid}, callback);\n\t}\n\n\tif (!uploadedFile) {\n\t\treturn callback(new Error('[[error:invalid-file]]'));\n\t}\n\n\tif (uploadedFile.size > parseInt(meta.config.maximumFileSize, 10) * 1024) {\n\t\treturn callback(new Error('[[error:file-too-big, ' + meta.config.maximumFileSize + ']]'));\n\t}\n\n\tif (meta.config.hasOwnProperty('allowedFileExtensions')) {\n\t\tvar allowed = file.allowedExtensions();\n\t\tvar extension = path.extname(uploadedFile.name);\n\t\tif (!extension) {\n\t\t\textension = '.' + mime.extension(uploadedFile.type);\n\t\t}\n\t\tif (allowed.length > 0 && allowed.indexOf(extension) === -1) {\n\t\t\treturn callback(new Error('[[error:invalid-file-type, ' + allowed.join('&#44; ') + ']]'));\n\t\t}\n\t}\n\n\tsaveFileToLocal(uploadedFile, callback);\n}\n\nfunction saveFileToLocal(uploadedFile, callback) {\n\tvar extension = path.extname(uploadedFile.name);\n\tif (!extension && uploadedFile.type) {\n\t\textension = '.' + mime.extension(uploadedFile.type);\n\t}\n\n\tvar filename = uploadedFile.name || 'upload';\n\n\tfilename = Date.now() + '-' + validator.escape(filename.replace(extension, '')).substr(0, 255) + extension;\n\n\tfile.saveFileToLocal(filename, 'files', uploadedFile.path, function (err, upload) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tcallback(null, {\n\t\t\turl: nconf.get('relative_path') + upload.url,\n\t\t\tpath: upload.path,\n\t\t\tname: uploadedFile.name\n\t\t});\n\t});\n}\n\nfunction deleteTempFiles(files) {\n\tasync.each(files, function (file, next) {\n\t\tfs.unlink(file.path, function (err) {\n\t\t\tif (err) {\n\t\t\t\twinston.error(err);\n\t\t\t}\n\t\t\tnext();\n\t\t});\n\t});\n}\n\n\n\nmodule.exports = uploadsController;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/users.js":"\"use strict\";\n\nvar async = require('async');\nvar user = require('../user');\nvar meta = require('../meta');\n\nvar pagination = require('../pagination');\nvar db = require('../database');\nvar helpers = require('./helpers');\n\n\nvar usersController = {};\n\n\nusersController.index = function (req, res, next) {\n\tvar section = req.query.section || 'joindate';\n\tvar sectionToController = {\n\t\tjoindate: usersController.getUsersSortedByJoinDate,\n\t\tonline: usersController.getOnlineUsers,\n\t\t'sort-posts': usersController.getUsersSortedByPosts,\n\t\t'sort-reputation': usersController.getUsersSortedByReputation,\n\t\tbanned: usersController.getBannedUsers,\n\t\tflagged: usersController.getFlaggedUsers\n\t};\n\n\tif (req.query.term) {\n\t\tusersController.search(req, res, next);\n\t} else if (sectionToController[section]) {\n\t\tsectionToController[section](req, res, next);\n\t} else {\n\t\tusersController.getUsersSortedByJoinDate(req, res, next);\n\t}\n};\n\nusersController.search = function (req, res, next) {\n\tasync.parallel({\n\t\tsearch: function (next) {\n\t\t\tuser.search({\n\t\t\t\tquery: req.query.term,\n\t\t\t\tsearchBy: req.query.searchBy || 'username',\n\t\t\t\tpage: req.query.page || 1,\n\t\t\t\tsortBy: req.query.sortBy,\n\t\t\t\tonlineOnly: req.query.onlineOnly === 'true',\n\t\t\t\tbannedOnly: req.query.bannedOnly === 'true',\n\t\t\t\tflaggedOnly: req.query.flaggedOnly === 'true'\n\t\t\t}, next);\n\t\t},\n\t\tisAdminOrGlobalMod: function (next) {\n\t\t\tuser.isAdminOrGlobalMod(req.uid, next);\n\t\t}\n\t}, function (err, results) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tvar section = req.query.section || 'joindate';\n\n\t\tresults.search.isAdminOrGlobalMod = results.isAdminOrGlobalMod;\n\t\tresults.search.pagination = pagination.create(req.query.page, results.search.pageCount, req.query);\n\t\tresults.search['section_' + section] = true;\n\t\trender(req, res, results.search, next);\n\t});\n};\n\nusersController.getOnlineUsers = function (req, res, next) {\n\tasync.parallel({\n\t\tusers: function (next) {\n\t\t\tusersController.getUsers('users:online', req.uid, req.query, next);\n\t\t},\n\t\tguests: function (next) {\n\t\t\trequire('../socket.io/admin/rooms').getTotalGuestCount(next);\n\t\t}\n\t}, function (err, results) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\t\tvar userData = results.users;\n\t\tvar hiddenCount = 0;\n\t\tif (!userData.isAdminOrGlobalMod) {\n\t\t\tuserData.users = userData.users.filter(function (user) {\n\t\t\t\tif (user && user.status === 'offline') {\n\t\t\t\t\thiddenCount ++;\n\t\t\t\t}\n\t\t\t\treturn user && user.status !== 'offline';\n\t\t\t});\n\t\t}\n\n\t\tuserData.anonymousUserCount = results.guests + hiddenCount;\n\n\t\trender(req, res, userData, next);\n\t});\n};\n\nusersController.getUsersSortedByPosts = function (req, res, next) {\n\tusersController.renderUsersPage('users:postcount', req, res, next);\n};\n\nusersController.getUsersSortedByReputation = function (req, res, next) {\n\tif (parseInt(meta.config['reputation:disabled'], 10) === 1) {\n\t\treturn next();\n\t}\n\tusersController.renderUsersPage('users:reputation', req, res, next);\n};\n\nusersController.getUsersSortedByJoinDate = function (req, res, next) {\n\tusersController.renderUsersPage('users:joindate', req, res, next);\n};\n\nusersController.getBannedUsers = function (req, res, next) {\n\tusersController.getUsers('users:banned', req.uid, req.query, function (err, userData) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tif (!userData.isAdminOrGlobalMod) {\n\t\t\treturn next();\n\t\t}\n\n\t\trender(req, res, userData, next);\n\t});\n};\n\nusersController.getFlaggedUsers = function (req, res, next) {\n\tusersController.getUsers('users:flags', req.uid, req.query, function (err, userData) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tif (!userData.isAdminOrGlobalMod) {\n\t\t\treturn next();\n\t\t}\n\n\t\trender(req, res, userData, next);\n\t});\n};\n\nusersController.renderUsersPage = function (set, req, res, next) {\n\tusersController.getUsers(set, req.uid, req.query, function (err, userData) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\trender(req, res, userData, next);\n\t});\n};\n\nusersController.getUsers = function (set, uid, query, callback) {\n\tvar setToData = {\n\t\t'users:postcount': {title: '[[pages:users/sort-posts]]', crumb: '[[users:top_posters]]'},\n\t\t'users:reputation': {title: '[[pages:users/sort-reputation]]', crumb: '[[users:most_reputation]]'},\n\t\t'users:joindate': {title: '[[pages:users/latest]]', crumb: '[[global:users]]'},\n\t\t'users:online': {title: '[[pages:users/online]]', crumb: '[[global:online]]'},\n\t\t'users:banned': {title: '[[pages:users/banned]]', crumb: '[[user:banned]]'},\n\t\t'users:flags': {title: '[[pages:users/most-flags]]', crumb: '[[users:most_flags]]'},\n\t};\n\n\tif (!setToData[set]) {\n\t\tsetToData[set] = {title: '', crumb: ''};\n\t}\n\n\tvar breadcrumbs = [{text: setToData[set].crumb}];\n\n\tif (set !== 'users:joindate') {\n\t\tbreadcrumbs.unshift({text: '[[global:users]]', url: '/users'});\n\t}\n\n\tvar page = parseInt(query.page, 10) || 1;\n\tvar resultsPerPage = parseInt(meta.config.userSearchResultsPerPage, 10) || 50;\n\tvar start = Math.max(0, page - 1) * resultsPerPage;\n\tvar stop = start + resultsPerPage - 1;\n\n\tasync.parallel({\n\t\tisAdminOrGlobalMod: function (next) {\n\t\t\tuser.isAdminOrGlobalMod(uid, next);\n\t\t},\n\t\tusersData: function (next) {\n\t\t\tusersController.getUsersAndCount(set, uid, start, stop, next);\n\t\t}\n\t}, function (err, results) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tvar pageCount = Math.ceil(results.usersData.count / resultsPerPage);\n\t\tvar userData = {\n\t\t\tusers: results.usersData.users,\n\t\t\tpagination: pagination.create(page, pageCount, query),\n\t\t\tuserCount: results.usersData.count,\n\t\t\ttitle: setToData[set].title || '[[pages:users/latest]]',\n\t\t\tbreadcrumbs: helpers.buildBreadcrumbs(breadcrumbs),\n\t\t\tisAdminOrGlobalMod: results.isAdminOrGlobalMod\n\t\t};\n\t\tuserData['section_' + (query.section || 'joindate')] = true;\n\t\tcallback(null, userData);\n\t});\n};\n\nusersController.getUsersAndCount = function (set, uid, start, stop, callback) {\n\tasync.parallel({\n\t\tusers: function (next) {\n\t\t\tuser.getUsersFromSet(set, uid, start, stop, next);\n\t\t},\n\t\tcount: function (next) {\n\t\t\tif (set === 'users:online') {\n\t\t\t\tvar now = Date.now();\n\t\t\t\tdb.sortedSetCount('users:online', now - 300000, '+inf', next);\n\t\t\t} else if (set === 'users:banned') {\n\t\t\t\tdb.sortedSetCard('users:banned', next);\n\t\t\t} else if (set === 'users:flags') {\n\t\t\t\tdb.sortedSetCard('users:flags', next);\n\t\t\t} else {\n\t\t\t\tdb.getObjectField('global', 'userCount', next);\n\t\t\t}\n\t\t}\n\t}, function (err, results) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\t\tresults.users = results.users.filter(function (user) {\n\t\t\treturn user && parseInt(user.uid, 10);\n\t\t});\n\n\t\tcallback(null, results);\n\t});\n};\n\nfunction render(req, res, data, next) {\n\tvar registrationType = meta.config.registrationType;\n\n\tdata.maximumInvites = meta.config.maximumInvites;\n\tdata.inviteOnly = registrationType === 'invite-only' || registrationType === 'admin-invite-only';\n\tdata.adminInviteOnly = registrationType === 'admin-invite-only';\n\tdata['reputation:disabled'] = parseInt(meta.config['reputation:disabled'], 10) === 1;\n\n\tuser.getInvitesNumber(req.uid, function (err, numInvites) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tres.append('X-Total-Count', data.userCount);\n\t\tdata.invites = numInvites;\n\n\t\tres.render('users', data);\n\t});\n}\n\nmodule.exports = usersController;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/groups/cover.js":"'use strict';\n\nvar async = require('async');\nvar nconf = require('nconf');\nvar path = require('path');\nvar fs = require('fs');\nvar crypto = require('crypto');\nvar Jimp = require('jimp');\nvar mime = require('mime');\nvar winston = require('winston');\n\nvar db = require('../database');\nvar file = require('../file');\nvar uploadsController = require('../controllers/uploads');\n\nmodule.exports = function (Groups) {\n\n\tGroups.updateCoverPosition = function (groupName, position, callback) {\n\t\tif (!groupName) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\t\tGroups.setGroupField(groupName, 'cover:position', position, callback);\n\t};\n\n\tGroups.updateCover = function (uid, data, callback) {\n\n\t\t// Position only? That's fine\n\t\tif (!data.imageData && data.position) {\n\t\t\treturn Groups.updateCoverPosition(data.groupName, data.position, callback);\n\t\t}\n\n\t\tvar tempPath = data.file ? data.file : '';\n\t\tvar url;\n\t\tvar type = data.file ? mime.lookup(data.file) : 'image/png';\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tif (tempPath) {\n\t\t\t\t\treturn next(null, tempPath);\n\t\t\t\t}\n\t\t\t\twriteImageDataToFile(data.imageData, next);\n\t\t\t},\n\t\t\tfunction (_tempPath, next) {\n\t\t\t\ttempPath = _tempPath;\n\t\t\t\tuploadsController.uploadGroupCover(uid, {\n\t\t\t\t\tname: 'groupCover',\n\t\t\t\t\tpath: tempPath,\n\t\t\t\t\ttype: type\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (uploadData, next) {\n\t\t\t\turl = uploadData.url;\n\t\t\t\tGroups.setGroupField(data.groupName, 'cover:url', url, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tresizeCover(tempPath, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tuploadsController.uploadGroupCover(uid, {\n\t\t\t\t\tname: 'groupCoverThumb',\n\t\t\t\t\tpath: tempPath,\n\t\t\t\t\ttype: type\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (uploadData, next) {\n\t\t\t\tGroups.setGroupField(data.groupName, 'cover:thumb:url', uploadData.url, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tfs.unlink(tempPath, next);\t// Delete temporary file\n\t\t\t}\n\t\t], function (err) {\n\t\t\tif (err) {\n\t\t\t\treturn fs.unlink(tempPath, function (unlinkErr) {\n\t\t\t\t\tif (unlinkErr) {\n\t\t\t\t\t\twinston.error(unlinkErr);\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback(err);\t// send back original error\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (data.position) {\n\t\t\t\tGroups.updateCoverPosition(data.groupName, data.position, function (err) {\n\t\t\t\t\tcallback(err, {url: url});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcallback(err, {url: url});\n\t\t\t}\n\t\t});\n\t};\n\n\tfunction resizeCover(path, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tnew Jimp(path, next);\n\t\t\t},\n\t\t\tfunction (image, next) {\n\t\t\t\timage.resize(358, Jimp.AUTO, next);\n\t\t\t},\n\t\t\tfunction (image, next) {\n\t\t\t\timage.write(path, next);\n\t\t\t}\n\t\t], function (err) {\n\t\t\tcallback(err);\n\t\t});\n\t}\n\n\tfunction writeImageDataToFile(imageData, callback) {\n\t\t// Calculate md5sum of image\n\t\t// This is required because user data can be private\n\t\tvar md5sum = crypto.createHash('md5');\n\t\tmd5sum.update(imageData);\n\t\tmd5sum = md5sum.digest('hex');\n\n\t\t// Save image\n\t\tvar tempPath = path.join(nconf.get('base_dir'), nconf.get('upload_path'), md5sum) + '.png';\n\t\tvar buffer = new Buffer(imageData.slice(imageData.indexOf('base64') + 7), 'base64');\n\n\t\tfs.writeFile(tempPath, buffer, {\n\t\t\tencoding: 'base64'\n\t\t}, function (err) {\n\t\t\tcallback(err, tempPath);\n\t\t});\n\t}\n\n\tGroups.removeCover = function (data, callback) {\n\t\tdb.deleteObjectFields('group:' + data.groupName, ['cover:url', 'cover:thumb:url'], callback);\n\t};\n\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/groups/create.js":"'use strict';\n\nvar async = require('async');\nvar meta = require('../meta');\nvar plugins = require('../plugins');\nvar utils = require('../../public/src/utils');\nvar db = require('../database');\n\nmodule.exports = function (Groups) {\n\n\tGroups.create = function (data, callback) {\n\t\tvar system = isSystemGroup(data);\n\t\tvar groupData;\n\t\tvar timestamp = data.timestamp || Date.now();\n\t\tvar disableJoinRequests = parseInt(data.disableJoinRequests, 10) === 1 ? 1 : 0;\n\t\tif (data.name === 'administrators') {\n\t\t\tdisableJoinRequests = 1;\n\t\t}\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tvalidateGroupName(data.name, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tmeta.userOrGroupExists(data.name, next);\n\t\t\t},\n\t\t\tfunction (exists, next) {\n\t\t\t\tif (exists) {\n\t\t\t\t\treturn next(new Error('[[error:group-already-exists]]'));\n\t\t\t\t}\n\n\t\t\t\tvar memberCount = data.hasOwnProperty('ownerUid') ? 1 : 0;\n\t\t\t\tvar isPrivate = data.hasOwnProperty('private') ? parseInt(data.private, 10) : 1;\n\t\t\t\tvar slug = utils.slugify(data.name);\n\t\t\t\tgroupData = {\n\t\t\t\t\tname: data.name,\n\t\t\t\t\tslug: slug,\n\t\t\t\t\tcreatetime: timestamp,\n\t\t\t\t\tuserTitle: data.userTitle || data.name,\n\t\t\t\t\tdescription: data.description || '',\n\t\t\t\t\tmemberCount: memberCount,\n\t\t\t\t\tdeleted: 0,\n\t\t\t\t\thidden: parseInt(data.hidden, 10) === 1 ? 1 : 0,\n\t\t\t\t\tsystem: system ? 1 : 0,\n\t\t\t\t\tprivate: isPrivate,\n\t\t\t\t\tdisableJoinRequests: disableJoinRequests\n\t\t\t\t};\n\t\t\t\tplugins.fireHook('filter:group.create', {group: groupData, data: data}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tvar tasks = [\n\t\t\t\t\tasync.apply(db.sortedSetAdd, 'groups:createtime', groupData.createtime, groupData.name),\n\t\t\t\t\tasync.apply(db.setObject, 'group:' + groupData.name, groupData)\n\t\t\t\t];\n\n\t\t\t\tif (data.hasOwnProperty('ownerUid')) {\n\t\t\t\t\ttasks.push(async.apply(db.setAdd, 'group:' + groupData.name + ':owners', data.ownerUid));\n\t\t\t\t\ttasks.push(async.apply(db.sortedSetAdd, 'group:' + groupData.name + ':members', timestamp, data.ownerUid));\n\n\t\t\t\t\tgroupData.ownerUid = data.ownerUid;\n\t\t\t\t}\n\n\t\t\t\tif (!data.hidden && !system) {\n\t\t\t\t\ttasks.push(async.apply(db.sortedSetAdd, 'groups:visible:createtime', timestamp, groupData.name));\n\t\t\t\t\ttasks.push(async.apply(db.sortedSetAdd, 'groups:visible:memberCount', groupData.memberCount, groupData.name));\n\t\t\t\t\ttasks.push(async.apply(db.sortedSetAdd, 'groups:visible:name', 0, groupData.name.toLowerCase() + ':' + groupData.name));\n\t\t\t\t}\n\n\t\t\t\ttasks.push(async.apply(db.setObjectField, 'groupslug:groupname', groupData.slug, groupData.name));\n\n\t\t\t\tasync.series(tasks, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tplugins.fireHook('action:group.create', groupData);\n\t\t\t\tnext(null, groupData);\n\t\t\t}\n\t\t], callback);\n\n\t};\n\n\tfunction isSystemGroup(data) {\n\t\treturn data.system === true || parseInt(data.system, 10) === 1 ||\n\t\t\tdata.name === 'administrators' || data.name === 'registered-users' || data.name === 'Global Moderators' ||\n\t\t\tGroups.isPrivilegeGroup(data.name);\n\t}\n\n\tfunction validateGroupName(name, callback) {\n\t\tif (!name) {\n\t\t\treturn callback(new Error('[[error:group-name-too-short]]'));\n\t\t}\n\n\t\tif (!Groups.isPrivilegeGroup(name) && name.length > (parseInt(meta.config.maximumGroupNameLength, 10) || 255)) {\n\t\t\treturn callback(new Error('[[error:group-name-too-long]]'));\n\t\t}\n\n\t\tif (name.indexOf('/') !== -1 || !utils.slugify(name)) {\n\t\t\treturn callback(new Error('[[error:invalid-group-name]]'));\n\t\t}\n\n\t\tcallback();\n\t}\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/groups/delete.js":"'use strict';\n\nvar async = require('async');\nvar plugins = require('../plugins');\nvar utils = require('../../public/src/utils');\nvar db = require('./../database');\n\nmodule.exports = function (Groups) {\n\n\tGroups.destroy = function (groupName, callback) {\n\t\tGroups.getGroupsData([groupName], function (err, groupsData) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tif (!Array.isArray(groupsData) || !groupsData[0]) {\n\t\t\t\treturn callback();\n\t\t\t}\n\t\t\tvar groupObj = groupsData[0];\n\n\t\t\tplugins.fireHook('action:group.destroy', groupObj);\n\n\t\t\tasync.parallel([\n\t\t\t\tasync.apply(db.delete, 'group:' + groupName),\n\t\t\t\tasync.apply(db.sortedSetRemove, 'groups:createtime', groupName),\n\t\t\t\tasync.apply(db.sortedSetRemove, 'groups:visible:createtime', groupName),\n\t\t\t\tasync.apply(db.sortedSetRemove, 'groups:visible:memberCount', groupName),\n\t\t\t\tasync.apply(db.sortedSetRemove, 'groups:visible:name', groupName.toLowerCase() + ':' + groupName),\n\t\t\t\tasync.apply(db.delete, 'group:' + groupName + ':members'),\n\t\t\t\tasync.apply(db.delete, 'group:' + groupName + ':pending'),\n\t\t\t\tasync.apply(db.delete, 'group:' + groupName + ':invited'),\n\t\t\t\tasync.apply(db.delete, 'group:' + groupName + ':owners'),\n\t\t\t\tasync.apply(db.deleteObjectField, 'groupslug:groupname', utils.slugify(groupName)),\n\t\t\t\tfunction (next) {\n\t\t\t\t\tdb.getSortedSetRange('groups:createtime', 0, -1, function (err, groups) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tasync.each(groups, function (group, next) {\n\t\t\t\t\t\t\tdb.sortedSetRemove('group:' + group + ':members', groupName, next);\n\t\t\t\t\t\t}, next);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t], function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\t\t\t\tGroups.resetCache();\n\t\t\t\tcallback();\n\t\t\t});\n\t\t});\n\t};\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/groups/membership.js":"'use strict';\n\nvar\tasync = require('async');\nvar winston = require('winston');\nvar _ = require('underscore');\n\nvar user = require('../user');\nvar utils = require('../../public/src/utils');\nvar plugins = require('../plugins');\nvar notifications = require('../notifications');\nvar db = require('../database');\n\nvar pubsub = require('../pubsub');\nvar LRU = require('lru-cache');\n\nvar cache = LRU({\n\tmax: 40000,\n\tmaxAge: 1000 * 60 * 60\n});\n\nmodule.exports = function (Groups) {\n\n\tGroups.cache = cache;\n\n\tGroups.join = function (groupName, uid, callback) {\n\t\tcallback = callback || function () {};\n\n\t\tif (!groupName) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tGroups.isMember(uid, groupName, next);\n\t\t\t},\n\t\t\tfunction (isMember, next) {\n\t\t\t\tif (isMember) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\tGroups.exists(groupName, next);\n\t\t\t},\n\t\t\tfunction (exists, next) {\n\t\t\t\tif (exists) {\n\t\t\t\t\treturn next();\n\t\t\t\t}\n\t\t\t\tGroups.create({\n\t\t\t\t\tname: groupName,\n\t\t\t\t\tdescription: '',\n\t\t\t\t\thidden: 1\n\t\t\t\t}, function (err) {\n\t\t\t\t\tif (err && err.message !== '[[error:group-already-exists]]') {\n\t\t\t\t\t\twinston.error('[groups.join] Could not create new hidden group: ' + err.message);\n\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t}\n\t\t\t\t\tnext();\n\t\t\t\t});\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\tisAdmin: function (next) {\n\t\t\t\t\t\tuser.isAdministrator(uid, next);\n\t\t\t\t\t},\n\t\t\t\t\tisHidden: function (next) {\n\t\t\t\t\t\tGroups.isHidden(groupName, next);\n\t\t\t\t\t}\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tvar tasks = [\n\t\t\t\t\tasync.apply(db.sortedSetAdd, 'group:' + groupName + ':members', Date.now(), uid),\n\t\t\t\t\tasync.apply(db.incrObjectField, 'group:' + groupName, 'memberCount')\n\t\t\t\t];\n\t\t\t\tif (results.isAdmin) {\n\t\t\t\t\ttasks.push(async.apply(db.setAdd, 'group:' + groupName + ':owners', uid));\n\t\t\t\t}\n\t\t\t\tif (!results.isHidden) {\n\t\t\t\t\ttasks.push(async.apply(db.sortedSetIncrBy, 'groups:visible:memberCount', 1, groupName));\n\t\t\t\t}\n\t\t\t\tasync.parallel(tasks, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tclearCache(uid, groupName);\n\t\t\t\tsetGroupTitleIfNotSet(groupName, uid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tplugins.fireHook('action:group.join', {\n\t\t\t\t\tgroupName: groupName,\n\t\t\t\t\tuid: uid\n\t\t\t\t});\n\t\t\t\tnext();\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tfunction setGroupTitleIfNotSet(groupName, uid, callback) {\n\t\tif (groupName === 'registered-users' || Groups.isPrivilegeGroup(groupName)) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tdb.getObjectField('user:' + uid, 'groupTitle', function (err, currentTitle) {\n\t\t\tif (err || (currentTitle || currentTitle === '')) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tuser.setUserField(uid, 'groupTitle', groupName, callback);\n\t\t});\n\t}\n\n\tGroups.requestMembership = function (groupName, uid, callback) {\n\t\tasync.waterfall([\n\t\t\tasync.apply(inviteOrRequestMembership, groupName, uid, 'request'),\n\t\t\tfunction (next) {\n\t\t\t\tuser.getUserField(uid, 'username', next);\n\t\t\t},\n\t\t\tfunction (username, next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\tnotification: function (next) {\n\t\t\t\t\t\tnotifications.create({\n\t\t\t\t\t\t\tbodyShort: '[[groups:request.notification_title, ' + username + ']]',\n\t\t\t\t\t\t\tbodyLong: '[[groups:request.notification_text, ' + username + ', ' + groupName + ']]',\n\t\t\t\t\t\t\tnid: 'group:' + groupName + ':uid:' + uid + ':request',\n\t\t\t\t\t\t\tpath: '/groups/' + utils.slugify(groupName),\n\t\t\t\t\t\t\tfrom: uid\n\t\t\t\t\t\t}, next);\n\t\t\t\t\t},\n\t\t\t\t\towners: function (next) {\n\t\t\t\t\t\tGroups.getOwners(groupName, next);\n\t\t\t\t\t}\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tif (!results.notification || !results.owners.length) {\n\t\t\t\t\treturn next();\n\t\t\t\t}\n\t\t\t\tnotifications.push(results.notification, results.owners, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tGroups.acceptMembership = function (groupName, uid, callback) {\n\t\t// Note: For simplicity, this method intentially doesn't check the caller uid for ownership!\n\t\tasync.waterfall([\n\t\t\tasync.apply(db.setRemove, 'group:' + groupName + ':pending', uid),\n\t\t\tasync.apply(db.setRemove, 'group:' + groupName + ':invited', uid),\n\t\t\tasync.apply(Groups.join, groupName, uid)\n\t\t], callback);\n\t};\n\n\tGroups.rejectMembership = function (groupName, uid, callback) {\n\t\t// Note: For simplicity, this method intentially doesn't check the caller uid for ownership!\n\t\tasync.parallel([\n\t\t\tasync.apply(db.setRemove, 'group:' + groupName + ':pending', uid),\n\t\t\tasync.apply(db.setRemove, 'group:' + groupName + ':invited', uid)\n\t\t], callback);\n\t};\n\n\tGroups.invite = function (groupName, uid, callback) {\n\t\tasync.waterfall([\n\t\t\tasync.apply(inviteOrRequestMembership, groupName, uid, 'invite'),\n\t\t\tasync.apply(notifications.create, {\n\t\t\t\tbodyShort: '[[groups:invited.notification_title, ' + groupName + ']]',\n\t\t\t\tbodyLong: '',\n\t\t\t\tnid: 'group:' + groupName + ':uid:' + uid + ':invite',\n\t\t\t\tpath: '/groups/' + utils.slugify(groupName)\n\t\t\t}),\n\t\t\tfunction (notification, next) {\n\t\t\t\tnotifications.push(notification, [uid], next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tfunction inviteOrRequestMembership(groupName, uid, type, callback) {\n\t\tif (!parseInt(uid, 10)) {\n\t\t\treturn callback(new Error('[[error:not-logged-in]]'));\n\t\t}\n\t\tvar hookName = type === 'invite' ? 'action:group.inviteMember' : 'action:group.requestMembership';\n\t\tvar set = type === 'invite' ? 'group:' + groupName + ':invited' : 'group:' + groupName + ':pending';\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\texists: async.apply(Groups.exists, groupName),\n\t\t\t\t\tisMember: async.apply(Groups.isMember, uid, groupName),\n\t\t\t\t\tisPending: async.apply(Groups.isPending, uid, groupName),\n\t\t\t\t\tisInvited: async.apply(Groups.isInvited, uid, groupName)\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (checks, next) {\n\t\t\t\tif (!checks.exists) {\n\t\t\t\t\treturn next(new Error('[[error:no-group]]'));\n\t\t\t\t} else if (checks.isMember) {\n\t\t\t\t\treturn callback();\n\t\t\t\t} else if (type === 'invite' && checks.isInvited) {\n\t\t\t\t\treturn callback();\n\t\t\t\t} else if (type === 'request' && checks.isPending) {\n\t\t\t\t\treturn next(new Error('[[error:group-already-requested]]'));\n\t\t\t\t}\n\n\t\t\t\tdb.setAdd(set, uid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tplugins.fireHook(hookName, {\n\t\t\t\t\tgroupName: groupName,\n\t\t\t\t\tuid: uid\n\t\t\t\t});\n\t\t\t\tnext();\n\t\t\t}\n\t\t], callback);\n\t}\n\n\tGroups.leave = function (groupName, uid, callback) {\n\t\tcallback = callback || function () {};\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tGroups.isMember(uid, groupName, next);\n\t\t\t},\n\t\t\tfunction (isMember, next) {\n\t\t\t\tif (!isMember) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\n\t\t\t\tGroups.exists(groupName, next);\n\t\t\t},\n\t\t\tfunction (exists, next) {\n\t\t\t\tif (!exists) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\tasync.parallel([\n\t\t\t\t\tasync.apply(db.sortedSetRemove, 'group:' + groupName + ':members', uid),\n\t\t\t\t\tasync.apply(db.setRemove, 'group:' + groupName + ':owners', uid),\n\t\t\t\t\tasync.apply(db.decrObjectField, 'group:' + groupName, 'memberCount')\n\t\t\t\t], next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tclearCache(uid, groupName);\n\t\t\t\tGroups.getGroupFields(groupName, ['hidden', 'memberCount'], next);\n\t\t\t},\n\t\t\tfunction (groupData, next) {\n\t\t\t\tif (!groupData) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\tif (Groups.isPrivilegeGroup(groupName) && parseInt(groupData.memberCount, 10) === 0) {\n\t\t\t\t\tGroups.destroy(groupName, next);\n\t\t\t\t} else {\n\t\t\t\t\tif (parseInt(groupData.hidden, 10) !== 1) {\n\t\t\t\t\t\tdb.sortedSetAdd('groups:visible:memberCount', groupData.memberCount, groupName, next);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnext();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tplugins.fireHook('action:group.leave', {\n\t\t\t\t\tgroupName: groupName,\n\t\t\t\t\tuid: uid\n\t\t\t\t});\n\t\t\t\tnext();\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tGroups.leaveAllGroups = function (uid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.getSortedSetRange('groups:createtime', 0, -1, next);\n\t\t\t},\n\t\t\tfunction (groups, next) {\n\t\t\t\tasync.each(groups, function (groupName, next) {\n\t\t\t\t\tasync.parallel([\n\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\tGroups.isMember(uid, groupName, function (err, isMember) {\n\t\t\t\t\t\t\t\tif (!err && isMember) {\n\t\t\t\t\t\t\t\t\tGroups.leave(groupName, uid, next);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnext();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\tGroups.rejectMembership(groupName, uid, next);\n\t\t\t\t\t\t}\n\t\t\t\t\t], next);\n\t\t\t\t}, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tGroups.getMembers = function (groupName, start, stop, callback) {\n\t\tdb.getSortedSetRevRange('group:' + groupName + ':members', start, stop, callback);\n\t};\n\n\tGroups.getMemberUsers = function (groupNames, start, stop, callback) {\n\t\tasync.map(groupNames, function (groupName, next) {\n\t\t\tGroups.getMembers(groupName, start, stop, function (err, uids) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn next(err);\n\t\t\t\t}\n\n\t\t\t\tuser.getUsersFields(uids, ['uid', 'username', 'picture', 'userslug'], next);\n\t\t\t});\n\t\t}, callback);\n\t};\n\n\tGroups.getMembersOfGroups = function (groupNames, callback) {\n\t\tdb.getSortedSetsMembers(groupNames.map(function (name) {\n\t\t\treturn 'group:' + name + ':members';\n\t\t}), callback);\n\t};\n\n\tGroups.resetCache = function () {\n\t\tpubsub.publish('group:cache:reset');\n\t\tcache.reset();\n\t};\n\n\tpubsub.on('group:cache:reset', function () {\n\t\tcache.reset();\n\t});\n\n\tfunction clearCache(uid, groupName) {\n\t\tpubsub.publish('group:cache:del', {uid: uid, groupName: groupName});\n\t\tcache.del(uid + ':' + groupName);\n\t}\n\n\tpubsub.on('group:cache:del', function (data) {\n\t\tcache.del(data.uid + ':' + data.groupName);\n\t});\n\n\tGroups.isMember = function (uid, groupName, callback) {\n\t\tif (!uid || parseInt(uid, 10) <= 0) {\n\t\t\treturn callback(null, false);\n\t\t}\n\n\t\tvar cacheKey = uid + ':' + groupName;\n\t\tif (cache.has(cacheKey)) {\n\t\t\treturn process.nextTick(callback, null, cache.get(cacheKey));\n\t\t}\n\n\t\tdb.isSortedSetMember('group:' + groupName + ':members', uid, function (err, isMember) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tcache.set(cacheKey, isMember);\n\t\t\tcallback(null, isMember);\n\t\t});\n\t};\n\n\tGroups.isMembers = function (uids, groupName, callback) {\n\t\tif (!groupName || !uids.length) {\n\t\t\treturn callback(null, uids.map(function () {return false;}));\n\t\t}\n\n\t\tvar nonCachedUids = [];\n\t\tuids.forEach(function (uid) {\n\t\t\tif (!cache.has(uid + ':' + groupName)) {\n\t\t\t\tnonCachedUids.push(uid);\n\t\t\t}\n\t\t});\n\n\t\tif (!nonCachedUids.length) {\n\t\t\tvar result = uids.map(function (uid) {\n\t\t\t\treturn cache.get(uid + ':' + groupName);\n\t\t\t});\n\t\t\treturn process.nextTick(callback, null, result);\n\t\t}\n\n\t\tdb.isSortedSetMembers('group:' + groupName + ':members', nonCachedUids, function (err, isMembers) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tnonCachedUids.forEach(function (uid, index) {\n\t\t\t\tcache.set(uid + ':' + groupName, isMembers[index]);\n\t\t\t});\n\n\t\t\tvar result = uids.map(function (uid) {\n\t\t\t\treturn cache.get(uid + ':' + groupName);\n\t\t\t});\n\n\t\t\tcallback(null, result);\n\t\t});\n\t};\n\n\tGroups.isMemberOfGroups = function (uid, groups, callback) {\n\t\tif (!uid || parseInt(uid, 10) <= 0 || !groups.length) {\n\t\t\treturn callback(null, groups.map(function () {return false;}));\n\t\t}\n\n\t\tvar nonCachedGroups = [];\n\n\t\tgroups.forEach(function (groupName) {\n\t\t\tif (!cache.has(uid + ':' + groupName)) {\n\t\t\t\tnonCachedGroups.push(groupName);\n\t\t\t}\n\t\t});\n\n\t\t// are they all cached?\n\t\tif (!nonCachedGroups.length) {\n\t\t\tvar result = groups.map(function (groupName) {\n\t\t\t\treturn cache.get(uid + ':' + groupName);\n\t\t\t});\n\t\t\treturn process.nextTick(callback, null, result);\n\t\t}\n\n\t\tvar nonCachedGroupsMemberSets = nonCachedGroups.map(function (groupName) {\n\t\t\treturn 'group:' + groupName + ':members';\n\t\t});\n\n\t\tdb.isMemberOfSortedSets(nonCachedGroupsMemberSets, uid, function (err, isMembers) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tnonCachedGroups.forEach(function (groupName, index) {\n\t\t\t\tcache.set(uid + ':' + groupName, isMembers[index]);\n\t\t\t});\n\n\t\t\tvar result = groups.map(function (groupName) {\n\t\t\t\treturn cache.get(uid + ':' + groupName);\n\t\t\t});\n\t\t\tcallback(null, result);\n\t\t});\n\t};\n\n\tGroups.getMemberCount = function (groupName, callback) {\n\t\tdb.getObjectField('group:' + groupName, 'memberCount', function (err, count) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tcallback(null, parseInt(count, 10));\n\t\t});\n\t};\n\n\tGroups.isMemberOfGroupList = function (uid, groupListKey, callback) {\n\t\tdb.getSortedSetRange('group:' + groupListKey + ':members', 0, -1, function (err, groupNames) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tgroupNames = Groups.internals.removeEphemeralGroups(groupNames);\n\t\t\tif (groupNames.length === 0) {\n\t\t\t\treturn callback(null, false);\n\t\t\t}\n\n\t\t\tGroups.isMemberOfGroups(uid, groupNames, function (err, isMembers) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\tcallback(null, isMembers.indexOf(true) !== -1);\n\t\t\t});\n\t\t});\n\t};\n\n\tGroups.isMemberOfGroupsList = function (uid, groupListKeys, callback) {\n\t\tvar sets = groupListKeys.map(function (groupName) {\n\t\t\treturn 'group:' + groupName + ':members';\n\t\t});\n\n\t\tdb.getSortedSetsMembers(sets, function (err, members) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar uniqueGroups = _.unique(_.flatten(members));\n\t\t\tuniqueGroups = Groups.internals.removeEphemeralGroups(uniqueGroups);\n\n\t\t\tGroups.isMemberOfGroups(uid, uniqueGroups, function (err, isMembers) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\tvar map = {};\n\n\t\t\t\tuniqueGroups.forEach(function (groupName, index) {\n\t\t\t\t\tmap[groupName] = isMembers[index];\n\t\t\t\t});\n\n\t\t\t\tvar result = members.map(function (groupNames) {\n\t\t\t\t\tfor (var i = 0; i < groupNames.length; ++i) {\n\t\t\t\t\t\tif (map[groupNames[i]]) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\n\t\t\t\tcallback(null, result);\n\t\t\t});\n\t\t});\n\t};\n\n\tGroups.isMembersOfGroupList = function (uids, groupListKey, callback) {\n\t\tdb.getSortedSetRange('group:' + groupListKey + ':members', 0, -1, function (err, groupNames) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar results = [];\n\t\t\tuids.forEach(function () {\n\t\t\t\tresults.push(false);\n\t\t\t});\n\n\t\t\tgroupNames = Groups.internals.removeEphemeralGroups(groupNames);\n\t\t\tif (groupNames.length === 0) {\n\t\t\t\treturn callback(null, results);\n\t\t\t}\n\n\t\t\tasync.each(groupNames, function (groupName, next) {\n\t\t\t\tGroups.isMembers(uids, groupName, function (err, isMembers) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\t\t\t\t\tresults.forEach(function (isMember, index) {\n\t\t\t\t\t\tif (!isMember && isMembers[index]) {\n\t\t\t\t\t\t\tresults[index] = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tnext();\n\t\t\t\t});\n\t\t\t}, function (err) {\n\t\t\t\tcallback(err, results);\n\t\t\t});\n\t\t});\n\t};\n\n\tGroups.isInvited = function (uid, groupName, callback) {\n\t\tif (!uid) {\n\t\t\treturn callback(null, false);\n\t\t}\n\t\tdb.isSetMember('group:' + groupName + ':invited', uid, callback);\n\t};\n\n\tGroups.isPending = function (uid, groupName, callback) {\n\t\tif (!uid) {\n\t\t\treturn callback(null, false);\n\t\t}\n\t\tdb.isSetMember('group:' + groupName + ':pending', uid, callback);\n\t};\n\n\tGroups.getPending = function (groupName, callback) {\n\t\tif (!groupName) {\n\t\t\treturn callback(null, []);\n\t\t}\n\t\tdb.getSetMembers('group:' + groupName + ':pending', callback);\n\t};\n\n\tGroups.kick = function (uid, groupName, isOwner, callback) {\n\t\tif (isOwner) {\n\t\t\t// If the owners set only contains one member, error out!\n\t\t\tasync.waterfall([\n\t\t\t\tfunction (next) {\n\t\t\t\t\tdb.setCount('group:' + groupName + ':owners', next);\n\t\t\t\t},\n\t\t\t\tfunction (numOwners, next) {\n\t\t\t\t\tif (numOwners <= 1) {\n\t\t\t\t\t\treturn next(new Error('[[error:group-needs-owner]]'));\n\t\t\t\t\t}\n\t\t\t\t\tGroups.leave(groupName, uid, next);\n\t\t\t\t}\n\t\t\t], callback);\n\t\t} else {\n\t\t\tGroups.leave(groupName, uid, callback);\n\t\t}\n\t};\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/groups/ownership.js":"'use strict';\n\nvar\tasync = require('async'),\n\tdb = require('../database'),\n\tplugins = require('../plugins');\n\nmodule.exports = function (Groups) {\n\n\tGroups.ownership = {};\n\n\tGroups.ownership.isOwner = function (uid, groupName, callback) {\n\t\tif (!uid) {\n\t\t\treturn callback(null, false);\n\t\t}\n\t\tdb.isSetMember('group:' + groupName + ':owners', uid, callback);\n\t};\n\n\tGroups.ownership.isOwners = function (uids, groupName, callback) {\n\t\tif (!Array.isArray(uids)) {\n\t\t\treturn callback(null, []);\n\t\t}\n\n\t\tdb.isSetMembers('group:' + groupName + ':owners', uids, callback);\n\t};\n\n\tGroups.ownership.grant = function (toUid, groupName, callback) {\n\t\t// Note: No ownership checking is done here on purpose!\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.setAdd('group:' + groupName + ':owners', toUid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tplugins.fireHook('action:group.grantOwnership', {uid: toUid, groupName: groupName});\n\t\t\t\tnext();\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tGroups.ownership.rescind = function (toUid, groupName, callback) {\n\t\t// Note: No ownership checking is done here on purpose!\n\n\t\t// If the owners set only contains one member, error out!\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.setCount('group:' + groupName + ':owners', next);\n\t\t\t},\n\t\t\tfunction (numOwners, next) {\n\t\t\t\tif (numOwners <= 1) {\n\t\t\t\t\treturn next(new Error('[[error:group-needs-owner]]'));\n\t\t\t\t}\n\t\t\t\tdb.setRemove('group:' + groupName + ':owners', toUid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tplugins.fireHook('action:group.rescindOwnership', {uid: toUid, groupName: groupName});\n\t\t\t\tnext();\n\t\t\t}\n\t\t], callback);\n\t};\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/groups/search.js":"'use strict';\n\nvar async = require('async');\n\nvar user = require('../user');\nvar db = require('./../database');\n\n\nmodule.exports = function (Groups) {\n\n\tGroups.search = function (query, options, callback) {\n\t\tif (!query) {\n\t\t\treturn callback(null, []);\n\t\t}\n\t\tquery = query.toLowerCase();\n\t\tasync.waterfall([\n\t\t\tasync.apply(db.getObjectValues, 'groupslug:groupname'),\n\t\t\tfunction (groupNames, next) {\n\t\t\t\t// Ephemeral groups and the registered-users groups are searchable\n\t\t\t\tgroupNames = Groups.getEphemeralGroups().concat(groupNames).concat('registered-users');\n\t\t\t\tgroupNames = groupNames.filter(function (name) {\n\t\t\t\t\treturn name.toLowerCase().indexOf(query) !== -1 && name !== 'administrators' && !Groups.isPrivilegeGroup(name);\n\t\t\t\t});\n\t\t\t\tgroupNames = groupNames.slice(0, 100);\n\t\t\t\tGroups.getGroupsData(groupNames, next);\n\t\t\t},\n\t\t\tfunction (groupsData, next) {\n\t\t\t\tgroupsData = groupsData.filter(Boolean);\n\t\t\t\tif (options.filterHidden) {\n\t\t\t\t\tgroupsData = groupsData.filter(function (group) {\n\t\t\t\t\t\treturn !group.hidden;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tGroups.sort(options.sort, groupsData, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tGroups.sort = function (strategy, groups, next) {\n\t\tswitch(strategy) {\n\t\t\tcase 'count':\n\t\t\t\tgroups = groups.sort(function (a, b) {\n\t\t\t\t\treturn a.slug > b.slug;\n\t\t\t\t}).sort(function (a, b) {\n\t\t\t\t\treturn b.memberCount - a.memberCount;\n\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase 'date':\n\t\t\t\tgroups = groups.sort(function (a, b) {\n\t\t\t\t\treturn b.createtime - a.createtime;\n\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase 'alpha':\t// intentional fall-through\n\t\t\tdefault:\n\t\t\t\tgroups = groups.sort(function (a, b) {\n\t\t\t\t\treturn a.slug > b.slug ? 1 : -1;\n\t\t\t\t});\n\t\t}\n\n\t\tnext(null, groups);\n\t};\n\n\tGroups.searchMembers = function (data, callback) {\n\n\t\tfunction findUids(query, searchBy, callback) {\n\t\t\tquery = query.toLowerCase();\n\n\t\t\tasync.waterfall([\n\t\t\t\tfunction (next) {\n\t\t\t\t\tGroups.getMembers(data.groupName, 0, -1, next);\n\t\t\t\t},\n\t\t\t\tfunction (members, next) {\n\t\t\t\t\tuser.getUsersFields(members, ['uid'].concat([searchBy]), next);\n\t\t\t\t},\n\t\t\t\tfunction (users, next) {\n\t\t\t\t\tvar uids = [];\n\t\t\t\t\tfor(var i = 0; i < users.length; ++i) {\n\t\t\t\t\t\tvar field = users[i][searchBy];\n\t\t\t\t\t\tif (field.toLowerCase().startsWith(query)) {\n\t\t\t\t\t\t\tuids.push(users[i].uid);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tnext(null, uids);\n\t\t\t\t}\n\t\t\t], callback);\n\t\t}\n\n\t\tif (!data.query) {\n\t\t\tGroups.getOwnersAndMembers(data.groupName, data.uid, 0, 19, function (err, users) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\t\t\t\tcallback(null, {users: users});\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tdata.findUids = findUids;\n\t\tvar results;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tuser.search(data, next);\n\t\t\t},\n\t\t\tfunction (_results, next) {\n\t\t\t\tresults = _results;\n\t\t\t\tvar uids = results.users.map(function (user) {\n\t\t\t\t\treturn user && user.uid;\n\t\t\t\t});\n\t\t\t\tGroups.ownership.isOwners(uids, data.groupName, next);\n\t\t\t},\n\t\t\tfunction (isOwners, next) {\n\n\t\t\t\tresults.users.forEach(function (user, index) {\n\t\t\t\t\tif (user) {\n\t\t\t\t\t\tuser.isOwner = isOwners[index];\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tresults.users.sort(function (a,b) {\n\t\t\t\t\tif (a.isOwner && !b.isOwner) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t} else if (!a.isOwner && b.isOwner) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tnext(null, results);\n\t\t\t}\n\t\t], callback);\n\t};\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/groups/update.js":"'use strict';\n\nvar async = require('async');\nvar winston = require('winston');\n\nvar plugins = require('../plugins');\nvar utils = require('../../public/src/utils');\nvar db = require('../database');\n\n\nmodule.exports = function (Groups) {\n\n\tGroups.update = function (groupName, values, callback) {\n\t\tcallback = callback || function () {};\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.exists('group:' + groupName, next);\n\t\t\t},\n\t\t\tfunction (exists, next) {\n\t\t\t\tif (!exists) {\n\t\t\t\t\treturn next(new Error('[[error:no-group]]'));\n\t\t\t\t}\n\t\t\t\tplugins.fireHook('filter:group.update', {\n\t\t\t\t\tgroupName: groupName,\n\t\t\t\t\tvalues: values\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (result, next) {\n\t\t\t\tvalues = result.values;\n\n\t\t\t\tvar payload = {\n\t\t\t\t\tdescription: values.description || '',\n\t\t\t\t\ticon: values.icon || '',\n\t\t\t\t\tlabelColor: values.labelColor || '#000000'\n\t\t\t\t};\n\n\t\t\t\tif (values.hasOwnProperty('userTitle')) {\n\t\t\t\t\tpayload.userTitle = values.userTitle || '';\n\t\t\t\t}\n\n\t\t\t\tif (values.hasOwnProperty('userTitleEnabled')) {\n\t\t\t\t\tpayload.userTitleEnabled = values.userTitleEnabled ? '1' : '0';\n\t\t\t\t}\n\n\t\t\t\tif (values.hasOwnProperty('hidden')) {\n\t\t\t\t\tpayload.hidden = values.hidden ? '1' : '0';\n\t\t\t\t}\n\n\t\t\t\tif (values.hasOwnProperty('private')) {\n\t\t\t\t\tpayload.private = values.private ? '1' : '0';\n\t\t\t\t}\n\n\t\t\t\tif (values.hasOwnProperty('disableJoinRequests')) {\n\t\t\t\t\tpayload.disableJoinRequests = values.disableJoinRequests ? '1' : '0';\n\t\t\t\t}\n\t\t\t\tasync.series([\n\t\t\t\t\tasync.apply(checkNameChange, groupName, values.name),\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tif (values.hasOwnProperty('private')) {\n\t\t\t\t\t\t\tupdatePrivacy(groupName, values.private, next);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnext();\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tif (values.hasOwnProperty('hidden')) {\n\t\t\t\t\t\t\tupdateVisibility(groupName, values.hidden, next);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnext();\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tasync.apply(db.setObject, 'group:' + groupName, payload),\n\t\t\t\t\tasync.apply(renameGroup, groupName, values.name)\n\t\t\t\t], next);\n\t\t\t},\n\t\t\tfunction (result, next) {\n\t\t\t\tplugins.fireHook('action:group.update', {\n\t\t\t\t\tname: groupName,\n\t\t\t\t\tvalues: values\n\t\t\t\t});\n\t\t\t\tnext();\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tfunction updateVisibility(groupName, hidden, callback) {\n\t\tif (hidden) {\n\t\t\tasync.parallel([\n\t\t\t\tasync.apply(db.sortedSetRemove, 'groups:visible:createtime', groupName),\n\t\t\t\tasync.apply(db.sortedSetRemove, 'groups:visible:memberCount', groupName),\n\t\t\t\tasync.apply(db.sortedSetRemove, 'groups:visible:name', groupName.toLowerCase() + ':' + groupName),\n\t\t\t], callback);\n\t\t} else {\n\t\t\tdb.getObjectFields('group:' + groupName, ['createtime', 'memberCount'], function (err, groupData) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\t\t\t\tasync.parallel([\n\t\t\t\t\tasync.apply(db.sortedSetAdd, 'groups:visible:createtime', groupData.createtime, groupName),\n\t\t\t\t\tasync.apply(db.sortedSetAdd, 'groups:visible:memberCount', groupData.memberCount, groupName),\n\t\t\t\t\tasync.apply(db.sortedSetAdd, 'groups:visible:name', 0, groupName.toLowerCase() + ':' + groupName),\n\t\t\t\t], callback);\n\t\t\t});\n\t\t}\n\t}\n\n\tGroups.hide = function (groupName, callback) {\n\t\tshowHide(groupName, 'hidden', callback);\n\t};\n\n\tGroups.show = function (groupName, callback) {\n\t\tshowHide(groupName, 'show', callback);\n\t};\n\n\tfunction showHide(groupName, hidden, callback) {\n\t\thidden = hidden === 'hidden';\n\t\tcallback = callback || function () {};\n\t\tasync.parallel([\n\t\t\tasync.apply(db.setObjectField, 'group:' + groupName, 'hidden', hidden ? 1 : 0),\n\t\t\tasync.apply(updateVisibility, groupName, hidden)\n\t\t], function (err) {\n\t\t\tcallback(err);\n\t\t});\n\t}\n\n\tfunction updatePrivacy(groupName, isPrivate, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tGroups.getGroupFields(groupName, ['private'], next);\n\t\t\t},\n\t\t\tfunction (currentValue, next) {\n\t\t\t\tvar currentlyPrivate = parseInt(currentValue.private, 10) === 1;\n\t\t\t\tif (!currentlyPrivate || currentlyPrivate === isPrivate)  {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\tdb.getSetMembers('group:' + groupName + ':pending', next);\n\t\t\t},\n\t\t\tfunction (uids, next) {\n\t\t\t\tif (!uids.length) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\tvar now = Date.now();\n\t\t\t\tvar scores = uids.map(function () { return now; });\n\n\t\t\t\twinston.verbose('[groups.update] Group is now public, automatically adding ' + uids.length + ' new members, who were pending prior.');\n\t\t\t\tasync.series([\n\t\t\t\t\tasync.apply(db.sortedSetAdd, 'group:' + groupName + ':members', scores, uids),\n\t\t\t\t\tasync.apply(db.delete, 'group:' + groupName + ':pending')\n\t\t\t\t], next);\n\t\t\t}\n\t\t], function (err) {\n\t\t\tcallback(err);\n\t\t});\n\t}\n\n\tfunction checkNameChange(currentName, newName, callback) {\n\t\tif (currentName === newName) {\n\t\t\treturn callback();\n\t\t}\n\t\tvar currentSlug = utils.slugify(currentName);\n\t\tvar newSlug = utils.slugify(newName);\n\t\tif (currentSlug === newSlug) {\n\t\t\treturn callback();\n\t\t}\n\t\tGroups.existsBySlug(newSlug, function (err, exists) {\n\t\t\tif (err || exists) {\n\t\t\t\treturn callback(err || new Error('[[error:group-already-exists]]'));\n\t\t\t}\n\t\t\tcallback();\n\t\t});\n\t}\n\n\tfunction renameGroup(oldName, newName, callback) {\n\t\tif (oldName === newName || !newName || newName.length === 0) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tdb.getObject('group:' + oldName, function (err, group) {\n\t\t\tif (err || !group) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tif (parseInt(group.system, 10) === 1) {\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tGroups.exists(newName, function (err, exists) {\n\t\t\t\tif (err || exists) {\n\t\t\t\t\treturn callback(err || new Error('[[error:group-already-exists]]'));\n\t\t\t\t}\n\n\t\t\t\tasync.series([\n\t\t\t\t\tasync.apply(db.setObjectField, 'group:' + oldName, 'name', newName),\n\t\t\t\t\tasync.apply(db.setObjectField, 'group:' + oldName, 'slug', utils.slugify(newName)),\n\t\t\t\t\tasync.apply(db.deleteObjectField, 'groupslug:groupname', group.slug),\n\t\t\t\t\tasync.apply(db.setObjectField, 'groupslug:groupname', utils.slugify(newName), newName),\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.getSortedSetRange('groups:createtime', 0, -1, function (err, groups) {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tasync.each(groups, function (group, next) {\n\t\t\t\t\t\t\t\trenameGroupMember('group:' + group + ':members', oldName, newName, next);\n\t\t\t\t\t\t\t}, next);\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tasync.apply(db.rename, 'group:' + oldName, 'group:' + newName),\n\t\t\t\t\tasync.apply(db.rename, 'group:' + oldName + ':members', 'group:' + newName + ':members'),\n\t\t\t\t\tasync.apply(db.rename, 'group:' + oldName + ':owners', 'group:' + newName + ':owners'),\n\t\t\t\t\tasync.apply(db.rename, 'group:' + oldName + ':pending', 'group:' + newName + ':pending'),\n\t\t\t\t\tasync.apply(db.rename, 'group:' + oldName + ':invited', 'group:' + newName + ':invited'),\n\n\t\t\t\t\tasync.apply(renameGroupMember, 'groups:createtime', oldName, newName),\n\t\t\t\t\tasync.apply(renameGroupMember, 'groups:visible:createtime', oldName, newName),\n\t\t\t\t\tasync.apply(renameGroupMember, 'groups:visible:memberCount', oldName, newName),\n\t\t\t\t\tasync.apply(renameGroupMember, 'groups:visible:name', oldName.toLowerCase() + ':' + oldName, newName.toLowerCase() + ':' + newName),\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tplugins.fireHook('action:group.rename', {\n\t\t\t\t\t\t\told: oldName,\n\t\t\t\t\t\t\tnew: newName\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tnext();\n\t\t\t\t\t}\n\t\t\t\t], callback);\n\t\t\t});\n\t\t});\n\t}\n\n\tfunction renameGroupMember(group, oldName, newName, callback) {\n\t\tdb.isSortedSetMember(group, oldName, function (err, isMember) {\n\t\t\tif (err || !isMember) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tvar score;\n\t\t\tasync.waterfall([\n\t\t\t\tfunction (next) {\n\t\t\t\t\tdb.sortedSetScore(group, oldName, next);\n\t\t\t\t},\n\t\t\t\tfunction (_score, next) {\n\t\t\t\t\tscore = _score;\n\t\t\t\t\tdb.sortedSetRemove(group, oldName, next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tdb.sortedSetAdd(group, score, newName, next);\n\t\t\t\t}\n\t\t\t], callback);\n\t\t});\n\t}\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/messaging/create.js":"'use strict';\n\nvar async = require('async');\n\nvar meta = require('../meta');\nvar plugins = require('../plugins');\nvar db = require('../database');\n\n\nmodule.exports = function (Messaging) {\n\n\tMessaging.sendMessage = function (uid, roomId, content, timestamp, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tMessaging.checkContent(content, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tMessaging.isUserInRoom(uid, roomId, next);\n\t\t\t},\n\t\t\tfunction (inRoom, next) {\n\t\t\t\tif (!inRoom) {\n\t\t\t\t\treturn next(new Error('[[error:not-allowed]]'));\n\t\t\t\t}\n\n\t\t\t\tMessaging.addMessage(uid, roomId, content, timestamp, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tMessaging.checkContent = function (content, callback) {\n\t\tif (!content) {\n\t\t\treturn callback(new Error('[[error:invalid-chat-message]]'));\n\t\t}\n\n\t\tif (content.length > (meta.config.maximumChatMessageLength || 1000)) {\n\t\t\treturn callback(new Error('[[error:chat-message-too-long]]'));\n\t\t}\n\t\tcallback();\n\t};\n\n\tMessaging.addMessage = function (fromuid, roomId, content, timestamp, callback) {\n\t\tvar mid;\n\t\tvar message;\n\t\tvar isNewSet;\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tMessaging.checkContent(content, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tdb.incrObjectField('global', 'nextMid', next);\n\t\t\t},\n\t\t\tfunction (_mid, next) {\n\t\t\t\tmid = _mid;\n\t\t\t\tmessage = {\n\t\t\t\t\tcontent: content,\n\t\t\t\t\ttimestamp: timestamp,\n\t\t\t\t\tfromuid: fromuid,\n\t\t\t\t\troomId: roomId\n\t\t\t\t};\n\n\t\t\t\tplugins.fireHook('filter:messaging.save', message, next);\n\t\t\t},\n\t\t\tfunction (message, next) {\n\t\t\t\tdb.setObject('message:' + mid, message, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tMessaging.isNewSet(fromuid, roomId, timestamp, next);\n\t\t\t},\n\t\t\tfunction (_isNewSet, next) {\n\t\t\t\tisNewSet = _isNewSet;\n\t\t\t\tdb.getSortedSetRange('chat:room:' + roomId + ':uids', 0, -1, next);\n\t\t\t},\n\t\t\tfunction (uids, next) {\n\t\t\t\tasync.parallel([\n\t\t\t\t\tasync.apply(Messaging.addRoomToUsers, roomId, uids, timestamp),\n\t\t\t\t\tasync.apply(Messaging.addMessageToUsers, roomId, uids, mid, timestamp),\n\t\t\t\t\tasync.apply(Messaging.markUnread, uids, roomId),\n\t\t\t\t\tasync.apply(Messaging.addUsersToRoom, fromuid, [fromuid], roomId)\n\t\t\t\t], next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\tmarkRead: async.apply(Messaging.markRead, fromuid, roomId),\n\t\t\t\t\tmessages: async.apply(Messaging.getMessagesData, [mid], fromuid, roomId, true)\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tif (!results.messages || !results.messages[0]) {\n\t\t\t\t\treturn next(null, null);\n\t\t\t\t}\n\n\t\t\t\tresults.messages[0].newSet = isNewSet;\n\t\t\t\tresults.messages[0].mid = mid;\n\t\t\t\tresults.messages[0].roomId = roomId;\n\t\t\t\tnext(null, results.messages[0]);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tMessaging.addRoomToUsers = function (roomId, uids, timestamp, callback) {\n\t\tif (!uids.length) {\n\t\t\treturn callback();\n\t\t}\n\t\tvar keys = uids.map(function (uid) {\n\t\t\treturn 'uid:' + uid + ':chat:rooms';\n\t\t});\n\t\tdb.sortedSetsAdd(keys, timestamp, roomId, callback);\n\t};\n\n\tMessaging.addMessageToUsers = function (roomId, uids, mid, timestamp, callback) {\n\t\tif (!uids.length) {\n\t\t\treturn callback();\n\t\t}\n\t\tvar keys = uids.map(function (uid) {\n\t\t\treturn 'uid:' + uid + ':chat:room:' + roomId + ':mids';\n\t\t});\n\t\tdb.sortedSetsAdd(keys, timestamp, mid, callback);\n\t};\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/messaging/delete.js":"'use strict';\n\nvar async = require('async');\nvar db = require('../database');\n\nmodule.exports = function (Messaging) {\n\n\tMessaging.deleteMessage = function (mid, roomId, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tMessaging.getUidsInRoom(roomId, 0, -1, next);\n\t\t\t},\n\t\t\tfunction (uids, next) {\n\t\t\t\tif (!uids.length) {\n\t\t\t\t\treturn next();\n\t\t\t\t}\n\t\t\t\tvar keys = uids.map(function (uid) {\n\t\t\t\t\treturn 'uid:' + uid + ':chat:room:' + roomId + 'mids';\n\t\t\t\t});\n\t\t\t\tdb.sortedSetsRemove(keys, roomId, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tdb.delete('message:' + mid, next);\n\t\t\t}\n\t\t], callback);\n\t};\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/messaging/edit.js":"'use strict';\n\nvar async = require('async');\n\nvar meta = require('../meta');\nvar user = require('../user');\n\nvar sockets = require('../socket.io');\n\n\nmodule.exports = function (Messaging) {\n\n\tMessaging.editMessage = function (uid, mid, roomId, content, callback) {\n\t\tvar uids;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tMessaging.getMessageField(mid, 'content', next);\n\t\t\t},\n\t\t\tfunction (raw, next) {\n\t\t\t\tif (raw === content) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\n\t\t\t\tMessaging.setMessageFields(mid, {\n\t\t\t\t\tcontent: content,\n\t\t\t\t\tedited: Date.now()\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tMessaging.getUidsInRoom(roomId, 0, -1, next);\n\t\t\t},\n\t\t\tfunction (_uids, next) {\n\t\t\t\tuids = _uids;\n\t\t\t\tMessaging.getMessagesData([mid], uid, roomId, true, next);\n\t\t\t},\n\t\t\tfunction (messages, next) {\n\t\t\t\tuids.forEach(function (uid) {\n\t\t\t\t\tsockets.in('uid_' + uid).emit('event:chats.edit', {\n\t\t\t\t\t\tmessages: messages\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tnext();\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tMessaging.canEdit = function (messageId, uid, callback) {\n\t\tif (parseInt(meta.config.disableChat, 10) === 1) {\n\t\t\treturn callback(null, false);\n\t\t} else if (parseInt(meta.config.disableChatMessageEditing, 10) === 1) {\n\t\t\treturn callback(null, false);\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tuser.getUserFields(uid, ['banned', 'email:confirmed'], next);\n\t\t\t},\n\t\t\tfunction (userData, next) {\n\t\t\t\tif (parseInt(userData.banned, 10) === 1) {\n\t\t\t\t\treturn callback(null, false);\n\t\t\t\t}\n\n\t\t\t\tif (parseInt(meta.config.requireEmailConfirmation, 10) === 1 && parseInt(userData['email:confirmed'], 10) !== 1) {\n\t\t\t\t\treturn callback(null, false);\n\t\t\t\t}\n\n\t\t\t\tMessaging.getMessageField(messageId, 'fromuid', next);\n\t\t\t},\n\t\t\tfunction (fromUid, next) {\n\t\t\t\tif (parseInt(fromUid, 10) === parseInt(uid, 10)) {\n\t\t\t\t\treturn callback(null, true);\n\t\t\t\t}\n\n\t\t\t\tuser.isAdministrator(uid, next);\n\t\t\t},\n\t\t\tfunction (isAdmin, next) {\n\t\t\t\tnext(null, isAdmin);\n\t\t\t}\n\t\t], callback);\n\t};\n\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/messaging/notifications.js":"'use strict';\n\nvar async = require('async');\nvar nconf = require('nconf');\nvar winston = require('winston');\n\nvar user = require('../user');\nvar emailer = require('../emailer');\nvar notifications = require('../notifications');\nvar meta = require('../meta');\nvar sockets = require('../socket.io');\n\nmodule.exports = function (Messaging) {\n\n\tMessaging.notifyQueue = {};\t// Only used to notify a user of a new chat message, see Messaging.notifyUser\n\n\tMessaging.notifyUsersInRoom = function (fromUid, roomId, messageObj) {\n\t\tMessaging.getUidsInRoom(roomId, 0, -1, function (err, uids) {\n\t\t\tif (err) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar data = {\n\t\t\t\troomId: roomId,\n\t\t\t\tfromUid: fromUid,\n\t\t\t\tmessage: messageObj\n\t\t\t};\n\t\t\tuids.forEach(function (uid) {\n\t\t\t\tdata.self = parseInt(uid, 10) === parseInt(fromUid) ? 1 : 0;\n\t\t\t\tMessaging.pushUnreadCount(uid);\n\t\t\t\tsockets.in('uid_' + uid).emit('event:chats.receive', data);\n\t\t\t});\n\n\t\t\t// Delayed notifications\n\t\t\tvar queueObj = Messaging.notifyQueue[fromUid + ':' + roomId];\n\t\t\tif (queueObj) {\n\t\t\t\tqueueObj.message.content += '\\n' + messageObj.content;\n\t\t\t\tclearTimeout(queueObj.timeout);\n\t\t\t} else {\n\t\t\t\tqueueObj = Messaging.notifyQueue[fromUid + ':' + roomId] = {\n\t\t\t\t\tmessage: messageObj\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tqueueObj.timeout = setTimeout(function () {\n\t\t\t\tsendNotifications(fromUid, uids, roomId, queueObj.message, function (err) {\n\t\t\t\t\tif (!err) {\n\t\t\t\t\t\tdelete Messaging.notifyQueue[fromUid + ':' + roomId];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, 1000 * 60); // wait 60s before sending\n\t\t});\n\t};\n\n\tfunction sendNotifications(fromuid, uids, roomId, messageObj, callback) {\n\t\tuser.isOnline(uids, function (err, isOnline) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tuids = uids.filter(function (uid, index) {\n\t\t\t\treturn !isOnline[index] && parseInt(fromuid, 10) !== parseInt(uid, 10);\n\t\t\t});\n\n\t\t\tif (!uids.length) {\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tnotifications.create({\n\t\t\t\tbodyShort: '[[notifications:new_message_from, ' + messageObj.fromUser.username + ']]',\n\t\t\t\tbodyLong: messageObj.content,\n\t\t\t\tnid: 'chat_' + fromuid + '_' + roomId,\n\t\t\t\tfrom: fromuid,\n\t\t\t\tpath: '/chats/' + messageObj.roomId\n\t\t\t}, function (err, notification) {\n\t\t\t\tif (!err && notification) {\n\t\t\t\t\tnotifications.push(notification, uids, callback);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tsendNotificationEmails(uids, messageObj);\n\t\t});\n\t}\n\n\tfunction sendNotificationEmails(uids, messageObj) {\n\t\tif (parseInt(meta.config.disableEmailSubscriptions, 10) === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tasync.parallel({\n\t\t\tuserData: function (next) {\n\t\t\t\tuser.getUsersFields(uids, ['uid', 'username', 'userslug'], next);\n\t\t\t},\n\t\t\tuserSettings: function (next) {\n\t\t\t\tuser.getMultipleUserSettings(uids, next);\n\t\t\t}\n\t\t}, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn winston.error(err);\n\t\t\t}\n\n\t\t\tresults.userData = results.userData.filter(function (userData, index) {\n\t\t\t\treturn userData && results.userSettings[index] && results.userSettings[index].sendChatNotifications;\n\t\t\t});\n\n\t\t\tasync.each(results.userData, function (userData, next) {\n\t\t\t\temailer.send('notif_chat', userData.uid, {\n\t\t\t\t\tsubject: '[[email:notif.chat.subject, ' + messageObj.fromUser.username + ']]',\n\t\t\t\t\tsummary: '[[notifications:new_message_from, ' + messageObj.fromUser.username + ']]',\n\t\t\t\t\tmessage: messageObj,\n\t\t\t\t\tsite_title: meta.config.title || 'NodeBB',\n\t\t\t\t\turl: nconf.get('url'),\n\t\t\t\t\troomId: messageObj.roomId,\n\t\t\t\t\tusername: userData.username,\n\t\t\t\t\tuserslug: userData.userslug\n\t\t\t\t}, next);\n\t\t\t}, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\twinston.error(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/messaging/rooms.js":"'use strict';\n\nvar async = require('async');\nvar validator = require('validator');\n\nvar db = require('../database');\nvar user = require('../user');\nvar plugins = require('../plugins');\n\nmodule.exports = function (Messaging) {\n\n\tMessaging.getRoomData = function (roomId, callback) {\n\t\tdb.getObject('chat:room:' + roomId, function (err, data) {\n\t\t\tif (err || !data) {\n\t\t\t\treturn callback(err || new Error('[[error:no-chat-room]]'));\n\t\t\t}\n\t\t\tmodifyRoomData([data]);\n\t\t\tcallback(null, data);\n\t\t});\n\t};\n\n\tMessaging.getRoomsData = function (roomIds, callback) {\n\t\tvar keys = roomIds.map(function (roomId) {\n\t\t\treturn 'chat:room:' + roomId;\n\t\t});\n\t\tdb.getObjects(keys, function (err, roomData) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tmodifyRoomData(roomData);\n\t\t\tcallback(null, roomData);\n\t\t});\n\t};\n\n\tfunction modifyRoomData(rooms) {\n\t\trooms.forEach(function (data) {\n\t\t\tif (data) {\n\t\t\t\tdata.roomName = data.roomName || '';\n\t\t\t\tdata.roomName = validator.escape(String(data.roomName));\n\t\t\t\tif (data.hasOwnProperty('groupChat')) {\n\t\t\t\t\tdata.groupChat = parseInt(data.groupChat, 10) === 1;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tMessaging.newRoom = function (uid, toUids, callback) {\n\t\tvar roomId;\n\t\tvar now = Date.now();\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.incrObjectField('global', 'nextChatRoomId', next);\n\t\t\t},\n\t\t\tfunction (_roomId, next) {\n\t\t\t\troomId = _roomId;\n\t\t\t\tvar room = {\n\t\t\t\t\towner: uid,\n\t\t\t\t\troomId: roomId\n\t\t\t\t};\n\t\t\t\tdb.setObject('chat:room:' + roomId, room, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tdb.sortedSetAdd('chat:room:' + roomId + ':uids', now, uid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tMessaging.addUsersToRoom(uid, toUids, roomId, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tMessaging.addRoomToUsers(roomId, [uid].concat(toUids), now, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tnext(null, roomId);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tMessaging.isUserInRoom = function (uid, roomId, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.isSortedSetMember('chat:room:' + roomId + ':uids', uid, next);\n\t\t\t},\n\t\t\tfunction (inRoom, next) {\n\t\t\t\tplugins.fireHook('filter:messaging.isUserInRoom', {uid: uid, roomId: roomId, inRoom: inRoom}, next);\n\t\t\t},\n\t\t\tfunction (data, next) {\n\t\t\t\tnext(null, data.inRoom);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tMessaging.roomExists = function (roomId, callback) {\n\t\tdb.exists('chat:room:' + roomId + ':uids', callback);\n\t};\n\n\tMessaging.getUserCountInRoom = function (roomId, callback) {\n\t\tdb.sortedSetCard('chat:room:' + roomId + ':uids', callback);\n\t};\n\n\tMessaging.isRoomOwner = function (uid, roomId, callback) {\n\t\tdb.getObjectField('chat:room:' + roomId, 'owner', function (err, owner) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tcallback(null, parseInt(uid, 10) === parseInt(owner, 10));\n\t\t});\n\t};\n\n\tMessaging.addUsersToRoom = function (uid, uids, roomId, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tMessaging.isUserInRoom(uid, roomId, next);\n\t\t\t},\n\t\t\tfunction (inRoom, next) {\n\t\t\t\tif (!inRoom) {\n\t\t\t\t\treturn next(new Error('[[error:cant-add-users-to-chat-room]]'));\n\t\t\t\t}\n\t\t\t\tvar now = Date.now();\n\t\t\t\tvar timestamps = uids.map(function () {\n\t\t\t\t\treturn now;\n\t\t\t\t});\n\t\t\t\tdb.sortedSetAdd('chat:room:' + roomId + ':uids', timestamps, uids, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\tuserCount: async.apply(db.sortedSetCard, 'chat:room:' + roomId + ':uids'),\n\t\t\t\t\troomData: async.apply(db.getObject, 'chat:room:' + roomId)\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tif (!results.roomData.hasOwnProperty('groupChat') && results.userCount > 2) {\n\t\t\t\t\treturn db.setObjectField('chat:room:' + roomId, 'groupChat', 1, next);\n\t\t\t\t}\n\t\t\t\tnext();\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tMessaging.removeUsersFromRoom = function (uid, uids, roomId, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\tisOwner: async.apply(Messaging.isRoomOwner, uid, roomId),\n\t\t\t\t\tuserCount: async.apply(Messaging.getUserCountInRoom, roomId)\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tif (!results.isOwner) {\n\t\t\t\t\treturn next(new Error('[[error:cant-remove-users-from-chat-room]]'));\n\t\t\t\t}\n\t\t\t\tif (results.userCount === 2) {\n\t\t\t\t\treturn next(new Error('[[error:cant-remove-last-user]]'));\n\t\t\t\t}\n\t\t\t\tMessaging.leaveRoom(uids, roomId, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tMessaging.leaveRoom = function (uids, roomId, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.sortedSetRemove('chat:room:' + roomId + ':uids', uids, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tvar keys = uids.map(function (uid) {\n\t\t\t\t\treturn 'uid:' + uid + ':chat:rooms';\n\t\t\t\t});\n\t\t\t\tkeys = keys.concat(uids.map(function (uid) {\n\t\t\t\t\treturn 'uid:' + uid + ':chat:rooms:unread';\n\t\t\t\t}));\n\t\t\t\tdb.sortedSetsRemove(keys, roomId, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tMessaging.getUidsInRoom = function (roomId, start, stop, callback) {\n\t\tdb.getSortedSetRevRange('chat:room:' + roomId + ':uids', start, stop, callback);\n\t};\n\n\tMessaging.getUsersInRoom = function (roomId, start, stop, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tMessaging.getUidsInRoom(roomId, start, stop, next);\n\t\t\t},\n\t\t\tfunction (uids, next) {\n\t\t\t\tuser.getUsersFields(uids, ['uid', 'username', 'picture', 'status'], next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tMessaging.renameRoom = function (uid, roomId, newName, callback) {\n\t\tif (!newName) {\n\t\t\treturn callback(new Error('[[error:invalid-name]]'));\n\t\t}\n\t\tnewName = newName.trim();\n\t\tif (newName.length > 75) {\n\t\t\treturn callback(new Error('[[error:chat-room-name-too-long]]'));\n\t\t}\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tMessaging.isRoomOwner(uid, roomId, next);\n\t\t\t},\n\t\t\tfunction (isOwner, next) {\n\t\t\t\tif (!isOwner) {\n\t\t\t\t\treturn next(new Error('[[error:no-privileges]]'));\n\t\t\t\t}\n\t\t\t\tdb.setObjectField('chat:room:' + roomId, 'roomName', newName, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tMessaging.canReply = function (roomId, uid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.isSortedSetMember('chat:room:' + roomId + ':uids', uid, next);\n\t\t\t},\n\t\t\tfunction (inRoom, next) {\n\t\t\t\tplugins.fireHook('filter:messaging.canReply', {uid: uid, roomId: roomId, inRoom: inRoom, canReply: inRoom}, next);\n\t\t\t},\n\t\t\tfunction (data, next) {\n\t\t\t\tnext(null, data.canReply);\n\t\t\t}\n\t\t], callback);\n\t};\n\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/messaging/unread.js":"'use strict';\n\nvar async = require('async');\n\nvar db = require('../database');\nvar sockets = require('../socket.io');\n\nmodule.exports = function (Messaging) {\n\n\tMessaging.getUnreadCount = function (uid, callback) {\n\t\tif (!parseInt(uid, 10)) {\n\t\t\treturn callback(null, 0);\n\t\t}\n\t\tdb.sortedSetCard('uid:' + uid + ':chat:rooms:unread', callback);\n\t};\n\n\tMessaging.pushUnreadCount = function (uid) {\n\t\tif (!parseInt(uid, 10)) {\n\t\t\treturn callback(null, 0);\n\t\t}\n\t\tMessaging.getUnreadCount(uid, function (err, unreadCount) {\n\t\t\tif (err) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsockets.in('uid_' + uid).emit('event:unread.updateChatCount', unreadCount);\n\t\t});\n\t};\n\n\tMessaging.markRead = function (uid, roomId, callback) {\n\t\tdb.sortedSetRemove('uid:' + uid + ':chat:rooms:unread', roomId, callback);\n\t};\n\n\tMessaging.markAllRead = function (uid, callback) {\n\t\tdb.delete('uid:' + uid + ':chat:rooms:unread', callback);\n\t};\n\n\tMessaging.markUnread = function (uids, roomId, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tMessaging.roomExists(roomId, next);\n\t\t\t},\n\t\t\tfunction (exists, next) {\n\t\t\t\tif (!exists) {\n\t\t\t\t\treturn next(new Error('[[error:chat-room-does-not-exist]]'));\n\t\t\t\t}\n\t\t\t\tvar keys = uids.map(function (uid) {\n\t\t\t\t\treturn 'uid:' + uid + ':chat:rooms:unread';\n\t\t\t\t});\n\n\t\t\t\tdb.sortedSetsAdd(keys, Date.now(), roomId, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/meta/blacklist.js":"'use strict';\n\nvar ip = require('ip');\nvar winston = require('winston');\nvar async = require('async');\nvar db = require('../database');\n\nvar Blacklist = {\n\t\t_rules: []\n\t};\n\nBlacklist.load = function (callback) {\n\tasync.waterfall([\n\t\tasync.apply(db.get, 'ip-blacklist-rules'),\n\t\tasync.apply(Blacklist.validate)\n\t], function (err, rules) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\twinston.verbose('[meta/blacklist] Loading ' + rules.valid.length + ' blacklist rules');\n\t\tif (rules.invalid.length) {\n\t\t\twinston.warn('[meta/blacklist] ' + rules.invalid.length + ' invalid blacklist rule(s) were ignored.');\n\t\t}\n\n\t\tBlacklist._rules = {\n\t\t\tipv4: rules.ipv4,\n\t\t\tipv6: rules.ipv6,\n\t\t\tcidr: rules.cidr\n\t\t};\n\n\t\tcallback();\n\t});\n};\n\nBlacklist.save = function (rules, callback) {\n\tdb.set('ip-blacklist-rules', rules, function (err) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\t\tBlacklist.load(callback);\n\t});\n};\n\nBlacklist.get = function (callback) {\n\tdb.get('ip-blacklist-rules', callback);\n};\n\nBlacklist.test = function (clientIp, callback) {\n\tif (\n\t\tBlacklist._rules.ipv4.indexOf(clientIp) === -1\t// not explicitly specified in ipv4 list\n\t\t&& Blacklist._rules.ipv6.indexOf(clientIp) === -1\t// not explicitly specified in ipv6 list\n\t\t&& !Blacklist._rules.cidr.some(function (subnet) {\n\t\t\treturn ip.cidrSubnet(subnet).contains(clientIp);\n\t\t})\t// not in a blacklisted cidr range\n\t) {\n\t\tif (typeof callback === 'function') {\n\t\t\tcallback();\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\tvar err = new Error('[[error:blacklisted-ip]]');\n\t\terr.code = 'blacklisted-ip';\n\n\t\tif (typeof callback === 'function') {\n\t\t\tcallback(err);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n};\n\nBlacklist.validate = function (rules, callback) {\n\trules = (rules || '').split('\\n');\n\tvar ipv4 = [];\n\tvar ipv6 = [];\n\tvar cidr = [];\n\tvar invalid = [];\n\n\tvar isCidrSubnet = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$/,\n\t\tinlineCommentMatch = /#.*$/,\n\t\twhitelist = ['127.0.0.1', '::1', '::ffff:0:127.0.0.1'];\n\n\t// Filter out blank lines and lines starting with the hash character (comments)\n\t// Also trim inputs and remove inline comments\n\trules = rules.map(function (rule) {\n\t\trule = rule.replace(inlineCommentMatch, '').trim();\n\t\treturn rule.length && !rule.startsWith('#') ? rule : null;\n\t}).filter(Boolean);\n\n\t// Filter out invalid rules\n\trules = rules.filter(function (rule) {\n\t\tif (whitelist.indexOf(rule) !== -1) {\n\t\t\tinvalid.push(rule);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (ip.isV4Format(rule)) {\n\t\t\tipv4.push(rule);\n\t\t\treturn true;\n\t\t} else if (ip.isV6Format(rule)) {\n\t\t\tipv6.push(rule);\n\t\t\treturn true;\n\t\t} else if (isCidrSubnet.test(rule)) {\n\t\t\tcidr.push(rule);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tinvalid.push(rule);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t});\n\n\tcallback(null, {\n\t\tnumRules: rules.length + invalid.length,\n\t\tipv4: ipv4,\n\t\tipv6: ipv6,\n\t\tcidr: cidr,\n\t\tvalid: rules,\n\t\tinvalid: invalid\n\t});\n};\n\nmodule.exports = Blacklist;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/meta/css.js":"'use strict';\n\nvar winston = require('winston');\nvar nconf = require('nconf');\nvar fs = require('fs');\nvar path = require('path');\nvar less = require('less');\nvar async = require('async');\nvar autoprefixer = require('autoprefixer');\nvar postcss = require('postcss');\nvar clean = require('postcss-clean');\n\nvar plugins = require('../plugins');\nvar db = require('../database');\nvar file = require('../file');\nvar utils = require('../../public/src/utils');\n\nmodule.exports = function (Meta) {\n\n\tMeta.css = {};\n\tMeta.css.cache = undefined;\n\tMeta.css.acpCache = undefined;\n\n\tMeta.css.minify = function (target, callback) {\n\t\tcallback = callback || function () {};\n\n\t\twinston.verbose('[meta/css] Minifying LESS/CSS');\n\t\tdb.getObjectFields('config', ['theme:type', 'theme:id'], function (err, themeData) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar themeId = (themeData['theme:id'] || 'nodebb-theme-persona'),\n\t\t\t\tbaseThemePath = path.join(nconf.get('themes_path'), (themeData['theme:type'] && themeData['theme:type'] === 'local' ? themeId : 'nodebb-theme-vanilla')),\n\t\t\t\tpaths = [\n\t\t\t\t\tbaseThemePath,\n\t\t\t\t\tpath.join(__dirname, '../../node_modules'),\n\t\t\t\t\tpath.join(__dirname, '../../public/vendor/fontawesome/less')\n\t\t\t\t],\n\t\t\t\tsource = '@import \"font-awesome\";';\n\n\t\t\tplugins.lessFiles = filterMissingFiles(plugins.lessFiles);\n\t\t\tplugins.cssFiles = filterMissingFiles(plugins.cssFiles);\n\n\t\t\tasync.waterfall([\n\t\t\t\tfunction (next) {\n\t\t\t\t\tgetStyleSource(plugins.cssFiles, '\\n@import (inline) \".', '.css', next);\n\t\t\t\t},\n\t\t\t\tfunction (src, next) {\n\t\t\t\t\tsource += src;\n\t\t\t\t\tgetStyleSource(plugins.lessFiles, '\\n@import \".', '.less', next);\n\t\t\t\t},\n\t\t\t\tfunction (src, next) {\n\t\t\t\t\tsource += src;\n\t\t\t\t\tnext();\n\t\t\t\t}\n\t\t\t], function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\tvar acpSource = source;\n\n\t\t\t\tif (target !== 'admin.css') {\n\t\t\t\t\tsource += '\\n@import (inline) \"..' + path.sep + '..' + path.sep + 'public/vendor/jquery/css/smoothness/jquery-ui.css\";';\n\t\t\t\t\tsource += '\\n@import (inline) \"..' + path.sep + '..' + path.sep + 'public/vendor/jquery/bootstrap-tagsinput/bootstrap-tagsinput.css\";';\n\t\t\t\t\tsource += '\\n@import (inline) \"..' + path.sep + 'public/vendor/colorpicker/colorpicker.css\";';\n\t\t\t\t\tsource += '\\n@import \"..' + path.sep + '..' + path.sep + 'public/less/flags.less\";';\n\t\t\t\t\tsource += '\\n@import \"..' + path.sep + '..' + path.sep + 'public/less/blacklist.less\";';\n\t\t\t\t\tsource += '\\n@import \"..' + path.sep + '..' + path.sep + 'public/less/generics.less\";';\n\t\t\t\t\tsource += '\\n@import \"..' + path.sep + '..' + path.sep + 'public/less/mixins.less\";';\n\t\t\t\t\tsource += '\\n@import \"..' + path.sep + '..' + path.sep + 'public/less/global.less\";';\n\t\t\t\t\tsource = '@import \"./theme\";\\n' + source;\n\n\t\t\t\t\tminify(source, paths, 'cache', callback);\n\t\t\t\t} else {\n\t\t\t\t\tacpSource += '\\n@import \"..' + path.sep + 'public/less/admin/admin\";\\n';\n\t\t\t\t\tacpSource += '\\n@import \"..' + path.sep + 'public/less/generics.less\";\\n';\n\t\t\t\t\tacpSource += '\\n@import (inline) \"..' + path.sep + 'public/vendor/colorpicker/colorpicker.css\";\\n';\n\t\t\t\t\tacpSource += '\\n@import (inline) \"..' + path.sep + 'public/vendor/jquery/css/smoothness/jquery-ui.css\";';\n\n\t\t\t\t\tminify(acpSource, paths, 'acpCache', callback);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n\n\tMeta.css.getFromFile = function (callback) {\n\t\tasync.series([\n\t\t\tasync.apply(Meta.css.loadFile, path.join(__dirname, '../../public/stylesheet.css'), 'cache'),\n\t\t\tasync.apply(Meta.css.loadFile, path.join(__dirname, '../../public/admin.css'), 'acpCache')\n\t\t], function (err) {\n\t\t\tcallback(err);\n\t\t});\n\t};\n\n\tfunction getStyleSource(files, prefix, extension, callback) {\n\t\tvar\tpluginDirectories = [],\n\t\t\tsource = '';\n\n\t\tfiles.forEach(function (styleFile) {\n\t\t\tif (styleFile.endsWith(extension)) {\n\t\t\t\tsource += prefix + path.sep + styleFile + '\";';\n\t\t\t} else {\n\t\t\t\tpluginDirectories.push(styleFile);\n\t\t\t}\n\t\t});\n\n\t\tasync.each(pluginDirectories, function (directory, next) {\n\t\t\tutils.walk(directory, function (err, styleFiles) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn next(err);\n\t\t\t\t}\n\n\t\t\t\tstyleFiles.forEach(function (styleFile) {\n\t\t\t\t\tsource += prefix + path.sep + styleFile + '\";';\n\t\t\t\t});\n\n\t\t\t\tnext();\n\t\t\t});\n\t\t}, function (err) {\n\t\t\tcallback(err, source);\n\t\t});\n\t}\n\n\tMeta.css.commitToFile = function (filename, callback) {\n\t\tvar file = (filename === 'acpCache' ? 'admin' : 'stylesheet') + '.css';\n\n\t\tfs.writeFile(path.join(__dirname, '../../public/' + file), Meta.css[filename], function (err) {\n\t\t\tif (!err) {\n\t\t\t\twinston.verbose('[meta/css] ' + file + ' committed to disk.');\n\t\t\t} else {\n\t\t\t\twinston.error('[meta/css] ' + err.message);\n\t\t\t\tprocess.exit(0);\n\t\t\t}\n\n\t\t\tcallback();\n\t\t});\n\t};\n\n\tMeta.css.loadFile = function (filePath, filename, callback) {\n\t\twinston.verbose('[meta/css] Reading stylesheet ' + filePath.split('/').pop() + ' from file');\n\n\t\tfs.readFile(filePath, function (err, file) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tMeta.css[filename] = file;\n\t\t\tcallback();\n\t\t});\n\t};\n\n\tfunction minify(source, paths, destination, callback) {\n\t\tless.render(source, {\n\t\t\tpaths: paths\n\t\t}, function (err, lessOutput) {\n\t\t\tif (err) {\n\t\t\t\twinston.error('[meta/css] Could not minify LESS/CSS: ' + err.message);\n\t\t\t\tif (typeof callback === 'function') {\n\t\t\t\t\tcallback(err);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tpostcss([ autoprefixer, clean() ]).process(lessOutput.css).then(function (result) {\n\t\t\t\tresult.warnings().forEach(function (warn) {\n\t\t\t\t\twinston.verbose(warn.toString());\n\t\t\t\t});\n\t\t\t\tMeta.css[destination] = result.css;\n\n\t\t\t\t// Save the compiled CSS in public/ so things like nginx can serve it\n\t\t\t\tif (nconf.get('isPrimary') === 'true' && (nconf.get('local-assets') === undefined || nconf.get('local-assets') !== false)) {\n\t\t\t\t\treturn Meta.css.commitToFile(destination, function () {\n\t\t\t\t\t\tif (typeof callback === 'function') {\n\t\t\t\t\t\t\tcallback(null, result.css);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (typeof callback === 'function') {\n\t\t\t\t\tcallback(null, result.css);\n\t\t\t\t}\n\t\t\t});\n\n\t\t});\n\t}\n\n\tfunction filterMissingFiles(files) {\n\t\treturn files.filter(function (filePath) {\n\t\t\tvar exists = file.existsSync(path.join(__dirname, '../../node_modules', filePath));\n\t\t\tif (!exists) {\n\t\t\t\twinston.warn('[meta/css] File not found! ' + filePath);\n\t\t\t}\n\t\t\treturn exists;\n\t\t});\n\t}\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/meta/dependencies.js":"'use strict';\n\nvar path = require('path');\nvar fs = require('fs');\nvar async = require('async');\nvar semver = require('semver');\nvar winston = require('winston');\nvar colors = require('colors');\n\nvar pkg = require('../../package.json');\n\nmodule.exports = function (Meta) {\n\tMeta.dependencies = {};\n\n\tMeta.dependencies.check = function (callback) {\n\t\tvar modules = Object.keys(pkg.dependencies);\n\t\tvar depsOutdated = false;\n\t\tvar depsMissing = false;\n\n\t\twinston.verbose('Checking dependencies for outdated modules');\n\n\t\tasync.every(modules, function (module, next) {\n\t\t\tfs.readFile(path.join(__dirname, '../../node_modules/', module, 'package.json'), {\n\t\t\t\tencoding: 'utf-8'\n\t\t\t}, function (err, pkgData) {\n\t\t\t\t// If a bundled plugin/theme is not present, skip the dep check (#3384)\n\t\t\t\tif (err && err.code === 'ENOENT' && (module === 'nodebb-rewards-essentials' || module.startsWith('nodebb-plugin') || module.startsWith('nodebb-theme'))) {\n\t\t\t\t\twinston.warn('[meta/dependencies] Bundled plugin ' + module + ' not found, skipping dependency check.');\n\t\t\t\t\treturn next(true);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tpkgData = JSON.parse(pkgData);\n\t\t\t\t\tvar ok = !semver.validRange(pkg.dependencies[module]) || semver.satisfies(pkgData.version, pkg.dependencies[module]);\n\n\t\t\t\t\tif (ok || (pkgData._resolved && pkgData._resolved.indexOf('//github.com') !== -1)) {\n\t\t\t\t\t\tnext(true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprocess.stdout.write('[' + 'outdated'.yellow + '] ' + module.bold + ' installed v' + pkgData.version + ', package.json requires ' + pkg.dependencies[module] + '\\n');\n\t\t\t\t\t\tdepsOutdated = true;\n\t\t\t\t\t\tnext(true);\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t\tprocess.stdout.write('[' + 'missing'.red + '] ' + module.bold + ' is a required dependency but could not be found\\n');\n\t\t\t\t\tdepsMissing = true;\n\t\t\t\t\tnext(true);\n\t\t\t\t}\n\t\t\t});\n\t\t}, function (ok) {\n\t\t\tif (depsMissing) {\n\t\t\t\tcallback(new Error('dependencies-missing'));\n\t\t\t} else if (depsOutdated) {\n\t\t\t\tcallback(global.env !== 'development' ? new Error('dependencies-out-of-date') : null);\n\t\t\t} else {\n\t\t\t\tcallback(null);\n\t\t\t}\n\t\t});\n\t};\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/meta/errors.js":"'use strict';\n\nvar validator = require('validator');\n\nvar db = require('../database');\nvar analytics = require('../analytics');\n\nmodule.exports = function (Meta) {\n\n\tMeta.errors = {};\n\n\tMeta.errors.log404 = function (route, callback) {\n\t\tcallback = callback || function () {};\n\t\troute = route.replace(/\\/$/, '');\t// remove trailing slashes\n\t\tanalytics.increment('errors:404');\n\t\tdb.sortedSetIncrBy('errors:404', 1, route, callback);\n\t};\n\n\tMeta.errors.get = function (escape, callback) {\n\t\tdb.getSortedSetRevRangeWithScores('errors:404', 0, -1, function (err, data) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tdata = data.map(function (nfObject) {\n\t\t\t\tnfObject.value = escape ? validator.escape(String(nfObject.value || '')) : nfObject.value;\n\t\t\t\treturn nfObject;\n\t\t\t});\n\n\t\t\tcallback(null, data);\n\t\t});\n\t};\n\n\tMeta.errors.clear = function (callback) {\n\t\tdb.delete('errors:404', callback);\n\t};\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/meta/js.js":"'use strict';\n\nvar winston = require('winston');\nvar fork = require('child_process').fork;\nvar path = require('path');\nvar async = require('async');\nvar nconf = require('nconf');\nvar fs = require('fs');\nvar plugins = require('../plugins');\nvar utils = require('../../public/src/utils');\n\nmodule.exports = function (Meta) {\n\n\tMeta.js = {\n\t\ttarget: {},\n\t\tscripts: {\n\t\t\tbase: [\n\t\t\t\t'./node_modules/jquery/dist/jquery.js',\n\t\t\t\t'./node_modules/socket.io-client/dist/socket.io.js',\n\t\t\t\t'public/vendor/jquery/timeago/jquery.timeago.js',\n\t\t\t\t'public/vendor/jquery/js/jquery.form.min.js',\n\t\t\t\t'public/vendor/visibility/visibility.min.js',\n\t\t\t\t'public/vendor/bootstrap/js/bootstrap.js',\n\t\t\t\t'public/vendor/jquery/bootstrap-tagsinput/bootstrap-tagsinput.min.js',\n\t\t\t\t'public/vendor/jquery/textcomplete/jquery.textcomplete.js',\n\t\t\t\t'public/vendor/requirejs/require.js',\n\t\t\t\t'public/src/require-config.js',\n\t\t\t\t'public/vendor/bootbox/bootbox.min.js',\n\t\t\t\t'public/vendor/tinycon/tinycon.js',\n\t\t\t\t'public/vendor/xregexp/xregexp.js',\n\t\t\t\t'public/vendor/xregexp/unicode/unicode-base.js',\n\t\t\t\t'./node_modules/templates.js/lib/templates.js',\n\t\t\t\t'public/src/utils.js',\n\t\t\t\t'public/src/sockets.js',\n\t\t\t\t'public/src/app.js',\n\t\t\t\t'public/src/ajaxify.js',\n\t\t\t\t'public/src/overrides.js',\n\t\t\t\t'public/src/widgets.js',\n\t\t\t\t\"./node_modules/promise-polyfill/promise.js\"\n\t\t\t],\n\n\t\t\t// files listed below are only available client-side, or are bundled in to reduce # of network requests on cold load\n\t\t\trjs: [\n\t\t\t\t'public/src/client/footer.js',\n\t\t\t\t'public/src/client/chats.js',\n\t\t\t\t'public/src/client/infinitescroll.js',\n\t\t\t\t'public/src/client/pagination.js',\n\t\t\t\t'public/src/client/recent.js',\n\t\t\t\t'public/src/client/unread.js',\n\t\t\t\t'public/src/client/topic.js',\n\t\t\t\t'public/src/client/topic/events.js',\n\t\t\t\t'public/src/client/topic/flag.js',\n\t\t\t\t'public/src/client/topic/fork.js',\n\t\t\t\t'public/src/client/topic/move.js',\n\t\t\t\t'public/src/client/topic/posts.js',\n\t\t\t\t'public/src/client/topic/postTools.js',\n\t\t\t\t'public/src/client/topic/threadTools.js',\n\t\t\t\t'public/src/client/categories.js',\n\t\t\t\t'public/src/client/category.js',\n\t\t\t\t'public/src/client/categoryTools.js',\n\n\t\t\t\t'public/src/modules/translator.js',\n\t\t\t\t'public/src/modules/notifications.js',\n\t\t\t\t'public/src/modules/chat.js',\n\t\t\t\t'public/src/modules/components.js',\n\t\t\t\t'public/src/modules/sort.js',\n\t\t\t\t'public/src/modules/navigator.js',\n\t\t\t\t'public/src/modules/topicSelect.js',\n\t\t\t\t'public/src/modules/share.js',\n\t\t\t\t'public/src/modules/search.js',\n\t\t\t\t'public/src/modules/alerts.js',\n\t\t\t\t'public/src/modules/taskbar.js',\n\t\t\t\t'public/src/modules/helpers.js',\n\t\t\t\t'public/src/modules/sounds.js',\n\t\t\t\t'public/src/modules/string.js'\n\t\t\t],\n\n\t\t\t// modules listed below are routed through express (/src/modules) so they can be defined anonymously\n\t\t\tmodules: {\n\t\t\t\t\"Chart.js\": './node_modules/chart.js/dist/Chart.min.js',\n\t\t\t\t\"mousetrap.js\": './node_modules/mousetrap/mousetrap.min.js',\n\t\t\t\t\"jqueryui.js\": 'public/vendor/jquery/js/jquery-ui.js',\n\t\t\t\t\"buzz.js\": 'public/vendor/buzz/buzz.js'\n\t\t\t}\n\t\t}\n\t};\n\n\tMeta.js.bridgeModules = function (app, callback) {\n\t\t// Add routes for AMD-type modules to serve those files\n\t\tfunction addRoute(relPath) {\n\t\t\tvar relativePath = nconf.get('relative_path');\n\n\t\t\tapp.get(relativePath + '/src/modules/' + relPath, function (req, res) {\n\t\t\t\treturn res.sendFile(path.join(__dirname, '../../', Meta.js.scripts.modules[relPath]), {\n\t\t\t\t\tmaxAge: app.enabled('cache') ? 5184000000 : 0\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tvar numBridged = 0;\n\n\t\tfor(var relPath in Meta.js.scripts.modules) {\n\t\t\tif (Meta.js.scripts.modules.hasOwnProperty(relPath)) {\n\t\t\t\taddRoute(relPath);\n\t\t\t\t++numBridged;\n\t\t\t}\n\t\t}\n\n\t\twinston.verbose('[meta/js] ' + numBridged + ' of ' + Object.keys(Meta.js.scripts.modules).length + ' modules bridged');\n\t\tcallback();\n\t};\n\n\tMeta.js.minify = function (target, callback) {\n\t\twinston.verbose('[meta/js] Minifying ' + target);\n\n\t\tvar forkProcessParams = setupDebugging();\n\t\tvar minifier = Meta.js.minifierProc = fork('minifier.js', [], forkProcessParams);\n\n\t\tMeta.js.target[target] = {};\n\n\t\tMeta.js.prepare(target, function (err) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tminifier.send({\n\t\t\t\taction: 'js',\n\t\t\t\tminify: global.env !== 'development',\n\t\t\t\tscripts: Meta.js.target[target].scripts\n\t\t\t});\n\t\t});\n\n\t\tminifier.on('message', function (message) {\n\t\t\tswitch(message.type) {\n\t\t\tcase 'end':\n\t\t\t\tMeta.js.target[target].cache = message.minified;\n\t\t\t\tMeta.js.target[target].map = message.sourceMap;\n\t\t\t\twinston.verbose('[meta/js] ' + target + ' minification complete');\n\t\t\t\tminifier.kill();\n\n\t\t\t\tif (nconf.get('local-assets') === undefined || nconf.get('local-assets') !== false) {\n\t\t\t\t\treturn Meta.js.commitToFile(target, callback);\n\t\t\t\t} else {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase 'error':\n\t\t\t\twinston.error('[meta/js] Could not compile ' + target + ': ' + message.message);\n\t\t\t\tminifier.kill();\n\n\t\t\t\tcallback(new Error(message.message));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t};\n\n\tMeta.js.prepare = function (target, callback) {\n\t\tvar pluginsScripts = [];\n\n\t\tvar pluginDirectories = [];\n\n\t\tpluginsScripts = plugins[target === 'nodebb.min.js' ? 'clientScripts' : 'acpScripts'].filter(function (path) {\n\t\t\tif (path.endsWith('.js')) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tpluginDirectories.push(path);\n\t\t\treturn false;\n\t\t});\n\n\t\tasync.each(pluginDirectories, function (directory, next) {\n\t\t\tutils.walk(directory, function (err, scripts) {\n\t\t\t\tpluginsScripts = pluginsScripts.concat(scripts);\n\t\t\t\tnext(err);\n\t\t\t});\n\t\t}, function (err) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar basePath = path.resolve(__dirname, '../..');\n\n\t\t\tMeta.js.target[target].scripts = Meta.js.scripts.base.concat(pluginsScripts);\n\n\t\t\tif (target === 'nodebb.min.js') {\n\t\t\t\tMeta.js.target[target].scripts = Meta.js.target[target].scripts.concat(Meta.js.scripts.rjs);\n\t\t\t}\n\n\t\t\tMeta.js.target[target].scripts = Meta.js.target[target].scripts.map(function (script) {\n\t\t\t\treturn path.relative(basePath, script).replace(/\\\\/g, '/');\n\t\t\t});\n\n\t\t\tcallback();\n\t\t});\n\t};\n\n\tMeta.js.killMinifier = function () {\n\t\tif (Meta.js.minifierProc) {\n\t\t\tMeta.js.minifierProc.kill('SIGTERM');\n\t\t}\n\t};\n\n\tMeta.js.commitToFile = function (target, callback) {\n\t\tfs.writeFile(path.join(__dirname, '../../public/' + target), Meta.js.target[target].cache, function (err) {\n\t\t\tcallback(err);\n\t\t});\n\t};\n\n\tMeta.js.getFromFile = function (target, callback) {\n\t\tfunction readFile(filePath, next) {\n\t\t\tfs.readFile(filePath, function (err, contents) {\n\t\t\t\tif (err) {\n\t\t\t\t\tif (err.code === 'ENOENT') {\n\t\t\t\t\t\tif (!filePath.endsWith('.map')) {\n\t\t\t\t\t\t\twinston.warn('[meta/js] ' + filePath + ' not found on disk, did you run ./nodebb build?');\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn next(null, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnext(err, contents);\n\t\t\t});\n\t\t}\n\n\t\tvar scriptPath = path.join(nconf.get('base_dir'), 'public/' + target);\n\t\tvar mapPath = path.join(nconf.get('base_dir'), 'public/' + target + '.map');\n\n\t\tasync.parallel({\n\t\t\tscript: function (next) {\n\t\t\t\treadFile(scriptPath, next);\n\t\t\t},\n\t\t\tmap: function (next) {\n\t\t\t\treadFile(mapPath, next);\n\t\t\t}\n\t\t}, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tMeta.js.target[target] = {\n\t\t\t\tcache: results.script,\n\t\t\t\tmap: results.map\n\t\t\t};\n\t\t\tcallback();\n\t\t});\n\t};\n\n\tfunction setupDebugging() {\n\t\t/**\n\t\t * Check if the parent process is running with the debug option --debug (or --debug-brk)\n\t\t */\n\t\tvar forkProcessParams = {};\n\t\tif(global.v8debug || parseInt(process.execArgv.indexOf('--debug'), 10) !== -1) {\n\t\t\t/**\n\t\t\t * use the line below if you want to debug minifier.js script too (or even --debug-brk option, but\n\t\t\t * you'll have to setup your debugger and connect to the forked process)\n\t\t\t */\n\t\t\t//forkProcessParams = {execArgv: ['--debug=' + (global.process.debugPort + 1), '--nolazy']};\n\n\t\t\t/**\n\t\t\t * otherwise, just clean up --debug/--debug-brk options which are set up by default from the parent one\n\t\t\t */\n\t\t\tforkProcessParams = {execArgv: []};\n\t\t}\n\n\t\treturn forkProcessParams;\n\t}\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/meta/settings.js":"'use strict';\n\nvar db = require('../database');\nvar plugins = require('../plugins');\n\nmodule.exports = function (Meta) {\n\n\tMeta.settings = {};\n\n\tMeta.settings.get = function (hash, callback) {\n\t\tdb.getObject('settings:' + hash, function (err, settings) {\n\t\t\tcallback(err, settings || {});\n\t\t});\n\t};\n\n\tMeta.settings.getOne = function (hash, field, callback) {\n\t\tdb.getObjectField('settings:' + hash, field, callback);\n\t};\n\n\tMeta.settings.set = function (hash, values, callback) {\n\t\tvar key = 'settings:' + hash;\n\t\tdb.setObject(key, values, function (err) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tplugins.fireHook('action:settings.set', {\n\t\t\t\tplugin: hash,\n\t\t\t\tsettings: values\n\t\t\t});\n\n\t\t\tMeta.reloadRequired = true;\n\t\t\tcallback();\n\t\t});\n\t};\n\n\tMeta.settings.setOne = function (hash, field, value, callback) {\n\t\tdb.setObjectField('settings:' + hash, field, value, callback);\n\t};\n\n\tMeta.settings.setOnEmpty = function (hash, values, callback) {\n\t\tdb.getObject('settings:' + hash, function (err, settings) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tsettings = settings || {};\n\t\t\tvar empty = {};\n\t\t\tObject.keys(values).forEach(function (key) {\n\t\t\t\tif (!settings.hasOwnProperty(key)) {\n\t\t\t\t\tempty[key] = values[key];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (Object.keys(empty).length) {\n\t\t\t\tdb.setObject('settings:' + hash, empty, callback);\n\t\t\t} else {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t};\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/meta/sounds.js":"'use strict';\n\nvar path = require('path');\nvar fs = require('fs');\nvar nconf = require('nconf');\nvar winston = require('winston');\nvar rimraf = require('rimraf');\nvar mkdirp = require('mkdirp');\nvar async = require('async');\n\nvar plugins = require('../plugins');\nvar db = require('../database');\n\nmodule.exports = function (Meta) {\n\n\tMeta.sounds = {};\n\n\tMeta.sounds.init = function (callback) {\n\t\tif (nconf.get('isPrimary') === 'true') {\n\t\t\tsetupSounds(callback);\n\t\t} else {\n\t\t\tif (typeof callback === 'function') {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t};\n\n\tMeta.sounds.getFiles = function (callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tfs.readdir(path.join(__dirname, '../../public/sounds'), next);\n\t\t\t},\n\t\t\tfunction (sounds, next) {\n\t\t\t\tfs.readdir(path.join(__dirname, '../../public/uploads/sounds'), function (err, uploaded) {\n\t\t\t\t\tnext(err, sounds.concat(uploaded));\n\t\t\t\t});\n\t\t\t}\n\t\t], function (err, files) {\n\t\t\tvar\tlocalList = {};\n\n\t\t\t// Filter out hidden files\n\t\t\tfiles = files.filter(function (filename) {\n\t\t\t\treturn !filename.startsWith('.');\n\t\t\t});\n\n\t\t\tif (err) {\n\t\t\t\twinston.error('Could not get local sound files:' + err.message);\n\t\t\t\tconsole.log(err.stack);\n\t\t\t\treturn callback(null, []);\n\t\t\t}\n\n\t\t\t// Return proper paths\n\t\t\tfiles.forEach(function (filename) {\n\t\t\t\tlocalList[filename] = nconf.get('relative_path') + '/sounds/' + filename;\n\t\t\t});\n\n\t\t\tcallback(null, localList);\n\t\t});\n\t};\n\n\tMeta.sounds.getMapping = function (uid, callback) {\n\t\tvar user = require('../user');\n\t\tasync.parallel({\n\t\t\tdefaultMapping: function (next) {\n\t\t\t\tdb.getObject('settings:sounds', next);\n\t\t\t},\n\t\t\tuserSettings: function (next) {\n\t\t\t\tuser.getSettings(uid, next);\n\t\t\t}\n\t\t}, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tvar userSettings = results.userSettings;\n\t\t\tvar defaultMapping = results.defaultMapping || {};\n\t\t\tvar soundMapping = {};\n\t\t\tsoundMapping.notification = (userSettings.notificationSound || userSettings.notificationSound === '') ?\n\t\t\t\tuserSettings.notificationSound : defaultMapping.notification || '';\n\n\t\t\tsoundMapping['chat-incoming'] = (userSettings.incomingChatSound || userSettings.incomingChatSound === '') ?\n\t\t\t\tuserSettings.incomingChatSound : defaultMapping['chat-incoming'] || '';\n\n\t\t\tsoundMapping['chat-outgoing'] = (userSettings.outgoingChatSound || userSettings.outgoingChatSound === '') ?\n\t\t\t\tuserSettings.outgoingChatSound : defaultMapping['chat-outgoing'] || '';\n\n\t\t\tcallback(null, soundMapping);\n\t\t});\n\t};\n\n\tfunction setupSounds(callback) {\n\t\tvar\tsoundsPath = path.join(__dirname, '../../public/sounds');\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tfs.readdir(path.join(__dirname, '../../public/uploads/sounds'), next);\n\t\t\t},\n\t\t\tfunction (uploaded, next) {\n\t\t\t\tuploaded = uploaded.filter(function (filename) {\n\t\t\t\t\treturn !filename.startsWith('.');\n\t\t\t\t}).map(function (filename) {\n\t\t\t\t\treturn path.join(__dirname, '../../public/uploads/sounds', filename);\n\t\t\t\t});\n\n\t\t\t\tplugins.fireHook('filter:sounds.get', uploaded, function (err, filePaths) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\twinston.error('Could not initialise sound files:' + err.message);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (nconf.get('local-assets') === false) {\n\t\t\t\t\t\t// Don't regenerate the public/sounds/ directory. Instead, create a mapping for the router to use\n\t\t\t\t\t\tMeta.sounds._filePathHash = filePaths.reduce(function (hash, filePath) {\n\t\t\t\t\t\t\thash[path.basename(filePath)] = filePath;\n\t\t\t\t\t\t\treturn hash;\n\t\t\t\t\t\t}, {});\n\n\t\t\t\t\t\twinston.verbose('[sounds] Sounds OK');\n\t\t\t\t\t\tif (typeof next === 'function') {\n\t\t\t\t\t\t\treturn next();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Clear the sounds directory\n\t\t\t\t\tasync.series([\n\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\trimraf(soundsPath, next);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\tmkdirp(soundsPath, next);\n\t\t\t\t\t\t}\n\t\t\t\t\t], function (err) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\twinston.error('Could not initialise sound files:' + err.message);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Link paths\n\t\t\t\t\t\tasync.each(filePaths, function (filePath, next) {\n\t\t\t\t\t\t\tif (process.platform === 'win32') {\n\t\t\t\t\t\t\t\tfs.link(filePath, path.join(soundsPath, path.basename(filePath)), next);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfs.symlink(filePath, path.join(soundsPath, path.basename(filePath)), 'file', next);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, function (err) {\n\t\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\t\twinston.verbose('[sounds] Sounds OK');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\twinston.error('[sounds] Could not initialise sounds: ' + err.message);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (typeof next === 'function') {\n\t\t\t\t\t\t\t\tnext();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t], callback);\n\t}\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/meta/tags.js":"'use strict';\n\nvar nconf = require('nconf');\nvar validator = require('validator');\nvar async = require('async');\nvar winston = require('winston');\nvar plugins = require('../plugins');\n\nmodule.exports = function (Meta) {\n\tMeta.tags = {};\n\n\tMeta.tags.parse = function (meta, link, callback) {\n\t\tasync.parallel({\n\t\t\ttags: function (next) {\n\t\t\t\tvar defaultTags = [{\n\t\t\t\t\tname: 'viewport',\n\t\t\t\t\tcontent: 'width=device-width, initial-scale=1.0'\n\t\t\t\t}, {\n\t\t\t\t\tname: 'content-type',\n\t\t\t\t\tcontent: 'text/html; charset=UTF-8',\n\t\t\t\t\tnoEscape: true\n\t\t\t\t}, {\n\t\t\t\t\tname: 'apple-mobile-web-app-capable',\n\t\t\t\t\tcontent: 'yes'\n\t\t\t\t}, {\n\t\t\t\t\tname: 'mobile-web-app-capable',\n\t\t\t\t\tcontent: 'yes'\n\t\t\t\t}, {\n\t\t\t\t\tproperty: 'og:site_name',\n\t\t\t\t\tcontent: Meta.config.title || 'NodeBB'\n\t\t\t\t}, {\n\t\t\t\t\tname: 'keywords',\n\t\t\t\t\tcontent: Meta.config.keywords || ''\n\t\t\t\t}, {\n\t\t\t\t\tname: 'msapplication-badge',\n\t\t\t\t\tcontent: 'frequency=30; polling-uri=' + nconf.get('url') + '/sitemap.xml',\n\t\t\t\t\tnoEscape: true\n\t\t\t\t}, {\n\t\t\t\t\tname: 'msapplication-square150x150logo',\n\t\t\t\t\tcontent: Meta.config['brand:logo'] || '',\n\t\t\t\t\tnoEscape: true\n\t\t\t\t}];\n\t\t\t\tplugins.fireHook('filter:meta.getMetaTags', defaultTags, next);\n\t\t\t},\n\t\t\tlinks: function (next) {\n\t\t\t\tvar defaultLinks = [{\n\t\t\t\t\trel: \"icon\",\n\t\t\t\t\ttype: \"image/x-icon\",\n\t\t\t\t\thref: nconf.get('relative_path') + '/favicon.ico' + (Meta.config['cache-buster'] ? '?' + Meta.config['cache-buster'] : '')\n\t\t\t\t}, {\n\t\t\t\t\trel: \"manifest\",\n\t\t\t\t\thref: nconf.get('relative_path') + '/manifest.json'\n\t\t\t\t}];\n\n\t\t\t\t// Touch icons for mobile-devices\n\t\t\t\tif (Meta.config['brand:touchIcon']) {\n\t\t\t\t\tdefaultLinks.push({\n\t\t\t\t\t\trel: 'apple-touch-icon',\n\t\t\t\t\t\thref: nconf.get('relative_path') + '/apple-touch-icon'\n\t\t\t\t\t}, {\n\t\t\t\t\t\trel: 'icon',\n\t\t\t\t\t\tsizes: '36x36',\n\t\t\t\t\t\thref: nconf.get('relative_path') + '/uploads/system/touchicon-36.png'\n\t\t\t\t\t}, {\n\t\t\t\t\t\trel: 'icon',\n\t\t\t\t\t\tsizes: '48x48',\n\t\t\t\t\t\thref: nconf.get('relative_path') + '/uploads/system/touchicon-48.png'\n\t\t\t\t\t}, {\n\t\t\t\t\t\trel: 'icon',\n\t\t\t\t\t\tsizes: '72x72',\n\t\t\t\t\t\thref: nconf.get('relative_path') + '/uploads/system/touchicon-72.png'\n\t\t\t\t\t}, {\n\t\t\t\t\t\trel: 'icon',\n\t\t\t\t\t\tsizes: '96x96',\n\t\t\t\t\t\thref: nconf.get('relative_path') + '/uploads/system/touchicon-96.png'\n\t\t\t\t\t}, {\n\t\t\t\t\t\trel: 'icon',\n\t\t\t\t\t\tsizes: '144x144',\n\t\t\t\t\t\thref: nconf.get('relative_path') + '/uploads/system/touchicon-144.png'\n\t\t\t\t\t}, {\n\t\t\t\t\t\trel: 'icon',\n\t\t\t\t\t\tsizes: '192x192',\n\t\t\t\t\t\thref: nconf.get('relative_path') + '/uploads/system/touchicon-192.png'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tplugins.fireHook('filter:meta.getLinkTags', defaultLinks, next);\n\t\t\t}\n\t\t}, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tmeta = results.tags.concat(meta || []).map(function (tag) {\n\t\t\t\tif (!tag || typeof tag.content !== 'string') {\n\t\t\t\t\twinston.warn('Invalid meta tag. ', tag);\n\t\t\t\t\treturn tag;\n\t\t\t\t}\n\n\t\t\t\tif (!tag.noEscape) {\n\t\t\t\t\ttag.content = validator.escape(String(tag.content));\n\t\t\t\t}\n\n\t\t\t\treturn tag;\n\t\t\t});\n\n\t\t\taddDescription(meta);\n\n\t\t\tlink = results.links.concat(link || []);\n\n\t\t\tcallback(null, {\n\t\t\t\tmeta: meta,\n\t\t\t\tlink: link\n\t\t\t});\n\t\t});\n\t};\n\n\tfunction addDescription(meta) {\n\t\tvar hasDescription = false;\n\t\tmeta.forEach(function (tag) {\n\t\t\tif (tag.name === 'description') {\n\t\t\t\thasDescription = true;\n\t\t\t}\n\t\t});\n\n\t\tif (!hasDescription) {\n\t\t\tmeta.push({\n\t\t\t\tname: 'description',\n\t\t\t\tcontent: validator.escape(String(Meta.config.description || ''))\n\t\t\t});\n\t\t}\n\t}\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/meta/templates.js":"\"use strict\";\n\nvar mkdirp = require('mkdirp');\nvar rimraf = require('rimraf');\nvar winston = require('winston');\nvar async = require('async');\nvar path = require('path');\nvar fs = require('fs');\nvar nconf = require('nconf');\n\nvar plugins = require('../plugins');\nvar utils = require('../../public/src/utils');\n\nvar Templates = {};\nvar searchIndex = {};\n\nTemplates.compile = function (callback) {\n\tcallback = callback || function () {};\n\n\tcompile(callback);\n};\n\n\nfunction getBaseTemplates(theme) {\n\tvar baseTemplatesPaths = [],\n\t\tbaseThemePath, baseThemeConfig;\n\n\twhile (theme) {\n\t\tbaseThemePath = path.join(nconf.get('themes_path'), theme);\n\t\tbaseThemeConfig = require(path.join(baseThemePath, 'theme.json'));\n\n\t\tbaseTemplatesPaths.push(path.join(baseThemePath, baseThemeConfig.templates || 'templates'));\n\t\ttheme = baseThemeConfig.baseTheme;\n\t}\n\n\treturn baseTemplatesPaths.reverse();\n}\n\nfunction preparePaths(baseTemplatesPaths, callback) {\n\tvar coreTemplatesPath = nconf.get('core_templates_path');\n\tvar viewsPath = nconf.get('views_dir');\n\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\trimraf(viewsPath, next);\n\t\t},\n\t\tfunction (next) {\n\t\t\tmkdirp(viewsPath, next);\n\t\t},\n\t\tfunction (viewsPath, next) {\n\t\t\tplugins.fireHook('static:templates.precompile', {}, next);\n\t\t},\n\t\tfunction (next) {\n\t\t\tplugins.getTemplates(next);\n\t\t}\n\t], function (err, pluginTemplates) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\twinston.verbose('[meta/templates] Compiling templates');\n\n\t\tasync.parallel({\n\t\t\tcoreTpls: function (next) {\n\t\t\t\tutils.walk(coreTemplatesPath, next);\n\t\t\t},\n\t\t\tbaseThemes: function (next) {\n\t\t\t\tasync.map(baseTemplatesPaths, function (baseTemplatePath, next) {\n\t\t\t\t\tutils.walk(baseTemplatePath, function (err, paths) {\n\t\t\t\t\t\tpaths = paths.map(function (tpl) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tbase: baseTemplatePath,\n\t\t\t\t\t\t\t\tpath: tpl.replace(baseTemplatePath, '')\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tnext(err, paths);\n\t\t\t\t\t});\n\t\t\t\t}, next);\n\t\t\t}\n\t\t}, function (err, data) {\n\t\t\tvar baseThemes = data.baseThemes,\n\t\t\t\tcoreTpls = data.coreTpls,\n\t\t\t\tpaths = {};\n\n\t\t\tcoreTpls.forEach(function (el, i) {\n\t\t\t\tpaths[coreTpls[i].replace(coreTemplatesPath, '')] = coreTpls[i];\n\t\t\t});\n\n\t\t\tbaseThemes.forEach(function (baseTpls) {\n\t\t\t\tbaseTpls.forEach(function (el, i) {\n\t\t\t\t\tpaths[baseTpls[i].path] = path.join(baseTpls[i].base, baseTpls[i].path);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tfor (var tpl in pluginTemplates) {\n\t\t\t\tif (pluginTemplates.hasOwnProperty(tpl)) {\n\t\t\t\t\tpaths[tpl] = pluginTemplates[tpl];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcallback(err, paths);\n\t\t});\n\t});\n}\n\nfunction compile(callback) {\n\tvar themeConfig = require(nconf.get('theme_config')),\n\t\tbaseTemplatesPaths = themeConfig.baseTheme ? getBaseTemplates(themeConfig.baseTheme) : [nconf.get('base_templates_path')],\n\t\tviewsPath = nconf.get('views_dir');\n\n\n\tpreparePaths(baseTemplatesPaths, function (err, paths) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tasync.each(Object.keys(paths), function (relativePath, next) {\n\t\t\tvar file = fs.readFileSync(paths[relativePath]).toString(),\n\t\t\t\tmatches = null,\n\t\t\t\tregex = /[ \\t]*<!-- IMPORT ([\\s\\S]*?)? -->[ \\t]*/;\n\n\t\t\twhile((matches = file.match(regex)) !== null) {\n\t\t\t\tvar partial = \"/\" + matches[1];\n\n\t\t\t\tif (paths[partial] && relativePath !== partial) {\n\t\t\t\t\tfile = file.replace(regex, fs.readFileSync(paths[partial]).toString());\n\t\t\t\t} else {\n\t\t\t\t\twinston.warn('[meta/templates] Partial not loaded: ' + matches[1]);\n\t\t\t\t\tfile = file.replace(regex, \"\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (relativePath.match(/^\\/admin\\/[\\s\\S]*?/)) {\n\t\t\t\taddIndex(relativePath, file);\n\t\t\t}\n\n\t\t\tmkdirp.sync(path.join(viewsPath, relativePath.split('/').slice(0, -1).join('/')));\n\t\t\tfs.writeFile(path.join(viewsPath, relativePath), file, next);\n\t\t}, function (err) {\n\t\t\tif (err) {\n\t\t\t\twinston.error('[meta/templates] ' + err.stack);\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tcompileIndex(viewsPath, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\t\t\t\twinston.verbose('[meta/templates] Successfully compiled templates.');\n\n\t\t\t\tcallback();\n\t\t\t});\n\t\t});\n\t});\n}\n\n\nfunction addIndex(path, file) {\n\tsearchIndex[path] = file;\n}\n\nfunction compileIndex(viewsPath, callback) {\n\tfs.writeFile(path.join(viewsPath, '/indexed.json'), JSON.stringify(searchIndex), callback);\n}\n\nmodule.exports = Templates;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/meta/themes.js":"\n'use strict';\n\nvar nconf = require('nconf');\nvar winston = require('winston');\nvar fs = require('fs');\nvar path = require('path');\nvar async = require('async');\n\nvar file = require('../file');\nvar db = require('../database');\n\nmodule.exports = function (Meta) {\n\tMeta.themes = {};\n\n\tMeta.themes.get = function (callback) {\n\t\tvar themePath = nconf.get('themes_path');\n\t\tif (typeof themePath !== 'string') {\n\t\t\treturn callback(null, []);\n\t\t}\n\n\t\tfs.readdir(themePath, function (err, files) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tasync.filter(files, function (file, next) {\n\t\t\t\tfs.stat(path.join(themePath, file), function (err, fileStat) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(false);\n\t\t\t\t\t}\n\n\t\t\t\t\tnext((fileStat.isDirectory() && file.slice(0, 13) === 'nodebb-theme-'));\n\t\t\t\t});\n\t\t\t}, function (themes) {\n\t\t\t\tasync.map(themes, function (theme, next) {\n\t\t\t\t\tvar config = path.join(themePath, theme, 'theme.json');\n\n\t\t\t\t\tfs.readFile(config, function (err, file) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tvar configObj = JSON.parse(file.toString());\n\n\t\t\t\t\t\t\t// Minor adjustments for API output\n\t\t\t\t\t\t\tconfigObj.type = 'local';\n\t\t\t\t\t\t\tif (configObj.screenshot) {\n\t\t\t\t\t\t\t\tconfigObj.screenshot_url = nconf.get('relative_path') + '/css/previews/' + configObj.id;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconfigObj.screenshot_url = nconf.get('relative_path') + '/images/themes/default.png';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnext(null, configObj);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\twinston.error('[themes] Unable to parse theme.json ' + theme);\n\t\t\t\t\t\t\tnext(null, null);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t}, function (err, themes) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tthemes = themes.filter(Boolean);\n\t\t\t\t\tcallback(null, themes);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n\n\tMeta.themes.set = function (data, callback) {\n\t\tvar\tthemeData = {\n\t\t\t'theme:type': data.type,\n\t\t\t'theme:id': data.id,\n\t\t\t'theme:staticDir': '',\n\t\t\t'theme:templates': '',\n\t\t\t'theme:src': ''\n\t\t};\n\n\t\tswitch(data.type) {\n\t\tcase 'local':\n\t\t\tasync.waterfall([\n\t\t\t\tasync.apply(Meta.configs.get, 'theme:id'),\n\t\t\t\tfunction (current, next) {\n\t\t\t\t\tasync.series([\n\t\t\t\t\t\tasync.apply(db.sortedSetRemove, 'plugins:active', current),\n\t\t\t\t\t\tasync.apply(db.sortedSetAdd, 'plugins:active', 0, data.id)\n\t\t\t\t\t], function (err) {\n\t\t\t\t\t\tnext(err);\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tfs.readFile(path.join(nconf.get('themes_path'), data.id, 'theme.json'), function (err, config) {\n\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\tconfig = JSON.parse(config.toString());\n\t\t\t\t\t\t\tnext(null, config);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnext(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tfunction (config, next) {\n\t\t\t\t\tthemeData['theme:staticDir'] = config.staticDir ? config.staticDir : '';\n\t\t\t\t\tthemeData['theme:templates'] = config.templates ? config.templates : '';\n\t\t\t\t\tthemeData['theme:src'] = '';\n\n\t\t\t\t\tdb.setObject('config', themeData, next);\n\n\t\t\t\t\t// Re-set the themes path (for when NodeBB is reloaded)\n\t\t\t\t\tMeta.themes.setPath(config);\n\t\t\t\t}\n\t\t\t], callback);\n\n\t\t\tMeta.reloadRequired = true;\n\t\t\tbreak;\n\n\t\tcase 'bootswatch':\n\t\t\tMeta.configs.set('theme:src', data.src, callback);\n\t\t\tbreak;\n\t\t}\n\t};\n\n\tMeta.themes.setupPaths = function (callback) {\n\t\tasync.parallel({\n\t\t\tthemesData: Meta.themes.get,\n\t\t\tcurrentThemeId: function (next) {\n\t\t\t\tdb.getObjectField('config', 'theme:id', next);\n\t\t\t}\n\t\t}, function (err, data) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar themeId = data.currentThemeId || 'nodebb-theme-persona';\n\n\t\t\tvar\tthemeObj = data.themesData.filter(function (themeObj) {\n\t\t\t\t\treturn themeObj.id === themeId;\n\t\t\t\t})[0];\n\n\t\t\tif (process.env.NODE_ENV === 'development') {\n\t\t\t\twinston.info('[themes] Using theme ' + themeId);\n\t\t\t}\n\n\t\t\tif (!themeObj) {\n\t\t\t\treturn callback(new Error('[[error:theme-not-found]]'));\n\t\t\t}\n\n\t\t\tMeta.themes.setPath(themeObj);\n\t\t\tcallback();\n\t\t});\n\t};\n\n\tMeta.themes.setPath = function (themeObj) {\n\t\t// Theme's templates path\n\t\tvar themePath = nconf.get('base_templates_path'),\n\t\t\tfallback = path.join(nconf.get('themes_path'), themeObj.id, 'templates');\n\n\t\tif (themeObj.templates) {\n\t\t\tthemePath = path.join(nconf.get('themes_path'), themeObj.id, themeObj.templates);\n\t\t} else if (file.existsSync(fallback)) {\n\t\t\tthemePath = fallback;\n\t\t}\n\n\t\tnconf.set('theme_templates_path', themePath);\n\t\tnconf.set('theme_config', path.join(nconf.get('themes_path'), themeObj.id, 'theme.json'));\n\t};\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/middleware/admin.js":"\"use strict\";\n\nvar async = require('async');\nvar winston = require('winston');\nvar user = require('../user');\nvar meta = require('../meta');\nvar plugins = require('../plugins');\n\nvar controllers = {\n\tapi: require('../controllers/api'),\n\thelpers: require('../controllers/helpers')\n};\n\nmodule.exports = function (middleware) {\n\tmiddleware.admin = {};\n\tmiddleware.admin.isAdmin = function (req, res, next) {\n\t\twinston.warn('[middleware.admin.isAdmin] deprecation warning, no need to use this from plugins!');\n\n\t\tif (!req.user) {\n\t\t\treturn controllers.helpers.notAllowed(req, res);\n\t\t}\n\n\t\tuser.isAdministrator(req.user.uid, function (err, isAdmin) {\n\t\t\tif (err || isAdmin) {\n\t\t\t\treturn next(err);\n\t\t\t}\n\n\t\t\tcontrollers.helpers.notAllowed(req, res);\n\t\t});\n\t};\n\n\tmiddleware.admin.buildHeader = function (req, res, next) {\n\t\tres.locals.renderAdminHeader = true;\n\n\t\tcontrollers.api.getConfig(req, res, function (err, config) {\n\t\t\tif (err) {\n\t\t\t\treturn next(err);\n\t\t\t}\n\n\t\t\tres.locals.config = config;\n\t\t\tnext();\n\t\t});\n\t};\n\n\tmiddleware.admin.renderHeader = function (req, res, data, next) {\n\t\tvar custom_header = {\n\t\t\t'plugins': [],\n\t\t\t'authentication': []\n\t\t};\n\n\t\tuser.getUserFields(req.uid, ['username', 'userslug', 'email', 'picture', 'email:confirmed'], function (err, userData) {\n\t\t\tif (err) {\n\t\t\t\treturn next(err);\n\t\t\t}\n\n\t\t\tuserData.uid = req.uid;\n\t\t\tuserData['email:confirmed'] = parseInt(userData['email:confirmed'], 10) === 1;\n\n\t\t\tasync.parallel({\n\t\t\t\tscripts: function (next) {\n\t\t\t\t\tplugins.fireHook('filter:admin.scripts.get', [], function (err, scripts) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar arr = [];\n\t\t\t\t\t\tscripts.forEach(function (script) {\n\t\t\t\t\t\t\tarr.push({src: script});\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tnext(null, arr);\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tcustom_header: function (next) {\n\t\t\t\t\tplugins.fireHook('filter:admin.header.build', custom_header, next);\n\t\t\t\t},\n\t\t\t\tconfig: function (next) {\n\t\t\t\t\tcontrollers.api.getConfig(req, res, next);\n\t\t\t\t},\n\t\t\t\tconfigs: function (next) {\n\t\t\t\t\tmeta.configs.list(next);\n\t\t\t\t}\n\t\t\t}, function (err, results) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn next(err);\n\t\t\t\t}\n\t\t\t\tres.locals.config = results.config;\n\n\t\t\t\tvar acpPath = req.path.slice(1).split('/');\n\t\t\t\tacpPath.forEach(function (path, i) {\n\t\t\t\t\tacpPath[i] = path.charAt(0).toUpperCase() + path.slice(1);\n\t\t\t\t});\n\t\t\t\tacpPath = acpPath.join(' > ');\n\n\t\t\t\tvar templateValues = {\n\t\t\t\t\tconfig: results.config,\n\t\t\t\t\tconfigJSON: JSON.stringify(results.config),\n\t\t\t\t\trelative_path: results.config.relative_path,\n\t\t\t\t\tadminConfigJSON: encodeURIComponent(JSON.stringify(results.configs)),\n\t\t\t\t\tuser: userData,\n\t\t\t\t\tuserJSON: JSON.stringify(userData).replace(/'/g, \"\\\\'\"),\n\t\t\t\t\tplugins: results.custom_header.plugins,\n\t\t\t\t\tauthentication: results.custom_header.authentication,\n\t\t\t\t\tscripts: results.scripts,\n\t\t\t\t\t'cache-buster': meta.config['cache-buster'] ? 'v=' + meta.config['cache-buster'] : '',\n\t\t\t\t\tenv: process.env.NODE_ENV ? true : false,\n\t\t\t\t\ttitle: (acpPath || 'Dashboard') + ' | NodeBB Admin Control Panel',\n\t\t\t\t\tbodyClass: data.bodyClass\n\t\t\t\t};\n\n\t\t\t\ttemplateValues.template = {name: res.locals.template};\n\t\t\t\ttemplateValues.template[res.locals.template] = true;\n\n\t\t\t\treq.app.render('admin/header', templateValues, next);\n\t\t\t});\n\t\t});\n\t};\n\n\n\tmiddleware.admin.renderFooter = function (req, res, data, next) {\n\t\treq.app.render('admin/footer', data, next);\n\t};\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/middleware/header.js":"'use strict';\n\nvar async = require('async');\nvar nconf = require('nconf');\n\nvar db = require('../database');\nvar user = require('../user');\nvar meta = require('../meta');\nvar plugins = require('../plugins');\nvar navigation = require('../navigation');\n\nvar controllers = {\n\tapi: require('../controllers/api'),\n\thelpers: require('../controllers/helpers')\n};\n\nmodule.exports = function (middleware) {\n\n\tmiddleware.buildHeader = function (req, res, next) {\n\t\tres.locals.renderHeader = true;\n\t\tres.locals.isAPI = false;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tmiddleware.applyCSRF(req, res, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\tconfig: function (next) {\n\t\t\t\t\t\tcontrollers.api.getConfig(req, res, next);\n\t\t\t\t\t},\n\t\t\t\t\tplugins: function (next) {\n\t\t\t\t\t\tplugins.fireHook('filter:middleware.buildHeader', {req: req, locals: res.locals}, next);\n\t\t\t\t\t}\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tres.locals.config = results.config;\n\t\t\t\tnext();\n\t\t\t}\n\t\t], next);\n\t};\n\n\tmiddleware.renderHeader = function (req, res, data, callback) {\n\t\tvar registrationType = meta.config.registrationType || 'normal';\n\t\tvar templateValues = {\n\t\t\tbootswatchCSS: meta.config['theme:src'],\n\t\t\ttitle: meta.config.title || '',\n\t\t\tdescription: meta.config.description || '',\n\t\t\t'cache-buster': meta.config['cache-buster'] ? 'v=' + meta.config['cache-buster'] : '',\n\t\t\t'brand:logo': meta.config['brand:logo'] || '',\n\t\t\t'brand:logo:url': meta.config['brand:logo:url'] || '',\n\t\t\t'brand:logo:alt': meta.config['brand:logo:alt'] || '',\n\t\t\t'brand:logo:display': meta.config['brand:logo'] ? '' : 'hide',\n\t\t\tallowRegistration: registrationType === 'normal' || registrationType === 'admin-approval' || registrationType === 'admin-approval-ip',\n\t\t\tsearchEnabled: plugins.hasListeners('filter:search.query'),\n\t\t\tconfig: res.locals.config,\n\t\t\trelative_path: nconf.get('relative_path'),\n\t\t\tbodyClass: data.bodyClass\n\t\t};\n\n\t\ttemplateValues.configJSON = JSON.stringify(res.locals.config);\n\n\t\tasync.parallel({\n\t\t\tscripts: function (next) {\n\t\t\t\tplugins.fireHook('filter:scripts.get', [], next);\n\t\t\t},\n\t\t\tisAdmin: function (next) {\n\t\t\t\tuser.isAdministrator(req.uid, next);\n\t\t\t},\n\t\t\tisGlobalMod: function (next) {\n\t\t\t\tuser.isGlobalModerator(req.uid, next);\n\t\t\t},\n\t\t\tisModerator: function (next) {\n\t\t\t\tuser.isModeratorOfAnyCategory(req.uid, next);\n\t\t\t},\n\t\t\tuser: function (next) {\n\t\t\t\tvar userData = {\n\t\t\t\t\tuid: 0,\n\t\t\t\t\tusername: '[[global:guest]]',\n\t\t\t\t\tuserslug: '',\n\t\t\t\t\temail: '',\n\t\t\t\t\tpicture: meta.config.defaultAvatar,\n\t\t\t\t\tstatus: 'offline',\n\t\t\t\t\treputation: 0,\n\t\t\t\t\t'email:confirmed': false\n\t\t\t\t};\n\t\t\t\tif (req.uid) {\n\t\t\t\t\tuser.getUserFields(req.uid, Object.keys(userData), next);\n\t\t\t\t} else {\n\t\t\t\t\tnext(null, userData);\n\t\t\t\t}\n\t\t\t},\n\t\t\tisEmailConfirmSent: function (next) {\n\t\t\t\tif (!meta.config.requireEmailConfirmation || !req.uid) {\n\t\t\t\t\treturn next(null, false);\n\t\t\t\t}\n\t\t\t\tdb.get('uid:' + req.uid + ':confirm:email:sent', next);\n\t\t\t},\n\t\t\tnavigation: async.apply(navigation.get),\n\t\t\ttags: async.apply(meta.tags.parse, res.locals.metaTags, res.locals.linkTags),\n\t\t\tbanned: async.apply(user.isBanned, req.uid),\n\t\t\tbanReason: async.apply(user.getBannedReason, req.uid)\n\t\t}, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tif (results.banned) {\n\t\t\t\treq.logout();\n\t\t\t\treturn res.redirect('/?banned=' + (results.banReason || 'no-reason'));\n\t\t\t}\n\n\t\t\tresults.user.isAdmin = results.isAdmin;\n\t\t\tresults.user.isGlobalMod = results.isGlobalMod;\n\t\t\tresults.user.isMod = !!results.isModerator;\n\t\t\tresults.user.uid = parseInt(results.user.uid, 10);\n\t\t\tresults.user.email = String(results.user.email).replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"');\n\t\t\tresults.user['email:confirmed'] = parseInt(results.user['email:confirmed'], 10) === 1;\n\t\t\tresults.user.isEmailConfirmSent = !!results.isEmailConfirmSent;\n\n\t\t\tif (res.locals.config && parseInt(meta.config.disableCustomUserSkins, 10) !== 1 && res.locals.config.bootswatchSkin !== 'default') {\n\t\t\t\ttemplateValues.bootswatchCSS = '//maxcdn.bootstrapcdn.com/bootswatch/latest/' + res.locals.config.bootswatchSkin + '/bootstrap.min.css';\n\t\t\t}\n\n\t\t\ttemplateValues.browserTitle = controllers.helpers.buildTitle(data.title);\n\t\t\ttemplateValues.navigation = results.navigation;\n\t\t\ttemplateValues.metaTags = results.tags.meta;\n\t\t\ttemplateValues.linkTags = results.tags.link;\n\t\t\ttemplateValues.isAdmin = results.user.isAdmin;\n\t\t\ttemplateValues.isGlobalMod = results.user.isGlobalMod;\n\t\t\ttemplateValues.showModMenu = results.user.isAdmin || results.user.isGlobalMod || results.user.isMod;\n\t\t\ttemplateValues.user = results.user;\n\t\t\ttemplateValues.userJSON = JSON.stringify(results.user);\n\t\t\ttemplateValues.useCustomCSS = parseInt(meta.config.useCustomCSS, 10) === 1 && meta.config.customCSS;\n\t\t\ttemplateValues.customCSS = templateValues.useCustomCSS ? (meta.config.renderedCustomCSS || '') : '';\n\t\t\ttemplateValues.useCustomJS = parseInt(meta.config.useCustomJS, 10) === 1;\n\t\t\ttemplateValues.customJS = templateValues.useCustomJS ? meta.config.customJS : '';\n\t\t\ttemplateValues.maintenanceHeader = parseInt(meta.config.maintenanceMode, 10) === 1 && !results.isAdmin;\n\t\t\ttemplateValues.defaultLang = meta.config.defaultLang || 'en-GB';\n\t\t\ttemplateValues.privateUserInfo = parseInt(meta.config.privateUserInfo, 10) === 1;\n\t\t\ttemplateValues.privateTagListing = parseInt(meta.config.privateTagListing, 10) === 1;\n\n\t\t\ttemplateValues.template = {name: res.locals.template};\n\t\t\ttemplateValues.template[res.locals.template] = true;\n\n\t\t\ttemplateValues.scripts = results.scripts.map(function (script) {\n\t\t\t\treturn {src: script};\n\t\t\t});\n\n\t\t\tif (req.route && req.route.path === '/') {\n\t\t\t\tmodifyTitle(templateValues);\n\t\t\t}\n\n\t\t\tplugins.fireHook('filter:middleware.renderHeader', {templateValues: templateValues, req: req, res: res}, function (err, data) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\treq.app.render('header', data.templateValues, callback);\n\t\t\t});\n\t\t});\n\t};\n\n\tmiddleware.renderFooter = function (req, res, data, callback) {\n\t\tplugins.fireHook('filter:middleware.renderFooter', {templateValues: data, req: req, res: res}, function (err, data) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\treq.app.render('footer', data.templateValues, callback);\n\t\t});\n\t};\n\n\tfunction modifyTitle(obj) {\n\t\tvar title = controllers.helpers.buildTitle('[[pages:home]]');\n\t\tobj.browserTitle = title;\n\n\t\tif (obj.metaTags) {\n\t\t\tobj.metaTags.forEach(function (tag, i) {\n\t\t\t\tif (tag.property === 'og:title') {\n\t\t\t\t\tobj.metaTags[i].content = title;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn title;\n\t}\n\n};\n\n\n\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/middleware/headers.js":"'use strict';\n\nvar meta = require('../meta');\n\nmodule.exports = function (middleware) {\n\n\tmiddleware.addHeaders = function (req, res, next) {\n\t\tvar headers = {\n\t\t\t'X-Powered-By': encodeURI(meta.config['powered-by'] || 'NodeBB'),\n\t\t\t'X-Frame-Options': meta.config['allow-from-uri'] ? 'ALLOW-FROM ' + encodeURI(meta.config['allow-from-uri']) : 'SAMEORIGIN',\n\t\t\t'Access-Control-Allow-Origin': encodeURI(meta.config['access-control-allow-origin'] || 'null'),\n\t\t\t'Access-Control-Allow-Methods': encodeURI(meta.config['access-control-allow-methods'] || ''),\n\t\t\t'Access-Control-Allow-Headers': encodeURI(meta.config['access-control-allow-headers'] || '')\n\t\t};\n\n\t\tfor (var key in headers) {\n\t\t\tif (headers.hasOwnProperty(key) && headers[key]) {\n\t\t\t\tres.setHeader(key, headers[key]);\n\t\t\t}\n\t\t}\n\n\t\tnext();\n\t};\n\n\tmiddleware.addExpiresHeaders = function (req, res, next) {\n\t\tif (req.app.enabled('cache')) {\n\t\t\tres.setHeader(\"Cache-Control\", \"public, max-age=5184000\");\n\t\t\tres.setHeader(\"Expires\", new Date(Date.now() + 5184000000).toUTCString());\n\t\t} else {\n\t\t\tres.setHeader(\"Cache-Control\", \"public, max-age=0\");\n\t\t\tres.setHeader(\"Expires\", new Date().toUTCString());\n\t\t}\n\n\t\tnext();\n\t};\n\n};\n\n\n\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/middleware/index.js":"\"use strict\";\n\nvar async = require('async');\nvar fs = require('fs');\nvar path = require('path');\nvar csrf = require('csurf');\nvar validator = require('validator');\nvar nconf = require('nconf');\nvar ensureLoggedIn = require('connect-ensure-login');\nvar toobusy = require('toobusy-js');\n\nvar plugins = require('../plugins');\nvar languages = require('../languages');\nvar meta = require('../meta');\nvar user = require('../user');\nvar groups = require('../groups');\n\nvar analytics = require('../analytics');\n\nvar controllers = {\n\tapi: require('./../controllers/api'),\n\thelpers: require('../controllers/helpers')\n};\n\nvar middleware = {};\n\nmiddleware.applyCSRF = csrf();\n\nmiddleware.ensureLoggedIn = ensureLoggedIn.ensureLoggedIn(nconf.get('relative_path') + '/login');\n\nrequire('./admin')(middleware);\nrequire('./header')(middleware);\nrequire('./render')(middleware);\nrequire('./maintenance')(middleware);\nrequire('./user')(middleware);\nrequire('./headers')(middleware);\n\nmiddleware.authenticate = function (req, res, next) {\n\tif (req.user) {\n\t\treturn next();\n\t} else if (plugins.hasListeners('action:middleware.authenticate')) {\n\t\treturn plugins.fireHook('action:middleware.authenticate', {\n\t\t\treq: req,\n\t\t\tres: res,\n\t\t\tnext: next\n\t\t});\n\t}\n\n\tcontrollers.helpers.notAllowed(req, res);\n};\n\nmiddleware.pageView = function (req, res, next) {\n\tanalytics.pageView({\n\t\tip: req.ip,\n\t\tpath: req.path,\n\t\tuid: req.uid\n\t});\n\n\tplugins.fireHook('action:middleware.pageView', {req: req});\n\n\tif (req.user) {\n\t\tuser.updateLastOnlineTime(req.user.uid);\n\t\tif (req.path.startsWith('/api/users') || req.path.startsWith('/users')) {\n\t\t\tuser.updateOnlineUsers(req.user.uid, next);\n\t\t} else {\n\t\t\tuser.updateOnlineUsers(req.user.uid);\n\t\t\tnext();\n\t\t}\n\t} else {\n\t\tnext();\n\t}\n};\n\n\nmiddleware.pluginHooks = function (req, res, next) {\n\tasync.each(plugins.loadedHooks['filter:router.page'] || [], function (hookObj, next) {\n\t\thookObj.method(req, res, next);\n\t}, function () {\n\t\t// If it got here, then none of the subscribed hooks did anything, or there were no hooks\n\t\tnext();\n\t});\n};\n\nmiddleware.validateFiles = function (req, res, next) {\n\tif (!Array.isArray(req.files.files) || !req.files.files.length) {\n\t\treturn next(new Error(['[[error:invalid-files]]']));\n\t}\n\n\tnext();\n};\n\nmiddleware.prepareAPI = function (req, res, next) {\n\tres.locals.isAPI = true;\n\tnext();\n};\n\nmiddleware.routeTouchIcon = function (req, res) {\n\tif (meta.config['brand:touchIcon'] && validator.isURL(meta.config['brand:touchIcon'])) {\n\t\treturn res.redirect(meta.config['brand:touchIcon']);\n\t} else {\n\t\treturn res.sendFile(path.join(__dirname, '../../public', meta.config['brand:touchIcon'] || '/logo.png'), {\n\t\t\tmaxAge: req.app.enabled('cache') ? 5184000000 : 0\n\t\t});\n\t}\n};\n\nmiddleware.privateTagListing = function (req, res, next) {\n\tif (!req.user && parseInt(meta.config.privateTagListing, 10) === 1) {\n\t\tcontrollers.helpers.notAllowed(req, res);\n\t} else {\n\t\tnext();\n\t}\n};\n\nmiddleware.exposeGroupName = function (req, res, next) {\n\texpose('groupName', groups.getGroupNameByGroupSlug, 'slug', req, res, next);\n};\n\nmiddleware.exposeUid = function (req, res, next) {\n\texpose('uid', user.getUidByUserslug, 'userslug', req, res, next);\n};\n\nfunction expose(exposedField, method, field, req, res, next) {\n\tif (!req.params.hasOwnProperty(field)) {\n\t\treturn next();\n\t}\n\tmethod(req.params[field], function (err, id) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tres.locals[exposedField] = id;\n\t\tnext();\n\t});\n}\n\nmiddleware.privateUploads = function (req, res, next) {\n\tif (req.user || parseInt(meta.config.privateUploads, 10) !== 1) {\n\t\treturn next();\n\t}\n\tif (req.path.startsWith('/uploads/files')) {\n\t\treturn res.status(403).json('not-allowed');\n\t}\n\tnext();\n};\n\nmiddleware.busyCheck = function (req, res, next) {\n\tif (global.env === 'production' && (!meta.config.hasOwnProperty('eventLoopCheckEnabled') || parseInt(meta.config.eventLoopCheckEnabled, 10) === 1) && toobusy()) {\n\t\tanalytics.increment('errors:503');\n\t\tres.status(503).type('text/html').sendFile(path.join(__dirname, '../../public/503.html'));\n\t} else {\n\t\tnext();\n\t}\n};\n\nmiddleware.applyBlacklist = function (req, res, next) {\n\tmeta.blacklist.test(req.ip, function (err) {\n\t\tnext(err);\n\t});\n};\n\nmiddleware.getTranslation = function (req, res, next) {\n\tvar language = req.params.language;\n\tvar namespace = req.params.namespace;\n\n\tif (language && namespace) {\n\t\tlanguages.get(language, namespace, function (err, translations) {\n\t\t\tif (err) {\n\t\t\t\treturn next(err);\n\t\t\t}\n\n\t\t\tres.status(200).json(translations);\n\t\t});\n\t} else {\n\t\tres.status(404).json('{}');\n\t}\n};\n\nmiddleware.processTimeagoLocales = function (req, res, next) {\n\tvar fallback = req.path.indexOf('-short') === -1 ? 'jquery.timeago.en.js' : 'jquery.timeago.en-short.js',\n\t\tlocalPath = path.join(__dirname, '../../public/vendor/jquery/timeago/locales', req.path),\n\t\texists;\n\n\ttry {\n\t\texists = fs.accessSync(localPath, fs.F_OK | fs.R_OK);\n\t} catch(e) {\n\t\texists = false;\n\t}\n\n\tif (exists) {\n\t\tres.status(200).sendFile(localPath, {\n\t\t\tmaxAge: req.app.enabled('cache') ? 5184000000 : 0\n\t\t});\n\t} else {\n\t\tres.status(200).sendFile(path.join(__dirname, '../../public/vendor/jquery/timeago/locales', fallback), {\n\t\t\tmaxAge: req.app.enabled('cache') ? 5184000000 : 0\n\t\t});\n\t}\n};\n\n\nmodule.exports = middleware;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/middleware/maintenance.js":"'use strict';\n\nvar nconf = require('nconf');\nvar meta = require('../meta');\nvar user = require('../user');\n\nmodule.exports = function (middleware) {\n\n\tmiddleware.maintenanceMode = function (req, res, next) {\n\t\tif (parseInt(meta.config.maintenanceMode, 10) !== 1) {\n\t\t\treturn next();\n\t\t}\n\t\tvar url = req.url.replace(nconf.get('relative_path'), '');\n\n\t\tvar allowedRoutes = [\n\t\t\t'^/ping',\n\t\t\t'^/sping',\n\t\t\t'^/login',\n\t\t\t'^/stylesheet.css',\n\t\t\t'^/favicon',\n\t\t\t'^/nodebb.min.js',\n\t\t\t'^/vendor/fontawesome/fonts/fontawesome-webfont.woff',\n\t\t\t'^/src/(modules|client)/[\\\\w/]+.js',\n\t\t\t'^/templates/[\\\\w/]+.tpl',\n\t\t\t'^/api/login',\n\t\t\t'^/api/widgets/render',\n\t\t\t'^/api/language/.+',\n\t\t\t'^/uploads/system/site-logo.png'\n\t\t];\n\n\t\tvar isAllowed = function (url) {\n\t\t\tfor(var x = 0,numAllowed = allowedRoutes.length,route; x < numAllowed; x++) {\n\t\t\t\troute = new RegExp(allowedRoutes[x]);\n\t\t\t\tif (route.test(url)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tif (isAllowed(url)) {\n\t\t\treturn next();\n\t\t}\n\n\t\tuser.isAdministrator(req.uid, function (err, isAdmin) {\n\t\t\tif (err || isAdmin) {\n\t\t\t\treturn next(err);\n\t\t\t}\n\n\t\t\tres.status(503);\n\t\t\tvar data = {\n\t\t\t\tsite_title: meta.config.title || 'NodeBB',\n\t\t\t\tmessage: meta.config.maintenanceModeMessage\n\t\t\t};\n\n\t\t\tif (res.locals.isAPI) {\n\t\t\t\treturn res.json(data);\n\t\t\t}\n\n\t\t\tmiddleware.buildHeader(req, res, function () {\n\t\t\t\tres.render('503', data);\n\t\t\t});\n\t\t});\n\t};\n\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/middleware/ratelimit.js":"\n\n'use strict';\nvar winston = require('winston');\n\nvar ratelimit = {};\n\nvar allowedCalls = 100;\nvar timeframe = 10000;\n\nratelimit.isFlooding = function (socket) {\n\tsocket.callsPerSecond = socket.callsPerSecond || 0;\n\tsocket.elapsedTime = socket.elapsedTime || 0;\n\tsocket.lastCallTime = socket.lastCallTime || Date.now();\n\n\t++socket.callsPerSecond;\n\n\tvar now = Date.now();\n\tsocket.elapsedTime += now - socket.lastCallTime;\n\n\tif (socket.callsPerSecond > allowedCalls && socket.elapsedTime < timeframe) {\n\t\twinston.warn('Flooding detected! Calls : ' + socket.callsPerSecond + ', Duration : ' + socket.elapsedTime);\n\t\treturn true;\n\t}\n\n\tif (socket.elapsedTime >= timeframe) {\n\t\tsocket.elapsedTime = 0;\n\t\tsocket.callsPerSecond = 0;\n\t}\n\n\tsocket.lastCallTime = now;\n\treturn false;\n};\n\nmodule.exports = ratelimit;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/middleware/render.js":"'use strict';\n\nvar async = require('async');\nvar nconf = require('nconf');\nvar validator = require('validator');\n\nvar plugins = require('../plugins');\nvar translator = require('../../public/src/modules/translator');\n\nmodule.exports = function (middleware) {\n\n\tmiddleware.processRender = function (req, res, next) {\n\t\t// res.render post-processing, modified from here: https://gist.github.com/mrlannigan/5051687\n\t\tvar render = res.render;\n\t\tres.render = function (template, options, fn) {\n\t\t\tvar self = this;\n\t\t\tvar req = this.req;\n\t\t\tvar defaultFn = function (err, str) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn next(err);\n\t\t\t\t}\n\t\t\t\tself.send(str);\n\t\t\t};\n\n\t\t\toptions = options || {};\n\t\t\tif ('function' === typeof options) {\n\t\t\t\tfn = options;\n\t\t\t\toptions = {};\n\t\t\t}\n\t\t\tif ('function' !== typeof fn) {\n\t\t\t\tfn = defaultFn;\n\t\t\t}\n\n\t\t\tvar ajaxifyData;\n\t\t\tasync.waterfall([\n\t\t\t\tfunction (next) {\n\t\t\t\t\tplugins.fireHook('filter:' + template + '.build', {req: req, res: res, templateData: options}, next);\n\t\t\t\t},\n\t\t\t\tfunction (data, next) {\n\t\t\t\t\toptions = data.templateData;\n\n\t\t\t\t\toptions.loggedIn = !!req.uid;\n\t\t\t\t\toptions.relative_path = nconf.get('relative_path');\n\t\t\t\t\toptions.template = {name: template};\n\t\t\t\t\toptions.template[template] = true;\n\t\t\t\t\toptions.url = (req.baseUrl + req.path).replace(/^\\/api/, '');\n\t\t\t\t\toptions.bodyClass = buildBodyClass(req);\n\n\t\t\t\t\tres.locals.template = template;\n\t\t\t\t\toptions._locals = undefined;\n\n\t\t\t\t\tif (res.locals.isAPI) {\n\t\t\t\t\t\tif (req.route && req.route.path === '/api/') {\n\t\t\t\t\t\t\toptions.title = '[[pages:home]]';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn res.json(options);\n\t\t\t\t\t}\n\n\t\t\t\t\tajaxifyData = JSON.stringify(options).replace(/<\\//g, '<\\\\/');\n\n\t\t\t\t\tasync.parallel({\n\t\t\t\t\t\theader: function (next) {\n\t\t\t\t\t\t\trenderHeaderFooter('renderHeader', req, res, options, next);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcontent: function (next) {\n\t\t\t\t\t\t\trender.call(self, template, options, next);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfooter: function (next) {\n\t\t\t\t\t\t\trenderHeaderFooter('renderFooter', req, res, options, next);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, next);\n\t\t\t\t},\n\t\t\t\tfunction (results, next) {\n\t\t\t\t\tvar str = results.header +\n\t\t\t\t\t\t(res.locals.postHeader || '') +\n\t\t\t\t\t\tresults.content +\n\t\t\t\t\t\t(res.locals.preFooter || '') +\n\t\t\t\t\t\tresults.footer;\n\n\t\t\t\t\ttranslate(str, req, res, next);\n\t\t\t\t},\n\t\t\t\tfunction (translated, next) {\n\t\t\t\t\tnext(null, translated + '<script id=\"ajaxify-data\" type=\"application/json\">' + ajaxifyData + '</script>');\n\t\t\t\t}\n\t\t\t], fn);\n\t\t};\n\n\t\tnext();\n\t};\n\n\tfunction renderHeaderFooter(method, req, res, options, next) {\n\t\tif (res.locals.renderHeader) {\n\t\t\tmiddleware[method](req, res, options, next);\n\t\t} else if (res.locals.renderAdminHeader) {\n\t\t\tmiddleware.admin[method](req, res, options, next);\n\t\t} else {\n\t\t\tnext(null, '');\n\t\t}\n\t}\n\n\tfunction translate(str, req, res, next) {\n\t\tvar language = res.locals.config && res.locals.config.userLang || 'en-GB';\n\t\tlanguage = req.query.lang ? validator.escape(String(req.query.lang)) : language;\n\t\ttranslator.translate(str, language, function (translated) {\n\t\t\tnext(null, translator.unescape(translated));\n\t\t});\n\t}\n\n\tfunction buildBodyClass(req) {\n\t\tvar clean = req.path.replace(/^\\/api/, '').replace(/^\\/|\\/$/g, '');\n\t\tvar parts = clean.split('/').slice(0, 3);\n\t\tparts.forEach(function (p, index) {\n\t\t\tparts[index] = index ? parts[0] + '-' + p : 'page-' + (p || 'home');\n\t\t});\n\t\treturn parts.join(' ');\n\t}\n\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/middleware/user.js":"'use strict';\n\nvar async = require('async');\nvar nconf =  require('nconf');\n\nvar meta = require('../meta');\nvar user = require('../user');\nvar privileges = require('../privileges');\n\nvar controllers = {\n\thelpers: require('../controllers/helpers')\n};\n\nmodule.exports = function (middleware) {\n\n\tmiddleware.checkGlobalPrivacySettings = function (req, res, next) {\n\t\tif (!req.user && !!parseInt(meta.config.privateUserInfo, 10)) {\n\t\t\treturn controllers.helpers.notAllowed(req, res);\n\t\t}\n\n\t\tnext();\n\t};\n\n\tmiddleware.checkAccountPermissions = function (req, res, next) {\n\t\t// This middleware ensures that only the requested user and admins can pass\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tmiddleware.authenticate(req, res, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tuser.getUidByUserslug(req.params.userslug, next);\n\t\t\t},\n\t\t\tfunction (uid, next) {\n\t\t\t\tprivileges.users.canEdit(req.uid, uid, next);\n\t\t\t},\n\t\t\tfunction (allowed, next) {\n\t\t\t\tif (allowed) {\n\t\t\t\t\treturn next(null, allowed);\n\t\t\t\t}\n\n\t\t\t\t// For the account/info page only, allow plain moderators through\n\t\t\t\tif (/user\\/.+\\/info$/.test(req.path)) {\n\t\t\t\t\tuser.isModeratorOfAnyCategory(req.uid, next);\n\t\t\t\t} else {\n\t\t\t\t\tnext(null, false);\n\t\t\t\t}\n\t\t\t}\n\t\t], function (err, allowed) {\n\t\t\tif (err || allowed) {\n\t\t\t\treturn next(err);\n\t\t\t}\n\t\t\tcontrollers.helpers.notAllowed(req, res);\n\t\t});\n\t};\n\n\tmiddleware.redirectToAccountIfLoggedIn = function (req, res, next) {\n\t\tif (req.session.forceLogin) {\n\t\t\treturn next();\n\t\t}\n\n\t\tif (!req.user) {\n\t\t\treturn next();\n\t\t}\n\t\tuser.getUserField(req.user.uid, 'userslug', function (err, userslug) {\n\t\t\tif (err) {\n\t\t\t\treturn next(err);\n\t\t\t}\n\t\t\tcontrollers.helpers.redirect(res, '/user/' + userslug);\n\t\t});\n\t};\n\n\tmiddleware.redirectUidToUserslug = function (req, res, next) {\n\t\tvar uid = parseInt(req.params.uid, 10);\n\t\tif (!uid) {\n\t\t\treturn next();\n\t\t}\n\t\tuser.getUserField(uid, 'userslug', function (err, userslug) {\n\t\t\tif (err || !userslug) {\n\t\t\t\treturn next(err);\n\t\t\t}\n\n\t\t\tvar path = req.path.replace(/^\\/api/, '')\n\t\t\t\t\t.replace('uid', 'user')\n\t\t\t\t\t.replace(uid, function () { return userslug; });\n\t\t\tcontrollers.helpers.redirect(res, path);\n\t\t});\n\t};\n\n\tmiddleware.isAdmin = function (req, res, next) {\n\t\tif (!req.uid) {\n\t\t\treturn controllers.helpers.notAllowed(req, res);\n\t\t}\n\n\t\tuser.isAdministrator(req.uid, function (err, isAdmin) {\n\t\t\tif (err) {\n\t\t\t\treturn next(err);\n\t\t\t}\n\n\t\t\tif (isAdmin) {\n\t\t\t\tuser.hasPassword(req.uid, function (err, hasPassword) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!hasPassword) {\n\t\t\t\t\t\treturn next();\n\t\t\t\t\t}\n\n\t\t\t\t\tvar loginTime = req.session.meta ? req.session.meta.datetime : 0;\n\t\t\t\t\tif (loginTime && parseInt(loginTime, 10) > Date.now() - 3600000) {\n\t\t\t\t\t\tvar timeLeft = parseInt(loginTime, 10) - (Date.now() - 3600000);\n\t\t\t\t\t\tif (timeLeft < 300000) {\n\t\t\t\t\t\t\treq.session.meta.datetime += 300000;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn next();\n\t\t\t\t\t}\n\n\t\t\t\t\treq.session.returnTo = req.path.replace(/^\\/api/, '');\n\t\t\t\t\treq.session.forceLogin = 1;\n\t\t\t\t\tif (res.locals.isAPI) {\n\t\t\t\t\t\tres.status(401).json({});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres.redirect(nconf.get('relative_path') + '/login');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (res.locals.isAPI) {\n\t\t\t\treturn controllers.helpers.notAllowed(req, res);\n\t\t\t}\n\n\t\t\tmiddleware.buildHeader(req, res, function () {\n\t\t\t\tcontrollers.helpers.notAllowed(req, res);\n\t\t\t});\n\t\t});\n\t};\n\n\tmiddleware.requireUser = function (req, res, next) {\n\t\tif (req.user) {\n\t\t\treturn next();\n\t\t}\n\n\t\tres.status(403).render('403', {title: '[[global:403.title]]'});\n\t};\n\n\tmiddleware.registrationComplete = function (req, res, next) {\n\t\t// If the user's session contains registration data, redirect the user to complete registration\n\t\tif (!req.session.hasOwnProperty('registration')) {\n\t\t\treturn next();\n\t\t} else {\n\t\t\tif (!req.path.endsWith('/register/complete')) {\n\t\t\t\tcontrollers.helpers.redirect(res, '/register/complete');\n\t\t\t} else {\n\t\t\t\treturn next();\n\t\t\t}\n\t\t}\n\t};\n\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/navigation/admin.js":"\"use strict\";\n\n\n\nvar async = require('async');\nvar plugins = require('../plugins');\nvar db = require('../database');\nvar translator = require('../../public/src/modules/translator');\nvar pubsub = require('../pubsub');\n\nvar admin = {};\nadmin.cache = null;\n\npubsub.on('admin:navigation:save', function () {\n\tadmin.cache = null;\n});\n\nadmin.save = function (data, callback) {\n\tvar order = Object.keys(data);\n\tvar items = data.map(function (item, idx) {\n\t\tvar data = {};\n\n\t\tfor (var i in item) {\n\t\t\tif (item.hasOwnProperty(i)) {\n\t\t\t\titem[i] = typeof item[i] === 'string' ? translator.escape(item[i]) : item[i];\n\t\t\t}\n\t\t}\n\n\t\tdata[idx] = item;\n\t\treturn JSON.stringify(data);\n\t});\n\n\tadmin.cache = null;\n\tpubsub.publish('admin:navigation:save');\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tdb.delete('navigation:enabled', next);\n\t\t},\n\t\tfunction (next) {\n\t\t\tdb.sortedSetAdd('navigation:enabled', order, items, next);\n\t\t}\n\t], callback);\n};\n\nadmin.getAdmin = function (callback) {\n\tasync.parallel({\n\t\tenabled: admin.get,\n\t\tavailable: getAvailable\n\t}, callback);\n};\n\nadmin.get = function (callback) {\n\tdb.getSortedSetRange('navigation:enabled', 0, -1, function (err, data) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tdata = data.map(function (item, idx) {\n\t\t\treturn JSON.parse(item)[idx];\n\t\t});\n\n\t\tcallback(null, data);\n\t});\n};\n\nfunction getAvailable(callback) {\n\tvar core = require('../../install/data/navigation.json').map(function (item) {\n\t\titem.core = true;\n\t\treturn item;\n\t});\n\n\tplugins.fireHook('filter:navigation.available', core, callback);\n}\n\nmodule.exports = admin;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/navigation/index.js":"\"use strict\";\n\nvar nconf = require('nconf');\nvar admin = require('./admin');\nvar translator = require('../../public/src/modules/translator');\n\nvar navigation = {};\n\nnavigation.get = function (callback) {\n\tif (admin.cache) {\n\t\treturn callback(null, admin.cache);\n\t}\n\n\tadmin.get(function (err, data) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tdata = data.filter(function (item) {\n\t\t\treturn item && item.enabled;\n\t\t}).map(function (item) {\n\t\t\tif (!item.route.startsWith('http')) {\n\t\t\t\titem.route = nconf.get('relative_path') + item.route;\n\t\t\t}\n\n\t\t\tfor (var i in item) {\n\t\t\t\tif (item.hasOwnProperty(i)) {\n\t\t\t\t\titem[i] = translator.unescape(item[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn item;\n\t\t});\n\n\t\tadmin.cache = data;\n\n\t\tcallback(null, data);\n\t});\n};\n\n\nmodule.exports = navigation;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/plugins/hooks.js":"'use strict';\n\nvar winston = require('winston'),\n\tasync = require('async');\n\nmodule.exports = function (Plugins) {\n\tPlugins.deprecatedHooks = {\n\t\t'filter:user.custom_fields': null,\t// remove in v1.1.0\n\t\t'filter:post.save': 'filter:post.create',\n\t\t'filter:user.profileLinks': 'filter:user.profileMenu'\n\t};\n\t/*\n\t\t`data` is an object consisting of (* is required):\n\t\t\t`data.hook`*, the name of the NodeBB hook\n\t\t\t`data.method`*, the method called in that plugin\n\t\t\t`data.priority`, the relative priority of the method when it is eventually called (default: 10)\n\t*/\n\tPlugins.registerHook = function (id, data, callback) {\n\t\tcallback = callback || function () {};\n\t\tfunction register() {\n\t\t\tPlugins.loadedHooks[data.hook] = Plugins.loadedHooks[data.hook] || [];\n\t\t\tPlugins.loadedHooks[data.hook].push(data);\n\n\t\t\tcallback();\n\t\t}\n\n\t\tif (!data.hook) {\n\t\t\twinston.warn('[plugins/' + id + '] registerHook called with invalid data.hook', data);\n\t\t\treturn callback();\n\t\t}\n\n\t\tvar method;\n\n\t\tif (Object.keys(Plugins.deprecatedHooks).indexOf(data.hook) !== -1) {\n\t\t\twinston.warn('[plugins/' + id + '] Hook `' + data.hook + '` is deprecated, ' +\n\t\t\t\t(Plugins.deprecatedHooks[data.hook] ?\n\t\t\t\t\t'please use `' + Plugins.deprecatedHooks[data.hook] + '` instead.' :\n\t\t\t\t\t'there is no alternative.'\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\t// handle hook's startsWith, i.e. action:homepage.get\n\t\t\tvar parts = data.hook.split(':');\n\t\t\tif (parts.length > 2) {\n\t\t\t\tparts.pop();\n\t\t\t}\n\t\t\tvar hook = parts.join(':');\n\t\t}\n\n\t\tif (data.hook && data.method) {\n\t\t\tdata.id = id;\n\t\t\tif (!data.priority) {\n\t\t\t\tdata.priority = 10;\n\t\t\t}\n\n\t\t\tif (typeof data.method === 'string' && data.method.length > 0) {\n\t\t\t\tmethod = data.method.split('.').reduce(function (memo, prop) {\n\t\t\t\t\tif (memo && memo[prop]) {\n\t\t\t\t\t\treturn memo[prop];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Couldn't find method by path, aborting\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}, Plugins.libraries[data.id]);\n\n\t\t\t\t// Write the actual method reference to the hookObj\n\t\t\t\tdata.method = method;\n\n\t\t\t\tregister();\n\t\t\t} else if (typeof data.method === 'function') {\n\t\t\t\tregister();\n\t\t\t} else {\n\t\t\t\twinston.warn('[plugins/' + id + '] Hook method mismatch: ' + data.hook + ' => ' + data.method);\n\t\t\t\treturn callback();\n\t\t\t}\n\t\t}\n\t};\n\n\tPlugins.fireHook = function (hook, params, callback) {\n\t\tcallback = typeof callback === 'function' ? callback : function () {};\n\n\t\tvar hookList = Plugins.loadedHooks[hook];\n\t\tvar hookType = hook.split(':')[0];\n\n\t\tswitch (hookType) {\n\t\t\tcase 'filter':\n\t\t\t\tfireFilterHook(hook, hookList, params, callback);\n\t\t\t\tbreak;\n\t\t\tcase 'action':\n\t\t\t\tfireActionHook(hook, hookList, params, callback);\n\t\t\t\tbreak;\n\t\t\tcase 'static':\n\t\t\t\tfireStaticHook(hook, hookList, params, callback);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\twinston.warn('[plugins] Unknown hookType: ' + hookType + ', hook : ' + hook);\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tfunction fireFilterHook(hook, hookList, params, callback) {\n\t\tif (!Array.isArray(hookList) || !hookList.length) {\n\t\t\treturn callback(null, params);\n\t\t}\n\n\t\tasync.reduce(hookList, params, function (params, hookObj, next) {\n\t\t\tif (typeof hookObj.method !== 'function') {\n\t\t\t\tif (global.env === 'development') {\n\t\t\t\t\twinston.warn('[plugins] Expected method for hook \\'' + hook + '\\' in plugin \\'' + hookObj.id + '\\' not found, skipping.');\n\t\t\t\t}\n\t\t\t\treturn next(null, params);\n\t\t\t}\n\n\t\t\thookObj.method(params, next);\n\t\t}, function (err, values) {\n\t\t\tif (err) {\n\t\t\t\twinston.error('[plugins] ' + hook + ',  ' + err.message);\n\t\t\t}\n\n\t\t\tcallback(err, values);\n\t\t});\n\t}\n\n\tfunction fireActionHook(hook, hookList, params, callback) {\n\t\tif (!Array.isArray(hookList) || !hookList.length) {\n\t\t\treturn callback();\n\t\t}\n\t\tasync.each(hookList, function (hookObj, next) {\n\n\t\t\tif (typeof hookObj.method !== 'function') {\n\t\t\t\tif (global.env === 'development') {\n\t\t\t\t\twinston.warn('[plugins] Expected method for hook \\'' + hook + '\\' in plugin \\'' + hookObj.id + '\\' not found, skipping.');\n\t\t\t\t}\n\t\t\t\treturn next();\n\t\t\t}\n\n\t\t\thookObj.method(params);\n\t\t\tnext();\n\t\t}, callback);\n\t}\n\n\tfunction fireStaticHook(hook, hookList, params, callback) {\n\t\tif (!Array.isArray(hookList) || !hookList.length) {\n\t\t\treturn callback();\n\t\t}\n\t\tasync.each(hookList, function (hookObj, next) {\n\t\t\tif (typeof hookObj.method === 'function') {\n\t\t\t\tvar timedOut = false;\n\n\t\t\t\tvar timeoutId = setTimeout(function () {\n\t\t\t\t\twinston.warn('[plugins] Callback timed out, hook \\'' + hook + '\\' in plugin \\'' + hookObj.id + '\\'');\n\t\t\t\t\ttimedOut = true;\n\t\t\t\t\tnext();\n\t\t\t\t}, 5000);\n\n\t\t\t\ttry {\n\t\t\t\t\thookObj.method(params, function () {\n\t\t\t\t\t\tclearTimeout(timeoutId);\n\t\t\t\t\t\tif (!timedOut) {\n\t\t\t\t\t\t\tnext.apply(null, arguments);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} catch(err) {\n\t\t\t\t\twinston.error('[plugins] Error executing \\'' + hook + '\\' in plugin \\'' + hookObj.id + '\\'');\n\t\t\t\t\twinston.error(err);\n\t\t\t\t\tclearTimeout(timeoutId);\n\t\t\t\t\tnext();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnext();\n\t\t\t}\n\t\t}, callback);\n\t}\n\n\tPlugins.hasListeners = function (hook) {\n\t\treturn !!(Plugins.loadedHooks[hook] && Plugins.loadedHooks[hook].length > 0);\n\t};\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/plugins/load.js":"'use strict';\n\nvar db = require('../database');\nvar fs = require('fs');\nvar path = require('path');\nvar semver = require('semver');\nvar async = require('async');\nvar winston = require('winston');\nvar nconf = require('nconf');\nvar _ = require('underscore');\nvar file = require('../file');\n\nvar utils = require('../../public/src/utils');\nvar meta = require('../meta');\n\n\nmodule.exports = function (Plugins) {\n\tPlugins.getPluginPaths = function (callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.getSortedSetRange('plugins:active', 0, -1, next);\n\t\t\t},\n\t\t\tfunction (plugins, next) {\n\t\t\t\tif (!Array.isArray(plugins)) {\n\t\t\t\t\treturn next();\n\t\t\t\t}\n\n\t\t\t\tplugins = plugins.filter(function (plugin) {\n\t\t\t\t\treturn plugin && typeof plugin === 'string';\n\t\t\t\t}).map(function (plugin) {\n\t\t\t\t\treturn path.join(__dirname, '../../node_modules/', plugin);\n\t\t\t\t});\n\n\t\t\t\tasync.filter(plugins, file.exists, function (plugins) {\n\t\t\t\t\tnext(null, plugins);\n\t\t\t\t});\n\t\t\t},\n\t\t], callback);\n\t};\n\n\tPlugins.prepareForBuild = function (callback) {\n\t\tasync.waterfall([\n\t\t\tasync.apply(Plugins.getPluginPaths),\n\t\t\tfunction (paths, next) {\n\t\t\t\tasync.map(paths, function (path, next) {\n\t\t\t\t\tPlugins.loadPluginInfo(path, next);\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (plugins, next) {\n\t\t\t\tasync.each(plugins, function (pluginData, next) {\n\t\t\t\t\tasync.parallel([\n\t\t\t\t\t\tasync.apply(mapFiles, pluginData, 'css', 'cssFiles'),\n\t\t\t\t\t\tasync.apply(mapFiles, pluginData, 'less', 'lessFiles'),\n\t\t\t\t\t\tasync.apply(mapClientSideScripts, pluginData)\n\t\t\t\t\t], next);\n\t\t\t\t}, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tPlugins.loadPlugin = function (pluginPath, callback) {\n\t\tPlugins.loadPluginInfo(pluginPath, function (err, pluginData) {\n\t\t\tif (err) {\n\t\t\t\tif (err.message === '[[error:parse-error]]') {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\treturn callback(pluginPath.match('nodebb-theme') ? null : err);\n\t\t\t}\n\n\t\t\tcheckVersion(pluginData);\n\n\t\t\tasync.parallel([\n\t\t\t\tfunction (next) {\n\t\t\t\t\tregisterHooks(pluginData, pluginPath, next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tmapStaticDirectories(pluginData, pluginPath, next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tmapFiles(pluginData, 'css', 'cssFiles', next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tmapFiles(pluginData, 'less', 'lessFiles', next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tmapClientSideScripts(pluginData, next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tmapClientModules(pluginData, next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tloadLanguages(pluginData, next);\n\t\t\t\t}\n\t\t\t], function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\twinston.verbose('[plugins] Could not load plugin : ' + pluginData.id);\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\twinston.verbose('[plugins] Loaded plugin: ' + pluginData.id);\n\t\t\t\tcallback();\n\t\t\t});\n\t\t});\n\t};\n\n\tfunction checkVersion(pluginData) {\n\t\tfunction add() {\n\t\t\tif (Plugins.versionWarning.indexOf(pluginData.id) === -1) {\n\t\t\t\tPlugins.versionWarning.push(pluginData.id);\n\t\t\t}\n\t\t}\n\n\t\tif (pluginData.nbbpm && pluginData.nbbpm.compatibility && semver.validRange(pluginData.nbbpm.compatibility)) {\n\t\t\tif (!semver.satisfies(nconf.get('version'), pluginData.nbbpm.compatibility)) {\n\t\t\t\tadd();\n\t\t\t}\n\t\t} else {\n\t\t\tadd();\n\t\t}\n\t}\n\n\tfunction registerHooks(pluginData, pluginPath, callback) {\n\t\tif (!pluginData.library) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tvar libraryPath = path.join(pluginPath, pluginData.library);\n\n\t\ttry {\n\t\t\tif (!Plugins.libraries[pluginData.id]) {\n\t\t\t\tPlugins.requireLibrary(pluginData.id, libraryPath);\n\t\t\t}\n\n\t\t\tif (Array.isArray(pluginData.hooks) && pluginData.hooks.length > 0) {\n\t\t\t\tasync.each(pluginData.hooks, function (hook, next) {\n\t\t\t\t\tPlugins.registerHook(pluginData.id, hook, next);\n\t\t\t\t}, callback);\n\t\t\t} else {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t} catch(err) {\n\t\t\twinston.error(err.stack);\n\t\t\twinston.warn('[plugins] Unable to parse library for: ' + pluginData.id);\n\t\t\tcallback();\n\t\t}\n\t}\n\n\tfunction mapStaticDirectories(pluginData, pluginPath, callback) {\n\t\tfunction mapStaticDirs(mappedPath, callback) {\n\t\t\tif (Plugins.staticDirs[mappedPath]) {\n\t\t\t\twinston.warn('[plugins/' + pluginData.id + '] Mapped path (' + mappedPath + ') already specified!');\n\t\t\t\tcallback();\n\t\t\t} else if (!validMappedPath.test(mappedPath)) {\n\t\t\t\twinston.warn('[plugins/' + pluginData.id + '] Invalid mapped path specified: ' + mappedPath + '. Path must adhere to: ' + validMappedPath.toString());\n\t\t\t\tcallback();\n\t\t\t} else {\n\t\t\t\tvar realPath = pluginData.staticDirs[mappedPath];\n\t\t\t\tvar staticDir = path.join(pluginPath, realPath);\n\n\t\t\t\tfile.exists(staticDir, function (exists) {\n\t\t\t\t\tif (exists) {\n\t\t\t\t\t\tPlugins.staticDirs[pluginData.id + '/' + mappedPath] = staticDir;\n\t\t\t\t\t} else {\n\t\t\t\t\t\twinston.warn('[plugins/' + pluginData.id + '] Mapped path \\'' + mappedPath + ' => ' + staticDir + '\\' not found.');\n\t\t\t\t\t}\n\t\t\t\t\tcallback();\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tvar validMappedPath = /^[\\w\\-_]+$/;\n\n\t\tpluginData.staticDirs = pluginData.staticDirs || {};\n\n\t\tvar dirs = Object.keys(pluginData.staticDirs);\n\t\tasync.each(dirs, mapStaticDirs, callback);\n\t}\n\n\tfunction mapFiles(pluginData, type, globalArray, callback) {\n\t\tif (Array.isArray(pluginData[type])) {\n\t\t\tif (global.env === 'development') {\n\t\t\t\twinston.verbose('[plugins] Found ' + pluginData[type].length + ' ' + type + ' file(s) for plugin ' + pluginData.id);\n\t\t\t}\n\n\t\t\tPlugins[globalArray] = Plugins[globalArray].concat(pluginData[type].map(function (file) {\n\t\t\t\treturn path.join(pluginData.id, file);\n\t\t\t}));\n\t\t}\n\t\tcallback();\n\t}\n\n\tfunction mapClientSideScripts(pluginData, callback) {\n\t\tif (Array.isArray(pluginData.scripts)) {\n\t\t\tif (global.env === 'development') {\n\t\t\t\twinston.verbose('[plugins] Found ' + pluginData.scripts.length + ' js file(s) for plugin ' + pluginData.id);\n\t\t\t}\n\n\t\t\tPlugins.clientScripts = Plugins.clientScripts.concat(pluginData.scripts.map(function (file) {\n\t\t\t\treturn resolveModulePath(path.join(__dirname, '../../node_modules/', pluginData.id, file), file);\n\t\t\t})).filter(Boolean);\n\t\t}\n\n\t\tif (Array.isArray(pluginData.acpScripts)) {\n\t\t\tif (global.env === 'development') {\n\t\t\t\twinston.verbose('[plugins] Found ' + pluginData.acpScripts.length + ' ACP js file(s) for plugin ' + pluginData.id);\n\t\t\t}\n\n\t\t\tPlugins.acpScripts = Plugins.acpScripts.concat(pluginData.acpScripts.map(function (file) {\n\t\t\t\treturn resolveModulePath(path.join(__dirname, '../../node_modules/', pluginData.id, file), file);\n\t\t\t})).filter(Boolean);\n\t\t}\n\n\t\tcallback();\n\t}\n\n\tfunction mapClientModules(pluginData, callback) {\n\t\tif (!pluginData.hasOwnProperty('modules')) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tvar modules = {};\n\n\t\tif (Array.isArray(pluginData.modules)) {\n\t\t\tif (global.env === 'development') {\n\t\t\t\twinston.verbose('[plugins] Found ' + pluginData.modules.length + ' AMD-style module(s) for plugin ' + pluginData.id);\n\t\t\t}\n\n\t\t\tvar strip = pluginData.hasOwnProperty('modulesStrip') ? parseInt(pluginData.modulesStrip, 10) : 0;\n\n\t\t\tpluginData.modules.forEach(function (file) {\n\t\t\t\tif (strip) {\n\t\t\t\t\tmodules[file.replace(new RegExp('\\.?(\\/[^\\/]+){' + strip + '}\\/'), '')] = path.join('./node_modules/', pluginData.id, file);\n\t\t\t\t} else {\n\t\t\t\t\tmodules[path.basename(file)] = path.join('./node_modules/', pluginData.id, file);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmeta.js.scripts.modules = _.extend(meta.js.scripts.modules, modules);\n\t\t} else {\n\t\t\tvar keys = Object.keys(pluginData.modules);\n\n\t\t\tif (global.env === 'development') {\n\t\t\t\twinston.verbose('[plugins] Found ' + keys.length + ' AMD-style module(s) for plugin ' + pluginData.id);\n\t\t\t}\n\n\t\t\tfor (var name in pluginData.modules) {\n\t\t\t\tif (pluginData.modules.hasOwnProperty(name)) {\n\t\t\t\t\tmodules[name] = path.join('./node_modules/', pluginData.id, pluginData.modules[name]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmeta.js.scripts.modules = _.extend(meta.js.scripts.modules, modules);\n\t\t}\n\n\t\tcallback();\n\t}\n\n\tfunction loadLanguages(pluginData, callback) {\n\t\tif (typeof pluginData.languages !== 'string') {\n\t\t\treturn callback();\n\t\t}\n\n\t\tvar pathToFolder = path.join(__dirname, '../../node_modules/', pluginData.id, pluginData.languages);\n\t\tvar defaultLang = (pluginData.defaultLang || 'en_GB').replace('_', '-').replace('@', '-x-');\n\n\t\tutils.walk(pathToFolder, function (err, languages) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tasync.each(languages, function (pathToLang, next) {\n\t\t\t\tfs.readFile(pathToLang, function (err, file) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\t\t\t\t\tvar data;\n\t\t\t\t\tvar language = path.dirname(pathToLang).split(/[\\/\\\\]/).pop().replace('_', '-').replace('@', '-x-');\n\t\t\t\t\tvar namespace = path.basename(pathToLang, '.json');\n\t\t\t\t\tvar langNamespace = language + '/' + namespace;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata = JSON.parse(file.toString());\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\twinston.error('[plugins] Unable to parse custom language file: ' + pathToLang + '\\r\\n' + err.stack);\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tPlugins.customLanguages[langNamespace] = Plugins.customLanguages[langNamespace] || {};\n\t\t\t\t\tObject.assign(Plugins.customLanguages[langNamespace], data);\n\n\t\t\t\t\tif (defaultLang && defaultLang === language) {\n\t\t\t\t\t\tPlugins.languageCodes.filter(function (lang) {\n\t\t\t\t\t\t\treturn defaultLang !== lang;\n\t\t\t\t\t\t}).forEach(function (lang) {\n\t\t\t\t\t\t\tvar langNS = lang + '/' + namespace;\n\t\t\t\t\t\t\tPlugins.customLanguages[langNS] = Object.assign(Plugins.customLanguages[langNS] || {}, data);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tnext();\n\t\t\t\t});\n\t\t\t}, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\tcallback();\n\t\t\t});\n\t\t});\n\t}\n\n\tfunction resolveModulePath(fullPath, relPath) {\n\t\t/**\n\t\t  * With npm@3, dependencies can become flattened, and appear at the root level.\n\t\t  * This method resolves these differences if it can.\n\t\t  */\n\t\tvar matches = fullPath.match(/node_modules/g);\n\t\tvar atRootLevel = !matches || matches.length === 1;\n\n\t\ttry {\n\t\t\tfs.statSync(fullPath);\n\t\t\twinston.verbose('[plugins/load] File found: ' + fullPath);\n\t\t\treturn fullPath;\n\t\t} catch (e) {\n\t\t\t// File not visible to the calling process, ascend to root level if possible and try again\n\t\t\tif (!atRootLevel && relPath) {\n\t\t\t\twinston.verbose('[plugins/load] File not found: ' + fullPath + ' (Ascending)');\n\t\t\t\treturn resolveModulePath(path.join(__dirname, '../..', relPath));\n\t\t\t} else {\n\t\t\t\t// Already at root level, file was simply not found\n\t\t\t\twinston.warn('[plugins/load] File not found: ' + fullPath + ' (Ignoring)');\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\tPlugins.loadPluginInfo = function (pluginPath, callback) {\n\t\tasync.parallel({\n\t\t\tpackage: function (next) {\n\t\t\t\tfs.readFile(path.join(pluginPath, 'package.json'), next);\n\t\t\t},\n\t\t\tplugin: function (next) {\n\t\t\t\tfs.readFile(path.join(pluginPath, 'plugin.json'), next);\n\t\t\t}\n\t\t}, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tvar pluginData;\n\t\t\tvar packageData;\n\t\t\ttry {\n\t\t\t\tpluginData = JSON.parse(results.plugin);\n\t\t\t\tpackageData = JSON.parse(results.package);\n\n\t\t\t\tpluginData.id = packageData.name;\n\t\t\t\tpluginData.name = packageData.name;\n\t\t\t\tpluginData.description = packageData.description;\n\t\t\t\tpluginData.version = packageData.version;\n\t\t\t\tpluginData.repository = packageData.repository;\n\t\t\t\tpluginData.nbbpm = packageData.nbbpm;\n\t\t\t} catch(err) {\n\t\t\t\tvar pluginDir = pluginPath.split(path.sep);\n\t\t\t\tpluginDir = pluginDir[pluginDir.length - 1];\n\n\t\t\t\twinston.error('[plugins/' + pluginDir + '] Error in plugin.json or package.json! ' + err.message);\n\n\t\t\t\treturn callback(new Error('[[error:parse-error]]'));\n\t\t\t}\n\t\t\tcallback(null, pluginData);\n\t\t});\n\t};\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/posts/bookmarks.js":"'use strict';\n\nvar async = require('async');\n\nvar db = require('../database');\nvar plugins = require('../plugins');\n\nmodule.exports = function (Posts) {\n\n\tPosts.bookmark = function (pid, uid, callback) {\n\t\ttoggleBookmark('bookmark', pid, uid, callback);\n\t};\n\n\tPosts.unbookmark = function (pid, uid, callback) {\n\t\ttoggleBookmark('unbookmark', pid, uid, callback);\n\t};\n\n\tfunction toggleBookmark(type, pid, uid, callback) {\n\t\tif (!parseInt(uid, 10)) {\n\t\t\treturn callback(new Error('[[error:not-logged-in]]'));\n\t\t}\n\t\tvar isBookmarking = type === 'bookmark';\n\n\t\tasync.parallel({\n\t\t\towner: function (next) {\n\t\t\t\tPosts.getPostField(pid, 'uid', next);\n\t\t\t},\n\t\t\tpostData: function (next) {\n\t\t\t\tPosts.getPostFields(pid, ['pid', 'uid'], next);\n\t\t\t},\n\t\t\thasBookmarked: function (next) {\n\t\t\t\tPosts.hasBookmarked(pid, uid, next);\n\t\t\t}\n\t\t}, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tif (isBookmarking && results.hasBookmarked) {\n\t\t\t\treturn callback(new Error('[[error:already-bookmarked]]'));\n\t\t\t}\n\n\t\t\tif (!isBookmarking && !results.hasBookmarked) {\n\t\t\t\treturn callback(new Error('[[error:already-unbookmarked]]'));\n\t\t\t}\n\n\t\t\tasync.waterfall([\n\t\t\t\tfunction (next) {\n\t\t\t\t\tif (isBookmarking) {\n\t\t\t\t\t\tdb.sortedSetAdd('uid:' + uid + ':bookmarks', Date.now(), pid, next);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdb.sortedSetRemove('uid:' + uid + ':bookmarks', pid, next);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tdb[isBookmarking ? 'setAdd' : 'setRemove']('pid:' + pid + ':users_bookmarked', uid, next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tdb.setCount('pid:' + pid + ':users_bookmarked', next);\n\t\t\t\t},\n\t\t\t\tfunction (count, next) {\n\t\t\t\t\tresults.postData.bookmarks = count;\n\t\t\t\t\tPosts.setPostField(pid, 'bookmarks', count, next);\n\t\t\t\t}\n\t\t\t], function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\tvar current = results.hasBookmarked ? 'bookmarked' : 'unbookmarked';\n\n\t\t\t\tplugins.fireHook('action:post.' + type, {\n\t\t\t\t\tpid: pid,\n\t\t\t\t\tuid: uid,\n\t\t\t\t\towner: results.owner,\n\t\t\t\t\tcurrent: current\n\t\t\t\t});\n\n\t\t\t\tcallback(null, {\n\t\t\t\t\tpost: results.postData,\n\t\t\t\t\tisBookmarked: isBookmarking\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tPosts.hasBookmarked = function (pid, uid, callback) {\n\t\tif (!parseInt(uid, 10)) {\n\t\t\tif (Array.isArray(pid)) {\n\t\t\t\tcallback(null, pid.map(function () { return false; }));\n\t\t\t} else {\n\t\t\t\tcallback(null, false);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (Array.isArray(pid)) {\n\t\t\tvar sets = pid.map(function (pid) {\n\t\t\t\treturn 'pid:' + pid + ':users_bookmarked';\n\t\t\t});\n\n\t\t\tdb.isMemberOfSets(sets, uid, callback);\n\t\t} else {\n\t\t\tdb.isSetMember('pid:' + pid + ':users_bookmarked', uid, callback);\n\t\t}\n\t};\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/posts/cache.js":"var\tLRU = require('lru-cache');\nvar meta = require('../meta');\n\nvar cache = LRU({\n\tmax: parseInt(meta.config.postCacheSize, 10) || 1048576,\n\tlength: function (n) { return n.length; },\n\tmaxAge: 1000 * 60 * 60\n});\n\nmodule.exports = cache;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/posts/category.js":"\n'use strict';\n\nvar async = require('async');\nvar _ = require('underscore');\n\nvar db = require('../database');\nvar topics = require('../topics');\n\nmodule.exports = function (Posts) {\n\n\tPosts.getCidByPid = function (pid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tPosts.getPostField(pid, 'tid', next);\n\t\t\t},\n\t\t\tfunction (tid, next) {\n\t\t\t\ttopics.getTopicField(tid, 'cid', next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tPosts.getCidsByPids = function (pids, callback) {\n\t\tvar tids;\n\t\tvar postData;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tPosts.getPostsFields(pids, ['tid'], next);\n\t\t\t},\n\t\t\tfunction (_postData, next) {\n\t\t\t\tpostData = _postData;\n\t\t\t\ttids = postData.map(function (post) {\n\t\t\t\t\treturn post.tid;\n\t\t\t\t}).filter(function (tid, index, array) {\n\t\t\t\t\treturn tid && array.indexOf(tid) === index;\n\t\t\t\t});\n\n\t\t\t\ttopics.getTopicsFields(tids, ['cid'], next);\n\t\t\t},\n\t\t\tfunction (topicData, next) {\n\t\t\t\tvar map = {};\n\t\t\t\ttopicData.forEach(function (topic, index) {\n\t\t\t\t\tif (topic) {\n\t\t\t\t\t\tmap[tids[index]] = topic.cid;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tvar cids = postData.map(function (post) {\n\t\t\t\t\treturn map[post.tid];\n\t\t\t\t});\n\t\t\t\tnext(null, cids);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tPosts.filterPidsByCid = function (pids, cid, callback) {\n\t\tif (!cid) {\n\t\t\treturn callback(null, pids);\n\t\t}\n\n\t\tif (!Array.isArray(cid) || cid.length === 1) {\n\t\t\t// Single cid\n\t\t\tdb.isSortedSetMembers('cid:' + parseInt(cid, 10) + ':pids', pids, function (err, isMembers) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\t\t\t\tpids = pids.filter(function (pid, index) {\n\t\t\t\t\treturn pid && isMembers[index];\n\t\t\t\t});\n\t\t\t\tcallback(null, pids);\n\t\t\t});\n\t\t} else {\n\t\t\t// Multiple cids\n\t\t\tasync.map(cid, function (cid, next) {\n\t\t\t\tPosts.filterPidsByCid(pids, cid, next);\n\t\t\t}, function (err, pidsArr) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\tcallback(null, _.union.apply(_, pidsArr));\n\t\t\t});\n\t\t}\n\t};\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/posts/create.js":"'use strict';\n\nvar async = require('async');\nvar _ = require('underscore');\n\nvar meta = require('../meta');\nvar db = require('../database');\nvar plugins = require('../plugins');\nvar user = require('../user');\nvar topics = require('../topics');\nvar categories = require('../categories');\n\n\nmodule.exports = function (Posts) {\n\n\tPosts.create = function (data, callback) {\n\t\t// This is an internal method, consider using Topics.reply instead\n\t\tvar uid = data.uid;\n\t\tvar tid = data.tid;\n\t\tvar content = data.content.toString();\n\t\tvar timestamp = data.timestamp || Date.now();\n\n\t\tif (!uid && parseInt(uid, 10) !== 0) {\n\t\t\treturn callback(new Error('[[error:invalid-uid]]'));\n\t\t}\n\n\t\tvar postData;\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.incrObjectField('global', 'nextPid', next);\n\t\t\t},\n\t\t\tfunction (pid, next) {\n\n\t\t\t\tpostData = {\n\t\t\t\t\t'pid': pid,\n\t\t\t\t\t'uid': uid,\n\t\t\t\t\t'tid': tid,\n\t\t\t\t\t'content': content,\n\t\t\t\t\t'timestamp': timestamp,\n\t\t\t\t\t'deleted': 0\n\t\t\t\t};\n\n\t\t\t\tif (data.toPid) {\n\t\t\t\t\tpostData.toPid = data.toPid;\n\t\t\t\t}\n\n\t\t\t\tif (data.ip && parseInt(meta.config.trackIpPerPost, 10) === 1) {\n\t\t\t\t\tpostData.ip = data.ip;\n\t\t\t\t}\n\n\t\t\t\tif (data.handle && !parseInt(uid, 10)) {\n\t\t\t\t\tpostData.handle = data.handle;\n\t\t\t\t}\n\n\t\t\t\tplugins.fireHook('filter:post.save', postData, next);\n\t\t\t},\n\t\t\tfunction (postData, next) {\n\t\t\t\tplugins.fireHook('filter:post.create', {post: postData, data: data}, next);\n\t\t\t},\n\t\t\tfunction (data, next) {\n\t\t\t\tpostData = data.post;\n\t\t\t\tdb.setObject('post:' + postData.pid, postData, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tasync.parallel([\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tuser.onNewPostMade(postData, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\ttopics.onNewPostMade(postData, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\ttopics.getTopicFields(tid, ['cid', 'pinned'], function (err, topicData) {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpostData.cid = topicData.cid;\n\t\t\t\t\t\t\tcategories.onNewPostMade(topicData.cid, topicData.pinned, postData, next);\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.sortedSetAdd('posts:pid', timestamp, postData.pid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tif (!postData.toPid) {\n\t\t\t\t\t\t\treturn next(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tasync.parallel([\n\t\t\t\t\t\t\tasync.apply(db.sortedSetAdd, 'pid:' + postData.toPid + ':replies', timestamp, postData.pid),\n\t\t\t\t\t\t\tasync.apply(db.incrObjectField, 'post:' + postData.toPid, 'replies')\n\t\t\t\t\t\t], next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.incrObjectField('global', 'postCount', next);\n\t\t\t\t\t}\n\t\t\t\t], function (err) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\t\t\t\t\tplugins.fireHook('filter:post.get', postData, next);\n\t\t\t\t});\n\t\t\t},\n\t\t\tfunction (postData, next) {\n\t\t\t\tplugins.fireHook('action:post.save', _.clone(postData));\n\t\t\t\tnext(null, postData);\n\t\t\t}\n\t\t], callback);\n\t};\n};\n\n\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/posts/delete.js":"'use strict';\n\nvar async = require('async');\nvar _ = require('underscore');\n\nvar db = require('../database');\nvar topics = require('../topics');\nvar user = require('../user');\nvar notifications = require('../notifications');\nvar plugins = require('../plugins');\n\nmodule.exports = function (Posts) {\n\n\tPosts.delete = function (pid, uid, callback) {\n\t\tvar postData;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tplugins.fireHook('filter:post.delete', {pid: pid, uid: uid}, next);\n\t\t\t},\n\t\t\tfunction (data, next) {\n\t\t\t\tPosts.setPostFields(pid, {deleted: 1, deleterUid: uid}, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tPosts.getPostFields(pid, ['pid', 'tid', 'uid', 'timestamp'], next);\n\t\t\t},\n\t\t\tfunction (_post, next) {\n\t\t\t\tpostData = _post;\n\t\t\t\ttopics.getTopicFields(_post.tid, ['tid', 'cid', 'pinned'], next);\n\t\t\t},\n\t\t\tfunction (topicData, next) {\n\t\t\t\tasync.parallel([\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tupdateTopicTimestamp(topicData, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.sortedSetRemove('cid:' + topicData.cid + ':pids', pid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\ttopics.updateTeaser(postData.tid, next);\n\t\t\t\t\t}\n\t\t\t\t], next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tplugins.fireHook('action:post.delete', pid);\n\t\t\t\tnext(null, postData);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tPosts.restore = function (pid, uid, callback) {\n\t\tvar postData;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tplugins.fireHook('filter:post.restore', {pid: pid, uid: uid}, next);\n\t\t\t},\n\t\t\tfunction (data, next) {\n\t\t\t\tPosts.setPostFields(pid, {deleted: 0, deleterUid: 0}, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tPosts.getPostFields(pid, ['pid', 'tid', 'uid', 'content', 'timestamp'], next);\n\t\t\t},\n\t\t\tfunction (_post, next) {\n\t\t\t\tpostData = _post;\n\t\t\t\ttopics.getTopicFields(_post.tid, ['tid', 'cid', 'pinned'], next);\n\t\t\t},\n\t\t\tfunction (topicData, next) {\n\t\t\t\tpostData.cid = topicData.cid;\n\t\t\t\tasync.parallel([\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tupdateTopicTimestamp(topicData, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.sortedSetAdd('cid:' + topicData.cid + ':pids', postData.timestamp, pid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\ttopics.updateTeaser(postData.tid, next);\n\t\t\t\t\t}\n\t\t\t\t], next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tplugins.fireHook('action:post.restore', _.clone(postData));\n\t\t\t\tnext(null, postData);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tfunction updateTopicTimestamp(topicData, callback) {\n\t\tvar timestamp;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\ttopics.getLatestUndeletedPid(topicData.tid, next);\n\t\t\t},\n\t\t\tfunction (pid, next) {\n\t\t\t\tif (!parseInt(pid, 10)) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\tPosts.getPostField(pid, 'timestamp', next);\n\t\t\t},\n\t\t\tfunction (_timestamp, next) {\n\t\t\t\ttimestamp = _timestamp;\n\t\t\t\tif (!parseInt(timestamp, 10)) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\ttopics.updateTimestamp(topicData.tid, timestamp, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tif (parseInt(topicData.pinned, 10) !== 1) {\n\t\t\t\t\tdb.sortedSetAdd('cid:' + topicData.cid + ':tids', timestamp, topicData.tid, next);\n\t\t\t\t} else {\n\t\t\t\t\tnext();\n\t\t\t\t}\n\t\t\t}\n\t\t], callback);\n\t}\n\n\tPosts.purge = function (pid, uid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tPosts.exists(pid, next);\n\t\t\t},\n\t\t\tfunction (exists, next) {\n\t\t\t\tif (!exists) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\tplugins.fireHook('filter:post.purge', {pid: pid, uid: uid}, next);\n\t\t\t},\n\t\t\tfunction (data, next) {\n\t\t\t\tasync.parallel([\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdeletePostFromTopicUserNotification(pid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdeletePostFromCategoryRecentPosts(pid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdeletePostFromUsersBookmarks(pid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdeletePostFromUsersVotes(pid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdeletePostFromReplies(pid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.sortedSetsRemove(['posts:pid', 'posts:flagged'], pid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tPosts.dismissFlag(pid, next);\n\t\t\t\t\t}\n\t\t\t\t], function (err) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\t\t\t\t\tplugins.fireHook('action:post.purge', pid);\n\t\t\t\t\tdb.delete('post:' + pid, next);\n\t\t\t\t});\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tfunction deletePostFromTopicUserNotification(pid, callback) {\n\t\tvar postData;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tPosts.getPostFields(pid, ['tid', 'uid'], next);\n\t\t\t},\n\t\t\tfunction (_postData, next) {\n\t\t\t\tpostData = _postData;\n\t\t\t\tdb.sortedSetsRemove([\n\t\t\t\t\t'tid:' + postData.tid + ':posts',\n\t\t\t\t\t'tid:' + postData.tid + ':posts:votes',\n\t\t\t\t\t'uid:' + postData.uid + ':posts'\n\t\t\t\t], pid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\ttopics.getTopicFields(postData.tid, ['tid', 'cid', 'pinned'], next);\n\t\t\t},\n\t\t\tfunction (topicData, next) {\n\t\t\t\tasync.parallel([\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.decrObjectField('global', 'postCount', next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.decrObjectField('category:' + topicData.cid, 'post_count', next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\ttopics.decreasePostCount(postData.tid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\ttopics.updateTeaser(postData.tid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tupdateTopicTimestamp(topicData, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.sortedSetIncrBy('cid:' + topicData.cid + ':tids:posts', -1, postData.tid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.sortedSetIncrBy('tid:' + postData.tid + ':posters', -1, postData.uid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tuser.incrementUserPostCountBy(postData.uid, -1, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tnotifications.rescind('new_post:tid:' + postData.tid + ':pid:' + pid + ':uid:' + postData.uid, next);\n\t\t\t\t\t}\n\t\t\t\t], next);\n\t\t\t}\n\t\t], function (err) {\n\t\t\tcallback(err);\n\t\t});\n\t}\n\n\tfunction deletePostFromCategoryRecentPosts(pid, callback) {\n\t\tdb.getSortedSetRange('categories:cid', 0, -1, function (err, cids) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar sets = cids.map(function (cid) {\n\t\t\t\treturn 'cid:' + cid + ':pids';\n\t\t\t});\n\n\t\t\tdb.sortedSetsRemove(sets, pid, callback);\n\t\t});\n\t}\n\n\tfunction deletePostFromUsersBookmarks(pid, callback) {\n\t\tdb.getSetMembers('pid:' + pid + ':users_bookmarked', function (err, uids) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar sets = uids.map(function (uid) {\n\t\t\t\treturn 'uid:' + uid + ':bookmarks';\n\t\t\t});\n\n\t\t\tdb.sortedSetsRemove(sets, pid, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\tdb.delete('pid:' + pid + ':users_bookmarked', callback);\n\t\t\t});\n\t\t});\n\t}\n\n\tfunction deletePostFromUsersVotes(pid, callback) {\n\t\tasync.parallel({\n\t\t\tupvoters: function (next) {\n\t\t\t\tdb.getSetMembers('pid:' + pid + ':upvote', next);\n\t\t\t},\n\t\t\tdownvoters: function (next) {\n\t\t\t\tdb.getSetMembers('pid:' + pid + ':downvote', next);\n\t\t\t}\n\t\t}, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar upvoterSets = results.upvoters.map(function (uid) {\n\t\t\t\treturn 'uid:' + uid + ':upvote';\n\t\t\t});\n\n\t\t\tvar downvoterSets = results.downvoters.map(function (uid) {\n\t\t\t\treturn 'uid:' + uid + ':downvote';\n\t\t\t});\n\n\t\t\tasync.parallel([\n\t\t\t\tfunction (next) {\n\t\t\t\t\tdb.sortedSetsRemove(upvoterSets, pid, next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tdb.sortedSetsRemove(downvoterSets, pid, next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tdb.deleteAll(['pid:' + pid + ':upvote', 'pid:' + pid + ':downvote'], next);\n\t\t\t\t}\n\t\t\t], callback);\n\t\t});\n\t}\n\n\tfunction deletePostFromReplies(pid, callback) {\n\t\tPosts.getPostField(pid, 'toPid', function (err, toPid) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tif (!parseInt(toPid, 10)) {\n\t\t\t\treturn callback(null);\n\t\t\t}\n\t\t\tasync.parallel([\n\t\t\t\tasync.apply(db.sortedSetRemove, 'pid:' + toPid + ':replies', pid),\n\t\t\t\tasync.apply(db.decrObjectField, 'post:' + toPid, 'replies')\n\t\t\t], callback);\n\t\t});\n\t}\n\n\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/posts/edit.js":"'use strict';\n\nvar async = require('async');\nvar validator = require('validator');\nvar _ = require('underscore');\n\nvar db = require('../database');\nvar topics = require('../topics');\nvar user = require('../user');\nvar privileges = require('../privileges');\nvar plugins = require('../plugins');\nvar cache = require('./cache');\nvar pubsub = require('../pubsub');\nvar utils = require('../../public/src/utils');\n\nmodule.exports = function (Posts) {\n\n\tpubsub.on('post:edit', function (pid) {\n\t\tcache.del(pid);\n\t});\n\n\tPosts.edit = function (data, callback) {\n\t\tvar postData;\n\t\tvar results;\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tprivileges.posts.canEdit(data.pid, data.uid, next);\n\t\t\t},\n\t\t\tfunction (canEdit, next) {\n\t\t\t\tif (!canEdit.flag) {\n\t\t\t\t\treturn next(new Error(canEdit.message));\n\t\t\t\t}\n\t\t\t\tPosts.getPostData(data.pid, next);\n\t\t\t},\n\t\t\tfunction (_postData, next) {\n\t\t\t\tif (!_postData) {\n\t\t\t\t\treturn next(new Error('[[error:no-post]]'));\n\t\t\t\t}\n\n\t\t\t\tpostData = _postData;\n\t\t\t\tpostData.content = data.content;\n\t\t\t\tpostData.edited = Date.now();\n\t\t\t\tpostData.editor = data.uid;\n\t\t\t\tif (data.handle) {\n\t\t\t\t\tpostData.handle = data.handle;\n\t\t\t\t}\n\t\t\t\tplugins.fireHook('filter:post.edit', {req: data.req, post: postData, data: data, uid: data.uid}, next);\n\t\t\t},\n\t\t\tfunction (result, next) {\n\t\t\t\tpostData = result.post;\n\t\t\t\tPosts.setPostFields(data.pid, postData, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\teditor: function (next) {\n\t\t\t\t\t\tuser.getUserFields(data.uid, ['username', 'userslug'], next);\n\t\t\t\t\t},\n\t\t\t\t\ttopic: function (next) {\n\t\t\t\t\t\teditMainPost(data, postData, next);\n\t\t\t\t\t}\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (_results, next) {\n\t\t\t\tresults = _results;\n\n\t\t\t\tpostData.cid = results.topic.cid;\n\t\t\t\tpostData.topic = results.topic;\n\t\t\t\tplugins.fireHook('action:post.edit', _.clone(postData));\n\n\t\t\t\tcache.del(String(postData.pid));\n\t\t\t\tpubsub.publish('post:edit', String(postData.pid));\n\n\t\t\t\tPosts.parsePost(postData, next);\n\t\t\t},\n\t\t\tfunction (postData, next) {\n\t\t\t\tresults.post = postData;\n\t\t\t\tnext(null, results);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tfunction editMainPost(data, postData, callback) {\n\t\tvar tid = postData.tid;\n\t\tvar title = data.title ? data.title.trim() : '';\n\n\t\tasync.parallel({\n\t\t\ttopic: function (next) {\n\t\t\t\ttopics.getTopicFields(tid, ['cid', 'title'], next);\n\t\t\t},\n\t\t\tisMain: function (next) {\n\t\t\t\tPosts.isMain(data.pid, next);\n\t\t\t}\n\t\t}, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tif (!results.isMain) {\n\t\t\t\treturn callback(null, {\n\t\t\t\t\ttid: tid,\n\t\t\t\t\tcid: results.topic.cid,\n\t\t\t\t\tisMainPost: false,\n\t\t\t\t\trenamed: false\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tvar topicData = {\n\t\t\t\ttid: tid,\n\t\t\t\tcid: results.topic.cid,\n\t\t\t\tuid: postData.uid,\n\t\t\t\tmainPid: data.pid\n\t\t\t};\n\n\t\t\tif (title) {\n\t\t\t\ttopicData.title = title;\n\t\t\t\ttopicData.slug = tid + '/' + (utils.slugify(title) || 'topic');\n\t\t\t}\n\n\t\t\ttopicData.thumb = data.thumb || '';\n\n\t\t\tdata.tags = data.tags || [];\n\n\t\t\tasync.waterfall([\n\t\t\t\tfunction (next) {\n\t\t\t\t\tplugins.fireHook('filter:topic.edit', {req: data.req, topic: topicData, data: data}, next);\n\t\t\t\t},\n\t\t\t\tfunction (results, next) {\n\t\t\t\t\tdb.setObject('topic:' + tid, results.topic, next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\ttopics.updateTags(tid, data.tags, next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\ttopics.getTopicTagsObjects(tid, next);\n\t\t\t\t},\n\t\t\t\tfunction (tags, next) {\n\t\t\t\t\ttopicData.tags = data.tags;\n\t\t\t\t\ttopicData.oldTitle = results.topic.title;\n\t\t\t\t\tplugins.fireHook('action:topic.edit', topicData);\n\t\t\t\t\tnext(null, {\n\t\t\t\t\t\ttid: tid,\n\t\t\t\t\t\tcid: results.topic.cid,\n\t\t\t\t\t\tuid: postData.uid,\n\t\t\t\t\t\ttitle: validator.escape(String(title)),\n\t\t\t\t\t\toldTitle: results.topic.title,\n\t\t\t\t\t\tslug: topicData.slug,\n\t\t\t\t\t\tisMainPost: true,\n\t\t\t\t\t\trenamed: title !== results.topic.title,\n\t\t\t\t\t\ttags: tags\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t], callback);\n\t\t});\n\t}\n\n\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/posts/flags.js":"\n\n'use strict';\n\nvar async = require('async');\nvar winston = require('winston');\nvar db = require('../database');\nvar user = require('../user');\nvar analytics = require('../analytics');\n\nmodule.exports = function (Posts) {\n\n\tPosts.flag = function (post, uid, reason, callback) {\n\t\tif (!parseInt(uid, 10) || !reason) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\thasFlagged: async.apply(Posts.isFlaggedByUser, post.pid, uid),\n\t\t\t\t\texists: async.apply(Posts.exists, post.pid)\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tif (!results.exists) {\n\t\t\t\t\treturn next(new Error('[[error:no-post]]'));\n\t\t\t\t}\n\n\t\t\t\tif (results.hasFlagged) {\n\t\t\t\t\treturn next(new Error('[[error:already-flagged]]'));\n\t\t\t\t}\n\n\t\t\t\tvar now = Date.now();\n\t\t\t\tasync.parallel([\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.sortedSetAdd('posts:flagged', now, post.pid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.sortedSetIncrBy('posts:flags:count', 1, post.pid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.incrObjectField('post:' + post.pid, 'flags', next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.sortedSetAdd('pid:' + post.pid + ':flag:uids', now, uid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.sortedSetAdd('pid:' + post.pid + ':flag:uid:reason', 0, uid + ':' + reason, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tif (parseInt(post.uid, 10)) {\n\t\t\t\t\t\t\tasync.parallel([\n\t\t\t\t\t\t\t\tasync.apply(db.sortedSetIncrBy, 'users:flags', 1, post.uid),\n\t\t\t\t\t\t\t\tasync.apply(db.incrObjectField, 'user:' + post.uid, 'flags'),\n\t\t\t\t\t\t\t\tasync.apply(db.sortedSetAdd, 'uid:' + post.uid + ':flag:pids', now, post.pid)\n\t\t\t\t\t\t\t], next);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnext();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t], next);\n\t\t\t},\n\t\t\tfunction (data, next) {\n\t\t\t\topenNewFlag(post.pid, uid, next);\n\t\t\t}\n\t\t], function (err) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tanalytics.increment('flags');\n\t\t\tcallback();\n\t\t});\n\t};\n\n\tfunction openNewFlag(pid, uid, callback) {\n\t\tdb.sortedSetScore('posts:flags:count', pid, function (err, count) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tif (count === 1) {\t// Only update state on new flag\n\t\t\t\tPosts.updateFlagData(uid, pid, {\n\t\t\t\t\tstate: 'open'\n\t\t\t\t}, callback);\n\t\t\t} else {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t}\n\n\tPosts.isFlaggedByUser = function (pid, uid, callback) {\n\t\tdb.isSortedSetMember('pid:' + pid + ':flag:uids', uid, callback);\n\t};\n\n\tPosts.dismissFlag = function (pid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.getObjectFields('post:' + pid, ['pid', 'uid', 'flags'], next);\n\t\t\t},\n\t\t\tfunction (postData, next) {\n\t\t\t\tif (!postData.pid) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\tasync.parallel([\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tif (parseInt(postData.uid, 10)) {\n\t\t\t\t\t\t\tif (parseInt(postData.flags, 10) > 0) {\n\t\t\t\t\t\t\t\tasync.parallel([\n\t\t\t\t\t\t\t\t\tasync.apply(db.sortedSetIncrBy, 'users:flags', -postData.flags, postData.uid),\n\t\t\t\t\t\t\t\t\tasync.apply(db.incrObjectFieldBy, 'user:' + postData.uid, 'flags', -postData.flags)\n\t\t\t\t\t\t\t\t], next);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tnext();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnext();\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.sortedSetsRemove([\n\t\t\t\t\t\t\t'posts:flagged',\n\t\t\t\t\t\t\t'posts:flags:count',\n\t\t\t\t\t\t\t'uid:' + postData.uid + ':flag:pids'\n\t\t\t\t\t\t], pid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tasync.series([\n\t\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\t\tdb.getSortedSetRange('pid:' + pid + ':flag:uids', 0, -1, function (err, uids) {\n\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tasync.each(uids, function (uid, next) {\n\t\t\t\t\t\t\t\t\t\tvar nid = 'post_flag:' + pid + ':uid:' + uid;\n\t\t\t\t\t\t\t\t\t\tasync.parallel([\n\t\t\t\t\t\t\t\t\t\t\tasync.apply(db.delete, 'notifications:' + nid),\n\t\t\t\t\t\t\t\t\t\t\tasync.apply(db.sortedSetRemove, 'notifications', 'post_flag:' + pid + ':uid:' + uid)\n\t\t\t\t\t\t\t\t\t\t], next);\n\t\t\t\t\t\t\t\t\t}, next);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tasync.apply(db.delete, 'pid:' + pid + ':flag:uids')\n\t\t\t\t\t\t], next);\n\t\t\t\t\t},\n\t\t\t\t\tasync.apply(db.deleteObjectField, 'post:' + pid, 'flags'),\n\t\t\t\t\tasync.apply(db.delete, 'pid:' + pid + ':flag:uid:reason'),\n\t\t\t\t\tasync.apply(db.deleteObjectFields, 'post:' + pid, ['flag:state', 'flag:assignee', 'flag:notes', 'flag:history'])\n\t\t\t\t], next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tdb.sortedSetsRemoveRangeByScore(['users:flags'], '-inf', 0, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tPosts.dismissAllFlags = function (callback) {\n\t\tdb.getSortedSetRange('posts:flagged', 0, -1, function (err, pids) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tasync.eachSeries(pids, Posts.dismissFlag, callback);\n\t\t});\n\t};\n\n\tPosts.dismissUserFlags = function (uid, callback) {\n\t\tdb.getSortedSetRange('uid:' + uid + ':flag:pids', 0, -1, function (err, pids) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tasync.eachSeries(pids, Posts.dismissFlag, callback);\n\t\t});\n\t};\n\n\tPosts.getFlags = function (set, cid, uid, start, stop, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tif (Array.isArray(set)) {\n\t\t\t\t\tdb.getSortedSetRevIntersect({sets: set, start: start, stop: -1, aggregate: 'MAX'}, next);\n\t\t\t\t} else {\n\t\t\t\t\tdb.getSortedSetRevRange(set, start, -1, next);\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction (pids, next) {\n\t\t\t\tif (cid) {\n\t\t\t\t\tPosts.filterPidsByCid(pids, cid, next);\n\t\t\t\t} else {\n\t\t\t\t\tprocess.nextTick(next, null, pids);\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction (pids, next) {\n\t\t\t\tgetFlaggedPostsWithReasons(pids, uid, next);\n\t\t\t},\n\t\t\tfunction (posts, next) {\n\t\t\t\tvar count = posts.length;\n\t\t\t\tvar end = stop - start + 1;\n\t\t\t\tnext(null, {posts: posts.slice(0, stop === -1 ? undefined : end), count: count});\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tfunction getFlaggedPostsWithReasons(pids, uid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\tuidsReasons: function (next) {\n\t\t\t\t\t\tasync.map(pids, function (pid, next) {\n\t\t\t\t\t\t\tdb.getSortedSetRange('pid:' + pid + ':flag:uid:reason', 0, -1, next);\n\t\t\t\t\t\t}, next);\n\t\t\t\t\t},\n\t\t\t\t\tposts: function (next) {\n\t\t\t\t\t\tPosts.getPostSummaryByPids(pids, uid, {stripTags: false, extraFields: ['flags', 'flag:assignee', 'flag:state', 'flag:notes', 'flag:history']}, next);\n\t\t\t\t\t}\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tasync.map(results.uidsReasons, function (uidReasons, next) {\n\t\t\t\t\tasync.map(uidReasons, function (uidReason, next) {\n\t\t\t\t\t\tvar uid = uidReason.split(':')[0];\n\t\t\t\t\t\tvar reason = uidReason.substr(uidReason.indexOf(':') + 1);\n\t\t\t\t\t\tuser.getUserFields(uid, ['username', 'userslug', 'picture'], function (err, userData) {\n\t\t\t\t\t\t\tnext(err, {user: userData, reason: reason});\n\t\t\t\t\t\t});\n\t\t\t\t\t}, next);\n\t\t\t\t}, function (err, reasons) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tresults.posts.forEach(function (post, index) {\n\t\t\t\t\t\tif (post) {\n\t\t\t\t\t\t\tpost.flagReasons = reasons[index];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tnext(null, results.posts);\n\t\t\t\t});\n\t\t\t},\n\t\t\tasync.apply(Posts.expandFlagHistory),\n\t\t\tfunction (posts, next) {\n\t\t\t\t// Parse out flag data into its own object inside each post hash\n\t\t\t\tasync.map(posts, function (postObj, next) {\n\t\t\t\t\tfor(var prop in postObj) {\n\t\t\t\t\t\tpostObj.flagData = postObj.flagData || {};\n\n\t\t\t\t\t\tif (postObj.hasOwnProperty(prop) && prop.startsWith('flag:')) {\n\t\t\t\t\t\t\tpostObj.flagData[prop.slice(5)] = postObj[prop];\n\n\t\t\t\t\t\t\tif (prop === 'flag:state') {\n\t\t\t\t\t\t\t\tswitch(postObj[prop]) {\n\t\t\t\t\t\t\t\t\tcase 'open':\n\t\t\t\t\t\t\t\t\t\tpostObj.flagData.labelClass = 'info';\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase 'wip':\n\t\t\t\t\t\t\t\t\t\tpostObj.flagData.labelClass = 'warning';\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase 'resolved':\n\t\t\t\t\t\t\t\t\t\tpostObj.flagData.labelClass = 'success';\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase 'rejected':\n\t\t\t\t\t\t\t\t\t\tpostObj.flagData.labelClass = 'danger';\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tdelete postObj[prop];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (postObj.flagData.assignee) {\n\t\t\t\t\t\tuser.getUserFields(parseInt(postObj.flagData.assignee, 10), ['username', 'picture'], function (err, userData) {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpostObj.flagData.assigneeUser = userData;\n\t\t\t\t\t\t\tnext(null, postObj);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetImmediate(next.bind(null, null, postObj));\n\t\t\t\t\t}\n\t\t\t\t}, next);\n\t\t\t}\n\t\t], callback);\n\t}\n\n\tPosts.updateFlagData = function (uid, pid, flagObj, callback) {\n\t\t// Retrieve existing flag data to compare for history-saving purposes\n\t\tvar changes = [];\n\t\tvar changeset = {};\n\t\tvar prop;\n\n\t\tPosts.getPostData(pid, function (err, postData) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\t// Track new additions\n\t\t\tfor(prop in flagObj) {\n\t\t\t\tif (flagObj.hasOwnProperty(prop) && !postData.hasOwnProperty('flag:' + prop) && flagObj[prop].length) {\n\t\t\t\t\tchanges.push(prop);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Track changed items\n\t\t\tfor(prop in postData) {\n\t\t\t\tif (\n\t\t\t\t\tpostData.hasOwnProperty(prop) && prop.startsWith('flag:') &&\n\t\t\t\t\tflagObj.hasOwnProperty(prop.slice(5)) &&\n\t\t\t\t\tpostData[prop] !== flagObj[prop.slice(5)]\n\t\t\t\t) {\n\t\t\t\t\tchanges.push(prop.slice(5));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchangeset = changes.reduce(function (memo, prop) {\n\t\t\t\tmemo['flag:' + prop] = flagObj[prop];\n\t\t\t\treturn memo;\n\t\t\t}, {});\n\n\t\t\t// Append changes to history string\n\t\t\tif (changes.length) {\n\t\t\t\ttry {\n\t\t\t\t\tvar history = JSON.parse(postData['flag:history'] || '[]');\n\n\t\t\t\t\tchanges.forEach(function (property) {\n\t\t\t\t\t\tswitch(property) {\n\t\t\t\t\t\t\tcase 'assignee':\t// intentional fall-through\n\t\t\t\t\t\t\tcase 'state':\n\t\t\t\t\t\t\t\thistory.unshift({\n\t\t\t\t\t\t\t\t\tuid: uid,\n\t\t\t\t\t\t\t\t\ttype: property,\n\t\t\t\t\t\t\t\t\tvalue: flagObj[property],\n\t\t\t\t\t\t\t\t\ttimestamp: Date.now()\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'notes':\n\t\t\t\t\t\t\t\thistory.unshift({\n\t\t\t\t\t\t\t\t\tuid: uid,\n\t\t\t\t\t\t\t\t\ttype: property,\n\t\t\t\t\t\t\t\t\ttimestamp: Date.now()\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tchangeset['flag:history'] = JSON.stringify(history);\n\t\t\t\t} catch (e) {\n\t\t\t\t\twinston.warn('[posts/updateFlagData] Unable to deserialise post flag history, likely malformed data');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Save flag data into post hash\n\t\t\tif (changes.length) {\n\t\t\t\tPosts.setPostFields(pid, changeset, callback);\n\t\t\t} else {\n\t\t\t\tsetImmediate(callback);\n\t\t\t}\n\t\t});\n\t};\n\n\tPosts.expandFlagHistory = function (posts, callback) {\n\t\t// Expand flag history\n\t\tasync.map(posts, function (post, next) {\n\t\t\tvar history;\n\t\t\ttry {\n\t\t\t\thistory = JSON.parse(post['flag:history'] || '[]');\n\t\t\t} catch (e) {\n\t\t\t\twinston.warn('[posts/getFlags] Unable to deserialise post flag history, likely malformed data');\n\t\t\t\treturn callback(e);\n\t\t\t}\n\n\t\t\tasync.map(history, function (event, next) {\n\t\t\t\tevent.timestampISO = new Date(event.timestamp).toISOString();\n\n\t\t\t\tasync.parallel([\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tuser.getUserFields(event.uid, ['username', 'picture'], function (err, userData) {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tevent.user = userData;\n\t\t\t\t\t\t\tnext();\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tif (event.type === 'assignee') {\n\t\t\t\t\t\t\tuser.getUserField(parseInt(event.value, 10), 'username', function (err, username) {\n\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tevent.label = username || 'Unknown user';\n\t\t\t\t\t\t\t\tnext(null);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else if (event.type === 'state') {\n\t\t\t\t\t\t\tevent.label = '[[topic:flag_manage_state_' + event.value + ']]';\n\t\t\t\t\t\t\tsetImmediate(next);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetImmediate(next);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t], function (err) {\n\t\t\t\t\tnext(err, event);\n\t\t\t\t});\n\t\t\t}, function (err, history) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn next(err);\n\t\t\t\t}\n\n\t\t\t\tpost['flag:history'] = history;\n\t\t\t\tnext(null, post);\n\t\t\t});\n\t\t}, callback);\n\t};\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/posts/parse.js":"'use strict';\n\nvar nconf = require('nconf');\nvar url = require('url');\nvar winston = require('winston');\nvar S = require('string');\n\nvar meta = require('../meta');\nvar cache = require('./cache');\nvar plugins = require('../plugins');\nvar translator = require('../../public/src/modules/translator');\n\nvar urlRegex = /href=\"([^\"]+)\"/g;\n\nmodule.exports = function (Posts) {\n\n\tPosts.parsePost = function (postData, callback) {\n\t\tpostData.content = postData.content || '';\n\n\t\tif (postData.pid && cache.has(String(postData.pid))) {\n\t\t\tpostData.content = cache.get(String(postData.pid));\n\t\t\treturn callback(null, postData);\n\t\t}\n\n\t\t// Casting post content into a string, just in case\n\t\tif (typeof postData.content !== 'string') {\n\t\t\tpostData.content = postData.content.toString();\n\t\t}\n\n\t\tplugins.fireHook('filter:parse.post', {postData: postData}, function (err, data) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tdata.postData.content = translator.escape(data.postData.content);\n\n\t\t\tif (global.env === 'production' && data.postData.pid) {\n\t\t\t\tcache.set(String(data.postData.pid), data.postData.content);\n\t\t\t}\n\n\t\t\tcallback(null, data.postData);\n\t\t});\n\t};\n\n\tPosts.parseSignature = function (userData, uid, callback) {\n\t\tuserData.signature = sanitizeSignature(userData.signature || '');\n\t\tplugins.fireHook('filter:parse.signature', {userData: userData, uid: uid}, callback);\n\t};\n\n\tPosts.relativeToAbsolute = function (content) {\n\t\t// Turns relative links in post body to absolute urls\n\t\tvar parsed, current, absolute;\n\n\t\twhile ((current = urlRegex.exec(content)) !== null) {\n\t\t\tif (current[1]) {\n\t\t\t\ttry {\n\t\t\t\t\tparsed = url.parse(current[1]);\n\t\t\t\t\tif (!parsed.protocol) {\n\t\t\t\t\t\tif (current[1].startsWith('/')) {\n\t\t\t\t\t\t\t// Internal link\n\t\t\t\t\t\t\tabsolute = nconf.get('url') + current[1];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// External link\n\t\t\t\t\t\t\tabsolute = '//' + current[1];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontent = content.slice(0, current.index + 6) + absolute + content.slice(current.index + 6 + current[1].length);\n\t\t\t\t\t}\n\t\t\t\t} catch(err) {\n\t\t\t\t\twinston.verbose(err.messsage);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn content;\n\t};\n\n\tfunction sanitizeSignature(signature) {\n\t\tvar\tstring = S(signature),\n\t\t\ttagsToStrip = [];\n\n\t\tif (parseInt(meta.config['signatures:disableLinks'], 10) === 1) {\n\t\t\ttagsToStrip.push('a');\n\t\t}\n\n\t\tif (parseInt(meta.config['signatures:disableImages'], 10) === 1) {\n\t\t\ttagsToStrip.push('img');\n\t\t}\n\n\t\treturn tagsToStrip.length ? string.stripTags.apply(string, tagsToStrip).s : signature;\n\t}\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/posts/recent.js":"'use strict';\n\nvar async = require('async'),\n\tdb = require('../database'),\n\tprivileges = require('../privileges');\n\n\nmodule.exports = function (Posts) {\n\tvar terms = {\n\t\tday: 86400000,\n\t\tweek: 604800000,\n\t\tmonth: 2592000000\n\t};\n\n\tPosts.getRecentPosts = function (uid, start, stop, term, callback) {\n\t\tvar min = 0;\n\t\tif (terms[term]) {\n\t\t\tmin = Date.now() - terms[term];\n\t\t}\n\n\t\tvar count = parseInt(stop, 10) === -1 ? stop : stop - start + 1;\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.getSortedSetRevRangeByScore('posts:pid', start, count, '+inf', min, next);\n\t\t\t},\n\t\t\tfunction (pids, next) {\n\t\t\t\tprivileges.posts.filter('read', pids, uid, next);\n\t\t\t},\n\t\t\tfunction (pids, next) {\n\t\t\t\tPosts.getPostSummaryByPids(pids, uid, {stripTags: true}, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tPosts.getRecentPosterUids = function (start, stop, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.getSortedSetRevRange('posts:pid', start, stop, next);\n\t\t\t},\n\t\t\tfunction (pids, next) {\n\t\t\t\tPosts.getPostsFields(pids, ['uid'], next);\n\t\t\t},\n\t\t\tfunction (postData, next) {\n\t\t\t\tpostData = postData.map(function (post) {\n\t\t\t\t\treturn post && post.uid;\n\t\t\t\t}).filter(function (value, index, array) {\n\t\t\t\t\treturn value && array.indexOf(value) === index;\n\t\t\t\t});\n\t\t\t\tnext(null, postData);\n\t\t\t}\n\t\t], callback);\n \t};\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/posts/summary.js":"\n'use strict';\n\nvar async = require('async');\nvar validator = require('validator');\nvar S = require('string');\n\nvar db = require('../database');\nvar user = require('../user');\nvar plugins = require('../plugins');\nvar categories = require('../categories');\nvar utils = require('../../public/src/utils');\n\n\nmodule.exports = function (Posts) {\n\n\tPosts.getPostSummaryByPids = function (pids, uid, options, callback) {\n\t\tif (!Array.isArray(pids) || !pids.length) {\n\t\t\treturn callback(null, []);\n\t\t}\n\n\t\toptions.stripTags = options.hasOwnProperty('stripTags') ? options.stripTags : false;\n\t\toptions.parse = options.hasOwnProperty('parse') ? options.parse : true;\n\t\toptions.extraFields = options.hasOwnProperty('extraFields') ? options.extraFields : [];\n\n\t\tvar fields = ['pid', 'tid', 'content', 'uid', 'timestamp', 'deleted', 'upvotes', 'downvotes'].concat(options.extraFields);\n\n\t\tvar posts;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tPosts.getPostsFields(pids, fields, next);\n\t\t\t},\n\t\t\tfunction (_posts, next) {\n\t\t\t\tposts = _posts.filter(Boolean);\n\n\t\t\t\tvar uids = [];\n\t\t\t\tvar topicKeys = [];\n\n\t\t\t\tposts.forEach(function (post, i) {\n\t\t\t\t\tif (uids.indexOf(posts[i].uid) === -1) {\n\t\t\t\t\t\tuids.push(posts[i].uid);\n\t\t\t\t\t}\n\t\t\t\t\tif (topicKeys.indexOf('topic:' + posts[i].tid) === -1) {\n\t\t\t\t\t\ttopicKeys.push('topic:' + posts[i].tid);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tasync.parallel({\n\t\t\t\t\tusers: function (next) {\n\t\t\t\t\t\tuser.getUsersFields(uids, ['uid', 'username', 'userslug', 'picture'], next);\n\t\t\t\t\t},\n\t\t\t\t\ttopicsAndCategories: function (next) {\n\t\t\t\t\t\tgetTopicAndCategories(topicKeys, next);\n\t\t\t\t\t}\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tresults.users = toObject('uid', results.users);\n\t\t\t\tresults.topics = toObject('tid', results.topicsAndCategories.topics);\n\t\t\t\tresults.categories = toObject('cid', results.topicsAndCategories.categories);\n\n\t\t\t\tposts.forEach(function (post) {\n\t\t\t\t\t// If the post author isn't represented in the retrieved users' data, then it means they were deleted, assume guest.\n\t\t\t\t\tif (!results.users.hasOwnProperty(post.uid)) {\n\t\t\t\t\t\tpost.uid = 0;\n\t\t\t\t\t}\n\t\t\t\t\tpost.user = results.users[post.uid];\n\t\t\t\t\tpost.topic = results.topics[post.tid];\n\t\t\t\t\tpost.category = results.categories[post.topic.cid];\n\t\t\t\t\tpost.isMainPost = parseInt(post.pid, 10) === parseInt(post.topic.mainPid, 10);\n\t\t\t\t\tpost.deleted = parseInt(post.deleted, 10) === 1;\n\t\t\t\t\tpost.upvotes = parseInt(post.upvotes, 10) || 0;\n\t\t\t\t\tpost.downvotes = parseInt(post.downvotes, 10) || 0;\n\t\t\t\t\tpost.votes = post.upvotes - post.downvotes;\n\t\t\t\t\tpost.timestampISO = utils.toISOString(post.timestamp);\n\t\t\t\t});\n\n\t\t\t\tposts = posts.filter(function (post) {\n\t\t\t\t\treturn results.topics[post.tid];\n\t\t\t\t});\n\n\t\t\t\tparsePosts(posts, options, next);\n\t\t\t},\n\t\t\tfunction (posts, next) {\n\t\t\t\tplugins.fireHook('filter:post.getPostSummaryByPids', {posts: posts, uid: uid}, next);\n\t\t\t},\n\t\t\tfunction (data, next) {\n\t\t\t\tnext(null, data.posts);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tfunction parsePosts(posts, options, callback) {\n\t\tasync.map(posts, function (post, next) {\n\t\t\tif (!post.content || !options.parse) {\n\t\t\t\tif (options.stripTags) {\n\t\t\t\t\tpost.content = stripTags(post.content);\n\t\t\t\t}\n\t\t\t\tpost.content = post.content ? validator.escape(String(post.content)) : post.content;\n\t\t\t\treturn next(null, post);\n\t\t\t}\n\n\t\t\tPosts.parsePost(post, function (err, post) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn next(err);\n\t\t\t\t}\n\t\t\t\tif (options.stripTags) {\n\t\t\t\t\tpost.content = stripTags(post.content);\n\t\t\t\t}\n\n\t\t\t\tnext(null, post);\n\t\t\t});\n\t\t}, callback);\n\t}\n\n\tfunction getTopicAndCategories(topicKeys, callback) {\n\t\tdb.getObjectsFields(topicKeys, ['uid', 'tid', 'title', 'cid', 'slug', 'deleted', 'postcount', 'mainPid'], function (err, topics) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar cids = topics.map(function (topic) {\n\t\t\t\tif (topic) {\n\t\t\t\t\ttopic.title = validator.escape(String(topic.title));\n\t\t\t\t\ttopic.deleted = parseInt(topic.deleted, 10) === 1;\n\t\t\t\t}\n\t\t\t\treturn topic && topic.cid;\n\t\t\t}).filter(function (topic, index, array) {\n\t\t\t\treturn topic && array.indexOf(topic) === index;\n\t\t\t});\n\n\t\t\tcategories.getCategoriesFields(cids, ['cid', 'name', 'icon', 'slug', 'parentCid', 'bgColor', 'color'], function (err, categories) {\n\t\t\t\tcallback(err, {topics: topics, categories: categories});\n\t\t\t});\n\t\t});\n\t}\n\n\tfunction toObject(key, data) {\n\t\tvar obj = {};\n\t\tfor(var i = 0; i < data.length; ++i) {\n\t\t\tobj[data[i][key]] = data[i];\n\t\t}\n\t\treturn obj;\n\t}\n\n\tfunction stripTags(content) {\n\t\tif (content) {\n\t\t\tvar s = S(content);\n\t\t\treturn s.stripTags.apply(s, utils.stripTags).s;\n\t\t}\n\t\treturn content;\n\t}\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/posts/tools.js":"'use strict';\n\nvar async = require('async');\n\nvar privileges = require('../privileges');\nvar cache = require('./cache');\n\nmodule.exports = function (Posts) {\n\tPosts.tools = {};\n\n\tPosts.tools.delete = function (uid, pid, callback) {\n\t\ttogglePostDelete(uid, pid, true, callback);\n\t};\n\n\tPosts.tools.restore = function (uid, pid, callback) {\n\t\ttogglePostDelete(uid, pid, false, callback);\n\t};\n\n\tfunction togglePostDelete(uid, pid, isDelete, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tPosts.exists(pid, next);\n\t\t\t},\n\t\t\tfunction (exists, next) {\n\t\t\t\tif (!exists) {\n\t\t\t\t\treturn next(new Error('[[error:no-post]]'));\n\t\t\t\t}\n\t\t\t\tPosts.getPostField(pid, 'deleted', next);\n\t\t\t},\n\t\t\tfunction (deleted, next) {\n\t\t\t\tif (parseInt(deleted, 10) === 1 && isDelete) {\n\t\t\t\t\treturn next(new Error('[[error:post-already-deleted]]'));\n\t\t\t\t} else if(parseInt(deleted, 10) !== 1 && !isDelete) {\n\t\t\t\t\treturn next(new Error('[[error:post-already-restored]]'));\n\t\t\t\t}\n\n\t\t\t\tprivileges.posts.canDelete(pid, uid, next);\n\t\t\t},\n\t\t\tfunction (canDelete, next) {\n\t\t\t\tif (!canDelete.flag) {\n\t\t\t\t\treturn next(new Error(canDelete.message));\n\t\t\t\t}\n\n\t\t\t\tif (isDelete) {\n\t\t\t\t\tcache.del(pid);\n\t\t\t\t\tPosts.delete(pid, uid, next);\n\t\t\t\t} else {\n\t\t\t\t\tPosts.restore(pid, uid, function (err, postData) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tPosts.parsePost(postData, next);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t], callback);\n\t}\n\n\tPosts.tools.purge = function (uid, pid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tprivileges.posts.canPurge(pid, uid, next);\n\t\t\t},\n\t\t\tfunction (canPurge, next) {\n\t\t\t\tif (!canPurge) {\n\t\t\t\t\treturn next(new Error('[[error:no-privileges]]'));\n\t\t\t\t}\n\t\t\t\tcache.del(pid);\n\t\t\t\tPosts.purge(pid, uid, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n};\n\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/posts/topics.js":"\n'use strict';\n\nvar async = require('async');\n\nvar topics = require('../topics');\nvar utils = require('../../public/src/utils');\n\nmodule.exports = function (Posts) {\n\n\tPosts.getPostsFromSet = function (set, start, stop, uid, reverse, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tPosts.getPidsFromSet(set, start, stop, reverse, next);\n\t\t\t},\n\t\t\tfunction (pids, next) {\n\t\t\t\tPosts.getPostsByPids(pids, uid, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tPosts.isMain = function (pid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tPosts.getPostField(pid, 'tid', next);\n\t\t\t},\n\t\t\tfunction (tid, next) {\n\t\t\t\ttopics.getTopicField(tid, 'mainPid', next);\n\t\t\t},\n\t\t\tfunction (mainPid, next) {\n\t\t\t\tnext(null, parseInt(pid, 10) === parseInt(mainPid, 10));\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tPosts.getTopicFields = function (pid, fields, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tPosts.getPostField(pid, 'tid', next);\n\t\t\t},\n\t\t\tfunction (tid, next) {\n\t\t\t\ttopics.getTopicFields(tid, fields, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tPosts.generatePostPath = function (pid, uid, callback) {\n\t\tPosts.generatePostPaths([pid], uid, function (err, paths) {\n\t\t\tcallback(err, Array.isArray(paths) && paths.length ? paths[0] : null);\n\t\t});\n\t};\n\n\tPosts.generatePostPaths = function (pids, uid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tPosts.getPostsFields(pids, ['pid', 'tid'], next);\n\t\t\t},\n\t\t\tfunction (postData, next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\tindices: function (next) {\n\t\t\t\t\t\tPosts.getPostIndices(postData, uid, next);\n\t\t\t\t\t},\n\t\t\t\t\ttopics: function (next) {\n\t\t\t\t\t\tvar tids = postData.map(function (post) {\n\t\t\t\t\t\t\treturn post ? post.tid : null;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\ttopics.getTopicsFields(tids, ['slug'], next);\n\t\t\t\t\t}\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tvar paths = pids.map(function (pid, index) {\n\t\t\t\t\tvar slug = results.topics[index] ? results.topics[index].slug : null;\n\t\t\t\t\tvar postIndex = utils.isNumber(results.indices[index]) ? parseInt(results.indices[index], 10) + 1 : null;\n\n\t\t\t\t\tif (slug && postIndex) {\n\t\t\t\t\t\treturn '/topic/' + slug + '/' + postIndex;\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t});\n\n\t\t\t\tnext(null, paths);\n\t\t\t}\n\t\t], callback);\n\t};\n\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/posts/user.js":"'use strict';\n\nvar async = require('async');\nvar validator = require('validator');\n\nvar user = require('../user');\nvar groups = require('../groups');\nvar meta = require('../meta');\nvar plugins = require('../plugins');\n\nmodule.exports = function (Posts) {\n\n\tPosts.getUserInfoForPosts = function (uids, uid, callback) {\n\t\tvar groupsMap = {};\n\t\tvar userData;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tuser.getUsersFields(uids, ['uid', 'username', 'fullname', 'userslug', 'reputation', 'postcount', 'picture', 'signature', 'banned', 'status', 'lastonline', 'groupTitle'], next);\n\t\t\t},\n\t\t\tfunction (_userData, next) {\n\t\t\t\tuserData = _userData;\n\t\t\t\tvar groupTitles = userData.map(function (userData) {\n\t\t\t\t\treturn userData && userData.groupTitle;\n\t\t\t\t}).filter(function (groupTitle, index, array) {\n\t\t\t\t\treturn groupTitle && array.indexOf(groupTitle) === index;\n\t\t\t\t});\n\t\t\t\tgroups.getGroupsData(groupTitles, next);\n\t\t\t}\n\t\t], function (err, groupsData) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tgroupsData.forEach(function (group) {\n\t\t\t\tif (group && group.userTitleEnabled) {\n\t\t\t\t\tgroupsMap[group.name] = {\n\t\t\t\t\t\tname: group.name,\n\t\t\t\t\t\tslug: group.slug,\n\t\t\t\t\t\tlabelColor: group.labelColor,\n\t\t\t\t\t\ticon: group.icon,\n\t\t\t\t\t\tuserTitle: group.userTitle\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tuserData.forEach(function (userData) {\n\t\t\t\tuserData.uid = userData.uid || 0;\n\t\t\t\tuserData.username = userData.username || '[[global:guest]]';\n\t\t\t\tuserData.userslug = userData.userslug || '';\n\t\t\t\tuserData.reputation = userData.reputation || 0;\n\t\t\t\tuserData.postcount = userData.postcount || 0;\n\t\t\t\tuserData.banned = parseInt(userData.banned, 10) === 1;\n\t\t\t\tuserData.picture = userData.picture || '';\n\t\t\t\tuserData.status = user.getStatus(userData);\n\t\t\t\tuserData.signature = validator.escape(String(userData.signature || ''));\n\t\t\t\tuserData.fullname = validator.escape(String(userData.fullname || ''));\n\t\t\t});\n\n\t\t\tasync.map(userData, function (userData, next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\tisMemberOfGroup: function (next) {\n\t\t\t\t\t\tif (!userData.groupTitle || !groupsMap[userData.groupTitle]) {\n\t\t\t\t\t\t\treturn next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tgroups.isMember(userData.uid, userData.groupTitle, next);\n\t\t\t\t\t},\n\t\t\t\t\tsignature: function (next) {\n\t\t\t\t\t\tif (!userData.signature || parseInt(meta.config.disableSignatures, 10) === 1) {\n\t\t\t\t\t\t\tuserData.signature = '';\n\t\t\t\t\t\t\treturn next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tPosts.parseSignature(userData, uid, next);\n\t\t\t\t\t},\n\t\t\t\t\tcustomProfileInfo: function (next) {\n\t\t\t\t\t\tplugins.fireHook('filter:posts.custom_profile_info', {profile: [], uid: userData.uid}, next);\n\t\t\t\t\t}\n\t\t\t\t}, function (err, results) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (results.isMemberOfGroup && userData.groupTitle && groupsMap[userData.groupTitle]) {\n\t\t\t\t\t\tuserData.selectedGroup = groupsMap[userData.groupTitle];\n\t\t\t\t\t}\n\n\t\t\t\t\tuserData.custom_profile_info = results.customProfileInfo.profile;\n\n\t\t\t\t\tplugins.fireHook('filter:posts.modifyUserInfo', userData, next);\n\t\t\t\t});\n\t\t\t}, callback);\n\t\t});\n\t};\n\n\tPosts.isOwner = function (pid, uid, callback) {\n\t\tuid = parseInt(uid, 10);\n\t\tif (Array.isArray(pid)) {\n\t\t\tif (!uid) {\n\t\t\t\treturn callback(null, pid.map(function () {return false;}));\n\t\t\t}\n\t\t\tPosts.getPostsFields(pid, ['uid'], function (err, posts) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\t\t\t\tposts = posts.map(function (post) {\n\t\t\t\t\treturn post && parseInt(post.uid, 10) === uid;\n\t\t\t\t});\n\t\t\t\tcallback(null, posts);\n\t\t\t});\n\t\t} else {\n\t\t\tif (!uid) {\n\t\t\t\treturn callback(null, false);\n\t\t\t}\n\t\t\tPosts.getPostField(pid, 'uid', function (err, author) {\n\t\t\t\tcallback(err, parseInt(author, 10) === uid);\n\t\t\t});\n\t\t}\n\t};\n\n\tPosts.isModerator = function (pids, uid, callback) {\n\t\tif (!parseInt(uid, 10)) {\n\t\t\treturn callback(null, pids.map(function () {return false;}));\n\t\t}\n\t\tPosts.getCidsByPids(pids, function (err, cids) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tuser.isModerator(uid, cids, callback);\n\t\t});\n\t};\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/posts/votes.js":"'use strict';\n\nvar async = require('async');\n\nvar meta = require('../meta');\nvar db = require('../database');\nvar user = require('../user');\nvar plugins = require('../plugins');\n\nmodule.exports = function (Posts) {\n\n\tvar votesInProgress = {};\n\n\tPosts.upvote = function (pid, uid, callback) {\n\t\tif (parseInt(meta.config['reputation:disabled'], 10) === 1) {\n\t\t\treturn callback(new Error('[[error:reputation-system-disabled]]'));\n\t\t}\n\n\t\tif (voteInProgress(pid, uid)) {\n\t\t\treturn callback(new Error('[[error:already-voting-for-this-post]]'));\n\t\t}\n\n\t\tputVoteInProgress(pid, uid);\n\n\t\ttoggleVote('upvote', pid, uid, function (err, data) {\n\t\t\tclearVoteProgress(pid, uid);\n\t\t\tcallback(err, data);\n\t\t});\n\t};\n\n\tPosts.downvote = function (pid, uid, callback) {\n\t\tif (parseInt(meta.config['reputation:disabled'], 10) === 1) {\n\t\t\treturn callback(new Error('[[error:reputation-system-disabled]]'));\n\t\t}\n\n\t\tif (parseInt(meta.config['downvote:disabled'], 10) === 1) {\n\t\t\treturn callback(new Error('[[error:downvoting-disabled]]'));\n\t\t}\n\n\t\tif (voteInProgress(pid, uid)) {\n\t\t\treturn callback(new Error('[[error:already-voting-for-this-post]]'));\n\t\t}\n\n\t\tputVoteInProgress(pid, uid);\n\n\t\ttoggleVote('downvote', pid, uid, function (err, data) {\n\t\t\tclearVoteProgress(pid, uid);\n\t\t\tcallback(err, data);\n\t\t});\n\t};\n\n\tPosts.unvote = function (pid, uid, callback) {\n\t\tif (voteInProgress(pid, uid)) {\n\t\t\treturn callback(new Error('[[error:already-voting-for-this-post]]'));\n\t\t}\n\n\t\tputVoteInProgress(pid, uid);\n\n\t\tunvote(pid, uid, 'unvote', function (err, data) {\n\t\t\tclearVoteProgress(pid, uid);\n\t\t\tcallback(err, data);\n\t\t});\n\t};\n\n\tPosts.hasVoted = function (pid, uid, callback) {\n\t\tif (!parseInt(uid, 10)) {\n\t\t\treturn callback(null, {upvoted: false, downvoted: false});\n\t\t}\n\n\t\tdb.isMemberOfSets(['pid:' + pid + ':upvote', 'pid:' + pid + ':downvote'], uid, function (err, hasVoted) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tcallback (null, {upvoted: hasVoted[0], downvoted: hasVoted[1]});\n\t\t});\n\t};\n\n\tPosts.getVoteStatusByPostIDs = function (pids, uid, callback) {\n\t\tif (!parseInt(uid, 10)) {\n\t\t\tvar data = pids.map(function () { return false; });\n\t\t\treturn callback(null, {upvotes: data, downvotes: data});\n\t\t}\n\t\tvar upvoteSets = [];\n\t\tvar downvoteSets = [];\n\n\t\tfor (var i = 0; i < pids.length; ++i) {\n\t\t\tupvoteSets.push('pid:' + pids[i] + ':upvote');\n\t\t\tdownvoteSets.push('pid:' + pids[i] + ':downvote');\n\t\t}\n\n\t\tasync.parallel({\n\t\t\tupvotes: function (next) {\n\t\t\t\tdb.isMemberOfSets(upvoteSets, uid, next);\n\t\t\t},\n\t\t\tdownvotes: function (next) {\n\t\t\t\tdb.isMemberOfSets(downvoteSets, uid, next);\n\t\t\t}\n\t\t}, callback);\n\t};\n\n\tPosts.getUpvotedUidsByPids = function (pids, callback) {\n\t\tvar sets = pids.map(function (pid) {\n\t\t\treturn 'pid:' + pid + ':upvote';\n\t\t});\n\t\tdb.getSetsMembers(sets, callback);\n\t};\n\n\tfunction voteInProgress(pid, uid) {\n\t\treturn Array.isArray(votesInProgress[uid]) && votesInProgress[uid].indexOf(parseInt(pid, 10)) !== -1;\n\t}\n\n\tfunction putVoteInProgress(pid, uid) {\n\t\tvotesInProgress[uid] = votesInProgress[uid] || [];\n\t\tvotesInProgress[uid].push(parseInt(pid, 10));\n\t}\n\n\tfunction clearVoteProgress(pid, uid) {\n\t\tif (Array.isArray(votesInProgress[uid])) {\n\t\t\tvar index = votesInProgress[uid].indexOf(parseInt(pid, 10));\n\t\t\tif (index !== -1) {\n\t\t\t\tvotesInProgress[uid].splice(index, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction toggleVote(type, pid, uid, callback) {\n\t\tunvote(pid, uid, type, function (err) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvote(type, false, pid, uid, callback);\n\t\t});\n\t}\n\n\tfunction unvote(pid, uid, command, callback) {\n\t\tasync.parallel({\n\t\t\towner: function (next) {\n\t\t\t\tPosts.getPostField(pid, 'uid', next);\n\t\t\t},\n\t\t\tvoteStatus: function (next) {\n\t\t\t\tPosts.hasVoted(pid, uid, next);\n\t\t\t},\n\t\t\treputation: function (next) {\n\t\t\t\tuser.getUserField(uid, 'reputation', next);\n\t\t\t}\n\t\t}, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tif (parseInt(uid, 10) === parseInt(results.owner, 10)) {\n\t\t\t\treturn callback(new Error('self-vote'));\n\t\t\t}\n\n\t\t\tif (command === 'downvote' && parseInt(results.reputation) < parseInt(meta.config['privileges:downvote'], 10)) {\n\t\t\t\treturn callback(new Error('[[error:not-enough-reputation-to-downvote]]'));\n\t\t\t}\n\n\t\t\tvar voteStatus = results.voteStatus,\n\t\t\t\thook,\n\t\t\t\tcurrent = voteStatus.upvoted ? 'upvote' : 'downvote';\n\n\t\t\tif (voteStatus.upvoted && command === 'downvote' || voteStatus.downvoted && command === 'upvote') {\t// e.g. User *has* upvoted, and clicks downvote\n\t\t\t\thook = command;\n\t\t\t} else if (voteStatus.upvoted || voteStatus.downvoted) {\t// e.g. User *has* upvoted, clicks upvote (so we \"unvote\")\n\t\t\t\thook = 'unvote';\n\t\t\t} else {\t// e.g. User *has not* voted, clicks upvote\n\t\t\t\thook = command;\n\t\t\t\tcurrent = 'unvote';\n\t\t\t}\n\n\t\t\tplugins.fireHook('action:post.' + hook, {\n\t\t\t\tpid: pid,\n\t\t\t\tuid: uid,\n\t\t\t\towner: results.owner,\n\t\t\t\tcurrent: current\n\t\t\t});\n\n\t\t\tif (!voteStatus || (!voteStatus.upvoted && !voteStatus.downvoted)) {\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tvote(voteStatus.upvoted ? 'downvote' : 'upvote', true, pid, uid, callback);\n\t\t});\n\t}\n\n\tfunction vote(type, unvote, pid, uid, callback) {\n\t\tuid = parseInt(uid, 10);\n\n\t\tif (uid === 0) {\n\t\t\treturn callback(new Error('[[error:not-logged-in]]'));\n\t\t}\n\n\t\tPosts.getPostFields(pid, ['pid', 'uid', 'tid'], function (err, postData) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar now = Date.now();\n\n\t\t\tif (type === 'upvote' && !unvote) {\n\t\t\t\tdb.sortedSetAdd('uid:' + uid + ':upvote', now, pid);\n\t\t\t} else {\n\t\t\t\tdb.sortedSetRemove('uid:' + uid + ':upvote', pid);\n\t\t\t}\n\n\t\t\tif (type === 'upvote' || unvote) {\n\t\t\t\tdb.sortedSetRemove('uid:' + uid + ':downvote', pid);\n\t\t\t} else {\n\t\t\t\tdb.sortedSetAdd('uid:' + uid + ':downvote', now, pid);\n\t\t\t}\n\n\t\t\tuser[type === 'upvote' ? 'incrementUserFieldBy' : 'decrementUserFieldBy'](postData.uid, 'reputation', 1, function (err, newreputation) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\tif (parseInt(postData.uid, 10)) {\n\t\t\t\t\tdb.sortedSetAdd('users:reputation', newreputation, postData.uid);\n\t\t\t\t}\n\n\t\t\t\tadjustPostVotes(postData, uid, type, unvote, function (err) {\n\t\t\t\t\tcallback(err, {\n\t\t\t\t\t\tuser: {\n\t\t\t\t\t\t\treputation: newreputation\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpost: postData,\n\t\t\t\t\t\tupvote: type === 'upvote' && !unvote,\n\t\t\t\t\t\tdownvote: type === 'downvote' && !unvote\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tfunction adjustPostVotes(postData, uid, type, unvote, callback) {\n\t\tvar notType = (type === 'upvote' ? 'downvote' : 'upvote');\n\n\t\tasync.series([\n\t\t\tfunction (next) {\n\t\t\t\tif (unvote) {\n\t\t\t\t\tdb.setRemove('pid:' + postData.pid + ':' + type, uid, next);\n\t\t\t\t} else {\n\t\t\t\t\tdb.setAdd('pid:' + postData.pid + ':' + type, uid, next);\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tdb.setRemove('pid:' + postData.pid + ':' + notType, uid, next);\n\t\t\t}\n\t\t], function (err) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tasync.parallel({\n\t\t\t\tupvotes: function (next) {\n\t\t\t\t\tdb.setCount('pid:' + postData.pid + ':upvote', next);\n\t\t\t\t},\n\t\t\t\tdownvotes: function (next) {\n\t\t\t\t\tdb.setCount('pid:' + postData.pid + ':downvote', next);\n\t\t\t\t}\n\t\t\t}, function (err, results) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\t\t\t\tpostData.upvotes = parseInt(results.upvotes, 10);\n\t\t\t\tpostData.downvotes = parseInt(results.downvotes, 10);\n\t\t\t\tpostData.votes = postData.upvotes - postData.downvotes;\n\t\t\t\tPosts.updatePostVoteCount(postData, callback);\n\t\t\t});\n\t\t});\n\t}\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/privileges/helpers.js":"\n'use strict';\n\nvar async = require('async');\nvar groups = require('../groups');\n\nvar helpers = {};\n\nhelpers.some = function (tasks, callback) {\n\tasync.some(tasks, function (task, next) {\n\t\ttask(function (err, result) {\n\t\t\tnext(!err && result);\n\t\t});\n\t}, function (result) {\n\t\tcallback(null, result);\n\t});\n};\n\nhelpers.isUserAllowedTo = function (privilege, uid, cid, callback) {\n\tif (Array.isArray(privilege) && !Array.isArray(cid)) {\n\t\tisUserAllowedToPrivileges(privilege, uid, cid, callback);\n\t} else if (Array.isArray(cid) && !Array.isArray(privilege)) {\n\t\tisUserAllowedToCids(privilege, uid, cid, callback);\n\t} else {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n};\n\nfunction isUserAllowedToCids(privilege, uid, cids, callback) {\n\tif (parseInt(uid, 10) === 0) {\n\t\treturn isGuestAllowedToCids(privilege, cids, callback);\n\t}\n\n\tvar userKeys = [], groupKeys = [];\n\tfor (var i = 0; i < cids.length; ++i) {\n\t\tuserKeys.push('cid:' + cids[i] + ':privileges:' + privilege);\n\t\tgroupKeys.push('cid:' + cids[i] + ':privileges:groups:' + privilege);\n\t}\n\n\tasync.parallel({\n\t\thasUserPrivilege: function (next) {\n\t\t\tgroups.isMemberOfGroups(uid, userKeys, next);\n\t\t},\n\t\thasGroupPrivilege: function (next) {\n\t\t\tgroups.isMemberOfGroupsList(uid, groupKeys, next);\n\t\t}\n\t}, function (err, results) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tvar result = [];\n\t\tfor (var i = 0; i < cids.length; ++i) {\n\t\t\tresult.push(results.hasUserPrivilege[i] || results.hasGroupPrivilege[i]);\n\t\t}\n\n\t\tcallback(null, result);\n\t});\n}\n\nfunction isUserAllowedToPrivileges(privileges, uid, cid, callback) {\n\tif (parseInt(uid, 10) === 0) {\n\t\treturn isGuestAllowedToPrivileges(privileges, cid, callback);\n\t}\n\n\tvar userKeys = [], groupKeys = [];\n\tfor (var i = 0; i < privileges.length; ++i) {\n\t\tuserKeys.push('cid:' + cid + ':privileges:' + privileges[i]);\n\t\tgroupKeys.push('cid:' + cid + ':privileges:groups:' + privileges[i]);\n\t}\n\n\tasync.parallel({\n\t\thasUserPrivilege: function (next) {\n\t\t\tgroups.isMemberOfGroups(uid, userKeys, next);\n\t\t},\n\t\thasGroupPrivilege: function (next) {\n\t\t\tgroups.isMemberOfGroupsList(uid, groupKeys, next);\n\t\t}\n\t}, function (err, results) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tvar result = [];\n\t\tfor (var i = 0; i < privileges.length; ++i) {\n\t\t\tresult.push(results.hasUserPrivilege[i] || results.hasGroupPrivilege[i]);\n\t\t}\n\n\t\tcallback(null, result);\n\t});\n}\n\n\nhelpers.isUsersAllowedTo = function (privilege, uids, cid, callback) {\n\tasync.parallel({\n\t\thasUserPrivilege: function (next) {\n\t\t\tgroups.isMembers(uids, 'cid:' + cid + ':privileges:' + privilege, next);\n\t\t},\n\t\thasGroupPrivilege: function (next) {\n\t\t\tgroups.isMembersOfGroupList(uids, 'cid:' + cid + ':privileges:groups:' + privilege, next);\n\t\t}\n\t}, function (err, results) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tvar result = [];\n\t\tfor(var i = 0; i < uids.length; ++i) {\n\t\t\tresult.push(results.hasUserPrivilege[i] || results.hasGroupPrivilege[i]);\n\t\t}\n\n\t\tcallback(null, result);\n\t});\n};\n\nfunction isGuestAllowedToCids(privilege, cids, callback) {\n\tvar groupKeys = [];\n\tfor (var i = 0; i < cids.length; ++i) {\n\t\tgroupKeys.push('cid:' + cids[i] + ':privileges:groups:' + privilege);\n\t}\n\n\tgroups.isMemberOfGroups('guests', groupKeys, callback);\n}\n\nfunction isGuestAllowedToPrivileges(privileges, cid, callback) {\n\tvar groupKeys = [];\n\tfor (var i = 0; i < privileges.length; ++i) {\n\t\tgroupKeys.push('cid:' + cid + ':privileges:groups:' + privileges[i]);\n\t}\n\n\tgroups.isMemberOfGroups('guests', groupKeys, callback);\n}\n\nmodule.exports = helpers;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/privileges/posts.js":"\n'use strict';\n\nvar async = require('async');\n\nvar meta = require('../meta');\nvar posts = require('../posts');\nvar topics = require('../topics');\nvar user = require('../user');\nvar helpers = require('./helpers');\nvar plugins = require('../plugins');\n\nmodule.exports = function (privileges) {\n\n\tprivileges.posts = {};\n\n\tprivileges.posts.get = function (pids, uid, callback) {\n\t\tif (!Array.isArray(pids) || !pids.length) {\n\t\t\treturn callback(null, []);\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tposts.getCidsByPids(pids, next);\n\t\t\t},\n\t\t\tfunction (cids, next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\tisAdmin: async.apply(user.isAdministrator, uid),\n\t\t\t\t\tisModerator: async.apply(user.isModerator, uid, cids),\n\t\t\t\t\tisOwner: async.apply(posts.isOwner, pids, uid),\n\t\t\t\t\t'topics:read': async.apply(helpers.isUserAllowedTo, 'topics:read', uid, cids),\n\t\t\t\t\tread: async.apply(helpers.isUserAllowedTo, 'read', uid, cids),\n\t\t\t\t\t'posts:edit': async.apply(helpers.isUserAllowedTo, 'posts:edit', uid, cids),\n\t\t\t\t}, next);\n\t\t\t}\n\t\t], function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar privileges = [];\n\n\t\t\tfor (var i = 0; i < pids.length; ++i) {\n\t\t\t\tvar isAdminOrMod = results.isAdmin || results.isModerator[i];\n\t\t\t\tvar editable = isAdminOrMod || (results.isOwner[i] && results['posts:edit'][i]);\n\n\t\t\t\tprivileges.push({\n\t\t\t\t\teditable: editable,\n\t\t\t\t\tview_deleted: editable,\n\t\t\t\t\tmove: isAdminOrMod,\n\t\t\t\t\tisAdminOrMod: isAdminOrMod,\n\t\t\t\t\t'topics:read': results['topics:read'][i] || isAdminOrMod,\n\t\t\t\t\tread: results.read[i] || isAdminOrMod\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tcallback(null, privileges);\n\t\t});\n\t};\n\n\tprivileges.posts.can = function (privilege, pid, uid, callback) {\n\t\tposts.getCidByPid(pid, function (err, cid) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tprivileges.categories.can(privilege, cid, uid, callback);\n\t\t});\n\t};\n\n\tprivileges.posts.filter = function (privilege, pids, uid, callback) {\n\t\tif (!Array.isArray(pids) || !pids.length) {\n\t\t\treturn callback(null, []);\n\t\t}\n\t\tvar cids;\n\t\tvar postData;\n\t\tvar tids;\n\t\tvar tidToTopic = {};\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tposts.getPostsFields(pids, ['uid', 'tid', 'deleted'], next);\n\t\t\t},\n\t\t\tfunction (_posts, next) {\n\t\t\t\tpostData = _posts;\n\t\t\t\ttids = _posts.map(function (post) {\n\t\t\t\t\treturn post && post.tid;\n\t\t\t\t}).filter(function (tid, index, array) {\n\t\t\t\t\treturn tid && array.indexOf(tid) === index;\n\t\t\t\t});\n\t\t\t\ttopics.getTopicsFields(tids, ['deleted', 'cid'], next);\n\t\t\t},\n\t\t\tfunction (topicData, next) {\n\n\t\t\t\ttopicData.forEach(function (topic, index) {\n\t\t\t\t\tif (topic) {\n\t\t\t\t\t\ttidToTopic[tids[index]] = topic;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tcids = postData.map(function (post, index) {\n\t\t\t\t\tif (post) {\n\t\t\t\t\t\tpost.pid = pids[index];\n\t\t\t\t\t\tpost.topic = tidToTopic[post.tid];\n\t\t\t\t\t}\n\t\t\t\t\treturn tidToTopic[post.tid] && tidToTopic[post.tid].cid;\n\t\t\t\t}).filter(function (cid, index, array) {\n\t\t\t\t\treturn cid && array.indexOf(cid) === index;\n\t\t\t\t});\n\n\t\t\t\tprivileges.categories.getBase(privilege, cids, uid, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\n\t\t\t\tvar isModOf = {};\n\t\t\t\tcids = cids.filter(function (cid, index) {\n\t\t\t\t\tisModOf[cid] = results.isModerators[index];\n\t\t\t\t\treturn !results.categories[index].disabled &&\n\t\t\t\t\t\t(results.allowedTo[index] || results.isAdmin || results.isModerators[index]);\n\t\t\t\t});\n\n\n\t\t\t\tpids = postData.filter(function (post) {\n\t\t\t\t\treturn post.topic && cids.indexOf(post.topic.cid) !== -1 &&\n\t\t\t\t\t\t((parseInt(post.topic.deleted, 10) !== 1 && parseInt(post.deleted, 10) !== 1) || results.isAdmin || isModOf[post.cid]);\n\t\t\t\t}).map(function (post) {\n\t\t\t\t\treturn post.pid;\n\t\t\t\t});\n\n\t\t\t\tplugins.fireHook('filter:privileges.posts.filter', {\n\t\t\t\t\tprivilege: privilege,\n\t\t\t\t\tuid: uid,\n\t\t\t\t\tpids: pids\n\t\t\t\t}, function (err, data) {\n\t\t\t\t\tnext(err, data ? data.pids : null);\n\t\t\t\t});\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tprivileges.posts.canEdit = function (pid, uid, callback) {\n\t\tasync.parallel({\n\t\t\tisEditable: async.apply(isPostEditable, pid, uid),\n\t\t\tisAdminOrMod: async.apply(isAdminOrMod, pid, uid)\n\t\t}, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tif (results.isAdminOrMod) {\n\t\t\t\treturn callback(null, {flag: true});\n\t\t\t}\n\n\t\t\tcallback(null, results.isEditable);\n\t\t});\n\t};\n\n\tprivileges.posts.canDelete = function (pid, uid, callback) {\n\t\tvar postData;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tposts.getPostFields(pid, ['uid', 'tid', 'timestamp', 'deleterUid'], next);\n\t\t\t},\n\t\t\tfunction (_postData, next) {\n\t\t\t\tpostData = _postData;\n\t\t\t\tasync.parallel({\n\t\t\t\t\tisAdminOrMod: async.apply(isAdminOrMod, pid, uid),\n\t\t\t\t\tisLocked: async.apply(topics.isLocked, postData.tid),\n\t\t\t\t\tisOwner: async.apply(posts.isOwner, pid, uid),\n\t\t\t\t\t'posts:delete': async.apply(privileges.posts.can, 'posts:delete', pid, uid)\n\t\t\t\t}, next);\n\t\t\t}\n\t\t], function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tif (results.isAdminOrMod) {\n\t\t\t\treturn callback(null, {flag: true});\n\t\t\t}\n\n\t\t\tif (results.isLocked) {\n\t\t\t\treturn callback(null, {flag: false, message: '[[error:topic-locked]]'});\n\t\t\t}\n\n\t\t\tif (!results['posts:delete']) {\n\t\t\t\treturn callback(null, {flag: false, message: '[[error:no-privileges]]'});\n\t\t\t}\n\n\t\t\tvar postDeleteDuration = parseInt(meta.config.postDeleteDuration, 10);\n\t\t\tif (postDeleteDuration && (Date.now() - parseInt(postData.timestamp, 10) > postDeleteDuration * 1000)) {\n\t\t\t\treturn callback(null, {flag: false, message: '[[error:post-delete-duration-expired, ' + meta.config.postDeleteDuration + ']]'});\n\t\t\t}\n\t\t\tvar deleterUid = parseInt(postData.deleterUid, 10) || 0;\n\t\t\tvar flag = results.isOwner && (deleterUid === 0 || deleterUid === parseInt(postData.uid, 10));\n\t\t\tcallback(null, {flag: flag, message: '[[error:no-privileges]]'});\n\t\t});\n\t};\n\n\tprivileges.posts.canMove = function (pid, uid, callback) {\n\t\tposts.isMain(pid, function (err, isMain) {\n\t\t\tif (err || isMain) {\n\t\t\t\treturn callback(err || new Error('[[error:cant-move-mainpost]]'));\n\t\t\t}\n\t\t\tisAdminOrMod(pid, uid, callback);\n\t\t});\n\t};\n\n\tprivileges.posts.canPurge = function (pid, uid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tposts.getCidByPid(pid, next);\n\t\t\t},\n\t\t\tfunction (cid, next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\tpurge: async.apply(privileges.categories.isUserAllowedTo, 'purge', cid, uid),\n\t\t\t\t\towner: async.apply(posts.isOwner, pid, uid),\n\t\t\t\t\tisAdminOrMod: async.apply(privileges.categories.isAdminOrMod, cid, uid)\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tnext(null, results.isAdminOrMod || (results.purge && results.owner));\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tfunction isPostEditable(pid, uid, callback) {\n\t\tvar tid;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tposts.getPostFields(pid, ['tid', 'timestamp'], next);\n\t\t\t},\n\t\t\tfunction (postData, next) {\n\t\t\t\ttid = postData.tid;\n\t\t\t\tvar postEditDuration = parseInt(meta.config.postEditDuration, 10);\n\t\t\t\tif (postEditDuration && Date.now() - parseInt(postData.timestamp, 10) > postEditDuration * 1000) {\n\t\t\t\t\treturn callback(null, {flag: false, message: '[[error:post-edit-duration-expired, ' + meta.config.postEditDuration + ']]'});\n\t\t\t\t}\n\t\t\t\ttopics.isLocked(postData.tid, next);\n\t\t\t},\n\t\t\tfunction (isLocked, next) {\n\t\t\t\tif (isLocked) {\n\t\t\t\t\treturn callback(null, {flag: false, message: '[[error:topic-locked]]'});\n\t\t\t\t}\n\n\t\t\t\tasync.parallel({\n\t\t\t\t\towner: async.apply(posts.isOwner, pid, uid),\n\t\t\t\t\tedit: async.apply(privileges.posts.can, 'posts:edit', pid, uid)\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (result, next) {\n\t\t\t\tnext(null, {flag: result.owner && result.edit, message: '[[error:no-privileges]]'});\n\t\t\t}\n\t\t], callback);\n\t}\n\n\tfunction isAdminOrMod(pid, uid, callback) {\n\t\thelpers.some([\n\t\t\tfunction (next) {\n\t\t\t\tposts.getCidByPid(pid, function (err, cid) {\n\t\t\t\t\tif (err || !cid) {\n\t\t\t\t\t\treturn next(err, false);\n\t\t\t\t\t}\n\n\t\t\t\t\tuser.isModerator(uid, cid, next);\n\t\t\t\t});\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tuser.isAdministrator(uid, next);\n\t\t\t}\n\t\t], callback);\n\t}\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/privileges/topics.js":"\n'use strict';\n\nvar async = require('async');\nvar _ = require('underscore');\n\nvar meta = require('../meta');\nvar topics = require('../topics');\nvar user = require('../user');\nvar helpers = require('./helpers');\nvar categories = require('../categories');\nvar plugins = require('../plugins');\n\nmodule.exports = function (privileges) {\n\n\tprivileges.topics = {};\n\n\tprivileges.topics.get = function (tid, uid, callback) {\n\t\tvar topic;\n\t\tvar privs = ['topics:reply', 'topics:read', 'topics:delete', 'posts:edit', 'posts:delete', 'read'];\n\t\tasync.waterfall([\n\t\t\tasync.apply(topics.getTopicFields, tid, ['cid', 'uid', 'locked', 'deleted']),\n\t\t\tfunction (_topic, next) {\n\t\t\t\ttopic = _topic;\n\t\t\t\tasync.parallel({\n\t\t\t\t\tprivileges: async.apply(helpers.isUserAllowedTo, privs, uid, topic.cid),\n\t\t\t\t\tisAdministrator: async.apply(user.isAdministrator, uid),\n\t\t\t\t\tisModerator: async.apply(user.isModerator, uid, topic.cid),\n\t\t\t\t\tdisabled: async.apply(categories.getCategoryField, topic.cid, 'disabled')\n\t\t\t\t}, next);\n\t\t\t}\n\t\t], function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar privData = _.object(privs, results.privileges);\n\t\t\tvar disabled = parseInt(results.disabled, 10) === 1;\n\t\t\tvar locked = parseInt(topic.locked, 10) === 1;\n\t\t\tvar deleted = parseInt(topic.deleted, 10) === 1;\n\t\t\tvar isOwner = !!parseInt(uid, 10) && parseInt(uid, 10) === parseInt(topic.uid, 10);\n\t\t\tvar isAdminOrMod = results.isAdministrator || results.isModerator;\n\t\t\tvar editable = isAdminOrMod;\n\t\t\tvar deletable = isAdminOrMod || (isOwner && privData['topics:delete']);\n\n\t\t\tplugins.fireHook('filter:privileges.topics.get', {\n\t\t\t\t'topics:reply': (privData['topics:reply'] && !locked && !deleted) || isAdminOrMod,\n\t\t\t\t'topics:read': privData['topics:read'] || isAdminOrMod,\n\t\t\t\t'topics:delete': (isOwner && privData['topics:delete']) || isAdminOrMod,\n\t\t\t\t'posts:edit': (privData['posts:edit'] && !locked) || isAdminOrMod,\n\t\t\t\t'posts:delete': (privData['posts:delete'] && !locked) || isAdminOrMod,\n\t\t\t\tread: privData.read || isAdminOrMod,\n\t\t\t\tview_thread_tools: editable || deletable,\n\t\t\t\teditable: editable,\n\t\t\t\tdeletable: deletable,\n\t\t\t\tview_deleted: isAdminOrMod || isOwner,\n\t\t\t\tisAdminOrMod: isAdminOrMod,\n\t\t\t\tdisabled: disabled,\n\t\t\t\ttid: tid,\n\t\t\t\tuid: uid\n\t\t\t}, callback);\n\t\t});\n\t};\n\n\tprivileges.topics.can = function (privilege, tid, uid, callback) {\n\t\ttopics.getTopicField(tid, 'cid', function (err, cid) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tprivileges.categories.can(privilege, cid, uid, callback);\n\t\t});\n\t};\n\n\tprivileges.topics.filterTids = function (privilege, tids, uid, callback) {\n\t\tif (!Array.isArray(tids) || !tids.length) {\n\t\t\treturn callback(null, []);\n\t\t}\n\t\tvar cids;\n\t\tvar topicsData;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\ttopics.getTopicsFields(tids, ['tid', 'cid', 'deleted'], next);\n\t\t\t},\n\t\t\tfunction (_topicsData, next) {\n\t\t\t\ttopicsData = _topicsData;\n\t\t\t\tcids = topicsData.map(function (topic) {\n\t\t\t\t\treturn topic.cid;\n\t\t\t\t}).filter(function (cid, index, array) {\n\t\t\t\t\treturn cid && array.indexOf(cid) === index;\n\t\t\t\t});\n\n\t\t\t\tprivileges.categories.getBase(privilege, cids, uid, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\n\t\t\t\tvar isModOf = {};\n\t\t\t\tcids = cids.filter(function (cid, index) {\n\t\t\t\t\tisModOf[cid] = results.isModerators[index];\n\t\t\t\t\treturn !results.categories[index].disabled &&\n\t\t\t\t\t\t(results.allowedTo[index] || results.isAdmin || results.isModerators[index]);\n\t\t\t\t});\n\n\t\t\t\ttids = topicsData.filter(function (topic) {\n\t\t\t\t\treturn cids.indexOf(topic.cid) !== -1 &&\n\t\t\t\t\t\t(parseInt(topic.deleted, 10) !== 1 || results.isAdmin || isModOf[topic.cid]);\n\t\t\t\t}).map(function (topic) {\n\t\t\t\t\treturn topic.tid;\n\t\t\t\t});\n\n\t\t\t\tplugins.fireHook('filter:privileges.topics.filter', {\n\t\t\t\t\tprivilege: privilege,\n\t\t\t\t\tuid: uid,\n\t\t\t\t\ttids: tids\n\t\t\t\t}, function (err, data) {\n\t\t\t\t\tnext(err, data ? data.tids : null);\n\t\t\t\t});\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tprivileges.topics.filterUids = function (privilege, tid, uids, callback) {\n\t\tif (!Array.isArray(uids) || !uids.length) {\n\t\t\treturn callback(null, []);\n\t\t}\n\n\t\tuids = uids.filter(function (uid, index, array) {\n\t\t\treturn array.indexOf(uid) === index;\n\t\t});\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\ttopics.getTopicFields(tid, ['tid', 'cid', 'deleted'], next);\n\t\t\t},\n\t\t\tfunction (topicData, next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\tdisabled: function (next) {\n\t\t\t\t\t\tcategories.getCategoryField(topicData.cid, 'disabled', next);\n\t\t\t\t\t},\n\t\t\t\t\tallowedTo: function (next) {\n\t\t\t\t\t\thelpers.isUsersAllowedTo(privilege, uids, topicData.cid, next);\n\t\t\t\t\t},\n\t\t\t\t\tisModerators: function (next) {\n\t\t\t\t\t\tuser.isModerator(uids, topicData.cid, next);\n\t\t\t\t\t},\n\t\t\t\t\tisAdmins: function (next) {\n\t\t\t\t\t\tuser.isAdministrator(uids, next);\n\t\t\t\t\t}\n\t\t\t\t}, function (err, results) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tuids = uids.filter(function (uid, index) {\n\t\t\t\t\t\treturn parseInt(results.disabled, 10) !== 1 &&\n\t\t\t\t\t\t\t((results.allowedTo[index] && parseInt(topicData.deleted, 10) !== 1) || results.isAdmins[index] || results.isModerators[index]);\n\t\t\t\t\t});\n\n\t\t\t\t\tnext(null, uids);\n\t\t\t\t});\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tprivileges.topics.canPurge = function (tid, uid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\ttopics.getTopicField(tid, 'cid', next);\n\t\t\t},\n\t\t\tfunction (cid, next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\tpurge: async.apply(privileges.categories.isUserAllowedTo, 'purge', cid, uid),\n\t\t\t\t\towner: async.apply(topics.isOwner, tid, uid),\n\t\t\t\t\tisAdminOrMod: async.apply(privileges.categories.isAdminOrMod, cid, uid)\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tnext(null, results.isAdminOrMod || (results.purge && results.owner));\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tprivileges.topics.canDelete = function (tid, uid, callback) {\n\t\tvar topicData;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\ttopics.getTopicFields(tid, ['cid', 'postcount'], next);\n\t\t\t},\n\t\t\tfunction (_topicData, next) {\n\t\t\t\ttopicData = _topicData;\n\t\t\t\tasync.parallel({\n\t\t\t\t\tisModerator: async.apply(user.isModerator, uid, topicData.cid),\n\t\t\t\t\tisAdministrator: async.apply(user.isAdministrator, uid),\n\t\t\t\t\tisOwner: async.apply(topics.isOwner, tid, uid),\n\t\t\t\t\t'topics:delete': async.apply(helpers.isUserAllowedTo, 'topics:delete', uid, [topicData.cid])\n\t\t\t\t}, next);\n\t\t\t}\n\t\t], function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tif (results.isModerator || results.isAdministrator) {\n\t\t\t\treturn callback(null, true);\n\t\t\t}\n\n\t\t\tvar preventTopicDeleteAfterReplies = parseInt(meta.config.preventTopicDeleteAfterReplies, 10) || 0;\n\t\t\tif (preventTopicDeleteAfterReplies && (topicData.postcount - 1) >= preventTopicDeleteAfterReplies) {\n\t\t\t\tvar langKey = preventTopicDeleteAfterReplies > 1 ?\n\t\t\t\t\t'[[error:cant-delete-topic-has-replies, ' + meta.config.preventTopicDeleteAfterReplies + ']]' :\n\t\t\t\t\t'[[error:cant-delete-topic-has-reply]]';\n\t\t\t\treturn callback(new Error(langKey));\n\t\t\t}\n\n\t\t\tif (!results['topics:delete'][0]) {\n\t\t\t\treturn callback(null, false);\n\t\t\t}\n\n\t\t\tcallback(null, results.isOwner);\n\t\t});\n\t};\n\n\tprivileges.topics.canEdit = function (tid, uid, callback) {\n\t\tprivileges.topics.isOwnerOrAdminOrMod(tid, uid, callback);\n\t};\n\n\tprivileges.topics.isOwnerOrAdminOrMod = function (tid, uid, callback) {\n\t\thelpers.some([\n\t\t\tfunction (next) {\n\t\t\t\ttopics.isOwner(tid, uid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tprivileges.topics.isAdminOrMod(tid, uid, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\n\tprivileges.topics.isAdminOrMod = function (tid, uid, callback) {\n\t\thelpers.some([\n\t\t\tfunction (next) {\n\t\t\t\ttopics.getTopicField(tid, 'cid', function (err, cid) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\t\t\t\t\tuser.isModerator(uid, cid, next);\n\t\t\t\t});\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tuser.isAdministrator(uid, next);\n\t\t\t}\n\t\t], callback);\n\t};\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/privileges/users.js":"\n'use strict';\n\nvar async = require('async');\n\nvar groups = require('../groups');\nvar plugins = require('../plugins');\n\nmodule.exports = function (privileges) {\n\n\tprivileges.users = {};\n\n\tprivileges.users.isAdministrator = function (uid, callback) {\n\t\tif (Array.isArray(uid)) {\n\t\t\tgroups.isMembers(uid, 'administrators', callback);\n\t\t} else {\n\t\t\tgroups.isMember(uid, 'administrators', callback);\n\t\t}\n\t};\n\n\tprivileges.users.isGlobalModerator = function (uid, callback) {\n\t\tif (Array.isArray(uid)) {\n\t\t\tgroups.isMembers(uid, 'Global Moderators', callback);\n\t\t} else {\n\t\t\tgroups.isMember(uid, 'Global Moderators', callback);\n\t\t}\n\t};\n\n\tprivileges.users.isModerator = function (uid, cid, callback) {\n\t\tif (Array.isArray(cid)) {\n\t\t\tisModeratorOfCategories(cid, uid, callback);\n\t\t} else {\n\t\t\tif (Array.isArray(uid)) {\n\t\t\t\tisModeratorsOfCategory(cid, uid, callback);\n\t\t\t} else {\n\t\t\t\tisModeratorOfCategory(cid, uid, callback);\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction isModeratorOfCategories(cids, uid, callback) {\n\t\tif (!parseInt(uid, 10)) {\n\t\t\treturn filterIsModerator(cids, uid, cids.map(function () {return false;}), callback);\n\t\t}\n\n\t\tprivileges.users.isGlobalModerator(uid, function (err, isGlobalModerator) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tif (isGlobalModerator) {\n\t\t\t\treturn filterIsModerator(cids, uid, cids.map(function () {return true;}), callback);\n\t\t\t}\n\n\n\t\t\tvar uniqueCids = cids.filter(function (cid, index, array) {\n\t\t\t\treturn array.indexOf(cid) === index;\n\t\t\t});\n\n\t\t\tvar groupNames = uniqueCids.map(function (cid) {\n\t\t\t\treturn 'cid:' + cid + ':privileges:mods';\t// At some point we should *probably* change this to \"moderate\" as well\n\t\t\t});\n\n\t\t\tvar groupListNames = uniqueCids.map(function (cid) {\n\t\t\t\treturn 'cid:' + cid + ':privileges:groups:moderate';\n\t\t\t});\n\n\t\t\tasync.parallel({\n\t\t\t\tuser: async.apply(groups.isMemberOfGroups, uid, groupNames),\n\t\t\t\tgroup: async.apply(groups.isMemberOfGroupsList, uid, groupListNames)\n\t\t\t}, function (err, checks) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\tvar isMembers = checks.user.map(function (isMember, idx) {\n\t\t\t\t\t\treturn isMember || checks.group[idx];\n\t\t\t\t\t}),\n\t\t\t\t\tmap = {};\n\n\t\t\t\tuniqueCids.forEach(function (cid, index) {\n\t\t\t\t\tmap[cid] = isMembers[index];\n\t\t\t\t});\n\n\t\t\t\tvar isModerator = cids.map(function (cid) {\n\t\t\t\t\treturn map[cid];\n\t\t\t\t});\n\n\t\t\t\tfilterIsModerator(cids, uid, isModerator, callback);\n\t\t\t});\n\t\t});\n\t}\n\n\tfunction isModeratorsOfCategory(cid, uids, callback) {\n\t\tasync.parallel([\n\t\t\tasync.apply(privileges.users.isGlobalModerator, uids),\n\t\t\tasync.apply(groups.isMembers, uids, 'cid:' + cid + ':privileges:mods'),\n\t\t\tasync.apply(groups.isMembersOfGroupList, uids, 'cid:' + cid + ':privileges:groups:moderate')\n\t\t], function (err, checks) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar isModerator = checks[0].map(function (isMember, idx) {\n\t\t\t\treturn isMember || checks[1][idx] || checks[2][idx];\n\t\t\t});\n\n\t\t\tfilterIsModerator(cid, uids, isModerator, callback);\n\t\t});\n\t}\n\n\tfunction isModeratorOfCategory(cid, uid, callback) {\n\t\tasync.parallel([\n\t\t\tasync.apply(privileges.users.isGlobalModerator, uid),\n\t\t\tasync.apply(groups.isMember, uid, 'cid:' + cid + ':privileges:mods'),\n\t\t\tasync.apply(groups.isMemberOfGroupList, uid, 'cid:' + cid + ':privileges:groups:moderate')\n\t\t], function (err, checks) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar isModerator = checks[0] || checks[1] || checks[2];\n\t\t\tfilterIsModerator(cid, uid, isModerator, callback);\n\t\t});\n\t}\n\n\tfunction filterIsModerator(cid, uid, isModerator, callback) {\n\t\tplugins.fireHook('filter:user.isModerator', {uid: uid, cid: cid, isModerator: isModerator}, function (err, data) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tif (Array.isArray(uid) && !Array.isArray(data.isModerator) || Array.isArray(cid) && !Array.isArray(data.isModerator)) {\n\t\t\t\treturn callback(new Error('filter:user.isModerator - i/o mismatch'));\n\t\t\t}\n\n\t\t\tcallback(null, data.isModerator);\n\t\t});\n\t}\n\n\tprivileges.users.canEdit = function (callerUid, uid, callback) {\n\t\tif (parseInt(callerUid, 10) === parseInt(uid, 10)) {\n\t\t\treturn process.nextTick(callback, null, true);\n\t\t}\n\n\t\tasync.parallel({\n\t\t\tisAdmin: function (next) {\n\t\t\t\tprivileges.users.isAdministrator(callerUid, next);\n\t\t\t},\n\t\t\tisGlobalMod: function (next) {\n\t\t\t\tprivileges.users.isGlobalModerator(callerUid, next);\n\t\t\t},\n\t\t\tisTargetAdmin: function (next) {\n\t\t\t\tprivileges.users.isAdministrator(uid, next);\n\t\t\t}\n\t\t}, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tvar canEdit = results.isAdmin || (results.isGlobalMod && !results.isTargetAdmin);\n\n\t\t\tcallback(null, canEdit);\n\t\t});\n\t};\n\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/rewards/admin.js":"\"use strict\";\n\nvar rewards = {},\n\tasync = require('async'),\n\tplugins = require('../plugins'),\n\tdb = require('../database');\n\n\nrewards.save = function (data, callback) {\n\tfunction save(data, next) {\n\t\tfunction commit(err, id) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tdata.id = id;\n\t\t\t\n\t\t\tasync.series([\n\t\t\t\tfunction (next) {\n\t\t\t\t\trewards.delete(data, next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tdb.setAdd('rewards:list', data.id, next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tdb.setObject('rewards:id:' + data.id, data, next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tdb.setObject('rewards:id:' + data.id + ':rewards', rewardsData, next);\n\t\t\t\t}\n\t\t\t], next);\n\t\t}\n\n\t\tif (!Object.keys(data.rewards).length) {\n\t\t\treturn next();\n\t\t}\n\n\t\tvar rewardsData = data.rewards;\n\t\tdelete data.rewards;\n\n\t\tif (!parseInt(data.id, 10)) {\n\t\t\tdb.incrObjectField('global', 'rewards:id', commit);\n\t\t} else {\n\t\t\tcommit(false, data.id);\n\t\t}\n\t}\n\n\tasync.each(data, save, function (err) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tsaveConditions(data, callback);\n\t});\n};\n\nrewards.delete = function (data, callback) {\n\tasync.parallel([\n\t\tfunction (next) {\n\t\t\tdb.setRemove('rewards:list', data.id, next);\n\t\t},\n\t\tfunction (next) {\n\t\t\tdb.delete('rewards:id:' + data.id, next);\n\t\t},\n\t\tfunction (next) {\n\t\t\tdb.delete('rewards:id:' + data.id + ':rewards', next);\n\t\t}\n\t], callback);\n};\n\nrewards.get = function (callback) {\n\tasync.parallel({\n\t\tactive: getActiveRewards,\n\t\tconditions: function (next) {\n\t\t\tplugins.fireHook('filter:rewards.conditions', [], next);\n\t\t},\n\t\tconditionals: function (next) {\n\t\t\tplugins.fireHook('filter:rewards.conditionals', [], next);\n\t\t},\n\t\trewards: function (next) {\n\t\t\tplugins.fireHook('filter:rewards.rewards', [], next);\n\t\t}\n\t}, callback);\n};\n\nfunction saveConditions(data, callback) {\n\tdb.delete('conditions:active', function (err) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tvar conditions = [],\n\t\t\trewardsPerCondition = {};\n\n\t\tdata.forEach(function (reward) {\n\t\t\tconditions.push(reward.condition);\n\t\t\trewardsPerCondition[reward.condition] = rewardsPerCondition[reward.condition] || [];\n\t\t\trewardsPerCondition[reward.condition].push(reward.id);\n\t\t});\n\n\t\tdb.setAdd('conditions:active', conditions, callback);\n\n\t\tasync.each(Object.keys(rewardsPerCondition), function (condition, next) {\n\t\t\tdb.setAdd('condition:' + condition + ':rewards', rewardsPerCondition[condition], next);\n\t\t}, callback);\n\t});\n}\n\nfunction getActiveRewards(callback) {\n\tvar activeRewards = [];\n\n\tfunction load(id, next) {\n\t\tasync.parallel({\n\t\t\tmain: function (next) {\n\t\t\t\tdb.getObject('rewards:id:' + id, next);\n\t\t\t},\n\t\t\trewards: function (next) {\n\t\t\t\tdb.getObject('rewards:id:' + id + ':rewards', next);\n\t\t\t}\n\t\t}, function (err, data) {\n\t\t\tif (data.main) {\n\t\t\t\tdata.main.disabled = data.main.disabled === 'true';\n\t\t\t\tdata.main.rewards = data.rewards;\n\t\t\t\tactiveRewards.push(data.main);\n\t\t\t}\n\n\t\t\tnext(err);\n\t\t});\n\t}\n\n\tdb.getSetMembers('rewards:list', function (err, rewards) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tasync.eachSeries(rewards, load, function (err) {\n\t\t\tcallback(err, activeRewards);\n\t\t});\n\t});\n}\n\nmodule.exports = rewards;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/rewards/index.js":"\"use strict\";\n\nvar rewards = {},\n\tdb = require('../database'),\n\tplugins = require('../plugins'),\n\tasync = require('async');\n\n\nrewards.checkConditionAndRewardUser = function (uid, condition, method, callback) {\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tisConditionActive(condition, function (err, isActive) {\n\t\t\t\tif (!isActive) {\n\t\t\t\t\treturn back(err);\n\t\t\t\t}\n\n\t\t\t\tnext(err);\n\t\t\t});\n\t\t},\n\t\tfunction (next) {\n\t\t\tgetIDsByCondition(condition, function (err, ids) {\n\t\t\t\tnext(err, ids);\n\t\t\t});\n\t\t},\n\t\tfunction (ids, next) {\n\t\t\tgetRewardDataByIDs(ids, next);\n\t\t},\n\t\tfunction (rewards, next) {\n\t\t\tfilterCompletedRewards(uid, rewards, function (err, filtered) {\n\t\t\t\tif (!filtered || !filtered.length) {\n\t\t\t\t\treturn back(err);\n\t\t\t\t}\n\n\t\t\t\tnext(err, filtered);\n\t\t\t});\n\t\t},\n\t\tfunction (rewards, next) {\n\t\t\tasync.filter(rewards, function (reward, next) {\n\t\t\t\tif (!reward) {\n\t\t\t\t\treturn next(false);\n\t\t\t\t}\n\n\t\t\t\tcheckCondition(reward, method, next);\n\t\t\t}, function (eligible) {\n\t\t\t\tif (!eligible) {\n\t\t\t\t\treturn next(false);\n\t\t\t\t}\n\n\t\t\t\tgiveRewards(uid, eligible, next);\n\t\t\t});\n\t\t}\n\t], back);\n\n\n\tfunction back(err) {\n\t\tif (typeof callback === 'function') {\n\t\t\tcallback(err);\n\t\t}\n\t}\n};\n\nfunction isConditionActive(condition, callback) {\n\tdb.isSetMember('conditions:active', condition, callback);\n}\n\nfunction getIDsByCondition(condition, callback) {\n\tdb.getSetMembers('condition:' + condition + ':rewards', callback);\n}\n\nfunction filterCompletedRewards(uid, rewards, callback) {\n\tdb.getSortedSetRangeByScoreWithScores('uid:' + uid + ':rewards', 0, -1, 1, '+inf', function (err, data) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tvar userRewards = {};\n\n\t\tdata.forEach(function (obj) {\n\t\t\tuserRewards[obj.value] = parseInt(obj.score, 10);\n\t\t});\n\n\t\trewards = rewards.filter(function (reward) {\n\t\t\tif (!reward) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar claimable = parseInt(reward.claimable, 10);\n\n\t\t\tif (claimable === 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn (userRewards[reward.id] >= reward.claimable) ? false : true;\n\t\t});\n\n\t\tcallback(false, rewards);\n\t});\n}\n\nfunction getRewardDataByIDs(ids, callback) {\n\tdb.getObjects(ids.map(function (id) {\n\t\treturn 'rewards:id:' + id;\n\t}), callback);\n}\n\nfunction getRewardsByRewardData(rewards, callback) {\n\tdb.getObjects(rewards.map(function (reward) {\n\t\treturn 'rewards:id:' + reward.id + ':rewards';\n\t}), callback);\n}\n\nfunction checkCondition(reward, method, callback) {\n\tmethod(function (err, value) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tplugins.fireHook('filter:rewards.checkConditional:' + reward.conditional, {left: value, right: reward.value}, function (err, bool) {\n\t\t\tcallback(err || bool);\n\t\t});\n\t});\n}\n\nfunction giveRewards(uid, rewards, callback) {\n\tgetRewardsByRewardData(rewards, function (err, rewardData) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tasync.each(rewards, function (reward, next) {\n\t\t\tplugins.fireHook('action:rewards.award:' + reward.rid, {uid: uid, reward: rewardData[rewards.indexOf(reward)]});\n\t\t\tdb.sortedSetIncrBy('uid:' + uid + ':rewards', 1, reward.id, next);\n\t\t}, callback);\n\t});\n}\n\n\nmodule.exports = rewards;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/routes/accounts.js":"\"use strict\";\n\nvar helpers = require('./helpers');\nvar setupPageRoute = helpers.setupPageRoute;\n\nmodule.exports = function (app, middleware, controllers) {\n\tvar middlewares = [middleware.checkGlobalPrivacySettings];\n\tvar accountMiddlewares = [middleware.checkGlobalPrivacySettings, middleware.checkAccountPermissions];\n\n\tsetupPageRoute(app, '/uid/:uid/:section1?/:section2?', middleware, [], middleware.redirectUidToUserslug);\n\n\tsetupPageRoute(app, '/user/:userslug', middleware, middlewares, controllers.accounts.profile.get);\n\tsetupPageRoute(app, '/user/:userslug/following', middleware, middlewares, controllers.accounts.follow.getFollowing);\n\tsetupPageRoute(app, '/user/:userslug/followers', middleware, middlewares, controllers.accounts.follow.getFollowers);\n\tsetupPageRoute(app, '/user/:userslug/posts', middleware, middlewares, controllers.accounts.posts.getPosts);\n\tsetupPageRoute(app, '/user/:userslug/topics', middleware, middlewares, controllers.accounts.posts.getTopics);\n\tsetupPageRoute(app, '/user/:userslug/best', middleware, middlewares, controllers.accounts.posts.getBestPosts);\n\tsetupPageRoute(app, '/user/:userslug/groups', middleware, middlewares, controllers.accounts.groups.get);\n\n\tsetupPageRoute(app, '/user/:userslug/bookmarks', middleware, accountMiddlewares, controllers.accounts.posts.getBookmarks);\n\tsetupPageRoute(app, '/user/:userslug/watched', middleware, accountMiddlewares, controllers.accounts.posts.getWatchedTopics);\n\tsetupPageRoute(app, '/user/:userslug/upvoted', middleware, accountMiddlewares, controllers.accounts.posts.getUpVotedPosts);\n\tsetupPageRoute(app, '/user/:userslug/downvoted', middleware, accountMiddlewares, controllers.accounts.posts.getDownVotedPosts);\n\tsetupPageRoute(app, '/user/:userslug/edit', middleware, accountMiddlewares, controllers.accounts.edit.get);\n\tsetupPageRoute(app, '/user/:userslug/edit/username', middleware, accountMiddlewares, controllers.accounts.edit.username);\n\tsetupPageRoute(app, '/user/:userslug/edit/email', middleware, accountMiddlewares, controllers.accounts.edit.email);\n\tsetupPageRoute(app, '/user/:userslug/edit/password', middleware, accountMiddlewares, controllers.accounts.edit.password);\n\tsetupPageRoute(app, '/user/:userslug/info', middleware, accountMiddlewares, controllers.accounts.info.get);\n\tsetupPageRoute(app, '/user/:userslug/settings', middleware, accountMiddlewares, controllers.accounts.settings.get);\n\n\tapp.delete('/api/user/:userslug/session/:uuid', [middleware.requireUser], controllers.accounts.session.revoke);\n\n\tsetupPageRoute(app, '/notifications', middleware, [middleware.authenticate], controllers.accounts.notifications.get);\n\tsetupPageRoute(app, '/user/:userslug/chats/:roomid?', middleware, middlewares, controllers.accounts.chats.get);\n\tsetupPageRoute(app, '/chats/:roomid?', middleware, [middleware.authenticate], controllers.accounts.chats.redirectToChat);\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/routes/helpers.js":"'use strict';\n\nvar helpers = {};\n\nhelpers.setupPageRoute = function (router, name, middleware, middlewares, controller) {\n\tmiddlewares = middlewares.concat([middleware.registrationComplete, middleware.pageView, middleware.pluginHooks]);\n\n\trouter.get(name, middleware.busyCheck, middleware.buildHeader, middlewares, controller);\n\trouter.get('/api' + name, middlewares, controller);\n};\n\nmodule.exports = helpers;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/routes/admin.js":"\"use strict\";\n\nvar express = require('express');\n\n\nfunction apiRoutes(router, middleware, controllers) {\n\trouter.get('/users/csv', middleware.authenticate, controllers.admin.users.getCSV);\n\n\tvar multipart = require('connect-multiparty');\n\tvar multipartMiddleware = multipart();\n\n\tvar middlewares = [multipartMiddleware, middleware.validateFiles, middleware.applyCSRF, middleware.authenticate];\n\n\trouter.post('/category/uploadpicture', middlewares, controllers.admin.uploads.uploadCategoryPicture);\n\trouter.post('/uploadfavicon', middlewares, controllers.admin.uploads.uploadFavicon);\n\trouter.post('/uploadTouchIcon', middlewares, controllers.admin.uploads.uploadTouchIcon);\n\trouter.post('/uploadlogo', middlewares, controllers.admin.uploads.uploadLogo);\n\trouter.post('/uploadOgImage', middlewares, controllers.admin.uploads.uploadOgImage);\n\trouter.post('/upload/sound', middlewares, controllers.admin.uploads.uploadSound);\n\trouter.post('/uploadDefaultAvatar', middlewares, controllers.admin.uploads.uploadDefaultAvatar);\n}\n\nfunction adminRouter(middleware, controllers) {\n\tvar router = express.Router();\n\n\trouter.use(middleware.admin.buildHeader);\n\n\taddRoutes(router, middleware, controllers);\n\n\treturn router;\n}\n\nfunction apiRouter(middleware, controllers) {\n\tvar router = express.Router();\n\n\taddRoutes(router, middleware, controllers);\n\n\tapiRoutes(router, middleware, controllers);\n\n\treturn router;\n}\n\nfunction addRoutes(router, middleware, controllers) {\n\tvar middlewares = [middleware.pluginHooks];\n\n\trouter.get('/', middlewares, controllers.admin.dashboard.get);\n\trouter.get('/general/dashboard', middlewares, controllers.admin.dashboard.get);\n\trouter.get('/general/languages', middlewares, controllers.admin.languages.get);\n\trouter.get('/general/sounds', middlewares, controllers.admin.sounds.get);\n\trouter.get('/general/navigation', middlewares, controllers.admin.navigation.get);\n\trouter.get('/general/homepage', middlewares, controllers.admin.homepage.get);\n\trouter.get('/general/social', middlewares, controllers.admin.social.get);\n\n\trouter.get('/manage/categories', middlewares, controllers.admin.categories.getAll);\n\trouter.get('/manage/categories/:category_id', middlewares, controllers.admin.categories.get);\n\trouter.get('/manage/categories/:category_id/analytics', middlewares, controllers.admin.categories.getAnalytics);\n\n\trouter.get('/manage/tags', middlewares, controllers.admin.tags.get);\n\trouter.get('/manage/flags', middlewares, controllers.admin.flags.get);\n\trouter.get('/manage/ip-blacklist', middlewares, controllers.admin.blacklist.get);\n\n\trouter.get('/manage/users', middlewares, controllers.admin.users.sortByJoinDate);\n\trouter.get('/manage/users/search', middlewares, controllers.admin.users.search);\n\trouter.get('/manage/users/latest', middlewares, controllers.admin.users.sortByJoinDate);\n\trouter.get('/manage/users/not-validated', middlewares, controllers.admin.users.notValidated);\n\trouter.get('/manage/users/no-posts', middlewares, controllers.admin.users.noPosts);\n\trouter.get('/manage/users/top-posters', middlewares, controllers.admin.users.topPosters);\n\trouter.get('/manage/users/most-reputation', middlewares, controllers.admin.users.mostReputaion);\n\trouter.get('/manage/users/inactive', middlewares, controllers.admin.users.inactive);\n\trouter.get('/manage/users/flagged', middlewares, controllers.admin.users.flagged);\n\trouter.get('/manage/users/banned', middlewares, controllers.admin.users.banned);\n\trouter.get('/manage/registration', middlewares, controllers.admin.users.registrationQueue);\n\n\trouter.get('/manage/groups', middlewares, controllers.admin.groups.list);\n\trouter.get('/manage/groups/:name', middlewares, controllers.admin.groups.get);\n\n\trouter.get('/settings/:term?', middlewares, controllers.admin.settings.get);\n\n\trouter.get('/appearance/:term?', middlewares, controllers.admin.appearance.get);\n\n\trouter.get('/extend/plugins', middlewares, controllers.admin.plugins.get);\n\trouter.get('/extend/widgets', middlewares, controllers.admin.extend.widgets.get);\n\trouter.get('/extend/rewards', middlewares, controllers.admin.extend.rewards.get);\n\n\trouter.get('/advanced/database', middlewares, controllers.admin.database.get);\n\trouter.get('/advanced/events', middlewares, controllers.admin.events.get);\n\trouter.get('/advanced/logs', middlewares, controllers.admin.logs.get);\n\trouter.get('/advanced/errors', middlewares, controllers.admin.errors.get);\n\trouter.get('/advanced/errors/export', middlewares, controllers.admin.errors.export);\n\trouter.get('/advanced/cache', middlewares, controllers.admin.cache.get);\n\n\trouter.get('/development/logger', middlewares, controllers.admin.logger.get);\n\trouter.get('/development/info', middlewares, controllers.admin.info.get);\n}\n\nmodule.exports = function (app, middleware, controllers) {\n\tapp.use('/admin/', adminRouter(middleware, controllers));\n\tapp.use('/api/admin/', apiRouter(middleware, controllers));\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/routes/api.js":"\"use strict\";\n\nvar express = require('express');\n\nvar uploadsController = require('../controllers/uploads');\n\nmodule.exports =  function (app, middleware, controllers) {\n\n\tvar router = express.Router();\n\tapp.use('/api', router);\n\n\trouter.get('/config', middleware.applyCSRF, controllers.api.getConfig);\n\trouter.get('/widgets/render', controllers.api.renderWidgets);\n\n\trouter.get('/me', middleware.checkGlobalPrivacySettings, controllers.api.getCurrentUser);\n\trouter.get('/user/uid/:uid', middleware.checkGlobalPrivacySettings, controllers.api.getUserByUID);\n\trouter.get('/user/username/:username', middleware.checkGlobalPrivacySettings, controllers.api.getUserByUsername);\n\trouter.get('/user/email/:email', middleware.checkGlobalPrivacySettings, controllers.api.getUserByEmail);\n\n\trouter.get('/:type/pid/:id', controllers.api.getObject);\n\trouter.get('/:type/tid/:id', controllers.api.getObject);\n\trouter.get('/:type/cid/:id', controllers.api.getObject);\n\n\trouter.get('/categories/:cid/moderators', controllers.api.getModerators);\n\trouter.get('/recent/posts/:term?', controllers.api.getRecentPosts);\n\trouter.get('/unread/:filter?/total', middleware.authenticate, controllers.unread.unreadTotal);\n\trouter.get('/topic/teaser/:topic_id', controllers.topics.teaser);\n\trouter.get('/topic/pagination/:topic_id', controllers.topics.pagination);\n\n\tvar multipart = require('connect-multiparty');\n\tvar multipartMiddleware = multipart();\n\tvar middlewares = [multipartMiddleware, middleware.validateFiles, middleware.applyCSRF];\n\trouter.post('/post/upload', middlewares, uploadsController.uploadPost);\n\trouter.post('/topic/thumb/upload', middlewares, uploadsController.uploadThumb);\n\trouter.post('/user/:userslug/uploadpicture', middlewares.concat([middleware.authenticate, middleware.checkGlobalPrivacySettings, middleware.checkAccountPermissions]), controllers.accounts.edit.uploadPicture);\n\n\trouter.post('/user/:userslug/uploadcover', middlewares.concat([middleware.authenticate, middleware.checkGlobalPrivacySettings, middleware.checkAccountPermissions]), controllers.accounts.edit.uploadCoverPicture);\n\trouter.post('/groups/uploadpicture', middlewares.concat([middleware.authenticate]), controllers.groups.uploadCover);\n};\n\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/routes/authentication.js":"(function (Auth) {\n\t\"use strict\";\n\n\tvar passport = require('passport'),\n\t\tpassportLocal = require('passport-local').Strategy,\n\t\tnconf = require('nconf'),\n\t\twinston = require('winston'),\n\t\texpress = require('express'),\n\n\t\tcontrollers = require('../controllers'),\n\t\tplugins = require('../plugins'),\n\t\thotswap = require('../hotswap'),\n\n\t\tloginStrategies = [];\n\n\tAuth.initialize = function (app, middleware) {\n\t\tapp.use(passport.initialize());\n\t\tapp.use(passport.session());\n\n\t\tapp.use(function (req, res, next) {\n\t\t\treq.uid = req.user ? parseInt(req.user.uid, 10) : 0;\n\t\t\tnext();\n\t\t});\n\n\t\tAuth.app = app;\n\t\tAuth.middleware = middleware;\n\t};\n\n\tAuth.getLoginStrategies = function () {\n\t\treturn loginStrategies;\n\t};\n\n\tAuth.reloadRoutes = function (callback) {\n\t\tvar router = express.Router();\n\t\trouter.hotswapId = 'auth';\n\n\t\tloginStrategies.length = 0;\n\n\t\tif (plugins.hasListeners('action:auth.overrideLogin')) {\n\t\t\twinston.warn('[authentication] Login override detected, skipping local login strategy.');\n\t\t\tplugins.fireHook('action:auth.overrideLogin');\n\t\t} else {\n\t\t\tpassport.use(new passportLocal({passReqToCallback: true}, controllers.authentication.localLogin));\n\t\t}\n\n\t\tplugins.fireHook('filter:auth.init', loginStrategies, function (err) {\n\t\t\tif (err) {\n\t\t\t\twinston.error('filter:auth.init - plugin failure');\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tloginStrategies.forEach(function (strategy) {\n\t\t\t\tif (strategy.url) {\n\t\t\t\t\trouter.get(strategy.url, passport.authenticate(strategy.name, {\n\t\t\t\t\t\tscope: strategy.scope,\n\t\t\t\t\t\tprompt: strategy.prompt || undefined\n\t\t\t\t\t}));\n\t\t\t\t}\n\n\t\t\t\trouter.get(strategy.callbackURL, passport.authenticate(strategy.name, {\n\t\t\t\t\tsuccessReturnToOrRedirect: nconf.get('relative_path') + (strategy.successUrl !== undefined ? strategy.successUrl : '/'),\n\t\t\t\t\tfailureRedirect: nconf.get('relative_path') + (strategy.failureUrl !== undefined ? strategy.failureUrl : '/login')\n\t\t\t\t}));\n\t\t\t});\n\n\t\t\trouter.post('/register', Auth.middleware.applyCSRF, Auth.middleware.applyBlacklist, controllers.authentication.register);\n\t\t\trouter.post('/register/complete', Auth.middleware.applyCSRF, Auth.middleware.applyBlacklist, controllers.authentication.registerComplete);\n\t\t\trouter.get('/register/abort', controllers.authentication.registerAbort);\n\t\t\trouter.post('/login', Auth.middleware.applyCSRF, Auth.middleware.applyBlacklist, controllers.authentication.login);\n\t\t\trouter.post('/logout', Auth.middleware.applyCSRF, controllers.authentication.logout);\n\n\t\t\thotswap.replace('auth', router);\n\t\t\tif (typeof callback === 'function') {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t};\n\n\tpassport.serializeUser(function (user, done) {\n\t\tdone(null, user.uid);\n\t});\n\n\tpassport.deserializeUser(function (uid, done) {\n\t\tdone(null, {\n\t\t\tuid: uid\n\t\t});\n\t});\n\n}(exports));\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/routes/debug.js":"\"use strict\";\n\nvar express = require('express');\nvar nconf = require('nconf');\nvar winston = require('winston');\nvar user = require('../user');\nvar categories = require('../categories');\nvar topics = require('../topics');\nvar posts = require('../posts');\nvar db = require('../database');\n\nmodule.exports = function (app, middleware, controllers) {\n\tvar router = express.Router();\n\n\trouter.get('/uid/:uid', function (req, res) {\n\t\tif (!req.params.uid) {\n\t\t\treturn res.redirect('/404');\n\t\t}\n\n\t\tuser.getUserData(req.params.uid, function (err, data) {\n\t\t\tif (err) {\n\t\t\t\twinston.error(err);\n\t\t\t}\n\n\t\t\tif (data) {\n\t\t\t\tres.send(data);\n\t\t\t} else {\n\t\t\t\tres.status(404).json({\n\t\t\t\t\terror: \"User doesn't exist!\"\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t});\n\n\trouter.get('/cid/:cid', function (req, res) {\n\t\tcategories.getCategoryData(req.params.cid, function (err, data) {\n\t\t\tif (err) {\n\t\t\t\twinston.error(err);\n\t\t\t}\n\n\t\t\tif (data) {\n\t\t\t\tres.send(data);\n\t\t\t} else {\n\t\t\t\tres.status(404).send(\"Category doesn't exist!\");\n\t\t\t}\n\t\t});\n\t});\n\n\trouter.get('/tid/:tid', function (req, res) {\n\t\ttopics.getTopicData(req.params.tid, function (err, data) {\n\t\t\tif (err) {\n\t\t\t\twinston.error(err);\n\t\t\t}\n\n\t\t\tif (data) {\n\t\t\t\tres.send(data);\n\t\t\t} else {\n\t\t\t\tres.status(404).send(\"Topic doesn't exist!\");\n\t\t\t}\n\t\t});\n\t});\n\n\trouter.get('/pid/:pid', function (req, res) {\n\t\tposts.getPostData(req.params.pid, function (err, data) {\n\t\t\tif (err) {\n\t\t\t\twinston.error(err);\n\t\t\t}\n\n\t\t\tif (data) {\n\t\t\t\tres.send(data);\n\t\t\t} else {\n\t\t\t\tres.status(404).send(\"Post doesn't exist!\");\n\t\t\t}\n\t\t});\n\t});\n\n\trouter.get('/test', function (req, res) {\n\t\tres.redirect(404);\n\t});\n\n\tapp.use(nconf.get('relative_path') + '/debug', router);\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/routes/feeds.js":"\"use strict\";\n\nvar async = require('async');\nvar rss = require('rss');\nvar nconf = require('nconf');\n\nvar posts = require('../posts');\nvar topics = require('../topics');\nvar user = require('../user');\nvar categories = require('../categories');\nvar meta = require('../meta');\nvar helpers = require('../controllers/helpers');\nvar privileges = require('../privileges');\n\n\nfunction generateForTopic(req, res, callback) {\n\tif (parseInt(meta.config['feeds:disableRSS'], 10) === 1) {\n\t\treturn callback();\n\t}\n\n\tvar tid = req.params.topic_id;\n\tvar userPrivileges;\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tasync.parallel({\n\t\t\t\tprivileges: function (next) {\n\t\t\t\t\tprivileges.topics.get(tid, req.uid, next);\n\t\t\t\t},\n\t\t\t\ttopic: function (next) {\n\t\t\t\t\ttopics.getTopicData(tid, next);\n\t\t\t\t}\n\t\t\t}, next);\n\t\t},\n\t\tfunction (results, next) {\n\t\t\tif (!results.topic) {\n\t\t\t\treturn callback();\n\t\t\t}\n\t\t\tif (parseInt(results.topic.deleted, 10) && !results.privileges.view_deleted) {\n\t\t\t\treturn callback();\n\t\t\t}\n\t\t\tif (!results.privileges.read || !results.privileges['topics:read']) {\n\t\t\t\treturn helpers.notAllowed(req, res);\n\t\t\t}\n\t\t\tuserPrivileges = results.privileges;\n\t\t\ttopics.getTopicWithPosts(results.topic, 'tid:' + tid + ':posts', req.uid, 0, 25, false, next);\n\t\t}\n\t], function (err, topicData) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\ttopics.modifyPostsByPrivilege(topicData, userPrivileges);\n\n\t\tvar description = topicData.posts.length ? topicData.posts[0].content : '';\n\t\tvar image_url = topicData.posts.length ? topicData.posts[0].picture : '';\n\t\tvar author = topicData.posts.length ? topicData.posts[0].username : '';\n\n\t\tvar feed = new rss({\n\t\t\t\ttitle: topicData.title,\n\t\t\t\tdescription: description,\n\t\t\t\tfeed_url: nconf.get('url') + '/topic/' + tid + '.rss',\n\t\t\t\tsite_url: nconf.get('url') + '/topic/' + topicData.slug,\n\t\t\t\timage_url: image_url,\n\t\t\t\tauthor: author,\n\t\t\t\tttl: 60\n\t\t\t}),\n\t\t\tdateStamp;\n\n\t\tif (topicData.posts.length > 0) {\n\t\t\tfeed.pubDate = new Date(parseInt(topicData.posts[0].timestamp, 10)).toUTCString();\n\t\t}\n\n\t\ttopicData.posts.forEach(function (postData) {\n\t\t\tif (!postData.deleted) {\n\t\t\t\tdateStamp = new Date(parseInt(parseInt(postData.edited, 10) === 0 ? postData.timestamp : postData.edited, 10)).toUTCString();\n\n\t\t\t\tfeed.item({\n\t\t\t\t\ttitle: 'Reply to ' + topicData.title + ' on ' + dateStamp,\n\t\t\t\t\tdescription: postData.content,\n\t\t\t\t\turl: nconf.get('url') + '/post/' + postData.pid,\n\t\t\t\t\tauthor: postData.user ? postData.user.username : '',\n\t\t\t\t\tdate: dateStamp\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tsendFeed(feed, res);\n\t});\n}\n\nfunction generateForUserTopics(req, res, callback) {\n\tif (parseInt(meta.config['feeds:disableRSS'], 10) === 1) {\n\t\treturn callback();\n\t}\n\n\tvar userslug = req.params.userslug;\n\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tuser.getUidByUserslug(userslug, next);\n\t\t},\n\t\tfunction (uid, next) {\n\t\t\tif (!uid) {\n\t\t\t\treturn callback();\n\t\t\t}\n\t\t\tuser.getUserFields(uid, ['uid', 'username'], next);\n\t\t}\n\t], function (err, userData) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tgenerateForTopics({\n\t\t\tuid: req.uid,\n\t\t\ttitle: 'Topics by ' + userData.username,\n\t\t\tdescription: 'A list of topics that are posted by ' + userData.username,\n\t\t\tfeed_url: '/user/' + userslug + '/topics.rss',\n\t\t\tsite_url: '/user/' + userslug + '/topics'\n\t\t}, 'uid:' + userData.uid + ':topics', req, res, callback);\n\t});\n}\n\nfunction generateForCategory(req, res, next) {\n\tif (parseInt(meta.config['feeds:disableRSS'], 10) === 1) {\n\t\treturn next();\n\t}\n\tvar cid = req.params.category_id;\n\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tasync.parallel({\n\t\t\t\tprivileges: function (next) {\n\t\t\t\t\tprivileges.categories.get(cid, req.uid, next);\n\t\t\t\t},\n\t\t\t\tcategory: function (next) {\n\t\t\t\t\tcategories.getCategoryById({\n\t\t\t\t\t\tcid: cid,\n\t\t\t\t\t\tset: 'cid:' + cid + ':tids',\n\t\t\t\t\t\treverse: true,\n\t\t\t\t\t\tstart: 0,\n\t\t\t\t\t\tstop: 25,\n\t\t\t\t\t\tuid: req.uid\n\t\t\t\t\t}, next);\n\t\t\t\t}\n\t\t\t}, next);\n\t\t},\n\t\tfunction (results, next) {\n\t\t\tif (!results.privileges.read) {\n\t\t\t\treturn helpers.notAllowed(req, res);\n\t\t\t}\n\t\t\tgenerateTopicsFeed({\n\t\t\t\tuid: req.uid,\n\t\t\t\ttitle: results.category.name,\n\t\t\t\tdescription: results.category.description,\n\t\t\t\tfeed_url: '/category/' + cid + '.rss',\n\t\t\t\tsite_url: '/category/' + results.category.cid,\n\t\t\t}, results.category.topics, next);\n\t\t}\n\t], function (err, feed) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\t\tsendFeed(feed, res);\n\t});\n}\n\nfunction generateForRecent(req, res, next) {\n\tif (parseInt(meta.config['feeds:disableRSS'], 10) === 1) {\n\t\treturn next();\n\t}\n\tgenerateForTopics({\n\t\tuid: req.uid,\n\t\ttitle: 'Recently Active Topics',\n\t\tdescription: 'A list of topics that have been active within the past 24 hours',\n\t\tfeed_url: '/recent.rss',\n\t\tsite_url: '/recent'\n\t}, 'topics:recent', req, res, next);\n}\n\nfunction generateForPopular(req, res, next) {\n\tif (parseInt(meta.config['feeds:disableRSS'], 10) === 1) {\n\t\treturn next();\n\t}\n\tvar terms = {\n\t\tdaily: 'day',\n\t\tweekly: 'week',\n\t\tmonthly: 'month',\n\t\talltime: 'alltime'\n\t};\n\tvar term = terms[req.params.term] || 'day';\n\n\ttopics.getPopular(term, req.uid, 19, function (err, topics) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tgenerateTopicsFeed({\n\t\t\tuid: req.uid,\n\t\t\ttitle: 'Popular Topics',\n\t\t\tdescription: 'A list of topics that are sorted by post count',\n\t\t\tfeed_url: '/popular/' + (req.params.term || 'daily') + '.rss',\n\t\t\tsite_url: '/popular/' + (req.params.term || 'daily')\n\t\t}, topics, function (err, feed) {\n\t\t\tif (err) {\n\t\t\t\treturn next(err);\n\t\t\t}\n\t\t\tsendFeed(feed, res);\n\t\t});\n\t});\n}\n\nfunction generateForTopics(options, set, req, res, next) {\n\ttopics.getTopicsFromSet(set, req.uid, 0, 19, function (err, data) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tgenerateTopicsFeed(options, data.topics, function (err, feed) {\n\t\t\tif (err) {\n\t\t\t\treturn next(err);\n\t\t\t}\n\t\t\tsendFeed(feed, res);\n\t\t});\n\t});\n}\n\nfunction generateTopicsFeed(feedOptions, feedTopics, callback) {\n\n\tfeedOptions.ttl = 60;\n\tfeedOptions.feed_url = nconf.get('url') + feedOptions.feed_url;\n\tfeedOptions.site_url = nconf.get('url') + feedOptions.site_url;\n\n\tfeedTopics = feedTopics.filter(Boolean);\n\n\tvar\tfeed = new rss(feedOptions);\n\n\tif (feedTopics.length > 0) {\n\t\tfeed.pubDate = new Date(parseInt(feedTopics[0].lastposttime, 10)).toUTCString();\n\t}\n\n\tasync.map(feedTopics, function (topicData, next) {\n\t\tvar feedItem = {\n\t\t\ttitle: topicData.title,\n\t\t\turl: nconf.get('url') + '/topic/' + topicData.slug,\n\t\t\tdate: new Date(parseInt(topicData.lastposttime, 10)).toUTCString()\n\t\t};\n\n\t\tif (topicData.teaser && topicData.teaser.user) {\n\t\t\tfeedItem.description = topicData.teaser.content;\n\t\t\tfeedItem.author = topicData.teaser.user.username;\n\t\t\treturn next(null, feedItem);\n\t\t}\n\n\t\ttopics.getMainPost(topicData.tid, feedOptions.uid, function (err, mainPost) {\n\t\t\tif (err) {\n\t\t\t\treturn next(err);\n\t\t\t}\n\t\t\tif (!mainPost) {\n\t\t\t\treturn next(null, feedItem);\n\t\t\t}\n\t\t\tfeedItem.description = mainPost.content;\n\t\t\tfeedItem.author = mainPost.user.username;\n\t\t\tnext(null, feedItem);\n\t\t});\n\t}, function (err, feedItems) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\t\tfeedItems.forEach(function (feedItem) {\n\t\t\tif (feedItem) {\n\t\t\t\tfeed.item(feedItem);\n\t\t\t}\n\t\t});\n\t\tcallback(null, feed);\n\t});\n}\n\nfunction generateForRecentPosts(req, res, next) {\n\tif (parseInt(meta.config['feeds:disableRSS'], 10) === 1) {\n\t\treturn next();\n\t}\n\n\tposts.getRecentPosts(req.uid, 0, 19, 'month', function (err, posts) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tvar feed = generateForPostsFeed({\n\t\t\ttitle: 'Recent Posts',\n\t\t\tdescription: 'A list of recent posts',\n\t\t\tfeed_url: '/recentposts.rss',\n\t\t\tsite_url: '/recentposts'\n\t\t}, posts);\n\n\t\tsendFeed(feed, res);\n\t});\n}\n\nfunction generateForCategoryRecentPosts(req, res, next) {\n\tif (parseInt(meta.config['feeds:disableRSS'], 10) === 1) {\n\t\treturn next();\n\t}\n\tvar cid = req.params.category_id;\n\n\tasync.parallel({\n\t\tprivileges: function (next) {\n\t\t\tprivileges.categories.get(cid, req.uid, next);\n\t\t},\n\t\tcategory: function (next) {\n\t\t\tcategories.getCategoryData(cid, next);\n\t\t},\n\t\tposts: function (next) {\n\t\t\tcategories.getRecentReplies(cid, req.uid, 20, next);\n\t\t}\n\t}, function (err, results) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\t\tif (!results.category) {\n\t\t\treturn next();\n\t\t}\n\n\t\tif (!results.privileges.read) {\n\t\t\treturn helpers.notAllowed(req, res);\n\t\t}\n\n\t\tvar feed = generateForPostsFeed({\n\t\t\ttitle: results.category.name + ' Recent Posts',\n\t\t\tdescription: 'A list of recent posts from ' + results.category.name,\n\t\t\tfeed_url: '/category/' + cid + '/recentposts.rss',\n\t\t\tsite_url: '/category/' + cid + '/recentposts'\n\t\t}, results.posts);\n\n\t\tsendFeed(feed, res);\n\t});\n}\n\nfunction generateForPostsFeed(feedOptions, posts) {\n\tfeedOptions.ttl = 60;\n\tfeedOptions.feed_url = nconf.get('url') + feedOptions.feed_url;\n\tfeedOptions.site_url = nconf.get('url') + feedOptions.site_url;\n\n\tvar\tfeed = new rss(feedOptions);\n\n\tif (posts.length > 0) {\n\t\tfeed.pubDate = new Date(parseInt(posts[0].timestamp, 10)).toUTCString();\n\t}\n\n\tposts.forEach(function (postData) {\n\t\tfeed.item({\n\t\t\ttitle: postData.topic ? postData.topic.title : '',\n\t\t\tdescription: postData.content,\n\t\t\turl: nconf.get('url') + '/post/' + postData.pid,\n\t\t\tauthor: postData.user ? postData.user.username : '',\n\t\t\tdate: new Date(parseInt(postData.timestamp, 10)).toUTCString()\n\t\t});\n\t});\n\n\treturn feed;\n}\n\nfunction sendFeed(feed, res) {\n\tvar xml = feed.xml();\n\tres.type('xml').set('Content-Length', Buffer.byteLength(xml)).send(xml);\n}\n\nmodule.exports = function (app, middleware, controllers) {\n\tapp.get('/topic/:topic_id.rss', generateForTopic);\n\tapp.get('/category/:category_id.rss', generateForCategory);\n\tapp.get('/recent.rss', generateForRecent);\n\tapp.get('/popular.rss', generateForPopular);\n\tapp.get('/popular/:term.rss', generateForPopular);\n\tapp.get('/recentposts.rss', generateForRecentPosts);\n\tapp.get('/category/:category_id/recentposts.rss', generateForCategoryRecentPosts);\n\tapp.get('/user/:userslug/topics.rss', generateForUserTopics);\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/routes/index.js":"\"use strict\";\n\nvar nconf = require('nconf');\nvar winston = require('winston');\nvar path = require('path');\nvar async = require('async');\nvar controllers = require('../controllers');\nvar plugins = require('../plugins');\nvar user = require('../user');\nvar express = require('express');\n\nvar accountRoutes = require('./accounts');\nvar metaRoutes = require('./meta');\nvar apiRoutes = require('./api');\nvar adminRoutes = require('./admin');\nvar feedRoutes = require('./feeds');\nvar pluginRoutes = require('./plugins');\nvar authRoutes = require('./authentication');\nvar helpers = require('./helpers');\n\nvar setupPageRoute = helpers.setupPageRoute;\n\nfunction mainRoutes(app, middleware, controllers) {\n\tsetupPageRoute(app, '/', middleware, [], controllers.home);\n\n\tvar loginRegisterMiddleware = [middleware.redirectToAccountIfLoggedIn];\n\n\tsetupPageRoute(app, '/login', middleware, loginRegisterMiddleware, controllers.login);\n\tsetupPageRoute(app, '/register', middleware, loginRegisterMiddleware, controllers.register);\n\tsetupPageRoute(app, '/register/complete', middleware, [], controllers.registerInterstitial);\n\tsetupPageRoute(app, '/compose', middleware, [], controllers.compose);\n\tsetupPageRoute(app, '/confirm/:code', middleware, [], controllers.confirmEmail);\n\tsetupPageRoute(app, '/outgoing', middleware, [], controllers.outgoing);\n\tsetupPageRoute(app, '/search', middleware, [], controllers.search.search);\n\tsetupPageRoute(app, '/reset/:code?', middleware, [], controllers.reset);\n\tsetupPageRoute(app, '/tos', middleware, [], controllers.termsOfUse);\n\n\tapp.get('/ping', controllers.ping);\n\tapp.get('/sping', controllers.ping);\n}\n\nfunction modRoutes(app, middleware, controllers) {\n\tsetupPageRoute(app, '/posts/flags', middleware, [], controllers.mods.flagged);\n}\n\nfunction globalModRoutes(app, middleware, controllers) {\n\tsetupPageRoute(app, '/ip-blacklist', middleware, [], controllers.globalMods.ipBlacklist);\n}\n\nfunction topicRoutes(app, middleware, controllers) {\n\tsetupPageRoute(app, '/topic/:topic_id/:slug/:post_index?', middleware, [], controllers.topics.get);\n\tsetupPageRoute(app, '/topic/:topic_id/:slug?', middleware, [], controllers.topics.get);\n}\n\nfunction postRoutes(app, middleware, controllers) {\n\tsetupPageRoute(app, '/post/:pid', middleware, [], controllers.posts.redirectToPost);\n}\n\nfunction tagRoutes(app, middleware, controllers) {\n\tsetupPageRoute(app, '/tags/:tag', middleware, [middleware.privateTagListing], controllers.tags.getTag);\n\tsetupPageRoute(app, '/tags', middleware, [middleware.privateTagListing], controllers.tags.getTags);\n}\n\nfunction categoryRoutes(app, middleware, controllers) {\n\tsetupPageRoute(app, '/categories', middleware, [], controllers.categories.list);\n\tsetupPageRoute(app, '/popular/:term?', middleware, [], controllers.popular.get);\n\tsetupPageRoute(app, '/recent/:filter?', middleware, [], controllers.recent.get);\n\tsetupPageRoute(app, '/unread/:filter?', middleware, [middleware.authenticate], controllers.unread.get);\n\n\tsetupPageRoute(app, '/category/:category_id/:slug/:topic_index', middleware, [], controllers.category.get);\n\tsetupPageRoute(app, '/category/:category_id/:slug?', middleware, [], controllers.category.get);\n}\n\nfunction userRoutes(app, middleware, controllers) {\n\tvar middlewares = [middleware.checkGlobalPrivacySettings];\n\n\tsetupPageRoute(app, '/users', middleware, middlewares, controllers.users.index);\n}\n\nfunction groupRoutes(app, middleware, controllers) {\n\tvar middlewares = [middleware.checkGlobalPrivacySettings];\n\n\tsetupPageRoute(app, '/groups', middleware, middlewares, controllers.groups.list);\n\tsetupPageRoute(app, '/groups/:slug', middleware, middlewares, controllers.groups.details);\n\tsetupPageRoute(app, '/groups/:slug/members', middleware, middlewares, controllers.groups.members);\n}\n\nmodule.exports = function (app, middleware, hotswapIds) {\n\tvar routers = [\n\t\texpress.Router(),\t// plugin router\n\t\texpress.Router(),\t// main app router\n\t\texpress.Router()\t// auth router\n\t];\n\tvar router = routers[1];\n\tvar pluginRouter = routers[0];\n\tvar authRouter = routers[2];\n\tvar relativePath = nconf.get('relative_path');\n\tvar ensureLoggedIn = require('connect-ensure-login');\n\n\tif (Array.isArray(hotswapIds) && hotswapIds.length) {\n\t\tfor(var idx,x = 0; x < hotswapIds.length; x++) {\n\t\t\tidx = routers.push(express.Router()) - 1;\n\t\t\trouters[idx].hotswapId = hotswapIds[x];\n\t\t}\n\t}\n\n\tpluginRouter.render = function () {\n\t\tapp.render.apply(app, arguments);\n\t};\n\n\t// Set-up for hotswapping (when NodeBB reloads)\n\tpluginRouter.hotswapId = 'plugins';\n\tauthRouter.hotswapId = 'auth';\n\n\tapp.all(relativePath + '(/api|/api/*?)', middleware.prepareAPI);\n\tapp.all(relativePath + '(/api/admin|/api/admin/*?)', middleware.isAdmin);\n\tapp.all(relativePath + '(/admin|/admin/*?)', ensureLoggedIn.ensureLoggedIn(nconf.get('relative_path') + '/login?local=1'), middleware.applyCSRF, middleware.isAdmin);\n\n\tapp.use(middleware.maintenanceMode);\n\n\tadminRoutes(router, middleware, controllers);\n\tmetaRoutes(router, middleware, controllers);\n\tapiRoutes(router, middleware, controllers);\n\tfeedRoutes(router, middleware, controllers);\n\tpluginRoutes(router, middleware, controllers);\n\n\tmainRoutes(router, middleware, controllers);\n\ttopicRoutes(router, middleware, controllers);\n\tpostRoutes(router, middleware, controllers);\n\tmodRoutes(router, middleware, controllers);\n\tglobalModRoutes(router, middleware, controllers);\n\ttagRoutes(router, middleware, controllers);\n\tcategoryRoutes(router, middleware, controllers);\n\taccountRoutes(router, middleware, controllers);\n\tuserRoutes(router, middleware, controllers);\n\tgroupRoutes(router, middleware, controllers);\n\n\tfor(var x = 0; x < routers.length; x++) {\n\t\tapp.use(relativePath, routers[x]);\n\t}\n\n\tif (process.env.NODE_ENV === 'development') {\n\t\trequire('./debug')(app, middleware, controllers);\n\t}\n\n\tapp.use(middleware.privateUploads);\n\tapp.use(relativePath + '/api/language/:language/:namespace', middleware.getTranslation);\n\tapp.use(relativePath, express.static(path.join(__dirname, '../../', 'public'), {\n\t\tmaxAge: app.enabled('cache') ? 5184000000 : 0\n\t}));\n\tapp.use('/vendor/jquery/timeago/locales', middleware.processTimeagoLocales);\n\tapp.use(controllers.handle404);\n\tapp.use(controllers.handleURIErrors);\n\tapp.use(controllers.handleErrors);\n\n\t// Add plugin routes\n\tasync.series([\n\t\tasync.apply(plugins.reloadRoutes),\n\t\tasync.apply(authRoutes.reloadRoutes),\n\t\tasync.apply(user.addInterstitials)\n\t], function (err) {\n\t\tif (err) {\n\t\t\treturn winston.error(err);\n\t\t}\n\t\twinston.info('Routes added');\n\t});\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/routes/meta.js":"\"use strict\";\n\nvar path = require('path');\nvar nconf = require('nconf');\n\nvar meta = require('../meta');\n\n\nfunction sendMinifiedJS(req, res) {\n\tvar target = path.basename(req.path);\n\tvar cache = meta.js.target[target] ? meta.js.target[target].cache : '';\n\tres.type('text/javascript').send(cache);\n}\n\n// The portions of code involving the source map are commented out as they're broken in UglifyJS2\n// Follow along here: https://github.com/mishoo/UglifyJS2/issues/700\n// function sendJSSourceMap(req, res) {\n// \tif (meta.js.hasOwnProperty('map')) {\n// \t\tres.type('application/json').send(meta.js.map);\n// \t} else {\n// \t\tres.redirect(404);\n// \t}\n// };\n\nfunction sendStylesheet(req, res) {\n\tres.type('text/css').status(200).send(meta.css.cache);\n}\n\nfunction sendACPStylesheet(req, res) {\n\tres.type('text/css').status(200).send(meta.css.acpCache);\n}\n\nfunction sendSoundFile(req, res, next) {\n\tvar resolved = meta.sounds._filePathHash[path.basename(req.path)];\n\n\tif (resolved) {\n\t\tres.status(200).sendFile(resolved);\n\t} else {\n\t\tnext();\n\t}\n}\n\nmodule.exports = function (app, middleware, controllers) {\n\tapp.get('/stylesheet.css', middleware.addExpiresHeaders, sendStylesheet);\n\tapp.get('/admin.css', middleware.addExpiresHeaders, sendACPStylesheet);\n\tapp.get('/nodebb.min.js', middleware.addExpiresHeaders, sendMinifiedJS);\n\tapp.get('/acp.min.js', middleware.addExpiresHeaders, sendMinifiedJS);\n\t// app.get('/nodebb.min.js.map', middleware.addExpiresHeaders, sendJSSourceMap);\n\tapp.get('/sitemap.xml', controllers.sitemap.render);\n\tapp.get('/sitemap/pages.xml', controllers.sitemap.getPages);\n\tapp.get('/sitemap/categories.xml', controllers.sitemap.getCategories);\n\tapp.get(/\\/sitemap\\/topics\\.(\\d+)\\.xml/, controllers.sitemap.getTopicPage);\n\tapp.get('/robots.txt', controllers.robots);\n\tapp.get('/manifest.json', controllers.manifest);\n\tapp.get('/css/previews/:theme', controllers.admin.themes.get);\n\n\tif (nconf.get('local-assets') === false) {\n\t\tapp.get('/sounds/*', middleware.addExpiresHeaders, sendSoundFile);\n\t}\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/routes/plugins.js":"\"use strict\";\n\nvar _ = require('underscore');\nvar path = require('path');\n\nvar plugins = require('../plugins');\n\nmodule.exports = function (app, middleware, controllers) {\n\t// Static Assets\n\tapp.get('/plugins/:id/*', middleware.addExpiresHeaders, function (req, res, next) {\n\n\t\tvar relPath = req._parsedUrl.pathname.replace('/plugins/', '');\n\n\t\tvar matches = _.map(plugins.staticDirs, function (realPath, mappedPath) {\n\t\t\tif (relPath.match(mappedPath)) {\n\t\t\t\tvar pathToFile = path.join(plugins.staticDirs[mappedPath], decodeURIComponent(relPath.slice(mappedPath.length)));\n\t\t\t\tif (pathToFile.startsWith(plugins.staticDirs[mappedPath])) {\n\t\t\t\t\treturn pathToFile;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}).filter(Boolean);\n\n\t\tif (!matches || !matches.length) {\n\t\t\treturn next();\n\t\t}\n\n\t\tres.sendFile(matches[0], {}, function (err) {\n\t\t\tif (err) {\n\t\t\t\tif (err.code === 'ENOENT') {\n\t\t\t\t\t// File doesn't exist, this isn't an error, to send to 404 handler\n\t\t\t\t\treturn next();\n\t\t\t\t} else {\n\t\t\t\t\treturn next(err);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/socket.io/blacklist.js":"\n'use strict';\n\nvar async = require('async');\nvar winston = require('winston');\n\nvar user = require('../user');\nvar meta = require('../meta');\n\nvar SocketBlacklist = {};\n\nSocketBlacklist.validate = function (socket, data, callback) {\n\tmeta.blacklist.validate(data.rules, callback);\n};\n\nSocketBlacklist.save = function (socket, rules, callback) {\n\tuser.isAdminOrGlobalMod(socket.uid, function (err, isAdminOrGlobalMod) {\n\t\tif (err || !isAdminOrGlobalMod) {\n\t\t\treturn callback(err || new Error('[[error:no-privileges]]'));\n\t\t}\n\n\t\tmeta.blacklist.save(rules, callback);\n\t});\n};\n\n\nmodule.exports = SocketBlacklist;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/socket.io/categories.js":"'use strict';\n\nvar async = require('async');\nvar db = require('../database');\nvar categories = require('../categories');\nvar privileges = require('../privileges');\nvar user = require('../user');\nvar topics = require('../topics');\nvar apiController = require('../controllers/api');\n\nvar SocketCategories = {};\n\nSocketCategories.getRecentReplies = function (socket, cid, callback) {\n\tcategories.getRecentReplies(cid, socket.uid, 4, callback);\n};\n\nSocketCategories.get = function (socket, data, callback) {\n\tasync.parallel({\n\t\tisAdmin: async.apply(user.isAdministrator, socket.uid),\n\t\tcategories: function (next) {\n\t\t\tasync.waterfall([\n\t\t\t\tasync.apply(db.getSortedSetRange, 'categories:cid', 0, -1),\n\t\t\t\tasync.apply(categories.getCategoriesData),\n\t\t\t], next);\n\t\t}\n\t}, function (err, results) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tresults.categories = results.categories.filter(function (category) {\n\t\t\treturn category && (!category.disabled || results.isAdmin);\n\t\t});\n\n\t\tcallback(null, results.categories);\n\t});\n};\n\nSocketCategories.getWatchedCategories = function (socket, data, callback) {\n\tasync.parallel({\n\t\tcategories: async.apply(categories.getCategoriesByPrivilege, 'cid:0:children', socket.uid, 'find'),\n\t\tignoredCids: async.apply(user.getIgnoredCategories, socket.uid)\n\t}, function (err, results) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\t\tvar watchedCategories =  results.categories.filter(function (category) {\n\t\t\treturn category && results.ignoredCids.indexOf(category.cid.toString()) === -1;\n\t\t});\n\n\t\tcallback(null, watchedCategories);\n\t});\n};\n\nSocketCategories.loadMore = function (socket, data, callback) {\n\tif (!data) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\tasync.parallel({\n\t\tprivileges: function (next) {\n\t\t\tprivileges.categories.get(data.cid, socket.uid, next);\n\t\t},\n\t\tsettings: function (next) {\n\t\t\tuser.getSettings(socket.uid, next);\n\t\t},\n\t\ttargetUid: function (next) {\n\t\t\tif (data.author) {\n\t\t\t\tuser.getUidByUserslug(data.author, next);\n\t\t\t} else {\n\t\t\t\tnext();\n\t\t\t}\n\t\t}\n\t}, function (err, results) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tif (!results.privileges.read) {\n\t\t\treturn callback(new Error('[[error:no-privileges]]'));\n\t\t}\n\n\t\tvar infScrollTopicsPerPage = 20;\n\t\tvar set = 'cid:' + data.cid + ':tids';\n\t\tvar reverse = false;\n\n\t\tif (data.categoryTopicSort === 'newest_to_oldest') {\n\t\t\treverse = true;\n\t\t} else if (data.categoryTopicSort === 'most_posts') {\n\t\t\treverse = true;\n\t\t\tset = 'cid:' + data.cid + ':tids:posts';\n\t\t}\n\n\t\tvar start = Math.max(0, parseInt(data.after, 10));\n\n\t\tif (data.direction === -1) {\n\t\t\tstart = start - (reverse ? infScrollTopicsPerPage : -infScrollTopicsPerPage);\n\t\t}\n\n\t\tvar stop = start + infScrollTopicsPerPage - 1;\n\n\t\tstart = Math.max(0, start);\n\t\tstop = Math.max(0, stop);\n\n\t\tif (results.targetUid) {\n\t\t\tset = 'cid:' + data.cid + ':uid:' + results.targetUid + ':tids';\n\t\t}\n\n\t\tif (data.tag) {\n\t\t\tset = [set, 'tag:' + data.tag + ':topics'];\n\t\t}\n\n\t\tcategories.getCategoryTopics({\n\t\t\tcid: data.cid,\n\t\t\tset: set,\n\t\t\treverse: reverse,\n\t\t\tstart: start,\n\t\t\tstop: stop,\n\t\t\tuid: socket.uid,\n\t\t\ttargetUid: results.targetUid,\n\t\t\tsettings: results.settings\n\t\t}, function (err, data) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tcategories.modifyTopicsByPrivilege(data.topics, results.privileges);\n\n\t\t\tdata.privileges = results.privileges;\n\t\t\tdata.template = {\n\t\t\t\tcategory: true,\n\t\t\t\tname: 'category'\n\t\t\t};\n\n\t\t\tcallback(null, data);\n\t\t});\n\t});\n};\n\nSocketCategories.getPageCount = function (socket, cid, callback) {\n\tcategories.getPageCount(cid, socket.uid, callback);\n};\n\nSocketCategories.getTopicCount = function (socket, cid, callback) {\n\tcategories.getCategoryField(cid, 'topic_count', callback);\n};\n\nSocketCategories.getCategoriesByPrivilege = function (socket, privilege, callback) {\n\tcategories.getCategoriesByPrivilege('categories:cid', socket.uid, privilege, callback);\n};\n\nSocketCategories.getMoveCategories = function (socket, data, callback) {\n\tasync.parallel({\n\t\tisAdmin: async.apply(user.isAdministrator, socket.uid),\n\t\tcategories: function (next) {\n\t\t\tasync.waterfall([\n\t\t\t\tfunction (next) {\n\t\t\t\t\tdb.getSortedSetRange('cid:0:children', 0, -1, next);\n\t\t\t\t},\n\t\t\t\tfunction (cids, next) {\n\t\t\t\t\tprivileges.categories.filterCids('read', cids, socket.uid, next);\n\t\t\t\t},\n\t\t\t\tfunction (cids, next) {\n\t\t\t\t\tcategories.getCategories(cids, socket.uid, next);\n\t\t\t\t}\n\t\t\t], next);\n\t\t}\n\t}, function (err, results) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tresults.categories = results.categories.filter(function (category) {\n\t\t\treturn category && (!category.disabled || results.isAdmin) && !category.link;\n\t\t});\n\n\t\tcallback(null, results.categories);\n\t});\n};\n\nSocketCategories.watch = function (socket, cid, callback) {\n\tignoreOrWatch(user.watchCategory, socket, cid, callback);\n};\n\nSocketCategories.ignore = function (socket, cid, callback) {\n\tignoreOrWatch(user.ignoreCategory, socket, cid, callback);\n};\n\nfunction ignoreOrWatch(fn, socket, cid, callback) {\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tdb.getSortedSetRange('categories:cid', 0, -1, next);\n\t\t},\n\t\tfunction (cids, next) {\n\t\t\tcategories.getCategoriesFields(cids, ['cid', 'parentCid'], next);\n\t\t},\n\t\tfunction (categoryData, next) {\n\t\t\tcategoryData.forEach(function (c) {\n\t\t\t\tc.cid = parseInt(c.cid, 10);\n\t\t\t\tc.parentCid = parseInt(c.parentCid, 10);\n\t\t\t});\n\n\t\t\tvar cids = [parseInt(cid, 10)];\n\n\t\t\t// filter to subcategories of cid\n\n\t\t\tvar any = true;\n\t\t\twhile (any) {\n\t\t\t\tany = false;\n\t\t\t\tcategoryData.forEach(function (c) {\n\t\t\t\t\tif (cids.indexOf(c.cid) === -1 && cids.indexOf(c.parentCid) !== -1) {\n\t\t\t\t\t\tcids.push(c.cid);\n\t\t\t\t\t\tany = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tasync.each(cids, function (cid, next) {\n\t\t\t\tfn(socket.uid, cid, next);\n\t\t\t}, next);\n\t\t},\n\t\tfunction (next) {\n\t\t\ttopics.pushUnreadCount(socket.uid, next);\n\t\t}\n\t], callback);\n}\n\nSocketCategories.isModerator = function (socket, cid, callback) {\n\tuser.isModerator(socket.uid, cid, callback);\n};\n\nSocketCategories.getCategory = function (socket, cid, callback) {\n\tapiController.getCategoryData(cid, socket.uid, callback);\n};\n\nmodule.exports = SocketCategories;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/socket.io/groups.js":"\"use strict\";\n\nvar\tasync = require('async');\n\nvar groups = require('../groups');\nvar meta = require('../meta');\nvar user = require('../user');\nvar utils = require('../../public/src/utils');\nvar groupsController = require('../controllers/groups');\n\nvar SocketGroups = {};\n\n\nSocketGroups.before = function (socket, method, data, next) {\n\tif (!data) {\n\t\treturn next(new Error('[[error:invalid-data]]'));\n\t}\n\tnext();\n};\n\nSocketGroups.join = function (socket, data, callback) {\n\tif (!parseInt(socket.uid, 10)) {\n\t\treturn callback(new Error('[[error:invalid-uid]]'));\n\t}\n\n\tif (data.groupName === 'administrators' || groups.isPrivilegeGroup(data.groupName)) {\n\t\treturn callback(new Error('[[error:not-allowed]]'));\n\t}\n\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tgroups.exists(data.groupName, next);\n\t\t},\n\t\tfunction (exists, next) {\n\t\t\tif (!exists) {\n\t\t\t\treturn next(new Error('[[error:no-group]]'));\n\t\t\t}\n\n\t\t\tif (parseInt(meta.config.allowPrivateGroups, 10) !== 1) {\n\t\t\t\treturn groups.join(data.groupName, socket.uid, callback);\n\t\t\t}\n\n\t\t\tasync.parallel({\n\t\t\t\tisAdmin: async.apply(user.isAdministrator, socket.uid),\n\t\t\t\tgroupData: async.apply(groups.getGroupData, data.groupName)\n\t\t\t}, next);\n\t\t},\n\t\tfunction (results, next) {\n\t\t\tif (results.groupData.private && results.groupData.disableJoinRequests) {\n\t\t\t\treturn next(new Error('[[error:join-requests-disabled]]'));\n\t\t\t}\n\n\t\t\tif (!results.groupData.private || results.isAdmin) {\n\t\t\t\tgroups.join(data.groupName, socket.uid, next);\n\t\t\t} else {\n\t\t\t\tgroups.requestMembership(data.groupName, socket.uid, next);\n\t\t\t}\n\t\t}\n\t], callback);\n};\n\nSocketGroups.leave = function (socket, data, callback) {\n\tif (!parseInt(socket.uid, 10)) {\n\t\treturn callback(new Error('[[error:invalid-uid]]'));\n\t}\n\n\tif (data.groupName === 'administrators') {\n\t\treturn callback(new Error('[[error:cant-remove-self-as-admin]]'));\n\t}\n\n\tgroups.leave(data.groupName, socket.uid, callback);\n};\n\nfunction isOwner(next) {\n\treturn function (socket, data, callback) {\n\t\tasync.parallel({\n\t\t\tisAdmin: async.apply(user.isAdministrator, socket.uid),\n\t\t\tisOwner: async.apply(groups.ownership.isOwner, socket.uid, data.groupName)\n\t\t}, function (err, results) {\n\t\t\tif (err || (!isOwner && !results.isAdmin)) {\n\t\t\t\treturn callback(err || new Error('[[error:no-privileges]]'));\n\t\t\t}\n\t\t\tnext(socket, data, callback);\n\t\t});\n\t};\n}\n\nfunction isInvited(next) {\n\treturn function (socket, data, callback) {\n\t\tgroups.isInvited(socket.uid, data.groupName, function (err, invited) {\n\t\t\tif (err || !invited) {\n\t\t\t\treturn callback(err || new Error('[[error:not-invited]]'));\n\t\t\t}\n\t\t\tnext(socket, data, callback);\n\t\t});\n\t};\n}\n\nSocketGroups.grant = isOwner(function (socket, data, callback) {\n\tgroups.ownership.grant(data.toUid, data.groupName, callback);\n});\n\nSocketGroups.rescind = isOwner(function (socket, data, callback) {\n\tgroups.ownership.rescind(data.toUid, data.groupName, callback);\n});\n\nSocketGroups.accept = isOwner(function (socket, data, callback) {\n\tgroups.acceptMembership(data.groupName, data.toUid, callback);\n});\n\nSocketGroups.reject = isOwner(function (socket, data, callback) {\n\tgroups.rejectMembership(data.groupName, data.toUid, callback);\n});\n\nSocketGroups.acceptAll = isOwner(function (socket, data, callback) {\n\tacceptRejectAll(groups.acceptMembership, socket, data, callback);\n});\n\nSocketGroups.rejectAll = isOwner(function (socket, data, callback) {\n\tacceptRejectAll(groups.rejectMembership, socket, data, callback);\n});\n\nfunction acceptRejectAll(method, socket, data, callback) {\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tgroups.getPending(data.groupName, next);\n\t\t},\n\t\tfunction (uids, next) {\n\t\t\tasync.each(uids, function (uid, next) {\n\t\t\t\tmethod(data.groupName, uid, next);\n\t\t\t}, next);\n\t\t}\n\t], callback);\n}\n\nSocketGroups.issueInvite = isOwner(function (socket, data, callback) {\n\tgroups.invite(data.groupName, data.toUid, callback);\n});\n\nSocketGroups.issueMassInvite = isOwner(function (socket, data, callback) {\n\tif (!data || !data.usernames || !data.groupName) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\tvar usernames = data.usernames.split(',');\n\tusernames = usernames.map(function (username) {\n\t\treturn username && username.trim();\n\t});\n\tuser.getUidsByUsernames(usernames, function (err, uids) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\t\tuids = uids.filter(function (uid) {\n\t\t\treturn !!uid && parseInt(uid, 10);\n\t\t});\n\n\t\tasync.eachSeries(uids, function (uid, next) {\n\t\t\tgroups.invite(data.groupName, uid, next);\n\t\t}, callback);\n\t});\n});\n\nSocketGroups.rescindInvite = isOwner(function (socket, data, callback) {\n\tgroups.rejectMembership(data.groupName, data.toUid, callback);\n});\n\nSocketGroups.acceptInvite = isInvited(function (socket, data, callback) {\n\tgroups.acceptMembership(data.groupName, socket.uid, callback);\n});\n\nSocketGroups.rejectInvite = isInvited(function (socket, data, callback) {\n\tgroups.rejectMembership(data.groupName, socket.uid, callback);\n});\n\nSocketGroups.update = isOwner(function (socket, data, callback) {\n\tgroups.update(data.groupName, data.values, callback);\n});\n\n\nSocketGroups.kick = isOwner(function (socket, data, callback) {\n\tif (socket.uid === parseInt(data.uid, 10)) {\n\t\treturn callback(new Error('[[error:cant-kick-self]]'));\n\t}\n\n\tgroups.ownership.isOwner(data.uid, data.groupName, function (err, isOwner) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\t\tgroups.kick(data.uid, data.groupName, isOwner, callback);\n\t});\n\n});\n\nSocketGroups.create = function (socket, data, callback) {\n\tif (!socket.uid) {\n\t\treturn callback(new Error('[[error:no-privileges]]'));\n\t} else if (parseInt(meta.config.allowGroupCreation, 10) !== 1) {\n\t\treturn callback(new Error('[[error:group-creation-disabled]]'));\n\t} else if (groups.isPrivilegeGroup(data.name)) {\n\t\treturn callback(new Error('[[error:invalid-group-name]]'));\n\t}\n\n\n\tdata.ownerUid = socket.uid;\n\tgroups.create(data, callback);\n};\n\nSocketGroups.delete = function (socket, data, callback) {\n\tif (data.groupName === 'administrators' ||\n\t\tdata.groupName === 'registered-users' ||\n\t\tdata.groupName === 'Global Moderators') {\n\t\treturn callback(new Error('[[error:not-allowed]]'));\n\t}\n\n\tasync.parallel({\n\t\tisOwner: async.apply(groups.ownership.isOwner, socket.uid, data.groupName),\n\t\tisAdmin: async.apply(user.isAdministrator, socket.uid)\n\t}, function (err, checks) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\t\tif (!checks.isOwner && !checks.isAdmin) {\n\t\t\treturn callback(new Error('[[error:no-privileges]]'));\n\t\t}\n\n\t\tgroups.destroy(data.groupName, callback);\n\t});\n};\n\nSocketGroups.search = function (socket, data, callback) {\n\tdata.options = data.options || {};\n\n\tif (!data.query) {\n\t\tvar groupsPerPage = 15;\n\t\tgroupsController.getGroupsFromSet(socket.uid, data.options.sort, 0, groupsPerPage - 1, function (err, data) {\n\t\t\tcallback(err, !err ? data.groups : null);\n\t\t});\n\t\treturn;\n\t}\n\n\tgroups.search(data.query, data.options, callback);\n};\n\nSocketGroups.loadMore = function (socket, data, callback) {\n\tif (!data.sort  || !utils.isNumber(data.after) || parseInt(data.after, 10) < 0) {\n\t\treturn callback();\n\t}\n\n\tvar groupsPerPage = 9;\n\tvar start = parseInt(data.after, 10);\n\tvar stop = start + groupsPerPage - 1;\n\tgroupsController.getGroupsFromSet(socket.uid, data.sort, start, stop, callback);\n};\n\nSocketGroups.searchMembers = function (socket, data, callback) {\n\tdata.uid = socket.uid;\n\tgroups.searchMembers(data, callback);\n};\n\nSocketGroups.loadMoreMembers = function (socket, data, callback) {\n\tif (!data.groupName || !utils.isNumber(data.after) || parseInt(data.after, 10) < 0) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\tdata.after = parseInt(data.after, 10);\n\tuser.getUsersFromSet('group:' + data.groupName + ':members', socket.uid, data.after, data.after + 9, function (err, users) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tcallback(null, {users: users, nextStart: data.after + 10});\n\t});\n};\n\nSocketGroups.cover = {};\n\nSocketGroups.cover.update = function (socket, data, callback) {\n\tif (!socket.uid) {\n\t\treturn callback(new Error('[[error:no-privileges]]'));\n\t}\n\n\tgroups.ownership.isOwner(socket.uid, data.groupName, function (err, isOwner) {\n\t\tif (err || !isOwner) {\n\t\t\treturn callback(err || new Error('[[error:no-privileges]]'));\n\t\t}\n\n\t\tgroups.updateCover(socket.uid, data, callback);\n\t});\n};\n\nSocketGroups.cover.remove = function (socket, data, callback) {\n\tif (!socket.uid) {\n\t\treturn callback(new Error('[[error:no-privileges]]'));\n\t}\n\n\tgroups.ownership.isOwner(socket.uid, data.groupName, function (err, isOwner) {\n\t\tif (err || !isOwner) {\n\t\t\treturn callback(err || new Error('[[error:no-privileges]]'));\n\t\t}\n\n\t\tgroups.removeCover(data, callback);\n\t});\n};\n\nmodule.exports = SocketGroups;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/socket.io/index.js":"\"use strict\";\n\nvar async = require('async');\nvar nconf = require('nconf');\nvar winston = require('winston');\nvar url = require('url');\nvar cookieParser = require('cookie-parser')(nconf.get('secret'));\n\nvar db = require('../database');\nvar logger = require('../logger');\nvar ratelimit = require('../middleware/ratelimit');\n\n(function (Sockets) {\n\tvar Namespaces = {};\n\tvar io;\n\n\tSockets.init = function (server) {\n\t\trequireModules();\n\n\t\tvar SocketIO = require('socket.io');\n\t\tvar socketioWildcard = require('socketio-wildcard')();\n\t\tio = new SocketIO({\n\t\t\tpath: nconf.get('relative_path') + '/socket.io'\n\t\t});\n\n\t\taddRedisAdapter(io);\n\n\t\tio.use(socketioWildcard);\n\t\tio.use(authorize);\n\n\t\tio.on('connection', onConnection);\n\n\t\tio.listen(server, {\n\t\t\ttransports: nconf.get('socket.io:transports')\n\t\t});\n\n\t\tSockets.server = io;\n\t};\n\n\tfunction onConnection(socket) {\n\t\tsocket.ip = socket.request.headers['x-forwarded-for'] || socket.request.connection.remoteAddress;\n\n\t\tlogger.io_one(socket, socket.uid);\n\n\t\tonConnect(socket);\n\n\t\tsocket.on('*', function (payload) {\n\t\t\tonMessage(socket, payload);\n\t\t});\n\t}\n\n\tfunction onConnect(socket) {\n\t\tif (socket.uid) {\n\t\t\tsocket.join('uid_' + socket.uid);\n\t\t\tsocket.join('online_users');\n\t\t} else {\n\t\t\tsocket.join('online_guests');\n\t\t}\n\n\t\tsocket.join('sess_' + socket.request.signedCookies[nconf.get('sessionKey')]);\n\t\tio.sockets.sockets[socket.id].emit('checkSession', socket.uid);\n\t}\n\n\tfunction onMessage(socket, payload) {\n\t\tif (!payload.data.length) {\n\t\t\treturn winston.warn('[socket.io] Empty payload');\n\t\t}\n\n\t\tvar eventName = payload.data[0];\n\t\tvar params = payload.data[1];\n\t\tvar callback = typeof payload.data[payload.data.length - 1] === 'function' ? payload.data[payload.data.length - 1] : function () {\n\t\t};\n\n\t\tif (!eventName) {\n\t\t\treturn winston.warn('[socket.io] Empty method name');\n\t\t}\n\n\t\tvar parts = eventName.toString().split('.');\n\t\tvar namespace = parts[0];\n\t\tvar methodToCall = parts.reduce(function (prev, cur) {\n\t\t\tif (prev !== null && prev[cur]) {\n\t\t\t\treturn prev[cur];\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}, Namespaces);\n\n\t\tif (!methodToCall) {\n\t\t\tif (process.env.NODE_ENV === 'development') {\n\t\t\t\twinston.warn('[socket.io] Unrecognized message: ' + eventName);\n\t\t\t}\n\t\t\treturn callback({message: '[[error:invalid-event]]'});\n\t\t}\n\n\t\tsocket.previousEvents = socket.previousEvents || [];\n\t\tsocket.previousEvents.push(eventName);\n\t\tif (socket.previousEvents.length > 20) {\n\t\t\tsocket.previousEvents.shift();\n\t\t}\n\n\t\tif (!eventName.startsWith('admin.') && ratelimit.isFlooding(socket)) {\n\t\t\twinston.warn('[socket.io] Too many emits! Disconnecting uid : ' + socket.uid + '. Events : ' + socket.previousEvents);\n\t\t\treturn socket.disconnect();\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tvalidateSession(socket, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tif (Namespaces[namespace].before) {\n\t\t\t\t\tNamespaces[namespace].before(socket, eventName, params, next);\n\t\t\t\t} else {\n\t\t\t\t\tnext();\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tmethodToCall(socket, params, next);\n\t\t\t}\n\t\t], function (err, result) {\n\t\t\tcallback(err ? {message: err.message} : null, result);\n\t\t});\n\t}\n\n\tfunction requireModules() {\n\t\tvar modules = ['admin', 'categories', 'groups', 'meta', 'modules',\n\t\t\t'notifications', 'plugins', 'posts', 'topics', 'user', 'blacklist'\n\t\t];\n\n\t\tmodules.forEach(function (module) {\n\t\t\tNamespaces[module] = require('./' + module);\n\t\t});\n\t}\n\n\tfunction validateSession(socket, callback) {\n\t\tvar req = socket.request;\n\t\tif (!req.signedCookies || !req.signedCookies[nconf.get('sessionKey')]) {\n\t\t\treturn callback(new Error('[[error:invalid-session]]'));\n\t\t}\n\t\tdb.sessionStore.get(req.signedCookies[nconf.get('sessionKey')], function (err, sessionData) {\n\t\t\tif (err || !sessionData) {\n\t\t\t\treturn callback(err || new Error('[[error:invalid-session]]'));\n\t\t\t}\n\n\t\t\tcallback();\n\t\t});\n\t}\n\n\tfunction authorize(socket, callback) {\n\t\tvar request = socket.request;\n\n\t\tif (!request) {\n\t\t\treturn callback(new Error('[[error:not-authorized]]'));\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tcookieParser(request, {}, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tdb.sessionStore.get(request.signedCookies[nconf.get('sessionKey')], function (err, sessionData) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\t\t\t\t\tif (sessionData && sessionData.passport && sessionData.passport.user) {\n\t\t\t\t\t\trequest.session = sessionData;\n\t\t\t\t\t\tsocket.uid = parseInt(sessionData.passport.user, 10);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsocket.uid = 0;\n\t\t\t\t\t}\n\t\t\t\t\tnext();\n\t\t\t\t});\n\t\t\t}\n\t\t], callback);\n\t}\n\n\tfunction addRedisAdapter(io) {\n\t\tif (nconf.get('redis')) {\n\t\t\tvar redisAdapter = require('socket.io-redis');\n\t\t\tvar redis = require('../database/redis');\n\t\t\tvar pub = redis.connect();\n\t\t\tvar sub = redis.connect({return_buffers: true});\n\t\t\tio.adapter(redisAdapter({pubClient: pub, subClient: sub}));\n\t\t} else if (nconf.get('isCluster') === 'true') {\n\t\t\twinston.warn('[socket.io] Clustering detected, you are advised to configure Redis as a websocket store.');\n\t\t}\n\t}\n\n\tSockets.in = function (room) {\n\t\treturn io.in(room);\n\t};\n\n\tSockets.getUserSocketCount = function (uid) {\n\t\tif (!io) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar room = io.sockets.adapter.rooms['uid_' + uid];\n\t\treturn room ? room.length : 0;\n\t};\n\n\n\tSockets.reqFromSocket = function (socket, payload, event) {\n\t\tvar headers = socket.request ? socket.request.headers : {};\n\t\tvar encrypted = socket.request ? !!socket.request.connection.encrypted : false;\n\t\tvar host = headers.host;\n\t\tvar referer = headers.referer || '';\n\t\tvar data = ((payload || {}).data || []);\n\n\t\tif (!host) {\n\t\t\thost = url.parse(referer).host || '';\n\t\t}\n\n\t\treturn {\n\t\t\tuid: socket.uid,\n\t\t\tparams: data[1],\n\t\t\tmethod: event || data[0],\n\t\t\tbody: payload,\n\t\t\tip: headers['x-forwarded-for'] || socket.ip,\n\t\t\thost: host,\n\t\t\tprotocol: encrypted ? 'https' : 'http',\n\t\t\tsecure: encrypted,\n\t\t\turl: referer,\n\t\t\tpath: referer.substr(referer.indexOf(host) + host.length),\n\t\t\theaders: headers\n\t\t};\n\t};\n\n}(exports));\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/socket.io/meta.js":"'use strict';\n\n\nvar user = require('../user');\nvar topics = require('../topics');\n\nvar SocketMeta = {\n\trooms: {}\n};\n\nSocketMeta.reconnected = function (socket, data, callback) {\n\tcallback = callback || function () {};\n\tif (socket.uid) {\n\t\ttopics.pushUnreadCount(socket.uid);\n\t\tuser.notifications.pushCount(socket.uid);\n\t}\n\tcallback();\n};\n\n/* Rooms */\n\nSocketMeta.rooms.enter = function (socket, data, callback) {\n\tif (!socket.uid) {\n\t\treturn callback();\n\t}\n\n\tif (!data) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\tif (data.enter) {\n\t\tdata.enter = data.enter.toString();\n\t}\n\n\tif (data.enter && data.enter.startsWith('uid_') && data.enter !== 'uid_' + socket.uid) {\n\t\treturn callback(new Error('[[error:not-allowed]]'));\n\t}\n\n\tleaveCurrentRoom(socket);\n\n\tif (data.enter) {\n\t\tsocket.join(data.enter);\n\t\tsocket.currentRoom = data.enter;\n\t}\n\tcallback();\n};\n\nSocketMeta.rooms.leaveCurrent = function (socket, data, callback) {\n\tif (!socket.uid || !socket.currentRoom) {\n\t\treturn callback();\n\t}\n\tleaveCurrentRoom(socket);\n\tcallback();\n};\n\nfunction leaveCurrentRoom(socket) {\n\tif (socket.currentRoom) {\n\t\tsocket.leave(socket.currentRoom);\n\t\tsocket.currentRoom = '';\n\t}\n}\n\nSocketMeta.getServerTime = function (socket, data, callback) {\n\t// Returns server time in milliseconds\n\tcallback(null, Date.now());\n};\n\nmodule.exports = SocketMeta;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/socket.io/modules.js":"\"use strict\";\nvar async = require('async');\nvar validator = require('validator');\n\nvar meta = require('../meta');\nvar notifications = require('../notifications');\nvar plugins = require('../plugins');\nvar Messaging = require('../messaging');\nvar utils = require('../../public/src/utils');\nvar server = require('./');\nvar user = require('../user');\n\nvar SocketModules = {\n\tchats: {},\n\tsounds: {},\n\tsettings: {}\n};\n\n/* Chat */\n\nSocketModules.chats.getRaw = function (socket, data, callback) {\n\tif (!data || !data.hasOwnProperty('mid')) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tMessaging.isUserInRoom(socket.uid, data.roomId, next);\n\t\t},\n\t\tfunction (inRoom, next) {\n\t\t\tif (!inRoom) {\n\t\t\t\treturn next(new Error('[[error:not-allowed]]'));\n\t\t\t}\n\t\t\tMessaging.getMessageField(data.mid, 'content', next);\n\t\t}\n\t], callback);\n};\n\nSocketModules.chats.newRoom = function (socket, data, callback) {\n\tif (!data) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\tif (rateLimitExceeded(socket)) {\n\t\treturn callback(new Error('[[error:too-many-messages]]'));\n\t}\n\n\tMessaging.canMessageUser(socket.uid, data.touid, function (err) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tMessaging.newRoom(socket.uid, [data.touid], callback);\n\t});\n};\n\nSocketModules.chats.send = function (socket, data, callback) {\n\tif (!data || !data.roomId || !socket.uid) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\tif (rateLimitExceeded(socket)) {\n\t\treturn callback(new Error('[[error:too-many-messages]]'));\n\t}\n\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tplugins.fireHook('filter:messaging.send', {\n\t\t\t\tdata: data,\n\t\t\t\tuid: socket.uid\n\t\t\t}, function (err, results) {\n\t\t\t\tdata = results.data;\n\t\t\t\tnext(err);\n\t\t\t});\n\t\t},\n\t\tfunction (next) {\n\t\t\tMessaging.canMessageRoom(socket.uid, data.roomId, next);\n\t\t},\n\t\tfunction (next) {\n\t\t\tMessaging.sendMessage(socket.uid, data.roomId, data.message, Date.now(), next);\n\t\t},\n\t\tfunction (message, next) {\n\t\t\tMessaging.notifyUsersInRoom(socket.uid, data.roomId, message);\n\t\t\tuser.updateOnlineUsers(socket.uid);\n\t\t\tnext(null, message);\n\t\t}\n\t], callback);\n};\n\nfunction rateLimitExceeded(socket) {\n\tvar now = Date.now();\n\tsocket.lastChatMessageTime = socket.lastChatMessageTime || 0;\n\tvar delay = meta.config.hasOwnProperty('chatMessageDelay') ? parseInt(meta.config.chatMessageDelay, 10) : 200;\n\tif (now - socket.lastChatMessageTime < delay) {\n\t\treturn true;\n\t} else {\n\t\tsocket.lastChatMessageTime = now;\n\t}\n\treturn false;\n}\n\nSocketModules.chats.loadRoom = function (socket, data, callback) {\n\tif (!data || !data.roomId) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tMessaging.isUserInRoom(socket.uid, data.roomId, next);\n\t\t},\n\t\tfunction (inRoom, next) {\n\t\t\tif (!inRoom) {\n\t\t\t\treturn next(new Error('[[error:not-allowed]]'));\n\t\t\t}\n\n\t\t\tasync.parallel({\n\t\t\t\troomData: async.apply(Messaging.getRoomData, data.roomId),\n\t\t\t\tcanReply: async.apply(Messaging.canReply, data.roomId, socket.uid),\n\t\t\t\tusers: async.apply(Messaging.getUsersInRoom, data.roomId, 0, -1),\n\t\t\t\tmessages: async.apply(Messaging.getMessages, {\n\t\t\t\t\tcallerUid: socket.uid,\n\t\t\t\t\tuid: data.uid || socket.uid,\n\t\t\t\t\troomId: data.roomId,\n\t\t\t\t\tisNew: false\n\t\t\t\t}),\n\t\t\t}, next);\n\t\t},\n\t\tfunction (results, next) {\n\t\t\tresults.roomData.users = results.users;\n\t\t\tresults.roomData.canReply = results.canReply;\n\t\t\tresults.roomData.usernames = Messaging.generateUsernames(results.users, socket.uid);\n\t\t\tresults.roomData.messages = results.messages;\n\t\t\tresults.roomData.groupChat = results.roomData.hasOwnProperty('groupChat') ? results.roomData.groupChat : results.users.length > 2;\n\t\t\tresults.roomData.isOwner = parseInt(results.roomData.owner, 10) === socket.uid;\n\t\t\tresults.roomData.maximumUsersInChatRoom = parseInt(meta.config.maximumUsersInChatRoom, 10) || 0;\n\t\t\tresults.roomData.showUserInput = !results.roomData.maximumUsersInChatRoom || results.roomData.maximumUsersInChatRoom > 2;\n\t\t\tnext(null, results.roomData);\n\t\t}\n\t], callback);\n};\n\nSocketModules.chats.addUserToRoom = function (socket, data, callback) {\n\tif (!data || !data.roomId || !data.username) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\tvar uid;\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tMessaging.getUserCountInRoom(data.roomId, next);\n\t\t},\n\t\tfunction (userCount, next) {\n\t\t\tvar maxUsers = parseInt(meta.config.maximumUsersInChatRoom, 10) || 0;\n\t\t\tif (maxUsers && userCount >= maxUsers) {\n\t\t\t\treturn next(new Error('[[error:cant-add-more-users-to-chat-room]]'));\n\t\t\t}\n\t\t\tnext();\n\t\t},\n\t\tfunction (next) {\n\t\t\tuser.getUidByUsername(data.username, next);\n\t\t},\n\t\tfunction (_uid, next) {\n\t\t\tuid = _uid;\n\t\t\tif (!uid) {\n\t\t\t\treturn next(new Error('[[error:no-user]]'));\n\t\t\t}\n\t\t\tif (socket.uid === parseInt(uid, 10)) {\n\t\t\t\treturn next(new Error('[[error:cant-add-self-to-chat-room]]'));\n\t\t\t}\n\t\t\tasync.parallel({\n\t\t\t\tsettings: async.apply(user.getSettings, uid),\n\t\t\t\tisAdminOrGlobalMod: async.apply(user.isAdminOrGlobalMod, socket.uid),\n\t\t\t\tisFollowing: async.apply(user.isFollowing, uid, socket.uid)\n\t\t\t}, next);\n\t\t},\n\t\tfunction (results, next) {\n\t\t\tif (results.settings.restrictChat && !results.isAdminOrGlobalMod && !results.isFollowing) {\n\t\t\t\treturn next(new Error('[[error:chat-restricted]]'));\n\t\t\t}\n\n\t\t\tMessaging.addUsersToRoom(socket.uid, [uid], data.roomId, next);\n\t\t}\n\t], callback);\n};\n\nSocketModules.chats.removeUserFromRoom = function (socket, data, callback) {\n\tif (!data || !data.roomId) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tuser.getUidByUsername(data.username, next);\n\t\t},\n\t\tfunction (uid, next) {\n\t\t\tif (!uid) {\n\t\t\t\treturn next(new Error('[[error:no-user]]'));\n\t\t\t}\n\n\t\t\tMessaging.removeUsersFromRoom(socket.uid, [uid], data.roomId, next);\n\t\t}\n\t], callback);\n};\n\nSocketModules.chats.leave = function (socket, roomid, callback) {\n\tif (!socket.uid || !roomid) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\tMessaging.leaveRoom([socket.uid], roomid, callback);\n};\n\n\nSocketModules.chats.edit = function (socket, data, callback) {\n\tif (!data || !data.roomId) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\tMessaging.canEdit(data.mid, socket.uid, function (err, allowed) {\n\t\tif (err || !allowed) {\n\t\t\treturn callback(err || new Error('[[error:cant-edit-chat-message]]'));\n\t\t}\n\n\t\tMessaging.editMessage(socket.uid, data.mid, data.roomId, data.message, callback);\n\t});\n};\n\nSocketModules.chats.delete = function (socket, data, callback) {\n\tif (!data || !data.roomId || !data.messageId) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\tMessaging.canEdit(data.messageId, socket.uid, function (err, allowed) {\n\t\tif (err || !allowed) {\n\t\t\treturn callback(err || new Error('[[error:cant-delete-chat-message]]'));\n\t\t}\n\n\t\tMessaging.deleteMessage(data.messageId, data.roomId, callback);\n\t});\n};\n\nSocketModules.chats.canMessage = function (socket, roomId, callback) {\n\tMessaging.canMessageRoom(socket.uid, roomId, callback);\n};\n\nSocketModules.chats.markRead = function (socket, roomId, callback) {\n\tif (!socket.uid) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\tasync.parallel({\n\t\tuidsInRoom: async.apply(Messaging.getUidsInRoom, roomId, 0, -1),\n\t\tmarkRead: async.apply(Messaging.markRead, socket.uid, roomId)\n\t}, function (err, results) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tMessaging.pushUnreadCount(socket.uid);\n\t\tserver.in('uid_' + socket.uid).emit('event:chats.markedAsRead', {roomId: roomId});\n\n\t\tif (results.uidsInRoom.indexOf(socket.uid.toString()) === -1) {\n\t\t\treturn callback();\n\t\t}\n\n\t\t// Mark notification read\n\t\tvar nids = results.uidsInRoom.filter(function (uid) {\n\t\t\treturn parseInt(uid, 10) !== socket.uid;\n\t\t}).map(function (uid) {\n\t\t\treturn 'chat_' + uid + '_' + roomId;\n\t\t});\n\n\t\tnotifications.markReadMultiple(nids, socket.uid, function () {\n\t\t\tuser.notifications.pushCount(socket.uid);\n\t\t});\n\n\t\tcallback();\n\t});\n};\n\nSocketModules.chats.markAllRead = function (socket, data, callback) {\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tMessaging.markAllRead(socket.uid, next);\n\t\t},\n\t\tfunction (next) {\n\t\t\tMessaging.pushUnreadCount(socket.uid);\n\t\t\tnext();\n\t\t}\n\t], callback);\n};\n\nSocketModules.chats.renameRoom = function (socket, data, callback) {\n\tif (!data) {\n\t\treturn callback(new Error('[[error:invalid-name]]'));\n\t}\n\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tMessaging.renameRoom(socket.uid, data.roomId, data.newName, next);\n\t\t},\n\t\tfunction (next) {\n\t\t\tMessaging.getUidsInRoom(data.roomId, 0, -1, next);\n\t\t},\n\t\tfunction (uids, next) {\n\t\t\tvar eventData = {roomId: data.roomId, newName: validator.escape(String(data.newName))};\n\t\t\tuids.forEach(function (uid) {\n\t\t\t\tserver.in('uid_' + uid).emit('event:chats.roomRename', eventData);\n\t\t\t});\n\t\t\tnext();\n\t\t}\n\t], callback);\n};\n\nSocketModules.chats.getRecentChats = function (socket, data, callback) {\n\tif (!data || !utils.isNumber(data.after) || !utils.isNumber(data.uid)) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\tvar start = parseInt(data.after, 10);\n\tvar stop = start + 9;\n\tMessaging.getRecentChats(socket.uid, data.uid, start, stop, callback);\n};\n\nSocketModules.chats.hasPrivateChat = function (socket, uid, callback) {\n\tif (!socket.uid || !uid) {\n\t\treturn callback(null, new Error('[[error:invalid-data]]'));\n\t}\n\tMessaging.hasPrivateChat(socket.uid, uid, callback);\n};\n\nSocketModules.chats.getMessages = function (socket, data, callback) {\n\tif (!socket.uid || !data.uid || !data.roomId) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\tvar params = {\n\t\tcallerUid: socket.uid,\n\t\tuid: data.uid,\n\t\troomId: data.roomId,\n\t\tstart: parseInt(data.start, 10) || 0,\n\t\tcount: 50\n\t};\n\n\tMessaging.getMessages(params, callback);\n};\n\n/* Sounds */\nSocketModules.sounds.getSounds = function (socket, data, callback) {\n\t// Read sounds from local directory\n\tmeta.sounds.getFiles(callback);\n};\n\nSocketModules.sounds.getMapping = function (socket, data, callback) {\n\tmeta.sounds.getMapping(socket.uid, callback);\n};\n\nSocketModules.sounds.getData = function (socket, data, callback) {\n\tasync.parallel({\n\t\tmapping: async.apply(meta.sounds.getMapping, socket.uid),\n\t\tfiles: async.apply(meta.sounds.getFiles)\n\t}, callback);\n};\n\nmodule.exports = SocketModules;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/socket.io/notifications.js":"\"use strict\";\n\nvar async = require('async');\nvar user = require('../user');\nvar notifications = require('../notifications');\nvar utils = require('../../public/src/utils');\n\nvar SocketNotifs = {};\n\nSocketNotifs.get = function (socket, data, callback) {\n\tif (data && Array.isArray(data.nids) && socket.uid) {\n\t\tuser.notifications.getNotifications(data.nids, socket.uid, callback);\n\t} else {\n\t\tuser.notifications.get(socket.uid, callback);\n\t}\n};\n\nSocketNotifs.loadMore = function (socket, data, callback) {\n\tif (!data || !utils.isNumber(data.after) || parseInt(data.after, 10) < 0) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\tif (!socket.uid) {\n\t\treturn callback(new Error('[[error:no-privileges]]'));\n\t}\n\tvar start = parseInt(data.after, 10);\n\tvar stop = start + 20;\n\tuser.notifications.getAll(socket.uid, start, stop, function (err, notifications) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\t\tcallback(null, {notifications: notifications, nextStart: stop});\n\t});\n};\n\nSocketNotifs.getCount = function (socket, data, callback) {\n\tuser.notifications.getUnreadCount(socket.uid, callback);\n};\n\nSocketNotifs.deleteAll = function (socket, data, callback) {\n\tif (!socket.uid) {\n\t\treturn callback(new Error('[[error:no-privileges]]'));\n\t}\n\n\tuser.notifications.deleteAll(socket.uid, callback);\n};\n\nSocketNotifs.markRead = function (socket, nid, callback) {\n\tnotifications.markRead(nid, socket.uid, callback);\n};\n\nSocketNotifs.markUnread = function (socket, nid, callback) {\n\tnotifications.markUnread(nid, socket.uid, callback);\n};\n\nSocketNotifs.markAllRead = function (socket, data, callback) {\n\tnotifications.markAllRead(socket.uid, callback);\n};\n\nmodule.exports = SocketNotifs;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/socket.io/plugins.js":"'use strict';\n\nvar\tSocketPlugins = {};\n\n/*\n\tThis file is provided exclusively so that plugins can require it and add their own socket listeners.\n\n\tHow? From your plugin:\n\n\t\tvar SocketPlugins = require.main.require('./src/socket.io/plugins');\n\t\tSocketPlugins.myPlugin = {};\n\t\tSocketPlugins.myPlugin.myMethod = function(socket, data, callback) { ... };\n\n\tBe a good lad and namespace your methods.\n*/\n\nmodule.exports = SocketPlugins;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/socket.io/posts.js":"\"use strict\";\n\nvar\tasync = require('async');\n\nvar posts = require('../posts');\nvar privileges = require('../privileges');\nvar meta = require('../meta');\nvar topics = require('../topics');\nvar user = require('../user');\nvar websockets = require('./index');\nvar socketHelpers = require('./helpers');\nvar utils = require('../../public/src/utils');\n\nvar apiController = require('../controllers/api');\n\nvar SocketPosts = {};\n\nrequire('./posts/edit')(SocketPosts);\nrequire('./posts/move')(SocketPosts);\nrequire('./posts/votes')(SocketPosts);\nrequire('./posts/bookmarks')(SocketPosts);\nrequire('./posts/tools')(SocketPosts);\nrequire('./posts/flag')(SocketPosts);\n\nSocketPosts.reply = function (socket, data, callback) {\n\tif (!data || !data.tid || !data.content) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\tdata.uid = socket.uid;\n\tdata.req = websockets.reqFromSocket(socket);\n\tdata.timestamp = Date.now();\n\n\ttopics.reply(data, function (err, postData) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tvar result = {\n\t\t\tposts: [postData],\n\t\t\t'reputation:disabled': parseInt(meta.config['reputation:disabled'], 10) === 1,\n\t\t\t'downvote:disabled': parseInt(meta.config['downvote:disabled'], 10) === 1,\n\t\t};\n\n\t\tcallback(null, postData);\n\n\t\twebsockets.in('uid_' + socket.uid).emit('event:new_post', result);\n\n\t\tuser.updateOnlineUsers(socket.uid);\n\n\t\tsocketHelpers.notifyNew(socket.uid, 'newPost', result);\n\t});\n};\n\nSocketPosts.getRawPost = function (socket, pid, callback) {\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tprivileges.posts.can('read', pid, socket.uid, next);\n\t\t},\n\t\tfunction (canRead, next) {\n\t\t\tif (!canRead) {\n\t\t\t\treturn next(new Error('[[error:no-privileges]]'));\n\t\t\t}\n\t\t\tposts.getPostFields(pid, ['content', 'deleted'], next);\n\t\t},\n\t\tfunction (postData, next) {\n\t\t\tif (parseInt(postData.deleted, 10) === 1) {\n\t\t\t\treturn next(new Error('[[error:no-post]]'));\n\t\t\t}\n\t\t\tnext(null, postData.content);\n\t\t}\n\t], callback);\n};\n\nSocketPosts.getPost = function (socket, pid, callback) {\n\tapiController.getPostData(pid, socket.uid, callback);\n};\n\nSocketPosts.loadMoreBookmarks = function (socket, data, callback) {\n\tloadMorePosts('uid:' + data.uid + ':bookmarks', socket.uid, data, callback);\n};\n\nSocketPosts.loadMoreUserPosts = function (socket, data, callback) {\n\tloadMorePosts('uid:' + data.uid + ':posts', socket.uid, data, callback);\n};\n\nSocketPosts.loadMoreBestPosts = function (socket, data, callback) {\n\tloadMorePosts('uid:' + data.uid + ':posts:votes', socket.uid, data, callback);\n};\n\nSocketPosts.loadMoreUpVotedPosts = function (socket, data, callback) {\n\tloadMorePosts('uid:' + data.uid + ':upvote', socket.uid, data, callback);\n};\n\nSocketPosts.loadMoreDownVotedPosts = function (socket, data, callback) {\n\tloadMorePosts('uid:' + data.uid + ':downvote', socket.uid, data, callback);\n};\n\nfunction loadMorePosts(set, uid, data, callback) {\n\tif (!data || !utils.isNumber(data.uid) || !utils.isNumber(data.after)) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\tvar start = Math.max(0, parseInt(data.after, 10));\n\tvar stop = start + 9;\n\n\tposts.getPostSummariesFromSet(set, uid, start, stop, callback);\n}\n\nSocketPosts.getCategory = function (socket, pid, callback) {\n\tposts.getCidByPid(pid, callback);\n};\n\nSocketPosts.getPidIndex = function (socket, data, callback) {\n\tif (!data) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\tposts.getPidIndex(data.pid, data.tid, data.topicPostSort, callback);\n};\n\nSocketPosts.getReplies = function (socket, pid, callback) {\n\tif (!utils.isNumber(pid)) {\n\t\treturn callback(new Error('[[error:invalid-data]'));\n\t}\n\tvar postPrivileges;\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tposts.getPidsFromSet('pid:' + pid + ':replies', 0, -1, false, next);\n\t\t},\n\t\tfunction (pids, next) {\n\t\t\tasync.parallel({\n\t\t\t\tposts: function (next) {\n\t\t\t\t\tposts.getPostsByPids(pids, socket.uid, next);\n\t\t\t\t},\n\t\t\t\tprivileges: function (next) {\n\t\t\t\t\tprivileges.posts.get(pids, socket.uid, next);\n\t\t\t\t}\n\t\t\t}, next);\n\t\t},\n\t\tfunction (results, next) {\n\t\t\tpostPrivileges = results.privileges;\n\t\t\tresults.posts = results.posts.filter(function (postData, index) {\n\t\t\t\treturn postData && postPrivileges[index].read;\n\t\t\t});\n\t\t\ttopics.addPostData(results.posts, socket.uid, next);\n\t\t},\n\t\tfunction (postData, next) {\n\t\t\tpostData.forEach(function (postData) {\n\t\t\t\tposts.modifyPostByPrivilege(postData, postPrivileges.isAdminOrMod);\n\t\t\t});\n\t\t\tnext(null, postData);\n\t\t}\n\t], callback);\n};\n\n\nmodule.exports = SocketPosts;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/socket.io/topics.js":"\n'use strict';\n\nvar async = require('async');\n\nvar topics = require('../topics');\nvar websockets = require('./index');\nvar user = require('../user');\nvar apiController = require('../controllers/api');\nvar socketHelpers = require('./helpers');\n\nvar SocketTopics = {};\n\nrequire('./topics/unread')(SocketTopics);\nrequire('./topics/move')(SocketTopics);\nrequire('./topics/tools')(SocketTopics);\nrequire('./topics/infinitescroll')(SocketTopics);\nrequire('./topics/tags')(SocketTopics);\n\nSocketTopics.post = function (socket, data, callback) {\n\tif (!data) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\tdata.uid = socket.uid;\n\tdata.req = websockets.reqFromSocket(socket);\n\tdata.timestamp = Date.now();\n\n\ttopics.post(data, function (err, result) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tcallback(null, result.topicData);\n\n\t\tsocket.emit('event:new_post', {posts: [result.postData]});\n\t\tsocket.emit('event:new_topic', result.topicData);\n\n\t\tsocketHelpers.notifyNew(socket.uid, 'newTopic', {posts: [result.postData], topic: result.topicData});\n\t});\n};\n\nSocketTopics.postcount = function (socket, tid, callback) {\n\ttopics.getTopicField(tid, 'postcount', callback);\n};\n\nSocketTopics.bookmark = function (socket, data, callback) {\n\tif (!socket.uid || !data) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\ttopics.setUserBookmark(data.tid, socket.uid, data.index, callback);\n};\n\nSocketTopics.createTopicFromPosts = function (socket, data, callback) {\n\tif (!socket.uid) {\n\t\treturn callback(new Error('[[error:not-logged-in]]'));\n\t}\n\n\tif (!data || !data.title || !data.pids || !Array.isArray(data.pids)) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\ttopics.createTopicFromPosts(socket.uid, data.title, data.pids, data.fromTid, callback);\n};\n\nSocketTopics.changeWatching = function (socket, data, callback) {\n\tif (!data.tid || !data.type) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\tvar commands = ['follow', 'unfollow', 'ignore'];\n\tif (commands.indexOf(data.type) === -1) {\n\t\treturn callback(new Error('[[error:invalid-command]]'));\n\t}\n\tfollowCommand(topics[data.type], socket, data.tid, callback);\n};\n\nSocketTopics.follow = function (socket, tid, callback) {\n\tfollowCommand(topics.follow, socket, tid, callback);\n};\n\nfunction followCommand(method, socket, tid, callback) {\n\tif (!socket.uid) {\n\t\treturn callback(new Error('[[error:not-logged-in]]'));\n\t}\n\n\tmethod(tid, socket.uid, callback);\n}\n\nSocketTopics.isFollowed = function (socket, tid, callback) {\n\ttopics.isFollowing([tid], socket.uid, function (err, isFollowing) {\n\t\tcallback(err, Array.isArray(isFollowing) && isFollowing.length ? isFollowing[0] : false);\n\t});\n};\n\nSocketTopics.search = function (socket, data, callback) {\n\ttopics.search(data.tid, data.term, callback);\n};\n\nSocketTopics.isModerator = function (socket, tid, callback) {\n\ttopics.getTopicField(tid, 'cid', function (err, cid) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\t\tuser.isModerator(socket.uid, cid, callback);\n\t});\n};\n\nSocketTopics.getTopic = function (socket, tid, callback) {\n\tapiController.getTopicData(tid, socket.uid, callback);\n};\n\nmodule.exports = SocketTopics;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/socket.io/user.js":"'use strict';\n\nvar async = require('async');\nvar winston = require('winston');\n\nvar user = require('../user');\nvar topics = require('../topics');\nvar notifications = require('../notifications');\nvar messaging = require('../messaging');\nvar plugins = require('../plugins');\nvar meta = require('../meta');\nvar events = require('../events');\nvar emailer = require('../emailer');\nvar db = require('../database');\nvar apiController = require('../controllers/api');\nvar privileges = require('../privileges');\n\nvar SocketUser = {};\n\nrequire('./user/profile')(SocketUser);\nrequire('./user/search')(SocketUser);\nrequire('./user/status')(SocketUser);\nrequire('./user/picture')(SocketUser);\nrequire('./user/ban')(SocketUser);\n\nSocketUser.exists = function (socket, data, callback) {\n\tif (!data || !data.username) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\tmeta.userOrGroupExists(data.username, callback);\n};\n\nSocketUser.deleteAccount = function (socket, data, callback) {\n\tif (!socket.uid) {\n\t\treturn callback(new Error('[[error:no-privileges]]'));\n\t}\n\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tuser.isAdministrator(socket.uid, next);\n\t\t},\n\t\tfunction (isAdmin, next) {\n\t\t\tif (isAdmin) {\n\t\t\t\treturn next(new Error('[[error:cant-delete-admin]]'));\n\t\t\t}\n\t\t\tuser.deleteAccount(socket.uid, next);\n\t\t},\n\t\tfunction (next) {\n\t\t\trequire('./index').server.sockets.emit('event:user_status_change', {uid: socket.uid, status: 'offline'});\n\n\t\t\tevents.log({\n\t\t\t\ttype: 'user-delete',\n\t\t\t\tuid: socket.uid,\n\t\t\t\ttargetUid: socket.uid,\n\t\t\t\tip: socket.ip\n\t\t\t});\n\t\t\tnext();\n\t\t}\n\t], callback);\n};\n\nSocketUser.emailExists = function (socket, data, callback) {\n\tif (!data || !data.email) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\tuser.email.exists(data.email, callback);\n};\n\nSocketUser.emailConfirm = function (socket, data, callback) {\n\tif (!socket.uid) {\n\t\treturn callback(new Error('[[error:no-privileges]]'));\n\t}\n\n\tif (parseInt(meta.config.requireEmailConfirmation, 10) !== 1) {\n\t\tcallback();\n\t}\n\tuser.getUserField(socket.uid, 'email', function (err, email) {\n\t\tif (err || !email) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tuser.email.sendValidationEmail(socket.uid, email, callback);\n\t});\n};\n\n\n// Password Reset\nSocketUser.reset = {};\n\nSocketUser.reset.send = function (socket, email, callback) {\n\tif (!email) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\tuser.reset.send(email, function (err) {\n\t\tif (err && err.message !== '[[error:invalid-email]]') {\n\t\t\treturn callback(err);\n\t\t}\n\t\tif (err && err.message === '[[error:invalid-email]]') {\n\t\t\twinston.verbose('[user/reset] Invalid email attempt: ' + email);\n\t\t\treturn setTimeout(callback, 2500);\n\t\t}\n\n\t\tcallback();\n\t});\n};\n\nSocketUser.reset.commit = function (socket, data, callback) {\n\tif (!data || !data.code || !data.password) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\tasync.parallel({\n\t\tuid: async.apply(db.getObjectField, 'reset:uid', data.code),\n\t\treset: async.apply(user.reset.commit, data.code, data.password)\n\t}, function (err, results) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tvar uid = results.uid;\n\t\tvar now = new Date();\n\t\tvar parsedDate = now.getFullYear() + '/' + (now.getMonth() + 1) + '/' + now.getDate();\n\n\t\tuser.getUserField(uid, 'username', function (err, username) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\temailer.send('reset_notify', uid, {\n\t\t\t\tusername: username,\n\t\t\t\tdate: parsedDate,\n\t\t\t\tsite_title: meta.config.title || 'NodeBB',\n\t\t\t\tsubject: '[[email:reset.notify.subject]]'\n\t\t\t});\n\t\t});\n\n\t\tevents.log({\n\t\t\ttype: 'password-reset',\n\t\t\tuid: uid,\n\t\t\tip: socket.ip\n\t\t});\n\t\tcallback();\n\t});\n};\n\nSocketUser.isFollowing = function (socket, data, callback) {\n\tif (!socket.uid || !data.uid) {\n\t\treturn callback(null, false);\n\t}\n\n\tuser.isFollowing(socket.uid, data.uid, callback);\n};\n\nSocketUser.follow = function (socket, data, callback) {\n\tif (!socket.uid || !data) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\tvar userData;\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\ttoggleFollow('follow', socket.uid, data.uid, next);\n\t\t},\n\t\tfunction (next) {\n\t\t\tuser.getUserFields(socket.uid, ['username', 'userslug'], next);\n\t\t},\n\t\tfunction (_userData, next) {\n\t\t\tuserData = _userData;\n\t\t\tnotifications.create({\n\t\t\t\tbodyShort: '[[notifications:user_started_following_you, ' + userData.username + ']]',\n\t\t\t\tnid: 'follow:' + data.uid + ':uid:' + socket.uid,\n\t\t\t\tfrom: socket.uid,\n\t\t\t\tpath: '/uid/' + data.uid + '/followers',\n\t\t\t\tmergeId: 'notifications:user_started_following_you'\n\t\t\t}, next);\n\t\t},\n\t\tfunction (notification, next) {\n\t\t\tif (!notification) {\n\t\t\t\treturn next();\n\t\t\t}\n\t\t\tnotification.user = userData;\n\t\t\tnotifications.push(notification, [data.uid], next);\n\t\t}\n\t], callback);\n};\n\nSocketUser.unfollow = function (socket, data, callback) {\n\tif (!socket.uid || !data) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\ttoggleFollow('unfollow', socket.uid, data.uid, callback);\n};\n\nfunction toggleFollow(method, uid, theiruid, callback) {\n\tuser[method](uid, theiruid, function (err) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tplugins.fireHook('action:user.' + method, {\n\t\t\tfromUid: uid,\n\t\t\ttoUid: theiruid\n\t\t});\n\t\tcallback();\n\t});\n}\n\nSocketUser.saveSettings = function (socket, data, callback) {\n\tif (!socket.uid || !data) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tprivileges.users.canEdit(socket.uid, data.uid, next);\n\t\t},\n\t\tfunction (allowed, next) {\n\t\t\tif (!allowed) {\n\t\t\t\treturn next(new Error('[[error:no-privileges]]'));\n\t\t\t}\n\t\t\tuser.saveSettings(data.uid, data.settings, next);\n\t\t}\n\t], callback);\n};\n\nSocketUser.setTopicSort = function (socket, sort, callback) {\n\tif (!socket.uid) {\n\t\treturn callback();\n\t}\n\tuser.setSetting(socket.uid, 'topicPostSort', sort, callback);\n};\n\nSocketUser.setCategorySort = function (socket, sort, callback) {\n\tif (!socket.uid) {\n\t\treturn callback();\n\t}\n\tuser.setSetting(socket.uid, 'categoryTopicSort', sort, callback);\n};\n\nSocketUser.getUnreadCount = function (socket, data, callback) {\n\tif (!socket.uid) {\n\t\treturn callback(null, 0);\n\t}\n\ttopics.getTotalUnread(socket.uid, callback);\n};\n\nSocketUser.getUnreadChatCount = function (socket, data, callback) {\n\tif (!socket.uid) {\n\t\treturn callback(null, 0);\n\t}\n\tmessaging.getUnreadCount(socket.uid, callback);\n};\n\nSocketUser.getUnreadCounts = function (socket, data, callback) {\n\tif (!socket.uid) {\n\t\treturn callback(null, {});\n\t}\n\tasync.parallel({\n\t\tunreadTopicCount: async.apply(topics.getTotalUnread, socket.uid),\n\t\tunreadNewTopicCount: async.apply(topics.getTotalUnread, socket.uid, 'new'),\n\t\tunreadChatCount: async.apply(messaging.getUnreadCount, socket.uid),\n\t\tunreadNotificationCount: async.apply(user.notifications.getUnreadCount, socket.uid)\n\t}, callback);\n};\n\nSocketUser.invite = function (socket, email, callback) {\n\tif (!email || !socket.uid) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\tvar registrationType = meta.config.registrationType;\n\n\tif (registrationType !== 'invite-only' && registrationType !== 'admin-invite-only') {\n\t\treturn callback(new Error('[[error:forum-not-invite-only]]'));\n\t}\n\n\tvar max = meta.config.maximumInvites;\n\n\tuser.isAdministrator(socket.uid, function (err, admin) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\t\tif (registrationType === 'admin-invite-only' && !admin) {\n\t\t\treturn callback(new Error('[[error:no-privileges]]'));\n\t\t}\n\t\tif (max) {\n\t\t\tasync.waterfall([\n\t\t\t\tfunction (next) {\n\t\t\t\t\tuser.getInvitesNumber(socket.uid, next);\n\t\t\t\t},\n\t\t\t\tfunction (invites, next) {\n\t\t\t\t\tif (!admin && invites > max) {\n\t\t\t\t\t\treturn next(new Error('[[error:invite-maximum-met, ' + invites + ', ' + max + ']]'));\n\t\t\t\t\t}\n\t\t\t\t\tnext();\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tuser.sendInvitationEmail(socket.uid, email, next);\n\t\t\t\t}\n\t\t\t], callback);\n\t\t} else {\n\t\t\tuser.sendInvitationEmail(socket.uid, email, callback);\n\t\t}\n\t});\n\n};\n\nSocketUser.getUserByUID = function (socket, uid, callback) {\n\tapiController.getUserDataByField(socket.uid, 'uid', uid, callback);\n};\n\nSocketUser.getUserByUsername = function (socket, username, callback) {\n\tapiController.getUserDataByField(socket.uid, 'username', username, callback);\n};\n\nSocketUser.getUserByEmail = function (socket, email, callback) {\n\tapiController.getUserDataByField(socket.uid, 'email', email, callback);\n};\n\nSocketUser.setModerationNote = function (socket, data, callback) {\n\tif (!socket.uid || !data || !data.uid) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tprivileges.users.canEdit(socket.uid, data.uid, next);\n\t\t},\n\t\tfunction (allowed, next) {\n\t\t\tif (allowed) {\n\t\t\t\treturn next(null, allowed);\n\t\t\t}\n\n\t\t\tuser.isModeratorOfAnyCategory(socket.uid, next);\n\t\t},\n\t\tfunction (allowed, next) {\n\t\t\tif (!allowed) {\n\t\t\t\treturn next(new Error('[[error:no-privileges]]'));\n\t\t\t}\n\t\t\tif (data.note) {\n\t\t\t\tuser.setUserField(data.uid, 'moderationNote', data.note, next);\n\t\t\t} else {\n\t\t\t\tdb.deleteObjectField('user:' + data.uid, 'moderationNote', next);\n\t\t\t}\n\t\t}\n\t], callback);\n};\n\nmodule.exports = SocketUser;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/topics/create.js":"\n'use strict';\n\nvar async = require('async');\nvar validator = require('validator');\nvar S = require('string');\nvar db = require('../database');\nvar utils = require('../../public/src/utils');\nvar plugins = require('../plugins');\nvar analytics = require('../analytics');\nvar user = require('../user');\nvar meta = require('../meta');\nvar posts = require('../posts');\nvar privileges = require('../privileges');\nvar categories = require('../categories');\n\nmodule.exports = function (Topics) {\n\n\tTopics.create = function (data, callback) {\n\t\t// This is an internal method, consider using Topics.post instead\n\t\tvar timestamp = data.timestamp || Date.now();\n\t\tvar topicData;\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tTopics.resizeAndUploadThumb(data, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tdb.incrObjectField('global', 'nextTid', next);\n\t\t\t},\n\t\t\tfunction (tid, next) {\n\t\t\t\ttopicData = {\n\t\t\t\t\t'tid': tid,\n\t\t\t\t\t'uid': data.uid,\n\t\t\t\t\t'cid': data.cid,\n\t\t\t\t\t'mainPid': 0,\n\t\t\t\t\t'title': data.title,\n\t\t\t\t\t'slug': tid + '/' + (utils.slugify(data.title) || 'topic'),\n\t\t\t\t\t'timestamp': timestamp,\n\t\t\t\t\t'lastposttime': 0,\n\t\t\t\t\t'postcount': 0,\n\t\t\t\t\t'viewcount': 0,\n\t\t\t\t\t'locked': 0,\n\t\t\t\t\t'deleted': 0,\n\t\t\t\t\t'pinned': 0\n\t\t\t\t};\n\n\t\t\t\tif (data.thumb) {\n\t\t\t\t\ttopicData.thumb = data.thumb;\n\t\t\t\t}\n\n\t\t\t\tplugins.fireHook('filter:topic.create', {topic: topicData, data: data}, next);\n\t\t\t},\n\t\t\tfunction (data, next) {\n\t\t\t\ttopicData = data.topic;\n\t\t\t\tdb.setObject('topic:' + topicData.tid, topicData, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tasync.parallel([\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.sortedSetsAdd([\n\t\t\t\t\t\t\t'topics:tid',\n\t\t\t\t\t\t\t'cid:' + topicData.cid + ':tids',\n\t\t\t\t\t\t\t'cid:' + topicData.cid + ':uid:' + topicData.uid + ':tids'\n\t\t\t\t\t\t], timestamp, topicData.tid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tcategories.updateRecentTid(topicData.cid, topicData.tid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tuser.addTopicIdToUser(topicData.uid, topicData.tid, timestamp, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.incrObjectField('category:' + topicData.cid, 'topic_count', next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.incrObjectField('global', 'topicCount', next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tTopics.createTags(data.tags, topicData.tid, timestamp, next);\n\t\t\t\t\t}\n\t\t\t\t], next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tplugins.fireHook('action:topic.save', topicData);\n\t\t\t\tnext(null, topicData.tid);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tTopics.post = function (data, callback) {\n\t\tvar uid = data.uid;\n\t\tvar title = String(data.title).trim();\n\t\tdata.tags = data.tags || [];\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tcheck(title, meta.config.minimumTitleLength, meta.config.maximumTitleLength, 'title-too-short', 'title-too-long', next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tcheck(data.tags, meta.config.minimumTagsPerTopic, meta.config.maximumTagsPerTopic, 'not-enough-tags', 'too-many-tags', next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tif (data.content) {\n\t\t\t\t\tdata.content = data.content.rtrim();\n\t\t\t\t}\n\t\t\t\tcheck(data.content, meta.config.minimumPostLength, meta.config.maximumPostLength, 'content-too-short', 'content-too-long', next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tcategories.exists(data.cid, next);\n\t\t\t},\n\t\t\tfunction (categoryExists, next) {\n\t\t\t\tif (!categoryExists) {\n\t\t\t\t\treturn next(new Error('[[error:no-category]]'));\n\t\t\t\t}\n\t\t\t\tprivileges.categories.can('topics:create', data.cid, data.uid, next);\n\t\t\t},\n\t\t\tfunction (canCreate, next) {\n\t\t\t\tif (!canCreate) {\n\t\t\t\t\treturn next(new Error('[[error:no-privileges]]'));\n\t\t\t\t}\n\t\t\t\tguestHandleValid(data, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tuser.isReadyToPost(data.uid, data.cid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tplugins.fireHook('filter:topic.post', data, next);\n\t\t\t},\n\t\t\tfunction (filteredData, next) {\n\t\t\t\tdata = filteredData;\n\t\t\t\tTopics.create(data, next);\n\t\t\t},\n\t\t\tfunction (tid, next) {\n\t\t\t\tvar postData = data;\n\t\t\t\tpostData.tid = tid;\n\t\t\t\tpostData.ip = data.req ? data.req.ip : null;\n\t\t\t\tpostData.isMain = true;\n\t\t\t\tposts.create(postData, next);\n\t\t\t},\n\t\t\tfunction (postData, next) {\n\t\t\t\tonNewPost(postData, data, next);\n\t\t\t},\n\t\t\tfunction (postData, next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\tpostData: function (next) {\n\t\t\t\t\t\tnext(null, postData);\n\t\t\t\t\t},\n\t\t\t\t\tsettings: function (next) {\n\t\t\t\t\t\tuser.getSettings(uid, function (err, settings) {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (settings.followTopicsOnCreate) {\n\t\t\t\t\t\t\t\tTopics.follow(postData.tid, uid, next);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tnext();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\ttopicData: function (next) {\n\t\t\t\t\t\tTopics.getTopicsByTids([postData.tid], uid, next);\n\t\t\t\t\t}\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (data, next) {\n\t\t\t\tif (!Array.isArray(data.topicData) || !data.topicData.length) {\n\t\t\t\t\treturn next(new Error('[[error:no-topic]]'));\n\t\t\t\t}\n\n\t\t\t\tdata.topicData = data.topicData[0];\n\t\t\t\tdata.topicData.unreplied = 1;\n\t\t\t\tdata.topicData.mainPost = data.postData;\n\t\t\t\tdata.postData.index = 0;\n\n\t\t\t\tanalytics.increment(['topics', 'topics:byCid:' + data.topicData.cid]);\n\t\t\t\tplugins.fireHook('action:topic.post', data.topicData);\n\n\t\t\t\tif (parseInt(uid, 10)) {\n\t\t\t\t\tuser.notifications.sendTopicNotificationToFollowers(uid, data.topicData, data.postData);\n\t\t\t\t}\n\n\t\t\t\tnext(null, {\n\t\t\t\t\ttopicData: data.topicData,\n\t\t\t\t\tpostData: data.postData\n\t\t\t\t});\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tTopics.reply = function (data, callback) {\n\t\tvar tid = data.tid;\n\t\tvar uid = data.uid;\n\t\tvar content = data.content;\n\t\tvar postData;\n\t\tvar cid;\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tTopics.getTopicField(tid, 'cid', next);\n\t\t\t},\n\t\t\tfunction (_cid, next) {\n\t\t\t\tcid = _cid;\n\t\t\t\tasync.parallel({\n\t\t\t\t\ttopicData: async.apply(Topics.getTopicData, tid),\n\t\t\t\t\tcanReply: async.apply(privileges.topics.can, 'topics:reply', tid, uid),\n\t\t\t\t\tisAdminOrMod: async.apply(privileges.categories.isAdminOrMod, cid, uid),\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tif (!results.topicData) {\n\t\t\t\t\treturn next(new Error('[[error:no-topic]]'));\n\t\t\t\t}\n\n\t\t\t\tif (parseInt(results.topicData.locked, 10) === 1 && !results.isAdminOrMod) {\n\t\t\t\t\treturn next(new Error('[[error:topic-locked]]'));\n\t\t\t\t}\n\n\t\t\t\tif (parseInt(results.topicData.deleted, 10) === 1 && !results.isAdminOrMod) {\n\t\t\t\t\treturn next(new Error('[[error:topic-deleted]]'));\n\t\t\t\t}\n\n\t\t\t\tif (!results.canReply) {\n\t\t\t\t\treturn next(new Error('[[error:no-privileges]]'));\n\t\t\t\t}\n\n\t\t\t\tguestHandleValid(data, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tuser.isReadyToPost(uid, cid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tplugins.fireHook('filter:topic.reply', data, next);\n\t\t\t},\n\t\t\tfunction (filteredData, next) {\n\t\t\t\tcontent = filteredData.content || data.content;\n\t\t\t\tif (content) {\n\t\t\t\t\tcontent = content.rtrim();\n\t\t\t\t}\n\n\t\t\t\tcheck(content, meta.config.minimumPostLength, meta.config.maximumPostLength, 'content-too-short', 'content-too-long', next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tposts.create({\n\t\t\t\t\tuid: uid,\n\t\t\t\t\ttid: tid,\n\t\t\t\t\thandle: data.handle,\n\t\t\t\t\tcontent: content,\n\t\t\t\t\ttoPid: data.toPid,\n\t\t\t\t\ttimestamp: data.timestamp,\n\t\t\t\t\tip: data.req ? data.req.ip : null\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (_postData, next) {\n\t\t\t\tpostData = _postData;\n\t\t\t\tonNewPost(postData, data, next);\n\t\t\t},\n\t\t\tfunction (postData, next) {\n\t\t\t\tuser.getSettings(uid, next);\n\t\t\t},\n\t\t\tfunction (settings, next) {\n\t\t\t\tif (settings.followTopicsOnReply) {\n\t\t\t\t\tTopics.follow(postData.tid, uid);\n\t\t\t\t}\n\n\t\t\t\tif (parseInt(uid, 10)) {\n\t\t\t\t\tuser.setUserField(uid, 'lastonline', Date.now());\n\t\t\t\t}\n\n\t\t\t\tTopics.notifyFollowers(postData, uid);\n\t\t\t\tanalytics.increment(['posts', 'posts:byCid:' + cid]);\n\t\t\t\tplugins.fireHook('action:topic.reply', postData);\n\n\t\t\t\tnext(null, postData);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tfunction onNewPost(postData, data, callback) {\n\t\tvar tid = postData.tid;\n\t\tvar uid = postData.uid;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tTopics.markAsUnreadForAll(tid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tTopics.markAsRead([tid], uid, next);\n\t\t\t},\n\t\t\tfunction (markedRead, next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\tuserInfo: function (next) {\n\t\t\t\t\t\tposts.getUserInfoForPosts([postData.uid], uid, next);\n\t\t\t\t\t},\n\t\t\t\t\ttopicInfo: function (next) {\n\t\t\t\t\t\tTopics.getTopicFields(tid, ['tid', 'title', 'slug', 'cid', 'postcount', 'mainPid'], next);\n\t\t\t\t\t},\n\t\t\t\t\tparents: function (next) {\n\t\t\t\t\t\tTopics.addParentPosts([postData], next);\n\t\t\t\t\t},\n\t\t\t\t\tcontent: function (next) {\n\t\t\t\t\t\tposts.parsePost(postData, next);\n\t\t\t\t\t}\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tpostData.user = results.userInfo[0];\n\t\t\t\tpostData.topic = results.topicInfo;\n\t\t\t\tpostData.index = parseInt(results.topicInfo.postcount, 10) - 1;\n\n\t\t\t\t// Username override for guests, if enabled\n\t\t\t\tif (parseInt(meta.config.allowGuestHandles, 10) === 1 && parseInt(postData.uid, 10) === 0 && data.handle) {\n\t\t\t\t\tpostData.user.username = validator.escape(String(data.handle));\n\t\t\t\t}\n\n\t\t\t\tpostData.votes = 0;\n\t\t\t\tpostData.bookmarked = false;\n\t\t\t\tpostData.display_edit_tools = true;\n\t\t\t\tpostData.display_delete_tools = true;\n\t\t\t\tpostData.display_moderator_tools = true;\n\t\t\t\tpostData.display_move_tools = true;\n\t\t\t\tpostData.selfPost = false;\n\t\t\t\tpostData.timestampISO = utils.toISOString(postData.timestamp);\n\t\t\t\tpostData.topic.title = validator.escape(String(postData.topic.title));\n\n\t\t\t\tnext(null, postData);\n\t\t\t}\n\t\t], callback);\n\t}\n\n\tfunction check(item, min, max, minError, maxError, callback) {\n\t\t// Trim and remove HTML (latter for composers that send in HTML, like redactor)\n\t\tif (typeof item === 'string') {\n\t\t\titem = S(item.trim()).stripTags().s;\n\t\t}\n\n\t\tif (!item || item.length < parseInt(min, 10)) {\n\t\t\treturn callback(new Error('[[error:' + minError + ', ' + min + ']]'));\n\t\t} else if (item.length > parseInt(max, 10)) {\n\t\t\treturn callback(new Error('[[error:' + maxError + ', ' + max + ']]'));\n\t\t}\n\t\tcallback();\n\t}\n\n\tfunction guestHandleValid(data, callback) {\n\t\tif (parseInt(meta.config.allowGuestHandles, 10) === 1 && parseInt(data.uid, 10) === 0 && data.handle) {\n\t\t\tif (data.handle.length > meta.config.maximumUsernameLength) {\n\t\t\t\treturn callback(new Error('[[error:guest-handle-invalid]]'));\n\t\t\t}\n\t\t\tuser.existsBySlug(utils.slugify(data.handle), function (err, exists) {\n\t\t\t\tif (err || exists) {\n\t\t\t\t\treturn callback(err || new Error('[[error:username-taken]]'));\n\t\t\t\t}\n\t\t\t\tcallback();\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tcallback();\n\t}\n\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/topics/data.js":"'use strict';\n\nvar validator = require('validator');\n\nvar db = require('../database');\nvar categories = require('../categories');\nvar utils = require('../../public/src/utils');\n\nmodule.exports = function (Topics) {\n\n\tTopics.getTopicField = function (tid, field, callback) {\n\t\tdb.getObjectField('topic:' + tid, field, callback);\n\t};\n\n\tTopics.getTopicFields = function (tid, fields, callback) {\n\t\tdb.getObjectFields('topic:' + tid, fields, callback);\n\t};\n\n\tTopics.getTopicsFields = function (tids, fields, callback) {\n\t\tif (!Array.isArray(tids) || !tids.length) {\n\t\t\treturn callback(null, []);\n\t\t}\n\t\tvar keys = tids.map(function (tid) {\n\t\t\treturn 'topic:' + tid;\n\t\t});\n\t\tdb.getObjectsFields(keys, fields, callback);\n\t};\n\n\tTopics.getTopicData = function (tid, callback) {\n\t\tdb.getObject('topic:' + tid, function (err, topic) {\n\t\t\tif (err || !topic) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tmodifyTopic(topic);\n\t\t\tcallback(null, topic);\n\t\t});\n\t};\n\n\tTopics.getTopicsData = function (tids, callback) {\n\t\tvar keys = [];\n\n\t\tfor (var i = 0; i < tids.length; ++i) {\n\t\t\tkeys.push('topic:' + tids[i]);\n\t\t}\n\n\t\tdb.getObjects(keys, function (err, topics) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\ttopics.forEach(modifyTopic);\n\t\t\tcallback(null, topics);\n\t\t});\n\t};\n\n\tfunction modifyTopic(topic) {\n\t\tif (!topic) {\n\t\t\treturn;\n\t\t}\n\t\ttopic.titleRaw = topic.title;\n\t\ttopic.title = validator.escape(String(topic.title));\n\t\ttopic.timestampISO = utils.toISOString(topic.timestamp);\n\t\ttopic.lastposttimeISO = utils.toISOString(topic.lastposttime);\n\t}\n\n\tTopics.getCategoryData = function (tid, callback) {\n\t\tTopics.getTopicField(tid, 'cid', function (err, cid) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tcategories.getCategoryData(cid, callback);\n\t\t});\n\t};\n\n\tTopics.setTopicField = function (tid, field, value, callback) {\n\t\tdb.setObjectField('topic:' + tid, field, value, callback);\n\t};\n\n\n\tTopics.setTopicFields = function (tid, data, callback) {\n\t\tcallback = callback || function () {};\n\t\tdb.setObject('topic:' + tid, data, callback);\n\t};\n\n\tTopics.deleteTopicField = function (tid, field, callback) {\n\t\tdb.deleteObjectField('topic:' + tid, field, callback);\n\t};\n\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/topics/delete.js":"'use strict';\n\nvar async = require('async');\nvar db = require('../database');\n\nvar user = require('../user');\nvar posts = require('../posts');\nvar plugins = require('../plugins');\nvar batch = require('../batch');\n\n\nmodule.exports = function (Topics) {\n\n\tTopics.delete = function (tid, uid, callback) {\n\t\tTopics.getTopicFields(tid, ['cid'], function (err, topicData) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tasync.parallel([\n\t\t\t\tfunction (next) {\n\t\t\t\t\tTopics.setTopicField(tid, 'deleted', 1, next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tdb.sortedSetsRemove(['topics:recent', 'topics:posts', 'topics:views'], tid, next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tTopics.getPids(tid, function (err, pids) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdb.sortedSetRemove('cid:' + topicData.cid + ':pids', pids, next);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t], function (err) {\n\t\t\t\tcallback(err);\n\t\t\t});\n\t\t});\n\t};\n\n\tTopics.restore = function (tid, uid, callback) {\n\t\tTopics.getTopicFields(tid, ['cid', 'lastposttime', 'postcount', 'viewcount'], function (err, topicData) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tasync.parallel([\n\t\t\t\tfunction (next) {\n\t\t\t\t\tTopics.setTopicField(tid, 'deleted', 0, next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tTopics.updateRecent(tid, topicData.lastposttime, next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tdb.sortedSetAdd('topics:posts', topicData.postcount, tid, next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tdb.sortedSetAdd('topics:views', topicData.viewcount, tid, next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tTopics.getPids(tid, function (err, pids) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tposts.getPostsFields(pids, ['pid', 'timestamp', 'deleted'], function (err, postData) {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpostData = postData.filter(function (post) {\n\t\t\t\t\t\t\t\treturn post && parseInt(post.deleted, 10) !== 1;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tvar pidsToAdd = [], scores = [];\n\t\t\t\t\t\t\tpostData.forEach(function (post) {\n\t\t\t\t\t\t\t\tpidsToAdd.push(post.pid);\n\t\t\t\t\t\t\t\tscores.push(post.timestamp);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tdb.sortedSetAdd('cid:' + topicData.cid + ':pids', scores, pidsToAdd, next);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t], function (err) {\n\t\t\t\tcallback(err);\n\t\t\t});\n\t\t});\n\t};\n\n\tTopics.purgePostsAndTopic = function (tid, uid, callback) {\n\t\tvar mainPid;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tTopics.getTopicField(tid, 'mainPid', next);\n\t\t\t},\n\t\t\tfunction (_mainPid, next) {\n\t\t\t\tmainPid = _mainPid;\n\t\t\t\tbatch.processSortedSet('tid:' + tid + ':posts', function (pids, next) {\n\t\t\t\t\tasync.eachLimit(pids, 10, function (pid, next) {\n\t\t\t\t\t\tposts.purge(pid, uid, next);\n\t\t\t\t\t}, next);\n\t\t\t\t}, {alwaysStartAt: 0}, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tposts.purge(mainPid, uid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tTopics.purge(tid, uid, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tTopics.purge = function (tid, uid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdeleteFromFollowersIgnorers(tid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tasync.parallel([\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.deleteAll([\n\t\t\t\t\t\t\t'tid:' + tid + ':followers',\n\t\t\t\t\t\t\t'tid:' + tid + ':ignorers',\n\t\t\t\t\t\t\t'tid:' + tid + ':posts',\n\t\t\t\t\t\t\t'tid:' + tid + ':posts:votes',\n\t\t\t\t\t\t\t'tid:' + tid + ':bookmarks',\n\t\t\t\t\t\t\t'tid:' + tid + ':posters'\n\t\t\t\t\t\t], next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.sortedSetsRemove(['topics:tid', 'topics:recent', 'topics:posts', 'topics:views'], tid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdeleteTopicFromCategoryAndUser(tid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tTopics.deleteTopicTags(tid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\treduceCounters(tid, next);\n\t\t\t\t\t}\n\t\t\t\t], next);\n\t\t\t}\n\t\t], function (err) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tplugins.fireHook('action:topic.purge', tid);\n\t\t\tdb.delete('topic:' + tid, callback);\n\t\t});\n\t};\n\n\tfunction deleteFromFollowersIgnorers(tid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\tfollowers: async.apply(db.getSetMembers, 'tid:' + tid + ':followers'),\n\t\t\t\t\tignorers: async.apply(db.getSetMembers, 'tid:' + tid + ':ignorers')\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tvar followerKeys = results.followers.map(function (uid) {\n\t\t\t\t\treturn 'uid:' + uid + ':followed_tids';\n\t\t\t\t});\n\t\t\t\tvar ignorerKeys = results.ignorers.map(function (uid) {\n\t\t\t\t\treturn 'uid:' + uid + 'ignored_tids';\n\t\t\t\t});\n\t\t\t\tdb.sortedSetsRemove(followerKeys.concat(ignorerKeys), tid, next);\n\t\t\t}\n\t\t], callback);\n\t}\n\n\tfunction deleteTopicFromCategoryAndUser(tid, callback) {\n\t\tTopics.getTopicFields(tid, ['cid', 'uid'], function (err, topicData) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tasync.parallel([\n\t\t\t\tfunction (next) {\n\t\t\t\t\tdb.sortedSetsRemove([\n\t\t\t\t\t\t'cid:' + topicData.cid + ':tids',\n\t\t\t\t\t\t'cid:' + topicData.cid + ':tids:pinned',\n\t\t\t\t\t\t'cid:' + topicData.cid + ':tids:posts',\n\t\t\t\t\t\t'cid:' + topicData.cid + ':uid:' + topicData.uid + ':tids',\n\t\t\t\t\t\t'uid:' + topicData.uid + ':topics'\n\t\t\t\t\t], tid, next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tuser.decrementUserFieldBy(topicData.uid, 'topiccount', 1, next);\n\t\t\t\t}\n\t\t\t], callback);\n\t\t});\n\t}\n\n\tfunction reduceCounters(tid, callback) {\n\t\tvar incr = -1;\n\t\tasync.parallel([\n\t\t\tfunction (next) {\n\t\t\t\tdb.incrObjectFieldBy('global', 'topicCount', incr, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tTopics.getTopicFields(tid, ['cid', 'postcount'], function (err, topicData) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\t\t\t\t\ttopicData.postcount = parseInt(topicData.postcount, 10);\n\t\t\t\t\ttopicData.postcount = topicData.postcount || 0;\n\t\t\t\t\tvar postCountChange = incr * topicData.postcount;\n\n\t\t\t\t\tasync.parallel([\n\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\tdb.incrObjectFieldBy('global', 'postCount', postCountChange, next);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\tdb.incrObjectFieldBy('category:' + topicData.cid, 'post_count', postCountChange, next);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\tdb.incrObjectFieldBy('category:' + topicData.cid, 'topic_count', incr, next);\n\t\t\t\t\t\t}\n\t\t\t\t\t], next);\n\t\t\t\t});\n\t\t\t}\n\t\t], callback);\n\t}\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/topics/follow.js":"\n'use strict';\n\nvar async = require('async');\nvar nconf = require('nconf');\nvar S = require('string');\nvar winston = require('winston');\n\nvar db = require('../database');\nvar user = require('../user');\nvar posts = require('../posts');\nvar notifications = require('../notifications');\nvar privileges = require('../privileges');\nvar meta = require('../meta');\nvar emailer = require('../emailer');\nvar plugins = require('../plugins');\n\nmodule.exports = function (Topics) {\n\n\tTopics.toggleFollow = function (tid, uid, callback) {\n\t\tcallback = callback || function () {};\n\t\tvar isFollowing;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tTopics.exists(tid, next);\n\t\t\t},\n\t\t\tfunction (exists, next) {\n\t\t\t\tif (!exists) {\n\t\t\t\t\treturn next(new Error('[[error:no-topic]]'));\n\t\t\t\t}\n\t\t\t\tTopics.isFollowing([tid], uid, next);\n\t\t\t},\n\t\t\tfunction (_isFollowing, next) {\n\t\t\t\tisFollowing = _isFollowing[0];\n\t\t\t\tif (isFollowing) {\n\t\t\t\t\tTopics.unfollow(tid, uid, next);\n\t\t\t\t} else {\n\t\t\t\t\tTopics.follow(tid, uid, next);\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tnext(null, !isFollowing);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tTopics.follow = function (tid, uid, callback) {\n\t\tsetWatching(follow, unignore, 'action:topic.follow', tid, uid, callback);\n\t};\n\n\tTopics.unfollow = function (tid, uid, callback) {\n\t\tsetWatching(unfollow, unignore, 'action:topic.unfollow', tid, uid, callback);\n\t};\n\n\tTopics.ignore = function (tid, uid, callback) {\n\t\tsetWatching(ignore, unfollow, 'action:topic.ignore', tid, uid, callback);\n\t};\n\n\tfunction setWatching(method1, method2, hook, tid, uid, callback) {\n\t\tcallback = callback || function () {};\n\t\tif (!parseInt(uid, 10)) {\n\t\t\treturn callback();\n\t\t}\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tTopics.exists(tid, next);\n\t\t\t},\n\t\t\tfunction (exists, next) {\n\t\t\t\tif (!exists) {\n\t\t\t\t\treturn next(new Error('[[error:no-topic]]'));\n\t\t\t\t}\n\t\t\t\tmethod1(tid, uid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tmethod2(tid, uid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tplugins.fireHook(hook, {uid: uid, tid: tid});\n\t\t\t\tnext();\n\t\t\t}\n\t\t], callback);\n\t}\n\n\tfunction follow(tid, uid, callback) {\n\t\taddToSets('tid:' + tid + ':followers', 'uid:' + uid + ':followed_tids', tid, uid, callback);\n\t}\n\n\tfunction unfollow(tid, uid, callback) {\n\t\tremoveFromSets('tid:' + tid + ':followers', 'uid:' + uid + ':followed_tids', tid, uid, callback);\n\t}\n\n\tfunction ignore(tid, uid, callback) {\n\t\taddToSets('tid:' + tid + ':ignorers', 'uid:' + uid + ':ignored_tids', tid, uid, callback);\n\t}\n\n\tfunction unignore(tid, uid, callback) {\n\t\tremoveFromSets('tid:' + tid + ':ignorers', 'uid:' + uid + ':ignored_tids', tid, uid, callback);\n\t}\n\n\tfunction addToSets(set1, set2, tid, uid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.setAdd(set1, uid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tdb.sortedSetAdd(set2, Date.now(), tid, next);\n\t\t\t}\n\t\t], callback);\n\t}\n\n\tfunction removeFromSets(set1, set2, tid, uid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.setRemove(set1, uid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tdb.sortedSetRemove(set2, tid, next);\n\t\t\t}\n\t\t], callback);\n\t}\n\n\tTopics.isFollowing = function (tids, uid, callback) {\n\t\tisIgnoringOrFollowing('followers', tids, uid, callback);\n\t};\n\n\tTopics.isIgnoring = function (tids, uid, callback) {\n\t\tisIgnoringOrFollowing('ignorers', tids, uid, callback);\n\t};\n\n\tfunction isIgnoringOrFollowing(set, tids, uid, callback) {\n\t\tif (!Array.isArray(tids)) {\n\t\t\treturn callback();\n\t\t}\n\t\tif (!parseInt(uid, 10)) {\n\t\t\treturn callback(null, tids.map(function () { return false; }));\n\t\t}\n\t\tvar keys = tids.map(function (tid) {\n\t\t\treturn 'tid:' + tid + ':' + set;\n\t\t});\n\t\tdb.isMemberOfSets(keys, uid, callback);\n\t}\n\n\tTopics.getFollowers = function (tid, callback) {\n\t\tdb.getSetMembers('tid:' + tid + ':followers', callback);\n\t};\n\n\tTopics.getIgnorers = function (tid, callback) {\n\t\tdb.getSetMembers('tid:' + tid + ':ignorers', callback);\n\t};\n\n\tTopics.filterIgnoringUids = function (tid, uids, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.isSetMembers('tid:' + tid + ':ignorers', uids, next);\n\t\t\t},\n\t\t\tfunction (isMembers, next) {\n\t\t\t\tvar readingUids = uids.filter(function (uid, index) {\n\t\t\t\t\treturn uid && isMembers[index];\n\t\t\t\t});\n\t\t\t\tnext(null, readingUids);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tTopics.filterWatchedTids = function (tids, uid, callback) {\n\t\tdb.sortedSetScores('uid:' + uid + ':followed_tids', tids, function (err, scores) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\ttids = tids.filter(function (tid, index) {\n\t\t\t\treturn tid && !!scores[index];\n\t\t\t});\n\t\t\tcallback(null, tids);\n\t\t});\n\t};\n\n\tTopics.filterNotIgnoredTids = function (tids, uid, callback) {\n\t\tdb.sortedSetScores('uid:' + uid + ':ignored_tids', tids, function (err, scores) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\ttids = tids.filter(function (tid, index) {\n\t\t\t\treturn tid && !scores[index];\n\t\t\t});\n\t\t\tcallback(null, tids);\n\t\t});\n\t};\n\n\tTopics.notifyFollowers = function (postData, exceptUid, callback) {\n\t\tcallback = callback || function () {};\n\t\tvar followers;\n\t\tvar title;\n\t\tvar titleEscaped;\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tTopics.getFollowers(postData.topic.tid, next);\n\t\t\t},\n\t\t\tfunction (followers, next) {\n\t\t\t\tif (!Array.isArray(followers) || !followers.length) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\tvar index = followers.indexOf(exceptUid.toString());\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tfollowers.splice(index, 1);\n\t\t\t\t}\n\t\t\t\tif (!followers.length) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\n\t\t\t\tprivileges.topics.filterUids('read', postData.topic.tid, followers, next);\n\t\t\t},\n\t\t\tfunction (_followers, next) {\n\t\t\t\tfollowers = _followers;\n\t\t\t\tif (!followers.length) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\ttitle = postData.topic.title;\n\n\t\t\t\tif (title) {\n\t\t\t\t\ttitle = S(title).decodeHTMLEntities().s;\n\t\t\t\t\ttitleEscaped = title.replace(/%/g, '&#37;').replace(/,/g, '&#44;');\n\t\t\t\t}\n\n\t\t\t\tpostData.content = posts.relativeToAbsolute(postData.content);\n\n\t\t\t\tnotifications.create({\n\t\t\t\t\tbodyShort: '[[notifications:user_posted_to, ' + postData.user.username + ', ' + titleEscaped + ']]',\n\t\t\t\t\tbodyLong: postData.content,\n\t\t\t\t\tpid: postData.pid,\n\t\t\t\t\tpath: '/post/' + postData.pid,\n\t\t\t\t\tnid: 'new_post:tid:' + postData.topic.tid + ':pid:' + postData.pid + ':uid:' + exceptUid,\n\t\t\t\t\ttid: postData.topic.tid,\n\t\t\t\t\tfrom: exceptUid,\n\t\t\t\t\tmergeId: 'notifications:user_posted_to|' + postData.topic.tid,\n\t\t\t\t\ttopicTitle: title\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (notification, next) {\n\t\t\t\tif (notification) {\n\t\t\t\t\tnotifications.push(notification, followers);\n\t\t\t\t}\n\n\t\t\t\tif (parseInt(meta.config.disableEmailSubscriptions, 10) === 1) {\n\t\t\t\t\treturn next();\n\t\t\t\t}\n\n\t\t\t\tasync.eachLimit(followers, 3, function (toUid, next) {\n\t\t\t\t\tasync.parallel({\n\t\t\t\t\t\tuserData: async.apply(user.getUserFields, toUid, ['username', 'userslug']),\n\t\t\t\t\t\tuserSettings: async.apply(user.getSettings, toUid)\n\t\t\t\t\t}, function (err, data) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (data.userSettings.sendPostNotifications) {\n\t\t\t\t\t\t\temailer.send('notif_post', toUid, {\n\t\t\t\t\t\t\t\tpid: postData.pid,\n\t\t\t\t\t\t\t\tsubject: '[' + (meta.config.title || 'NodeBB') + '] ' + title,\n\t\t\t\t\t\t\t\tintro: '[[notifications:user_posted_to, ' + postData.user.username + ', ' + titleEscaped + ']]',\n\t\t\t\t\t\t\t\tpostBody: postData.content.replace(/\"\\/\\//g, '\"https://'),\n\t\t\t\t\t\t\t\tsite_title: meta.config.title || 'NodeBB',\n\t\t\t\t\t\t\t\tusername: data.userData.username,\n\t\t\t\t\t\t\t\tuserslug: data.userData.userslug,\n\t\t\t\t\t\t\t\turl: nconf.get('url') + '/topic/' + postData.topic.tid,\n\t\t\t\t\t\t\t\ttopicSlug: postData.topic.slug,\n\t\t\t\t\t\t\t\tpostCount: postData.topic.postcount,\n\t\t\t\t\t\t\t\tbase_url: nconf.get('url')\n\t\t\t\t\t\t\t}, next);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twinston.debug('[topics.notifyFollowers] uid ' + toUid + ' does not have post notifications enabled, skipping.');\n\t\t\t\t\t\t\tnext();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tnext();\n\t\t\t}\n\t\t], callback);\n\t};\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/topics/fork.js":"\n'use strict';\n\nvar async = require('async');\nvar winston = require('winston');\nvar db = require('../database');\nvar user = require('../user');\nvar posts = require('../posts');\nvar privileges = require('../privileges');\nvar plugins = require('../plugins');\nvar meta = require('../meta');\n\n\nmodule.exports = function (Topics) {\n\n\tTopics.createTopicFromPosts = function (uid, title, pids, fromTid, callback) {\n\t\tif (title) {\n\t\t\ttitle = title.trim();\n\t\t}\n\n\t\tif (title.length < parseInt(meta.config.minimumTitleLength, 10)) {\n\t\t\treturn callback(new Error('[[error:title-too-short, ' + meta.config.minimumTitleLength + ']]'));\n\t\t} else if (title.length > parseInt(meta.config.maximumTitleLength, 10)) {\n\t\t\treturn callback(new Error('[[error:title-too-long, ' + meta.config.maximumTitleLength + ']]'));\n\t\t}\n\n\t\tif (!pids || !pids.length) {\n\t\t\treturn callback(new Error('[[error:invalid-pid]]'));\n\t\t}\n\n\t\tpids.sort(function (a, b) {\n\t\t\treturn a - b;\n\t\t});\n\t\tvar mainPid = pids[0];\n\t\tvar cid;\n\t\tvar tid;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tposts.getCidByPid(mainPid, next);\n\t\t\t},\n\t\t\tfunction (_cid, next) {\n\t\t\t\tcid = _cid;\n\t\t\t\tasync.parallel({\n\t\t\t\t\tpostData: function (next) {\n\t\t\t\t\t\tposts.getPostData(mainPid, next);\n\t\t\t\t\t},\n\t\t\t\t\tisAdminOrMod: function (next) {\n\t\t\t\t\t\tprivileges.categories.isAdminOrMod(cid, uid, next);\n\t\t\t\t\t}\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tif (!results.isAdminOrMod) {\n\t\t\t\t\treturn next(new Error('[[error:no-privileges]]'));\n\t\t\t\t}\n\t\t\t\tTopics.create({uid: results.postData.uid, title: title, cid: cid}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tTopics.updateTopicBookmarks(fromTid, pids, function () { next( null, results );} );\n\t\t\t},\n\t\t\tfunction (_tid, next) {\n\t\t\t\tfunction move(pid, next) {\n\t\t\t\t\tprivileges.posts.canEdit(pid, uid, function (err, canEdit) {\n\t\t\t\t\t\tif (err || !canEdit.flag) {\n\t\t\t\t\t\t\treturn next(err || new Error(canEdit.message));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tTopics.movePostToTopic(pid, tid, next);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\ttid = _tid;\n\t\t\t\tasync.eachSeries(pids, move, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tTopics.updateTimestamp(tid, Date.now(), next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tTopics.getTopicData(tid, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tTopics.movePostToTopic = function (pid, tid, callback) {\n\t\tvar postData;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tTopics.exists(tid, next);\n\t\t\t},\n\t\t\tfunction (exists, next) {\n\t\t\t\tif (!exists) {\n\t\t\t\t\treturn next(new Error('[[error:no-topic]]'));\n\t\t\t\t}\n\t\t\t\tposts.getPostFields(pid, ['tid', 'uid', 'timestamp', 'upvotes', 'downvotes'], next);\n\t\t\t},\n\t\t\tfunction (post, next) {\n\t\t\t\tif (!post || !post.tid) {\n\t\t\t\t\treturn next(new Error('[[error:no-post]]'));\n\t\t\t\t}\n\n\t\t\t\tif (parseInt(post.tid, 10) === parseInt(tid, 10)) {\n\t\t\t\t\treturn next(new Error('[[error:cant-move-to-same-topic]]'));\n\t\t\t\t}\n\n\t\t\t\tpostData = post;\n\t\t\t\tpostData.pid = pid;\n\n\t\t\t\tTopics.removePostFromTopic(postData.tid, postData, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tasync.parallel([\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tupdateCategoryPostCount(postData.tid, tid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tTopics.decreasePostCount(postData.tid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tTopics.increasePostCount(tid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tposts.setPostField(pid, 'tid', tid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tTopics.addPostToTopic(tid, postData, next);\n\t\t\t\t\t}\n\t\t\t\t], next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tasync.parallel([\n\t\t\t\t\tasync.apply(updateRecentTopic, tid),\n\t\t\t\t\tasync.apply(updateRecentTopic, postData.tid)\n\t\t\t\t], next);\n\t\t\t}\n\t\t], function (err) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tplugins.fireHook('action:post.move', {post: postData, tid: tid});\n\t\t\tcallback();\n\t\t});\n\t};\n\n\tfunction updateCategoryPostCount(oldTid, tid, callback) {\n\t\tTopics.getTopicsFields([oldTid, tid], ['cid'], function (err, topicData) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tif (!topicData[0].cid || !topicData[1].cid) {\n\t\t\t\treturn callback();\n\t\t\t}\n\t\t\tif (parseInt(topicData[0].cid, 10) === parseInt(topicData[1].cid, 10)) {\n\t\t\t\treturn callback();\n\t\t\t}\n\t\t\tasync.parallel([\n\t\t\t\tasync.apply(db.incrObjectFieldBy, 'category:' + topicData[0].cid, 'post_count', -1),\n\t\t\t\tasync.apply(db.incrObjectFieldBy, 'category:' + topicData[1].cid, 'post_count', 1)\n\t\t\t], callback);\n\t\t});\n\t}\n\n\tfunction updateRecentTopic(tid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tTopics.getLatestUndeletedPid(tid, next);\n\t\t\t},\n\t\t\tfunction (pid, next) {\n\t\t\t\tif (!pid) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\tposts.getPostField(pid, 'timestamp', next);\n\t\t\t},\n\t\t\tfunction (timestamp, next) {\n\t\t\t\tTopics.updateTimestamp(tid, timestamp, next);\n\t\t\t}\n\t\t], callback);\n\t}\n\n\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/topics/popular.js":"\n'use strict';\n\nvar async = require('async');\nvar privileges = require('../privileges');\n\nmodule.exports = function (Topics) {\n\n\tTopics.getPopular = function (term, uid, count, callback) {\n\t\tcount = parseInt(count, 10) || 20;\n\n\t\tif (term === 'alltime') {\n\t\t\treturn getAllTimePopular(uid, count, callback);\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tTopics.getLatestTidsFromSet('topics:tid', 0, -1, term, next);\n\t\t\t},\n\t\t\tfunction (tids, next) {\n\t\t\t\tgetTopics(tids, uid, count, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tfunction getAllTimePopular(uid, count, callback) {\n\t\tTopics.getTopicsFromSet('topics:posts', uid, 0, count - 1, function (err, data) {\n\t\t\tcallback(err, data ? data.topics : null);\n\t\t});\n\t}\n\n\tfunction getTopics(tids, uid, count, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tTopics.getTopicsFields(tids, ['tid', 'postcount', 'deleted'], next);\n\t\t\t},\n\t\t\tfunction (topics, next) {\n\t\t\t\ttids = topics.filter(function (topic) {\n\t\t\t\t\treturn topic && parseInt(topic.deleted, 10) !== 1;\n\t\t\t\t}).sort(function (a, b) {\n\t\t\t\t\treturn b.postcount - a.postcount;\n\t\t\t\t}).slice(0, count).map(function (topic) {\n\t\t\t\t\treturn topic.tid;\n\t\t\t\t});\n\t\t\t\tprivileges.topics.filterTids('read', tids, uid, next);\n\t\t\t},\n\t\t\tfunction (tids, next) {\n\t\t\t\tTopics.getTopicsByTids(tids, uid, next);\n\t\t\t}\n\t\t], callback);\n\t}\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/topics/posts.js":"\n'use strict';\n\nvar async = require('async');\nvar _ = require('underscore');\nvar validator = require('validator');\n\nvar db = require('../database');\nvar user = require('../user');\nvar posts = require('../posts');\nvar meta = require('../meta');\nvar plugins = require('../plugins');\n\nmodule.exports = function (Topics) {\n\n\tTopics.onNewPostMade = function (postData, callback) {\n\t\tasync.series([\n\t\t\tfunction (next) {\n\t\t\t\tTopics.increasePostCount(postData.tid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tTopics.updateTimestamp(postData.tid, postData.timestamp, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tTopics.addPostToTopic(postData.tid, postData, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tTopics.getTopicPosts = function (tid, set, start, stop, uid, reverse, callback) {\n\t\tcallback = callback || function () {};\n\t\tasync.parallel({\n\t\t\tposts: function (next) {\n\t\t\t\tposts.getPostsFromSet(set, start, stop, uid, reverse, next);\n\t\t\t},\n\t\t\tpostCount: function (next) {\n\t\t\t\tTopics.getTopicField(tid, 'postcount', next);\n\t\t\t}\n\t\t}, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tTopics.calculatePostIndices(results.posts, start, stop, results.postCount, reverse);\n\n\t\t\tTopics.addPostData(results.posts, uid, callback);\n\t\t});\n\t};\n\n\tTopics.addPostData = function (postData, uid, callback) {\n\t\tif (!Array.isArray(postData) || !postData.length) {\n\t\t\treturn callback(null, []);\n\t\t}\n\t\tvar pids = postData.map(function (post) {\n\t\t\treturn post && post.pid;\n\t\t});\n\n\t\tif (!Array.isArray(pids) || !pids.length) {\n\t\t\treturn callback(null, []);\n\t\t}\n\n\t\tasync.parallel({\n\t\t\tbookmarks: function (next) {\n\t\t\t\tposts.hasBookmarked(pids, uid, next);\n\t\t\t},\n\t\t\tvoteData: function (next) {\n\t\t\t\tposts.getVoteStatusByPostIDs(pids, uid, next);\n\t\t\t},\n\t\t\tuserData: function (next) {\n\t\t\t\tvar uids = [];\n\n\t\t\t\tfor(var i = 0; i < postData.length; ++i) {\n\t\t\t\t\tif (postData[i] && uids.indexOf(postData[i].uid) === -1) {\n\t\t\t\t\t\tuids.push(postData[i].uid);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tposts.getUserInfoForPosts(uids, uid, function (err, users) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar userData = {};\n\t\t\t\t\tusers.forEach(function (user, index) {\n\t\t\t\t\t\tuserData[uids[index]] = user;\n\t\t\t\t\t});\n\n\t\t\t\t\tnext(null, userData);\n\t\t\t\t});\n\t\t\t},\n\t\t\teditors: function (next) {\n\t\t\t\tvar editors = [];\n\t\t\t\tfor(var i = 0; i < postData.length; ++i) {\n\t\t\t\t\tif (postData[i] && postData[i].editor && editors.indexOf(postData[i].editor) === -1) {\n\t\t\t\t\t\teditors.push(postData[i].editor);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tuser.getUsersFields(editors, ['uid', 'username', 'userslug'], function (err, editors) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\t\t\t\t\tvar editorData = {};\n\t\t\t\t\teditors.forEach(function (editor) {\n\t\t\t\t\t\teditorData[editor.uid] = editor;\n\t\t\t\t\t});\n\t\t\t\t\tnext(null, editorData);\n\t\t\t\t});\n\t\t\t},\n\t\t\tparents: function (next) {\n\t\t\t\tTopics.addParentPosts(postData, next);\n\t\t\t}\n\t\t}, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tpostData.forEach(function (postObj, i) {\n\t\t\t\tif (postObj) {\n\t\t\t\t\tpostObj.deleted = parseInt(postObj.deleted, 10) === 1;\n\t\t\t\t\tpostObj.user = parseInt(postObj.uid, 10) ? results.userData[postObj.uid] : _.clone(results.userData[postObj.uid]);\n\t\t\t\t\tpostObj.editor = postObj.editor ? results.editors[postObj.editor] : null;\n\t\t\t\t\tpostObj.bookmarked = results.bookmarks[i];\n\t\t\t\t\tpostObj.upvoted = results.voteData.upvotes[i];\n\t\t\t\t\tpostObj.downvoted = results.voteData.downvotes[i];\n\t\t\t\t\tpostObj.votes = postObj.votes || 0;\n\t\t\t\t\tpostObj.replies = postObj.replies || 0;\n\t\t\t\t\tpostObj.selfPost = !!parseInt(uid, 10) && parseInt(uid, 10) === parseInt(postObj.uid, 10);\n\n\t\t\t\t\t// Username override for guests, if enabled\n\t\t\t\t\tif (parseInt(meta.config.allowGuestHandles, 10) === 1 && parseInt(postObj.uid, 10) === 0 && postObj.handle) {\n\t\t\t\t\t\tpostObj.user.username = validator.escape(String(postObj.handle));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tplugins.fireHook('filter:topics.addPostData', {\n\t\t\t\tposts: postData,\n\t\t\t\tuid: uid\n\t\t\t}, function (err, data) {\n\t\t\t\tcallback(err, data ? data.posts : null);\n\t\t\t});\n\t\t});\n\t};\n\n\tTopics.modifyPostsByPrivilege = function (topicData, topicPrivileges) {\n\t\tvar loggedIn = !!parseInt(topicPrivileges.uid, 10);\n\t\ttopicData.posts.forEach(function (post) {\n\t\t\tif (post) {\n\t\t\t\tpost.display_edit_tools = topicPrivileges.isAdminOrMod || (post.selfPost && topicPrivileges['posts:edit']);\n\t\t\t\tpost.display_delete_tools = topicPrivileges.isAdminOrMod || (post.selfPost && topicPrivileges['posts:delete']);\n\t\t\t\tpost.display_moderator_tools = post.display_edit_tools || post.display_delete_tools;\n\t\t\t\tpost.display_move_tools = topicPrivileges.isAdminOrMod && post.index !== 0;\n\t\t\t\tpost.display_post_menu = topicPrivileges.isAdminOrMod || (post.selfPost && !topicData.locked) || ((loggedIn || topicData.postSharing.length) && !post.deleted);\n\t\t\t\tpost.ip = topicPrivileges.isAdminOrMod ? post.ip : undefined;\n\n\t\t\t\tposts.modifyPostByPrivilege(post, topicPrivileges.isAdminOrMod);\n\t\t\t}\n\t\t});\n\t};\n\n\tTopics.addParentPosts = function (postData, callback) {\n\t\tvar parentPids = postData.map(function (postObj) {\n\t\t\treturn postObj && postObj.hasOwnProperty('toPid') ? parseInt(postObj.toPid, 10) : null;\n\t\t}).filter(Boolean);\n\n\t\tif (!parentPids.length) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tvar parentPosts;\n\t\tasync.waterfall([\n\t\t\tasync.apply(posts.getPostsFields, parentPids, ['uid']),\n\t\t\tfunction (_parentPosts, next) {\n\t\t\t\tparentPosts = _parentPosts;\n\t\t\t\tvar parentUids = parentPosts.map(function (postObj) { return parseInt(postObj.uid, 10); }).filter(function (uid, idx, users) {\n\t\t\t\t\treturn users.indexOf(uid) === idx;\n\t\t\t\t});\n\n\t\t\t\tuser.getUsersFields(parentUids, ['username'], next);\n\t\t\t},\n\t\t\tfunction (userData, next) {\n\t\t\t\tvar usersMap = {};\n\t\t\t\tuserData.forEach(function (user) {\n\t\t\t\t\tusersMap[user.uid] = user.username;\n\t\t\t\t});\n\t\t\t\tvar parents = {};\n\t\t\t\tparentPosts.forEach(function (post, i) {\n\t\t\t\t\tparents[parentPids[i]] = {username: usersMap[post.uid]};\n\t\t\t\t});\n\n\t\t\t\tpostData.forEach(function (post) {\n\t\t\t\t\tpost.parent = parents[post.toPid];\n\t\t\t\t});\n\t\t\t\tnext();\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tTopics.calculatePostIndices = function (posts, start, stop, postCount, reverse) {\n\t\tposts.forEach(function (post, index) {\n\t\t\tif (reverse) {\n\t\t\t\tpost.index = postCount - (start + index + 1);\n\t\t\t} else {\n\t\t\t\tpost.index = start + index + 1;\n\t\t\t}\n\t\t});\n\t};\n\n\tTopics.getLatestUndeletedPid = function (tid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tTopics.getLatestUndeletedReply(tid, next);\n\t\t\t},\n\t\t\tfunction (pid, next) {\n\t\t\t\tif (parseInt(pid, 10)) {\n\t\t\t\t\treturn callback(null, pid.toString());\n\t\t\t\t}\n\t\t\t\tTopics.getTopicField(tid, 'mainPid', next);\n\t\t\t},\n\t\t\tfunction (mainPid, next) {\n\t\t\t\tposts.getPostFields(mainPid, ['pid', 'deleted'], next);\n\t\t\t},\n\t\t\tfunction (mainPost, next) {\n\t\t\t\tnext(null, parseInt(mainPost.pid, 10) && parseInt(mainPost.deleted, 10) !== 1 ? mainPost.pid.toString() : null);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tTopics.getLatestUndeletedReply = function (tid, callback) {\n\t\tvar isDeleted = false;\n\t\tvar done = false;\n\t\tvar latestPid = null;\n\t\tvar index = 0;\n\t\tasync.doWhilst(\n\t\t\tfunction (next) {\n\t\t\t\tdb.getSortedSetRevRange('tid:' + tid + ':posts', index, index, function (err, pids) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!Array.isArray(pids) || !pids.length) {\n\t\t\t\t\t\tdone = true;\n\t\t\t\t\t\treturn next();\n\t\t\t\t\t}\n\n\t\t\t\t\tposts.getPostField(pids[0], 'deleted', function (err, deleted) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tisDeleted = parseInt(deleted, 10) === 1;\n\t\t\t\t\t\tif (!isDeleted) {\n\t\t\t\t\t\t\tlatestPid = pids[0];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t++index;\n\t\t\t\t\t\tnext();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t\tfunction () {\n\t\t\t\treturn isDeleted && !done;\n\t\t\t},\n\t\t\tfunction (err) {\n\t\t\t\tcallback(err, latestPid);\n\t\t\t}\n\t\t);\n\t};\n\n\tTopics.addPostToTopic = function (tid, postData, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tTopics.getTopicField(tid, 'mainPid', next);\n\t\t\t},\n\t\t\tfunction (mainPid, next) {\n\t\t\t\tif (!parseInt(mainPid, 10)) {\n\t\t\t\t\tTopics.setTopicField(tid, 'mainPid', postData.pid, next);\n\t\t\t\t} else {\n\t\t\t\t\tasync.parallel([\n\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\tdb.sortedSetAdd('tid:' + tid + ':posts', postData.timestamp, postData.pid, next);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\tvar upvotes = parseInt(postData.upvotes, 10) || 0;\n\t\t\t\t\t\t\tvar downvotes = parseInt(postData.downvotes, 10) || 0;\n\t\t\t\t\t\t\tvar votes = upvotes - downvotes;\n\t\t\t\t\t\t\tdb.sortedSetAdd('tid:' + tid + ':posts:votes', votes, postData.pid, next);\n\t\t\t\t\t\t}\n\t\t\t\t\t], function (err) {\n\t\t\t\t\t\tnext(err);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tdb.sortedSetIncrBy('tid:' + tid + ':posters', 1, postData.uid, next);\n\t\t\t},\n\t\t\tfunction (count, next) {\n\t\t\t\tTopics.updateTeaser(tid, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tTopics.removePostFromTopic = function (tid, postData, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.sortedSetsRemove([\n\t\t\t\t\t'tid:' + tid + ':posts',\n\t\t\t\t\t'tid:' + tid + ':posts:votes'\n\t\t\t\t], postData.pid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tdb.sortedSetIncrBy('tid:' + tid + ':posters', -1, postData.uid, next);\n\t\t\t},\n\t\t\tfunction (count, next) {\n\t\t\t\tTopics.updateTeaser(tid, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tTopics.getPids = function (tid, callback) {\n\t\tasync.parallel({\n\t\t\tmainPid: function (next) {\n\t\t\t\tTopics.getTopicField(tid, 'mainPid', next);\n\t\t\t},\n\t\t\tpids: function (next) {\n\t\t\t\tdb.getSortedSetRange('tid:' + tid + ':posts', 0, -1, next);\n\t\t\t}\n\t\t}, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tif (results.mainPid) {\n\t\t\t\tresults.pids = [results.mainPid].concat(results.pids);\n\t\t\t}\n\t\t\tcallback(null, results.pids);\n\t\t});\n\t};\n\n\tTopics.increasePostCount = function (tid, callback) {\n\t\tincrementFieldAndUpdateSortedSet(tid, 'postcount', 1, 'topics:posts', callback);\n\t};\n\n\tTopics.decreasePostCount = function (tid, callback) {\n\t\tincrementFieldAndUpdateSortedSet(tid, 'postcount', -1, 'topics:posts', callback);\n\t};\n\n\tTopics.increaseViewCount = function (tid, callback) {\n\t\tincrementFieldAndUpdateSortedSet(tid, 'viewcount', 1, 'topics:views', callback);\n\t};\n\n\tfunction incrementFieldAndUpdateSortedSet(tid, field, by, set, callback) {\n\t\tcallback = callback || function () {};\n\t\tdb.incrObjectFieldBy('topic:' + tid, field, by, function (err, value) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tdb.sortedSetAdd(set, value, tid, callback);\n\t\t});\n\t}\n\n\tTopics.getTitleByPid = function (pid, callback) {\n\t\tTopics.getTopicFieldByPid('title', pid, callback);\n\t};\n\n\tTopics.getTopicFieldByPid = function (field, pid, callback) {\n\t\tposts.getPostField(pid, 'tid', function (err, tid) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tTopics.getTopicField(tid, field, callback);\n\t\t});\n\t};\n\n\tTopics.getTopicDataByPid = function (pid, callback) {\n\t\tposts.getPostField(pid, 'tid', function (err, tid) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tTopics.getTopicData(tid, callback);\n\t\t});\n\t};\n\n\tTopics.getPostCount = function (tid, callback) {\n\t\tdb.getObjectField('topic:' + tid, 'postcount', callback);\n\t};\n\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/topics/recent.js":"\n\n'use strict';\n\nvar async = require('async');\nvar db = require('../database');\nvar plugins = require('../plugins');\nvar privileges = require('../privileges');\nvar user = require('../user');\nvar categories =  require('../categories');\n\nmodule.exports = function (Topics) {\n\tvar terms = {\n\t\tday: 86400000,\n\t\tweek: 604800000,\n\t\tmonth: 2592000000,\n\t\tyear: 31104000000\n\t};\n\n\tTopics.getRecentTopics = function (cid, uid, start, stop, filter, callback) {\n\t\tvar recentTopics = {\n\t\t\tnextStart : 0,\n\t\t\ttopics: []\n\t\t};\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tif (cid) {\n\t\t\t\t\tcategories.getTopicIds(cid, 'cid:' + cid + ':tids', true, 0, 199, next);\n\t\t\t\t} else {\n\t\t\t\t\tdb.getSortedSetRevRange('topics:recent', 0, 199, next);\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction (tids, next) {\n\t\t\t\tfilterTids(tids, uid, filter, next);\n\t\t\t},\n\t\t\tfunction (tids, next) {\n\t\t\t\trecentTopics.topicCount = tids.length;\n\t\t\t\ttids = tids.slice(start, stop + 1);\n\t\t\t\tTopics.getTopicsByTids(tids, uid, next);\n\t\t\t},\n\t\t\tfunction (topicData, next) {\n\t\t\t\trecentTopics.topics = topicData;\n\t\t\t\trecentTopics.nextStart = stop + 1;\n\t\t\t\tnext(null, recentTopics);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\n\tfunction filterTids(tids, uid, filter, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tif (filter === 'watched') {\n\t\t\t\t\tTopics.filterWatchedTids(tids, uid, next);\n\t\t\t\t} else if (filter === 'new') {\n\t\t\t\t\tTopics.filterNewTids(tids, uid, next);\n\t\t\t\t} else {\n\t\t\t\t\tTopics.filterNotIgnoredTids(tids, uid, next);\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction (tids, next) {\n\t\t\t\tprivileges.topics.filterTids('read', tids, uid, next);\n\t\t\t},\n\t\t\tfunction (tids, next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\tignoredCids: function (next) {\n\t\t\t\t\t\tif (filter === 'watched') {\n\t\t\t\t\t\t\treturn next(null, []);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tuser.getIgnoredCategories(uid, next);\n\t\t\t\t\t},\n\t\t\t\t\ttopicData: function (next) {\n\t\t\t\t\t\tTopics.getTopicsFields(tids, ['tid', 'cid'], next);\n\t\t\t\t\t}\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\ttids = results.topicData.filter(function (topic) {\n\t\t\t\t\tif (topic) {\n\t\t\t\t\t\treturn results.ignoredCids.indexOf(topic.cid.toString()) === -1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}).map(function (topic) {\n\t\t\t\t\treturn topic.tid;\n\t\t\t\t});\n\t\t\t\tnext(null, tids);\n\t\t\t}\n\t\t], callback);\n\t}\n\n\n\tTopics.getLatestTopics = function (uid, start, stop, term, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tTopics.getLatestTidsFromSet('topics:recent', start, stop, term, next);\n\t\t\t},\n\t\t\tfunction (tids, next) {\n\t\t\t\tTopics.getTopics(tids, uid, next);\n\t\t\t},\n\t\t\tfunction (topics, next) {\n\t\t\t\tnext(null, {topics: topics, nextStart: stop + 1});\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tTopics.getLatestTidsFromSet = function (set, start, stop, term, callback) {\n\t\tvar since = terms.day;\n\t\tif (terms[term]) {\n\t\t\tsince = terms[term];\n\t\t}\n\n\t\tvar count = parseInt(stop, 10) === -1 ? stop : stop - start + 1;\n\n\t\tdb.getSortedSetRevRangeByScore(set, start, count, '+inf', Date.now() - since, callback);\n\t};\n\n\tTopics.updateTimestamp = function (tid, timestamp, callback) {\n\t\tasync.parallel([\n\t\t\tfunction (next) {\n\t\t\t\tasync.waterfall([\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tTopics.getTopicField(tid, 'deleted', next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (deleted, next) {\n\t\t\t\t\t\tif (parseInt(deleted, 10) === 1) {\n\t\t\t\t\t\t\treturn next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tTopics.updateRecent(tid, timestamp, next);\n\t\t\t\t\t}\n\t\t\t\t], next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tTopics.setTopicField(tid, 'lastposttime', timestamp, next);\n\t\t\t}\n\t\t], function (err) {\n\t\t\tcallback(err);\n\t\t});\n\t};\n\n\tTopics.updateRecent = function (tid, timestamp, callback) {\n\t\tcallback = callback || function () {};\n\t\tif (plugins.hasListeners('filter:topics.updateRecent')) {\n\t\t\tplugins.fireHook('filter:topics.updateRecent', {tid: tid, timestamp: timestamp}, function (err, data) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\t\t\t\tif (data && data.tid && data.timestamp) {\n\t\t\t\t\tdb.sortedSetAdd('topics:recent', data.timestamp, data.tid, callback);\n\t\t\t\t} else {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tdb.sortedSetAdd('topics:recent', timestamp, tid, callback);\n\t\t}\n\t};\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/topics/suggested.js":"\n'use strict';\n\nvar async = require('async');\nvar _ = require('underscore');\n\nvar categories = require('../categories');\nvar search = require('../search');\n\nmodule.exports = function (Topics) {\n\n\tTopics.getSuggestedTopics = function (tid, uid, start, stop, callback) {\n\t\tasync.parallel({\n\t\t\ttagTids: function (next) {\n\t\t\t\tgetTidsWithSameTags(tid, next);\n\t\t\t},\n\t\t\tsearchTids: function (next) {\n\t\t\t\tgetSearchTids(tid, next);\n\t\t\t},\n\t\t\tcategoryTids: function (next) {\n\t\t\t\tgetCategoryTids(tid, next);\n\t\t\t}\n\t\t}, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tvar tids = results.tagTids.concat(results.searchTids).concat(results.categoryTids);\n\t\t\ttids = tids.filter(function (_tid, index, array) {\n\t\t\t\treturn parseInt(_tid, 10) !== parseInt(tid, 10) && array.indexOf(_tid) === index;\n\t\t\t});\n\n\t\t\tif (stop === -1) {\n\t\t\t\ttids = tids.slice(start);\n\t\t\t} else {\n\t\t\t\ttids = tids.slice(start, stop + 1);\n\t\t\t}\n\n\t\t\tTopics.getTopics(tids, uid, callback);\n\t\t});\n\t};\n\n\tfunction getTidsWithSameTags(tid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tTopics.getTopicTags(tid, next);\n\t\t\t},\n\t\t\tfunction (tags, next) {\n\t\t\t\tasync.map(tags, function (tag, next) {\n\t\t\t\t\tTopics.getTagTids(tag, 0, -1, next);\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (data, next) {\n\t\t\t\tnext(null, _.unique(_.flatten(data)));\n\t\t\t}\n\t\t], callback);\n\t}\n\n\tfunction getSearchTids(tid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tTopics.getTopicField(tid, 'title', next);\n\t\t\t},\n\t\t\tfunction (title, next) {\n\t\t\t\tsearch.searchQuery('topic', title, [], [], next);\n\t\t\t}\n\t\t], callback);\n\t}\n\n\tfunction getCategoryTids(tid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tTopics.getTopicField(tid, 'cid', next);\n\t\t\t},\n\t\t\tfunction (cid, next) {\n\t\t\t\tcategories.getTopicIds(cid, 'cid:' + cid + ':tids', true, 0, 9, next);\n\t\t\t}\n\t\t], callback);\n\t}\n\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/topics/tags.js":"\n'use strict';\n\nvar async = require('async');\n\nvar db = require('../database');\nvar meta = require('../meta');\nvar _ = require('underscore');\nvar plugins = require('../plugins');\nvar utils = require('../../public/src/utils');\n\n\nmodule.exports = function (Topics) {\n\n\tTopics.createTags = function (tags, tid, timestamp, callback) {\n\t\tcallback = callback || function () {};\n\n\t\tif (!Array.isArray(tags) || !tags.length) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tplugins.fireHook('filter:tags.filter', {tags: tags, tid: tid}, next);\n\t\t\t},\n\t\t\tfunction (data, next) {\n\t\t\t\ttags = data.tags.slice(0, meta.config.maximumTagsPerTopic || 5);\n\t\t\t\ttags = tags.map(function (tag) {\n\t\t\t\t\treturn utils.cleanUpTag(tag, meta.config.maximumTagLength);\n\t\t\t\t}).filter(function (tag, index, array) {\n\t\t\t\t\treturn tag && tag.length >= (meta.config.minimumTagLength || 3) && array.indexOf(tag) === index;\n\t\t\t\t});\n\n\t\t\t\tvar keys = tags.map(function (tag) {\n\t\t\t\t\treturn 'tag:' + tag + ':topics';\n\t\t\t\t});\n\n\t\t\t\tasync.parallel([\n\t\t\t\t\tasync.apply(db.setAdd, 'topic:' + tid + ':tags', tags),\n\t\t\t\t\tasync.apply(db.sortedSetsAdd, keys, timestamp, tid)\n\t\t\t\t], function (err) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\t\t\t\t\tasync.each(tags, updateTagCount, next);\n\t\t\t\t});\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tTopics.createEmptyTag = function (tag, callback) {\n\t\tif (!tag) {\n\t\t\treturn callback(new Error('[[error:invalid-tag]]'));\n\t\t}\n\n\t\ttag = utils.cleanUpTag(tag, meta.config.maximumTagLength);\n\t\tif (tag.length < (meta.config.minimumTagLength || 3)) {\n\t\t\treturn callback(new Error('[[error:tag-too-short]]'));\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.isSortedSetMember('tags:topic:count', tag, next);\n\t\t\t},\n\t\t\tfunction (isMember, next) {\n\t\t\t\tif (isMember) {\n\t\t\t\t\treturn next();\n\t\t\t\t}\n\t\t\t\tdb.sortedSetAdd('tags:topic:count', 0, tag, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tTopics.updateTag = function (tag, data, callback) {\n\t\tdb.setObject('tag:' + tag, data, callback);\n\t};\n\n\tfunction updateTagCount(tag, callback) {\n\t\tcallback = callback || function () {};\n\t\tTopics.getTagTopicCount(tag, function (err, count) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tcount = count || 0;\n\n\t\t\tdb.sortedSetAdd('tags:topic:count', count, tag, callback);\n\t\t});\n\t}\n\n\tTopics.getTagTids = function (tag, start, stop, callback) {\n\t\tdb.getSortedSetRevRange('tag:' + tag + ':topics', start, stop, callback);\n\t};\n\n\tTopics.getTagTopicCount = function (tag, callback) {\n\t\tdb.sortedSetCard('tag:' + tag + ':topics', callback);\n\t};\n\n\tTopics.deleteTags = function (tags, callback) {\n\t\tif (!Array.isArray(tags) || !tags.length) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tasync.series([\n\t\t\tfunction (next) {\n\t\t\t\tremoveTagsFromTopics(tags, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tvar keys = tags.map(function (tag) {\n\t\t\t\t\treturn 'tag:' + tag + ':topics';\n\t\t\t\t});\n\t\t\t\tdb.deleteAll(keys, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tdb.sortedSetRemove('tags:topic:count', tags, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tfunction removeTagsFromTopics(tags, callback) {\n\t\tasync.eachLimit(tags, 50, function (tag, next) {\n\t\t\tdb.getSortedSetRange('tag:' + tag + ':topics', 0, -1, function (err, tids) {\n\t\t\t\tif (err || !tids.length) {\n\t\t\t\t\treturn next(err);\n\t\t\t\t}\n\t\t\t\tvar keys = tids.map(function (tid) {\n\t\t\t\t\treturn 'topic:' + tid + ':tags';\n\t\t\t\t});\n\n\t\t\t\tdb.setsRemove(keys, tag, next);\n\t\t\t});\n\t\t}, callback);\n\t}\n\n\tTopics.deleteTag = function (tag) {\n\t\tdb.delete('tag:' + tag + ':topics');\n\t\tdb.sortedSetRemove('tags:topic:count', tag);\n\t};\n\n\tTopics.getTags = function (start, stop, callback) {\n\t\tdb.getSortedSetRevRangeWithScores('tags:topic:count', start, stop, function (err, tags) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tTopics.getTagData(tags, callback);\n\t\t});\n\t};\n\n\tTopics.getTagData = function (tags, callback) {\n\t\tvar keys = tags.map(function (tag) {\n\t\t\treturn 'tag:' + tag.value;\n\t\t});\n\n\t\tdb.getObjects(keys, function (err, tagData) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\ttags.forEach(function (tag, index) {\n\t\t\t\ttag.color = tagData[index] ? tagData[index].color : '';\n\t\t\t\ttag.bgColor = tagData[index] ? tagData[index].bgColor : '';\n\t\t\t});\n\t\t\tcallback(null, tags);\n\t\t});\n\t};\n\n\tTopics.getTopicTags = function (tid, callback) {\n\t\tdb.getSetMembers('topic:' + tid + ':tags', callback);\n\t};\n\n\tTopics.getTopicTagsObjects = function (tid, callback) {\n\t\tTopics.getTopicsTagsObjects([tid], function (err, data) {\n\t\t\tcallback(err, Array.isArray(data) && data.length ? data[0] : []);\n\t\t});\n\t};\n\n\tTopics.getTopicsTagsObjects = function (tids, callback) {\n\t\tvar sets = tids.map(function (tid) {\n\t\t\treturn 'topic:' + tid + ':tags';\n\t\t});\n\n\t\tdb.getSetsMembers(sets, function (err, topicTags) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar uniqueTopicTags = _.uniq(_.flatten(topicTags));\n\n\t\t\tvar tags = uniqueTopicTags.map(function (tag) {\n\t\t\t\treturn {value: tag};\n\t\t\t});\n\n\t\t\tasync.parallel({\n\t\t\t\ttagData: function (next) {\n\t\t\t\t\tTopics.getTagData(tags, next);\n\t\t\t\t},\n\t\t\t\tcounts: function (next) {\n\t\t\t\t\tdb.sortedSetScores('tags:topic:count', uniqueTopicTags, next);\n\t\t\t\t}\n\t\t\t}, function (err, results) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\tresults.tagData.forEach(function (tag, index) {\n\t\t\t\t\ttag.score = results.counts[index] ? results.counts[index] : 0;\n\t\t\t\t});\n\n\t\t\t\tvar tagData = _.object(uniqueTopicTags, results.tagData);\n\n\t\t\t\ttopicTags.forEach(function (tags, index) {\n\t\t\t\t\tif (Array.isArray(tags)) {\n\t\t\t\t\t\ttopicTags[index] = tags.map(function (tag) {return tagData[tag];});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tcallback(null, topicTags);\n\t\t\t});\n\t\t});\n\t};\n\n\tTopics.updateTags = function (tid, tags, callback) {\n\t\tcallback = callback || function () {};\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tTopics.deleteTopicTags(tid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tTopics.getTopicField(tid, 'timestamp', next);\n\t\t\t},\n\t\t\tfunction (timestamp, next) {\n\t\t\t\tTopics.createTags(tags, tid, timestamp, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tTopics.deleteTopicTags = function (tid, callback) {\n\t\tTopics.getTopicTags(tid, function (err, tags) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tasync.series([\n\t\t\t\tfunction (next) {\n\t\t\t\t\tdb.delete('topic:' + tid + ':tags', next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tvar sets = tags.map(function (tag) {\n\t\t\t\t\t\treturn 'tag:' + tag + ':topics';\n\t\t\t\t\t});\n\n\t\t\t\t\tdb.sortedSetsRemove(sets, tid, next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tasync.each(tags, function (tag, next) {\n\t\t\t\t\t\tupdateTagCount(tag, next);\n\t\t\t\t\t}, next);\n\t\t\t\t}\n\t\t\t], function (err) {\n\t\t\t\tcallback(err);\n\t\t\t});\n\t\t});\n\t};\n\n\tTopics.searchTags = function (data, callback) {\n\t\tfunction done(matches) {\n\t\t\tplugins.fireHook('filter:tags.search', {data: data, matches: matches}, function (err, data) {\n\t\t\t\tcallback(err, data ? data.matches : []);\n\t\t\t});\n\t\t}\n\n\n\t\tif (!data || !data.query) {\n\t\t\treturn callback(null, []);\n\t\t}\n\n\t\tif (plugins.hasListeners('filter:topics.searchTags')) {\n\t\t\treturn plugins.fireHook('filter:topics.searchTags', {data: data}, function (err, data) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\t\t\t\tdone(data.matches);\n\t\t\t});\n\t\t}\n\n\t\tfindMatches(data.query, function (err, matches) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tdone(matches);\n\t\t});\n\t};\n\n\tTopics.autocompleteTags = function (data, callback) {\n\t\tif (!data || !data.query) {\n\t\t\treturn callback(null, []);\n\t\t}\n\n\t\tif (plugins.hasListeners('filter:topics.autocompleteTags')) {\n\t\t\treturn plugins.fireHook('filter:topics.autocompleteTags', {data: data}, function (err, data) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\t\t\t\tcallback(null, data.matches);\n\t\t\t});\n\t\t}\n\n\t\tfindMatches(data.query, callback);\n\t};\n\n\tfunction findMatches(query, callback) {\n\t\tdb.getSortedSetRevRange('tags:topic:count', 0, -1, function (err, tags) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tquery = query.toLowerCase();\n\n\t\t\tvar matches = [];\n\t\t\tfor(var i = 0; i < tags.length; ++i) {\n\t\t\t\tif (tags[i].toLowerCase().startsWith(query)) {\n\t\t\t\t\tmatches.push(tags[i]);\n\t\t\t\t\tif (matches.length > 19) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmatches = matches.sort(function (a, b) {\n\t\t\t\treturn a > b;\n\t\t\t});\n\t\t\tcallback(null, matches);\n\t\t});\n\t}\n\n\tTopics.searchAndLoadTags = function (data, callback) {\n\t\tvar searchResult = {\n\t\t\ttags: [],\n\t\t\tmatchCount: 0,\n\t\t\tpageCount: 1\n\t\t};\n\n\t\tif (!data.query || !data.query.length) {\n\t\t\treturn callback(null, searchResult);\n\t\t}\n\t\tTopics.searchTags(data, function (err, tags) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tasync.parallel({\n\t\t\t\tcounts: function (next) {\n\t\t\t\t\tdb.sortedSetScores('tags:topic:count', tags, next);\n\t\t\t\t},\n\t\t\t\ttagData: function (next) {\n\t\t\t\t\ttags = tags.map(function (tag) {\n\t\t\t\t\t\treturn {value: tag};\n\t\t\t\t\t});\n\n\t\t\t\t\tTopics.getTagData(tags, next);\n\t\t\t\t}\n\t\t\t}, function (err, results) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\t\t\t\tresults.tagData.forEach(function (tag, index) {\n\t\t\t\t\ttag.score = results.counts[index];\n\t\t\t\t});\n\t\t\t\tresults.tagData.sort(function (a, b) {\n\t\t\t\t\treturn b.score - a.score;\n\t\t\t\t});\n\t\t\t\tsearchResult.tags = results.tagData;\n\t\t\t\tsearchResult.matchCount = results.tagData.length;\n\t\t\t\tsearchResult.pageCount = 1;\n\t\t\t\tcallback(null, searchResult);\n\t\t\t});\n\t\t});\n\t};\n\n\tTopics.getRelatedTopics = function (topicData, uid, callback) {\n\t\tif (plugins.hasListeners('filter:topic.getRelatedTopics')) {\n\t\t\treturn plugins.fireHook('filter:topic.getRelatedTopics', {topic: topicData, uid: uid}, callback);\n\t\t}\n\n\t\tvar maximumTopics = parseInt(meta.config.maximumRelatedTopics, 10) || 0;\n\t\tif (maximumTopics === 0 || !topicData.tags || !topicData.tags.length) {\n\t\t\treturn callback(null, []);\n\t\t}\n\n\t\tmaximumTopics = maximumTopics || 5;\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tasync.map(topicData.tags, function (tag, next) {\n\t\t\t\t\tTopics.getTagTids(tag.value, 0, 5, next);\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (tids, next) {\n\t\t\t\ttids = _.shuffle(_.unique(_.flatten(tids))).slice(0, maximumTopics);\n\t\t\t\tTopics.getTopics(tids, uid, next);\n\t\t\t},\n\t\t\tfunction (topics, next) {\n\t\t\t\ttopics = topics.filter(function (topic) {\n\t\t\t\t\treturn topic && !topic.deleted && parseInt(topic.uid, 10) !== parseInt(uid, 10);\n\t\t\t\t});\n\t\t\t\tnext(null, topics);\n\t\t\t}\n\t\t], callback);\n\t};\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/topics/teaser.js":"\n\n'use strict';\n\nvar async = require('async');\nvar S = require('string');\n\nvar meta = require('../meta');\nvar user = require('../user');\nvar posts = require('../posts');\nvar plugins = require('../plugins');\nvar utils = require('../../public/src/utils');\n\nmodule.exports = function (Topics) {\n\n\tTopics.getTeasers = function (topics, callback) {\n\t\tif (!Array.isArray(topics) || !topics.length) {\n\t\t\treturn callback(null, []);\n\t\t}\n\n\t\tvar counts = [];\n\t\tvar teaserPids = [];\n\t\tvar postData;\n\t\tvar tidToPost = {};\n\n\t\ttopics.forEach(function (topic) {\n\t\t\tcounts.push(topic && (parseInt(topic.postcount, 10) || 0));\n\t\t\tif (topic) {\n\t\t\t\tif (topic.teaserPid === 'null') {\n\t\t\t\t\tdelete topic.teaserPid;\n\t\t\t\t}\n\n\t\t\t\tswitch(meta.config.teaserPost) {\n\t\t\t\t\tcase 'first':\n\t\t\t\t\t\tteaserPids.push(topic.mainPid);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'last-post':\n\t\t\t\t\t\tteaserPids.push(topic.teaserPid || topic.mainPid);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'last-reply':\t// intentional fall-through\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tteaserPids.push(topic.teaserPid);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tposts.getPostsFields(teaserPids, ['pid', 'uid', 'timestamp', 'tid', 'content'], next);\n\t\t\t},\n\t\t\tfunction (_postData, next) {\n\t\t\t\tpostData = _postData;\n\t\t\t\tvar uids = postData.map(function (post) {\n\t\t\t\t\treturn post.uid;\n\t\t\t\t}).filter(function (uid, index, array) {\n\t\t\t\t\treturn array.indexOf(uid) === index;\n\t\t\t\t});\n\n\t\t\t\tuser.getUsersFields(uids, ['uid', 'username', 'userslug', 'picture'], next);\n\t\t\t},\n\t\t\tfunction (usersData, next) {\n\t\t\t\tvar users = {};\n\t\t\t\tusersData.forEach(function (user) {\n\t\t\t\t\tusers[user.uid] = user;\n\t\t\t\t});\n\n\n\t\t\t\tasync.each(postData, function (post, next) {\n\t\t\t\t\t// If the post author isn't represented in the retrieved users' data, then it means they were deleted, assume guest.\n\t\t\t\t\tif (!users.hasOwnProperty(post.uid)) {\n\t\t\t\t\t\tpost.uid = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tpost.user = users[post.uid];\n\t\t\t\t\tpost.timestampISO = utils.toISOString(post.timestamp);\n\t\t\t\t\ttidToPost[post.tid] = post;\n\t\t\t\t\tposts.parsePost(post, next);\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tvar teasers = topics.map(function (topic, index) {\n\t\t\t\t\tif (!topic) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\tif (tidToPost[topic.tid]) {\n\t\t\t\t\t\ttidToPost[topic.tid].index = meta.config.teaserPost === 'first' ? 1 : counts[index];\n\t\t\t\t\t\tif (tidToPost[topic.tid].content) {\n\t\t\t\t\t\t\tvar s = S(tidToPost[topic.tid].content);\n\t\t\t\t\t\t\ttidToPost[topic.tid].content = s.stripTags.apply(s, utils.stripTags).s;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn tidToPost[topic.tid];\n\t\t\t\t});\n\n\t\t\t\tplugins.fireHook('filter:teasers.get', {teasers: teasers}, next);\n\t\t\t},\n\t\t\tfunction (data, next) {\n\t\t\t\tnext(null, data.teasers);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tTopics.getTeasersByTids = function (tids, callback) {\n\t\tif (!Array.isArray(tids) || !tids.length) {\n\t\t\treturn callback(null, []);\n\t\t}\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tTopics.getTopicsFields(tids, ['tid', 'postcount', 'teaserPid'], next);\n\t\t\t},\n\t\t\tfunction (topics, next) {\n\t\t\t\tTopics.getTeasers(topics, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tTopics.getTeaser = function (tid, callback) {\n\t\tTopics.getTeasersByTids([tid], function (err, teasers) {\n\t\t\tcallback(err, Array.isArray(teasers) && teasers.length ? teasers[0] : null);\n\t\t});\n\t};\n\n\tTopics.updateTeaser = function (tid, callback) {\n\t\tTopics.getLatestUndeletedReply(tid, function (err, pid) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tpid = pid || null;\n\t\t\tif (pid) {\n\t\t\t\tTopics.setTopicField(tid, 'teaserPid', pid, callback);\n\t\t\t} else {\n\t\t\t\tTopics.deleteTopicField(tid, 'teaserPid', callback);\n\t\t\t}\n\t\t});\n\t};\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/topics/thumb.js":"\n'use strict';\n\nvar async = require('async');\nvar nconf = require('nconf');\nvar winston = require('winston');\nvar path = require('path');\nvar fs = require('fs');\nvar request = require('request');\nvar mime = require('mime');\nvar validator = require('validator');\n\nvar meta = require('../meta');\nvar image = require('../image');\nvar file = require('../file');\nvar plugins = require('../plugins');\n\nmodule.exports = function (Topics) {\n\n\tTopics.resizeAndUploadThumb = function (data, callback) {\n\t\tif (!data.thumb || !validator.isURL(data.thumb)) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tvar pathToUpload;\n\t\tvar filename;\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\trequest.head(data.thumb, next);\n\t\t\t},\n\t\t\tfunction (res, body, next) {\n\n\t\t\t\tvar type = res.headers['content-type'];\n\t\t\t\tif (!type.match(/image./)) {\n\t\t\t\t\treturn next(new Error('[[error:invalid-file]]'));\n\t\t\t\t}\n\n\t\t\t\tvar extension = path.extname(data.thumb);\n\t\t\t\tif (!extension) {\n\t\t\t\t\textension = '.' + mime.extension(type);\n\t\t\t\t}\n\t\t\t\tfilename = Date.now() + '-topic-thumb' + extension;\n\t\t\t\tpathToUpload = path.join(nconf.get('base_dir'), nconf.get('upload_path'), 'files', filename);\n\n\t\t\t\trequest(data.thumb).pipe(fs.createWriteStream(pathToUpload)).on('close', next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tfile.isFileTypeAllowed(pathToUpload, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tvar size = parseInt(meta.config.topicThumbSize, 10) || 120;\n\t\t\t\timage.resizeImage({\n\t\t\t\t\tpath: pathToUpload,\n\t\t\t\t\textension: path.extname(pathToUpload),\n\t\t\t\t\twidth: size,\n\t\t\t\t\theight: size\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tif (!plugins.hasListeners('filter:uploadImage')) {\n\t\t\t\t\tdata.thumb = path.join(nconf.get('upload_url'), 'files', filename);\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\n\t\t\t\tplugins.fireHook('filter:uploadImage', {image: {path: pathToUpload, name: ''}, uid: data.uid}, next);\n\t\t\t},\n\t\t\tfunction (uploadedFile, next) {\n\t\t\t\tdeleteFile(pathToUpload);\n\t\t\t\tdata.thumb = uploadedFile.url;\n\t\t\t\tnext();\n\t\t\t}\n\t\t], function (err) {\n\t\t\tif (err) {\n\t\t\t\tdeleteFile(pathToUpload);\n\t\t\t}\n\t\t\tcallback(err);\n\t\t});\n\t};\n\n\tfunction deleteFile(path) {\n\t\tif (path) {\n\t\t\tfs.unlink(path, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\twinston.error(err);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/topics/tools.js":"'use strict';\n\nvar async = require('async');\n\nvar db = require('../database');\nvar categories = require('../categories');\nvar plugins = require('../plugins');\nvar privileges = require('../privileges');\n\n\nmodule.exports = function (Topics) {\n\n\tvar topicTools = {};\n\tTopics.tools = topicTools;\n\n\n\ttopicTools.delete = function (tid, uid, callback) {\n\t\ttoggleDelete(tid, uid, true, callback);\n\t};\n\n\ttopicTools.restore = function (tid, uid, callback) {\n\t\ttoggleDelete(tid, uid, false, callback);\n\t};\n\n\tfunction toggleDelete(tid, uid, isDelete, callback) {\n\t\tvar topicData;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tTopics.exists(tid, next);\n\t\t\t},\n\t\t\tfunction (exists, next) {\n\t\t\t\tif (!exists) {\n\t\t\t\t\treturn next(new Error('[[error:no-topic]]'));\n\t\t\t\t}\n\t\t\t\tprivileges.topics.canDelete(tid, uid, next);\n\t\t\t},\n\t\t\tfunction (canDelete, next) {\n\t\t\t\tif (!canDelete) {\n\t\t\t\t\treturn next(new Error('[[error:no-privileges]]'));\n\t\t\t\t}\n\t\t\t\tTopics.getTopicFields(tid, ['tid', 'cid', 'uid', 'deleted', 'title', 'mainPid'], next);\n\t\t\t},\n\t\t\tfunction (_topicData, next) {\n\t\t\t\ttopicData = _topicData;\n\n\t\t\t\tif (parseInt(topicData.deleted, 10) === 1 && isDelete) {\n\t\t\t\t\treturn callback(new Error('[[error:topic-already-deleted]]'));\n\t\t\t\t} else if(parseInt(topicData.deleted, 10) !== 1 && !isDelete) {\n\t\t\t\t\treturn callback(new Error('[[error:topic-already-restored]]'));\n\t\t\t\t}\n\n\t\t\t\tTopics[isDelete ? 'delete' : 'restore'](tid, uid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\ttopicData.deleted = isDelete ? 1 : 0;\n\n\t\t\t\tif (isDelete) {\n\t\t\t\t\tplugins.fireHook('action:topic.delete', topicData);\n\t\t\t\t} else {\n\t\t\t\t\tplugins.fireHook('action:topic.restore', topicData);\n\t\t\t\t}\n\n\t\t\t\tvar data = {\n\t\t\t\t\ttid: tid,\n\t\t\t\t\tcid: topicData.cid,\n\t\t\t\t\tisDelete: isDelete,\n\t\t\t\t\tuid: uid\n\t\t\t\t};\n\n\t\t\t\tnext(null, data);\n\t\t\t}\n\t\t], callback);\n\t}\n\n\ttopicTools.purge = function (tid, uid, callback) {\n\t\tvar cid;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tTopics.exists(tid, next);\n\t\t\t},\n\t\t\tfunction (exists, next) {\n\t\t\t\tif (!exists) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\tprivileges.topics.canPurge(tid, uid, next);\n\t\t\t},\n\t\t\tfunction (canPurge, next) {\n\t\t\t\tif (!canPurge) {\n\t\t\t\t\treturn next(new Error('[[error:no-privileges]]'));\n\t\t\t\t}\n\n\t\t\t\tTopics.getTopicField(tid, 'cid', next);\n\t\t\t},\n\t\t\tfunction (_cid, next) {\n\t\t\t\tcid = _cid;\n\n\t\t\t\tTopics.purgePostsAndTopic(tid, uid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tnext(null, {tid: tid, cid: cid, uid: uid});\n\t\t\t}\n\t\t], callback);\n\t};\n\n\ttopicTools.lock = function (tid, uid, callback) {\n\t\ttoggleLock(tid, uid, true, callback);\n\t};\n\n\ttopicTools.unlock = function (tid, uid, callback) {\n\t\ttoggleLock(tid, uid, false, callback);\n\t};\n\n\tfunction toggleLock(tid, uid, lock, callback) {\n\t\tcallback = callback || function () {};\n\n\t\tvar cid;\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tTopics.getTopicField(tid, 'cid', next);\n\t\t\t},\n\t\t\tfunction (_cid, next) {\n\t\t\t\tcid = _cid;\n\t\t\t\tif (!cid) {\n\t\t\t\t\treturn next(new Error('[[error:no-topic]]'));\n\t\t\t\t}\n\t\t\t\tprivileges.categories.isAdminOrMod(cid, uid, next);\n\t\t\t},\n\t\t\tfunction (isAdminOrMod, next) {\n\t\t\t\tif (!isAdminOrMod) {\n\t\t\t\t\treturn next(new Error('[[error:no-privileges]]'));\n\t\t\t\t}\n\n\t\t\t\tTopics.setTopicField(tid, 'locked', lock ? 1 : 0, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tvar data = {\n\t\t\t\t\ttid: tid,\n\t\t\t\t\tisLocked: lock,\n\t\t\t\t\tuid: uid,\n\t\t\t\t\tcid: cid\n\t\t\t\t};\n\n\t\t\t\tplugins.fireHook('action:topic.lock', data);\n\n\t\t\t\tnext(null, data);\n\t\t\t}\n\t\t], callback);\n\t}\n\n\ttopicTools.pin = function (tid, uid, callback) {\n\t\ttogglePin(tid, uid, true, callback);\n\t};\n\n\ttopicTools.unpin = function (tid, uid, callback) {\n\t\ttogglePin(tid, uid, false, callback);\n\t};\n\n\tfunction togglePin(tid, uid, pin, callback) {\n\t\tvar topicData;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tTopics.exists(tid, next);\n\t\t\t},\n\t\t\tfunction (exists, next) {\n\t\t\t\tif (!exists) {\n\t\t\t\t\treturn callback(new Error('[[error:no-topic]]'));\n\t\t\t\t}\n\t\t\t\tTopics.getTopicFields(tid, ['cid', 'lastposttime', 'postcount'], next);\n\t\t\t},\n\t\t\tfunction (_topicData, next) {\n\t\t\t\ttopicData = _topicData;\n\t\t\t\tprivileges.categories.isAdminOrMod(_topicData.cid, uid, next);\n\t\t\t},\n\t\t\tfunction (isAdminOrMod, next) {\n\t\t\t\tif (!isAdminOrMod) {\n\t\t\t\t\treturn next(new Error('[[error:no-privileges]]'));\n\t\t\t\t}\n\n\t\t\t\tasync.parallel([\n\t\t\t\t\tasync.apply(Topics.setTopicField, tid, 'pinned', pin ? 1 : 0),\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tif (pin) {\n\t\t\t\t\t\t\tasync.parallel([\n\t\t\t\t\t\t\t\tasync.apply(db.sortedSetAdd, 'cid:' + topicData.cid + ':tids:pinned', Date.now(), tid),\n\t\t\t\t\t\t\t\tasync.apply(db.sortedSetRemove, 'cid:' + topicData.cid + ':tids', tid),\n\t\t\t\t\t\t\t\tasync.apply(db.sortedSetRemove, 'cid:' + topicData.cid + ':tids:posts', tid),\n\t\t\t\t\t\t\t], next);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tasync.parallel([\n\t\t\t\t\t\t\t\tasync.apply(db.sortedSetRemove, 'cid:' + topicData.cid + ':tids:pinned', tid),\n\t\t\t\t\t\t\t\tasync.apply(db.sortedSetAdd, 'cid:' + topicData.cid + ':tids', topicData.lastposttime, tid),\n\t\t\t\t\t\t\t\tasync.apply(db.sortedSetAdd, 'cid:' + topicData.cid + ':tids:posts', topicData.postcount, tid),\n\t\t\t\t\t\t\t], next);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t], next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tvar data = {\n\t\t\t\t\ttid: tid,\n\t\t\t\t\tisPinned: pin,\n\t\t\t\t\tuid: uid,\n\t\t\t\t\tcid: topicData.cid\n\t\t\t\t};\n\n\t\t\t\tplugins.fireHook('action:topic.pin', data);\n\n\t\t\t\tnext(null, data);\n\t\t\t}\n\t\t], callback);\n\t}\n\n\ttopicTools.move = function (tid, cid, uid, callback) {\n\t\tvar topic;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tTopics.exists(tid, next);\n\t\t\t},\n\t\t\tfunction (exists, next) {\n\t\t\t\tif (!exists) {\n\t\t\t\t\treturn next(new Error('[[error:no-topic]]'));\n\t\t\t\t}\n\t\t\t\tTopics.getTopicFields(tid, ['cid', 'lastposttime', 'pinned', 'deleted', 'postcount'], next);\n\t\t\t},\n\t\t\tfunction (topicData, next) {\n\t\t\t\ttopic = topicData;\n\t\t\t\tdb.sortedSetsRemove([\n\t\t\t\t\t'cid:' + topicData.cid + ':tids',\n\t\t\t\t\t'cid:' + topicData.cid + ':tids:pinned',\n\t\t\t\t\t'cid:' + topicData.cid + ':tids:posts'\n\t\t\t\t], tid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tif (parseInt(topic.pinned, 10)) {\n\t\t\t\t\tdb.sortedSetAdd('cid:' + cid + ':tids:pinned', Date.now(), tid, next);\n\t\t\t\t} else {\n\t\t\t\t\tasync.parallel([\n\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\tdb.sortedSetAdd('cid:' + cid + ':tids', topic.lastposttime, tid, next);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\ttopic.postcount = topic.postcount || 0;\n\t\t\t\t\t\t\tdb.sortedSetAdd('cid:' + cid + ':tids:posts', topic.postcount, tid, next);\n\t\t\t\t\t\t}\n\t\t\t\t\t], next);\n\t\t\t\t}\n\t\t\t}\n\t\t], function (err) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tvar oldCid = topic.cid;\n\t\t\tcategories.moveRecentReplies(tid, oldCid, cid);\n\n\t\t\tasync.parallel([\n\t\t\t\tfunction (next) {\n\t\t\t\t\tcategories.incrementCategoryFieldBy(oldCid, 'topic_count', -1, next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tcategories.incrementCategoryFieldBy(cid, 'topic_count', 1, next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tTopics.setTopicFields(tid, {\n\t\t\t\t\t\tcid: cid,\n\t\t\t\t\t\toldCid: oldCid\n\t\t\t\t\t}, next);\n\t\t\t\t}\n\t\t\t], function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\t\t\t\tplugins.fireHook('action:topic.move', {\n\t\t\t\t\ttid: tid,\n\t\t\t\t\tfromCid: oldCid,\n\t\t\t\t\ttoCid: cid,\n\t\t\t\t\tuid: uid\n\t\t\t\t});\n\t\t\t\tcallback();\n\t\t\t});\n\t\t});\n\t};\n\n\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/topics/unread.js":"\n'use strict';\n\nvar async = require('async');\n\nvar db = require('../database');\nvar user = require('../user');\nvar notifications = require('../notifications');\nvar categories = require('../categories');\nvar privileges = require('../privileges');\nvar meta = require('../meta');\nvar utils = require('../../public/src/utils');\n\nmodule.exports = function (Topics) {\n\n\tTopics.getTotalUnread = function (uid, filter, callback) {\n\t\tif (!callback) {\n\t\t\tcallback = filter;\n\t\t\tfilter = '';\n\t\t}\n\t\tTopics.getUnreadTids(0, uid, filter, function (err, tids) {\n\t\t\tcallback(err, Array.isArray(tids) ? tids.length : 0);\n\t\t});\n\t};\n\n\n\tTopics.getUnreadTopics = function (cid, uid, start, stop, filter, callback) {\n\n\t\tvar unreadTopics = {\n\t\t\tshowSelect: true,\n\t\t\tnextStart : 0,\n\t\t\ttopics: []\n\t\t};\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tTopics.getUnreadTids(cid, uid, filter, next);\n\t\t\t},\n\t\t\tfunction (tids, next) {\n\t\t\t\tunreadTopics.topicCount = tids.length;\n\n\t\t\t\tif (!tids.length) {\n\t\t\t\t\treturn next(null, []);\n\t\t\t\t}\n\n\t\t\t\tif (stop === -1) {\n\t\t\t\t\ttids = tids.slice(start);\n\t\t\t\t} else {\n\t\t\t\t\ttids = tids.slice(start, stop + 1);\n\t\t\t\t}\n\n\t\t\t\tTopics.getTopicsByTids(tids, uid, next);\n\t\t\t},\n\t\t\tfunction (topicData, next) {\n\t\t\t\tif (!Array.isArray(topicData) || !topicData.length) {\n\t\t\t\t\treturn next(null, unreadTopics);\n\t\t\t\t}\n\n\t\t\t\tunreadTopics.topics = topicData;\n\t\t\t\tunreadTopics.nextStart = stop + 1;\n\t\t\t\tnext(null, unreadTopics);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tTopics.unreadCutoff = function () {\n\t\treturn Date.now() - (parseInt(meta.config.unreadCutoff, 10) || 2) * 86400000;\n\t};\n\n\tTopics.getUnreadTids = function (cid, uid, filter, callback) {\n\t\tuid = parseInt(uid, 10);\n\t\tif (uid === 0) {\n\t\t\treturn callback(null, []);\n\t\t}\n\n\t\tvar cutoff = Topics.unreadCutoff();\n\n\t\tvar ignoredCids;\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\tignoredCids: function (next) {\n\t\t\t\t\t\tif (filter === 'watched') {\n\t\t\t\t\t\t\treturn next(null, []);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tuser.getIgnoredCategories(uid, next);\n\t\t\t\t\t},\n\t\t\t\t\tignoredTids: function (next) {\n\t\t\t\t\t\tuser.getIgnoredTids(uid, 0, -1, next);\n\t\t\t\t\t},\n\t\t\t\t\trecentTids: function (next) {\n\t\t\t\t\t\tdb.getSortedSetRevRangeByScoreWithScores('topics:recent', 0, -1, '+inf', cutoff, next);\n\t\t\t\t\t},\n\t\t\t\t\tuserScores: function (next) {\n\t\t\t\t\t\tdb.getSortedSetRevRangeByScoreWithScores('uid:' + uid + ':tids_read', 0, -1, '+inf', cutoff, next);\n\t\t\t\t\t},\n\t\t\t\t\ttids_unread: function (next) {\n\t\t\t\t\t\tdb.getSortedSetRevRangeWithScores('uid:' + uid + ':tids_unread', 0, -1, next);\n\t\t\t\t\t}\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tif (results.recentTids && !results.recentTids.length && !results.tids_unread.length) {\n\t\t\t\t\treturn callback(null, []);\n\t\t\t\t}\n\n\t\t\t\tignoredCids = results.ignoredCids;\n\n\t\t\t\tvar userRead = {};\n\t\t\t\tresults.userScores.forEach(function (userItem) {\n\t\t\t\t\tuserRead[userItem.value] = userItem.score;\n\t\t\t\t});\n\n\t\t\t\tresults.recentTids = results.recentTids.concat(results.tids_unread);\n\t\t\t\tresults.recentTids.sort(function (a, b) {\n\t\t\t\t\treturn b.score - a.score;\n\t\t\t\t});\n\n\t\t\t\tvar tids = results.recentTids.filter(function (recentTopic) {\n\t\t\t\t\tif (results.ignoredTids.indexOf(recentTopic.value.toString()) !== -1) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tswitch (filter) {\n\t\t\t\t\t\tcase 'new':\n\t\t\t\t\t\t\treturn !userRead[recentTopic.value];\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn !userRead[recentTopic.value] || recentTopic.score > userRead[recentTopic.value];\n\t\t\t\t\t}\n\t\t\t\t}).map(function (topic) {\n\t\t\t\t\treturn topic.value;\n\t\t\t\t}).filter(function (tid, index, array) {\n\t\t\t\t\treturn array.indexOf(tid) === index;\n\t\t\t\t});\n\n\t\t\t\tif (filter === 'watched') {\n\t\t\t\t\tTopics.filterWatchedTids(tids, uid, next);\n\t\t\t\t} else {\n\t\t\t\t\tnext(null, tids);\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction (tids, next) {\n\n\t\t\t\ttids = tids.slice(0, 200);\n\n\t\t\t\tfilterTopics(uid, tids, cid, ignoredCids, filter, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\n\tfunction filterTopics(uid, tids, cid, ignoredCids, filter, callback) {\n\t\tif (!Array.isArray(ignoredCids) || !tids.length) {\n\t\t\treturn callback(null, tids);\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tprivileges.topics.filterTids('read', tids, uid, next);\n\t\t\t},\n\t\t\tfunction (tids, next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\ttopics: function (next) {\n\t\t\t\t\t\tTopics.getTopicsFields(tids, ['tid', 'cid'], next);\n\t\t\t\t\t},\n\t\t\t\t\tisTopicsFollowed: function (next) {\n\t\t\t\t\t\tif (filter === 'watched' || filter === 'new') {\n\t\t\t\t\t\t\treturn next(null, []);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdb.sortedSetScores('uid:' + uid + ':followed_tids', tids, next);\n\t\t\t\t\t}\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tvar topics = results.topics;\n\t\t\t\ttids = topics.filter(function (topic, index) {\n\t\t\t\t\treturn topic && topic.cid &&\n\t\t\t\t\t\t(!!results.isTopicsFollowed[index] || ignoredCids.indexOf(topic.cid.toString()) === -1) &&\n\t\t\t\t\t\t(!cid || parseInt(cid, 10) === parseInt(topic.cid, 10));\n\t\t\t\t}).map(function (topic) {\n\t\t\t\t\treturn topic.tid;\n\t\t\t\t});\n\t\t\t\tnext(null, tids);\n\t\t\t}\n\t\t], callback);\n\t}\n\n\tTopics.pushUnreadCount = function (uid, callback) {\n\t\tcallback = callback || function () {};\n\n\t\tif (!uid || parseInt(uid, 10) === 0) {\n\t\t\treturn callback();\n\t\t}\n\t\tTopics.getTotalUnread(uid, function (err, count) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\trequire('../socket.io').in('uid_' + uid).emit('event:unread.updateCount', count);\n\t\t\tcallback();\n\t\t});\n\t};\n\n\tTopics.markAsUnreadForAll = function (tid, callback) {\n\t\tTopics.markCategoryUnreadForAll(tid, callback);\n\t};\n\n\tTopics.markAsRead = function (tids, uid, callback) {\n\t\tcallback = callback || function () {};\n\t\tif (!Array.isArray(tids) || !tids.length) {\n\t\t\treturn callback();\n\t\t}\n\n\t\ttids = tids.filter(function (tid, index, array) {\n\t\t\treturn tid && utils.isNumber(tid) && array.indexOf(tid) === index;\n\t\t});\n\n\t\tif (!tids.length) {\n\t\t\treturn callback(null, false);\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\ttopicScores: async.apply(db.sortedSetScores, 'topics:recent', tids),\n\t\t\t\t\tuserScores: async.apply(db.sortedSetScores, 'uid:' + uid + ':tids_read', tids)\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\ttids = tids.filter(function (tid, index) {\n\t\t\t\t\treturn results.topicScores[index] && (!results.userScores[index] || results.userScores[index] < results.topicScores[index]);\n\t\t\t\t});\n\n\t\t\t\tif (!tids.length) {\n\t\t\t\t\treturn callback(null, false);\n\t\t\t\t}\n\n\t\t\t\tvar now = Date.now();\n\t\t\t\tvar scores = tids.map(function () {\n\t\t\t\t\treturn now;\n\t\t\t\t});\n\n\t\t\t\tasync.parallel({\n\t\t\t\t\tmarkRead: async.apply(db.sortedSetAdd, 'uid:' + uid + ':tids_read', scores, tids),\n\t\t\t\t\tmarkUnread: async.apply(db.sortedSetRemove, 'uid:' + uid + ':tids_unread', tids),\n\t\t\t\t\ttopicData: async.apply(Topics.getTopicsFields, tids, ['cid'])\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tvar cids = results.topicData.map(function (topic) {\n\t\t\t\t\treturn topic && topic.cid;\n\t\t\t\t}).filter(function (topic, index, array) {\n\t\t\t\t\treturn topic && array.indexOf(topic) === index;\n\t\t\t\t});\n\n\t\t\t\tcategories.markAsRead(cids, uid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tnext(null, true);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tTopics.markAllRead = function (uid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.getSortedSetRevRangeByScore('topics:recent', 0, -1, '+inf', Topics.unreadCutoff(), next);\n\t\t\t},\n\t\t\tfunction (tids, next) {\n\t\t\t\tTopics.markTopicNotificationsRead(tids, uid);\n\t\t\t\tTopics.markAsRead(tids, uid, next);\n\t\t\t},\n\t\t\tfunction (markedRead, next) {\n\t\t\t\tdb.delete('uid:' + uid + ':tids_unread', next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tTopics.markTopicNotificationsRead = function (tids, uid, callback) {\n\t\tcallback = callback || function () {};\n\t\tif (!Array.isArray(tids) || !tids.length) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tuser.notifications.getUnreadByField(uid, 'tid', tids, next);\n\t\t\t},\n\t\t\tfunction (nids, next) {\n\t\t\t\tnotifications.markReadMultiple(nids, uid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tuser.notifications.pushCount(uid);\n\t\t\t\tnext();\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tTopics.markCategoryUnreadForAll = function (tid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tTopics.getTopicField(tid, 'cid', next);\n\t\t\t},\n\t\t\tfunction (cid, next) {\n\t\t\t\tcategories.markAsUnreadForAll(cid, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tTopics.hasReadTopics = function (tids, uid, callback) {\n\t\tif (!parseInt(uid, 10)) {\n\t\t\treturn callback(null, tids.map(function () {\n\t\t\t\treturn false;\n\t\t\t}));\n\t\t}\n\n\t\tasync.parallel({\n\t\t\trecentScores: function (next) {\n\t\t\t\tdb.sortedSetScores('topics:recent', tids, next);\n\t\t\t},\n\t\t\tuserScores: function (next) {\n\t\t\t\tdb.sortedSetScores('uid:' + uid + ':tids_read', tids, next);\n\t\t\t},\n\t\t\ttids_unread: function (next) {\n\t\t\t\tdb.sortedSetScores('uid:' + uid + ':tids_unread', tids, next);\n\t\t\t}\n\t\t}, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar cutoff = Topics.unreadCutoff();\n\t\t\tvar result = tids.map(function (tid, index) {\n\t\t\t\treturn !results.tids_unread[index] &&\n\t\t\t\t\t(results.recentScores[index] < cutoff ||\n\t\t\t\t\t!!(results.userScores[index] && results.userScores[index] >= results.recentScores[index]));\n\t\t\t});\n\n\t\t\tcallback(null, result);\n\t\t});\n\t};\n\n\tTopics.hasReadTopic = function (tid, uid, callback) {\n\t\tTopics.hasReadTopics([tid], uid, function (err, hasRead) {\n\t\t\tcallback(err, Array.isArray(hasRead) && hasRead.length ? hasRead[0] : false);\n\t\t});\n\t};\n\n\tTopics.markUnread = function (tid, uid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tTopics.exists(tid, next);\n\t\t\t},\n\t\t\tfunction (exists, next) {\n\t\t\t\tif (!exists) {\n\t\t\t\t\treturn next(new Error('[[error:no-topic]]'));\n\t\t\t\t}\n\t\t\t\tdb.sortedSetRemove('uid:' + uid + ':tids_read', tid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tdb.sortedSetAdd('uid:' + uid + ':tids_unread', Date.now(), tid, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tTopics.filterNewTids = function (tids, uid, callback) {\n\t\tdb.sortedSetScores('uid:' + uid + ':tids_read', tids, function (err, scores) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\ttids = tids.filter(function (tid, index) {\n\t\t\t\treturn tid && !scores[index];\n\t\t\t});\n\t\t\tcallback(null, tids);\n\t\t});\n\t};\n\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/topics/user.js":"\n\n'use strict';\n\nvar async = require('async');\nvar db = require('../database');\nvar posts = require('../posts');\n\nmodule.exports = function (Topics) {\n\n\tTopics.isOwner = function (tid, uid, callback) {\n\t\tuid = parseInt(uid, 10);\n\t\tif (!uid) {\n\t\t\treturn callback(null, false);\n\t\t}\n\t\tTopics.getTopicField(tid, 'uid', function (err, author) {\n\t\t\tcallback(err, parseInt(author, 10) === uid);\n\t\t});\n\t};\n\n\tTopics.getUids = function (tid, callback) {\n\t\tdb.getSortedSetRevRangeByScore('tid:' + tid + ':posters', 0, -1, '+inf', 1, callback);\n\t};\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/user/approval.js":"\n'use strict';\n\nvar async = require('async');\nvar request = require('request');\n\nvar db = require('../database');\nvar meta = require('../meta');\nvar emailer = require('../emailer');\nvar notifications = require('../notifications');\nvar groups = require('../groups');\nvar translator = require('../../public/src/modules/translator');\nvar utils = require('../../public/src/utils');\nvar plugins = require('../plugins');\n\nmodule.exports = function (User) {\n\n\tUser.addToApprovalQueue = function (userData, callback) {\n\t\tuserData.userslug = utils.slugify(userData.username);\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tUser.isDataValid(userData, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tUser.hashPassword(userData.password, next);\n\t\t\t},\n\t\t\tfunction (hashedPassword, next) {\n\t\t\t\tvar data = {\n\t\t\t\t\tusername: userData.username,\n\t\t\t\t\temail: userData.email,\n\t\t\t\t\tip: userData.ip,\n\t\t\t\t\thashedPassword: hashedPassword\n\t\t\t\t};\n\t\t\t\tplugins.fireHook('filter:user.addToApprovalQueue', {data: data, userData: userData}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tdb.setObject('registration:queue:name:' + userData.username, results.data, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tdb.sortedSetAdd('registration:queue', Date.now(), userData.username, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tsendNotificationToAdmins(userData.username, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tfunction sendNotificationToAdmins(username, callback) {\n\t\tnotifications.create({\n\t\t\tbodyShort: '[[notifications:new_register, ' + username + ']]',\n\t\t\tnid: 'new_register:' + username,\n\t\t\tpath: '/admin/manage/registration',\n\t\t\tmergeId: 'new_register'\n\t\t}, function (err, notification) {\n\t\t\tif (err || !notification) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tnotifications.pushGroup(notification, 'administrators', callback);\n\t\t});\n\t}\n\n\tUser.acceptRegistration = function (username, callback) {\n\t\tvar uid;\n\t\tvar userData;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.getObject('registration:queue:name:' + username, next);\n\t\t\t},\n\t\t\tfunction (_userData, next) {\n\t\t\t\tif (!_userData) {\n\t\t\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t\t\t}\n\t\t\t\tuserData = _userData;\n\t\t\t\tUser.create(userData, next);\n\t\t\t},\n\t\t\tfunction (_uid, next) {\n\t\t\t\tuid = _uid;\n\t\t\t\tUser.setUserField(uid, 'password', userData.hashedPassword, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tvar title = meta.config.title || meta.config.browserTitle || 'NodeBB';\n\t\t\t\ttranslator.translate('[[email:welcome-to, ' + title + ']]', meta.config.defaultLang, function (subject) {\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\tsite_title: title,\n\t\t\t\t\t\tusername: username,\n\t\t\t\t\t\tsubject: subject,\n\t\t\t\t\t\ttemplate: 'registration_accepted',\n\t\t\t\t\t\tuid: uid\n\t\t\t\t\t};\n\n\t\t\t\t\temailer.send('registration_accepted', uid, data, next);\n\t\t\t\t});\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tremoveFromQueue(username, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tmarkNotificationRead(username, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tnext(null, uid);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tfunction markNotificationRead(username, callback) {\n\t\tvar nid = 'new_register:' + username;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tgroups.getMembers('administrators', 0, -1, next);\n\t\t\t},\n\t\t\tfunction (uids, next) {\n\t\t\t\tasync.each(uids, function (uid, next) {\n\t\t\t\t\tnotifications.markRead(nid, uid, next);\n\t\t\t\t}, next);\n\t\t\t}\n\t\t], callback);\n\t}\n\n\tUser.rejectRegistration = function (username, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tremoveFromQueue(username, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tmarkNotificationRead(username, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tfunction removeFromQueue(username, callback) {\n\t\tasync.parallel([\n\t\t\tasync.apply(db.sortedSetRemove, 'registration:queue', username),\n\t\t\tasync.apply(db.delete, 'registration:queue:name:' + username)\n\t\t], function (err) {\n\t\t\tcallback(err);\n\t\t});\n\t}\n\n\tUser.getRegistrationQueue = function (start, stop, callback) {\n\t\tvar data;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.getSortedSetRevRangeWithScores('registration:queue', start, stop, next);\n\t\t\t},\n\t\t\tfunction (_data, next) {\n\t\t\t\tdata = _data;\n\t\t\t\tvar keys = data.filter(Boolean).map(function (user) {\n\t\t\t\t\treturn 'registration:queue:name:' + user.value;\n\t\t\t\t});\n\t\t\t\tdb.getObjects(keys, next);\n\t\t\t},\n\t\t\tfunction (users, next) {\n\t\t\t\tusers = users.map(function (user, index) {\n\t\t\t\t\tif (!user) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t\t\tuser.timestampISO = utils.toISOString(data[index].score);\n\t\t\t\t\tdelete user.hashedPassword;\n\n\t\t\t\t\treturn user;\n\t\t\t\t}).filter(Boolean);\n\n\t\t\t\tasync.map(users, function (user, next) {\n\t\t\t\t\tif (!user) {\n\t\t\t\t\t\treturn next(null, user);\n\t\t\t\t\t}\n\n\t\t\t\t\t// temporary: see http://www.stopforumspam.com/forum/viewtopic.php?id=6392\n\t\t\t\t\tuser.ip = user.ip.replace('::ffff:', '');\n\n\t\t\t\t\tasync.parallel([\n\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\tUser.getUidsFromSet('ip:' + user.ip + ':uid', 0, -1, function (err, uids) {\n\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tUser.getUsersFields(uids, ['uid', 'username', 'picture'], function (err, ipMatch) {\n\t\t\t\t\t\t\t\t\tuser.ipMatch = ipMatch;\n\t\t\t\t\t\t\t\t\tnext(err);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\trequest({\n\t\t\t\t\t\t\t\tmethod: 'get',\n\t\t\t\t\t\t\t\turl: 'http://api.stopforumspam.org/api' +\n\t\t\t\t\t\t\t\t\t'?ip=' + encodeURIComponent(user.ip) +\n\t\t\t\t\t\t\t\t\t'&email=' + encodeURIComponent(user.email) +\n\t\t\t\t\t\t\t\t\t'&username=' + encodeURIComponent(user.username) +\n\t\t\t\t\t\t\t\t\t'&f=json',\n\t\t\t\t\t\t\t\tjson: true\n\t\t\t\t\t\t\t}, function (err, response, body) {\n\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\treturn next();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (response.statusCode === 200 && body) {\n\t\t\t\t\t\t\t\t\tuser.spamData = body;\n\t\t\t\t\t\t\t\t\tuser.usernameSpam = body.username ? (body.username.frequency > 0 || body.username.appears > 0) : true;\n\t\t\t\t\t\t\t\t\tuser.emailSpam = body.email ? (body.email.frequency > 0 || body.email.appears > 0) : true;\n\t\t\t\t\t\t\t\t\tuser.ipSpam = body.ip ? (body.ip.frequency > 0 || body.ip.appears > 0) : true;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tnext();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t], function (err) {\n\t\t\t\t\t\tnext(err, user);\n\t\t\t\t\t});\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (users, next) {\n\t\t\t\tplugins.fireHook('filter:user.getRegistrationQueue', {users: users}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tnext(null, results.users);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/user/auth.js":"'use strict';\n\nvar async = require('async');\nvar winston = require('winston');\nvar db = require('../database');\nvar meta = require('../meta');\nvar events = require('../events');\n\nmodule.exports = function (User) {\n\tUser.auth = {};\n\n\tUser.auth.logAttempt = function (uid, ip, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.exists('lockout:' + uid, next);\n\t\t\t},\n\t\t\tfunction (exists, next) {\n\t\t\t\tif (exists) {\n\t\t\t\t\treturn callback(new Error('[[error:account-locked]]'));\n\t\t\t\t}\n\t\t\t\tdb.increment('loginAttempts:' + uid, next);\n\t\t\t},\n\t\t\tfunction (attemps, next) {\n\t\t\t\tvar loginAttempts = parseInt(meta.config.loginAttempts, 10) || 5;\n\t\t\t\tif (attemps <= loginAttempts) {\n\t\t\t\t\treturn db.pexpire('loginAttempts:' + uid, 1000 * 60 * 60, callback);\n\t\t\t\t}\n\t\t\t\t// Lock out the account\n\t\t\t\tdb.set('lockout:' + uid, '', next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tvar duration = 1000 * 60 * (meta.config.lockoutDuration || 60);\n\n\t\t\t\tdb.delete('loginAttempts:' + uid);\n\t\t\t\tdb.pexpire('lockout:' + uid, duration);\n\t\t\t\tevents.log({\n\t\t\t\t\ttype: 'account-locked',\n\t\t\t\t\tuid: uid,\n\t\t\t\t\tip: ip\n\t\t\t\t});\n\t\t\t\tnext(new Error('[[error:account-locked]]'));\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tUser.auth.clearLoginAttempts = function (uid) {\n\t\tdb.delete('loginAttempts:' + uid);\n\t};\n\n\tUser.auth.resetLockout = function (uid, callback) {\n\t\tasync.parallel([\n\t\t\tasync.apply(db.delete, 'loginAttempts:' + uid),\n\t\t\tasync.apply(db.delete, 'lockout:' + uid)\n\t\t], callback);\n\t};\n\n\tUser.auth.getSessions = function (uid, curSessionId, callback) {\n\t\tvar _sids;\n\n\t\t// curSessionId is optional\n\t\tif (arguments.length === 2 && typeof curSessionId === 'function') {\n\t\t\tcallback = curSessionId;\n\t\t\tcurSessionId = undefined;\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tasync.apply(db.getSortedSetRevRange, 'uid:' + uid + ':sessions', 0, -1),\n\t\t\tfunction (sids, next) {\n\t\t\t\t_sids = sids;\n\t\t\t\tasync.map(sids, db.sessionStore.get.bind(db.sessionStore), next);\n\t\t\t},\n\t\t\tfunction (sessions, next) {\n\t\t\t\tsessions.forEach(function (sessionObj, idx) {\n\t\t\t\t\tif (sessionObj && sessionObj.meta) {\n\t\t\t\t\t\tsessionObj.meta.current = curSessionId === _sids[idx];\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Revoke any sessions that have expired, return filtered list\n\t\t\t\tvar expiredSids = [],\n\t\t\t\t\texpired;\n\n\t\t\t\tsessions = sessions.filter(function (sessionObj, idx) {\n\t\t\t\t\texpired = !sessionObj || !sessionObj.hasOwnProperty('passport') ||\n\t\t\t\t\t\t!sessionObj.passport.hasOwnProperty('user')\t||\n\t\t\t\t\t\tparseInt(sessionObj.passport.user, 10) !== parseInt(uid, 10);\n\n\t\t\t\t\tif (expired) {\n\t\t\t\t\t\texpiredSids.push(_sids[idx]);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn !expired;\n\t\t\t\t});\n\n\t\t\t\tasync.each(expiredSids, function (sid, next) {\n\t\t\t\t\tUser.auth.revokeSession(sid, uid, next);\n\t\t\t\t}, function (err) {\n\t\t\t\t\tnext(err, sessions);\n\t\t\t\t});\n\t\t\t}\n\t\t], function (err, sessions) {\n\t\t\tcallback(err, sessions ? sessions.map(function (sessObj) {\n\t\t\t\tsessObj.meta.datetimeISO = new Date(sessObj.meta.datetime).toISOString();\n\t\t\t\treturn sessObj.meta;\n\t\t\t}) : undefined);\n\t\t});\n\t};\n\n\tUser.auth.addSession = function (uid, sessionId, callback) {\n\t\tcallback = callback || function () {};\n\t\tdb.sortedSetAdd('uid:' + uid + ':sessions', Date.now(), sessionId, callback);\n\t};\n\n\tUser.auth.revokeSession = function (sessionId, uid, callback) {\n\t\twinston.verbose('[user.auth] Revoking session ' + sessionId + ' for user ' + uid);\n\n\t\tdb.sessionStore.get(sessionId, function (err, sessionObj) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tasync.parallel([\n\t\t\t\tfunction (next) {\n\t\t\t\t\tif (sessionObj && sessionObj.meta && sessionObj.meta.uuid) {\n\t\t\t\t\t\tdb.deleteObjectField('uid:' + uid + ':sessionUUID:sessionId', sessionObj.meta.uuid, next);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnext();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tasync.apply(db.sortedSetRemove, 'uid:' + uid + ':sessions', sessionId),\n\t\t\t\tasync.apply(db.sessionStore.destroy.bind(db.sessionStore), sessionId)\n\t\t\t], callback);\n\t\t});\n\t};\n\n\tUser.auth.revokeAllSessions = function (uid, callback) {\n\t\tasync.waterfall([\n\t\t\tasync.apply(db.getSortedSetRange, 'uid:' + uid + ':sessions', 0, -1),\n\t\t\tfunction (sids, next) {\n\t\t\t\tasync.each(sids, function (sid, next) {\n\t\t\t\t\tUser.auth.revokeSession(sid, uid, next);\n\t\t\t\t}, next);\n\t\t\t}\n\t\t], callback);\n\t};\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/user/bans.js":"'use strict';\n\nvar async = require('async');\nvar db = require('../database');\nvar plugins = require('../plugins');\n\nmodule.exports = function (User) {\n\tUser.ban = function (uid, until, reason, callback) {\n\t\t// \"until\" (optional) is unix timestamp in milliseconds\n\t\t// \"reason\" (optional) is a string\n\t\tif (!callback && typeof until === 'function') {\n\t\t\tcallback = until;\n\t\t\tuntil = 0;\n\t\t\treason = '';\n\t\t} else if (!callback && typeof reason === 'function') {\n\t\t\tcallback = reason;\n\t\t\treason = '';\n\t\t}\n\n\t\tvar now = Date.now();\n\n\t\tuntil = parseInt(until, 10);\n\t\tif (isNaN(until)) {\n\t\t\treturn callback(new Error('[[error:ban-expiry-missing]]'));\n\t\t}\n\n\t\tvar tasks = [\n\t\t\tasync.apply(User.setUserField, uid, 'banned', 1),\n\t\t\tasync.apply(db.sortedSetAdd, 'users:banned', now, uid),\n\t\t\tasync.apply(db.sortedSetAdd, 'uid:' + uid + ':bans', now, until)\n\t\t];\n\n\t\tif (until > 0 && now < until) {\n\t\t\ttasks.push(async.apply(db.sortedSetAdd, 'users:banned:expire', until, uid));\n\t\t\ttasks.push(async.apply(User.setUserField, uid, 'banned:expire', until));\n\t\t} else {\n\t\t\tuntil = 0;\n\t\t}\n\n\t\tif (reason) {\n\t\t\ttasks.push(async.apply(db.sortedSetAdd, 'banned:' + uid + ':reasons', now, reason));\n\t\t}\n\n\t\tasync.series(tasks, function (err) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tplugins.fireHook('action:user.banned', {\n\t\t\t\tuid: uid,\n\t\t\t\tuntil: until > 0 ? until : undefined\n\t\t\t});\n\t\t\tcallback();\n\t\t});\n\t};\n\n\tUser.unban = function (uid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tUser.setUserFields(uid, {banned: 0, 'banned:expire': 0}, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tdb.sortedSetsRemove(['users:banned', 'users:banned:expire'], uid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tplugins.fireHook('action:user.unbanned', {uid: uid});\n\t\t\t\tnext();\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tUser.isBanned = function (uid, callback) {\n\t\tasync.waterfall([\n\t\t\tasync.apply(User.getUserFields, uid, ['banned', 'banned:expire']),\n\t\t\tfunction (userData, next) {\n\t\t\t\tvar banned = parseInt(userData.banned, 10) === 1;\n\t\t\t\tif (!banned) {\n\t\t\t\t\treturn next(null, banned);\n\t\t\t\t}\n\n\t\t\t\t// If they are banned, see if the ban has expired\n\t\t\t\tvar stillBanned = !userData['banned:expire'] || Date.now() < userData['banned:expire'];\n\n\t\t\t\tif (stillBanned) {\n\t\t\t\t\treturn next(null, true);\n\t\t\t\t}\n\t\t\t\tasync.parallel([\n\t\t\t\t\tasync.apply(db.sortedSetRemove.bind(db), 'users:banned:expire', uid),\n\t\t\t\t\tasync.apply(db.sortedSetRemove.bind(db), 'users:banned', uid),\n\t\t\t\t\tasync.apply(User.setUserFields, uid, {banned:0, 'banned:expire': 0})\n\t\t\t\t], function (err) {\n\t\t\t\t\tnext(err, false);\n\t\t\t\t});\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tUser.getBannedReason = function (uid, callback) {\n\t\t// Grabs the latest ban reason\n\t\tdb.getSortedSetRevRange('banned:' + uid + ':reasons', 0, 0, function (err, reasons) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tcallback(null, reasons.length ? reasons[0] : '');\n\t\t});\n\t};\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/user/categories.js":"'use strict';\n\nvar async = require('async');\n\nvar db = require('../database');\nvar categories = require('../categories');\n\nmodule.exports = function (User) {\n\n\tUser.getIgnoredCategories = function (uid, callback) {\n\t\tdb.getSortedSetRange('uid:' + uid + ':ignored:cids', 0, -1, callback);\n\t};\n\n\tUser.getWatchedCategories = function (uid, callback) {\n\t\tasync.parallel({\n\t\t\tignored: function (next) {\n\t\t\t\tUser.getIgnoredCategories(uid, next);\n\t\t\t},\n\t\t\tall: function (next) {\n\t\t\t\tdb.getSortedSetRange('categories:cid', 0, -1, next);\n\t\t\t}\n\t\t}, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar watched = results.all.filter(function (cid) {\n\t\t\t\treturn cid && results.ignored.indexOf(cid) === -1;\n\t\t\t});\n\t\t\tcallback(null, watched);\n\t\t});\n\t};\n\n\tUser.ignoreCategory = function (uid, cid, callback) {\n\t\tif (!uid) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tcategories.exists(cid, next);\n\t\t\t},\n\t\t\tfunction (exists, next) {\n\t\t\t\tif (!exists) {\n\t\t\t\t\treturn next(new Error('[[error:no-category]]'));\n\t\t\t\t}\n\t\t\t\tdb.sortedSetAdd('uid:' + uid + ':ignored:cids', Date.now(), cid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tdb.sortedSetAdd('cid:' + cid + ':ignorers', Date.now(), uid, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tUser.watchCategory = function (uid, cid, callback) {\n\t\tif (!uid) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tcategories.exists(cid, next);\n\t\t\t},\n\t\t\tfunction (exists, next) {\n\t\t\t\tif (!exists) {\n\t\t\t\t\treturn next(new Error('[[error:no-category]]'));\n\t\t\t\t}\n\t\t\t\tdb.sortedSetRemove('uid:' + uid + ':ignored:cids', cid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tdb.sortedSetRemove('cid:' + cid + ':ignorers', uid, next);\n\t\t\t}\n\t\t], callback);\n\t};\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/user/create.js":"'use strict';\n\nvar async = require('async');\nvar db = require('../database');\nvar utils = require('../../public/src/utils');\nvar validator = require('validator');\nvar plugins = require('../plugins');\nvar groups = require('../groups');\nvar meta = require('../meta');\n\nmodule.exports = function (User) {\n\n\tUser.create = function (data, callback) {\n\t\tdata.username = data.username.trim();\n\t\tdata.userslug = utils.slugify(data.username);\n\t\tif (data.email !== undefined) {\n\t\t\tdata.email = validator.escape(String(data.email).trim());\n\t\t}\n\n\t\tUser.isDataValid(data, function (err) {\n\t\t\tif (err)  {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tvar timestamp = data.timestamp || Date.now();\n\n\t\t\tvar userData = {\n\t\t\t\t'username': data.username,\n\t\t\t\t'userslug': data.userslug,\n\t\t\t\t'email': data.email || '',\n\t\t\t\t'joindate': timestamp,\n\t\t\t\t'lastonline': timestamp,\n\t\t\t\t'picture': '',\n\t\t\t\t'fullname': data.fullname || '',\n\t\t\t\t'location': '',\n\t\t\t\t'birthday': '',\n\t\t\t\t'website': '',\n\t\t\t\t'signature': '',\n\t\t\t\t'uploadedpicture': '',\n\t\t\t\t'profileviews': 0,\n\t\t\t\t'reputation': 0,\n\t\t\t\t'postcount': 0,\n\t\t\t\t'topiccount': 0,\n\t\t\t\t'lastposttime': 0,\n\t\t\t\t'banned': 0,\n\t\t\t\t'status': 'online'\n\t\t\t};\n\n\t\t\tasync.parallel({\n\t\t\t\trenamedUsername: function (next) {\n\t\t\t\t\trenameUsername(userData, next);\n\t\t\t\t},\n\t\t\t\tuserData: function (next) {\n\t\t\t\t\tplugins.fireHook('filter:user.create', {user: userData, data: data}, next);\n\t\t\t\t}\n\t\t\t}, function (err, results) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\tvar userNameChanged = !!results.renamedUsername;\n\n\t\t\t\tif (userNameChanged) {\n\t\t\t\t\tuserData.username = results.renamedUsername;\n\t\t\t\t\tuserData.userslug = utils.slugify(results.renamedUsername);\n\t\t\t\t}\n\n\t\t\t\tasync.waterfall([\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.incrObjectField('global', 'nextUid', next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (uid, next) {\n\t\t\t\t\t\tuserData.uid = uid;\n\t\t\t\t\t\tdb.setObject('user:' + uid, userData, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tasync.parallel([\n\t\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\t\tdb.incrObjectField('global', 'userCount', next);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\t\tdb.sortedSetAdd('username:uid', userData.uid, userData.username, next);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\t\tdb.sortedSetAdd('username:sorted', 0, userData.username.toLowerCase() + ':' + userData.uid, next);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\t\tdb.sortedSetAdd('userslug:uid', userData.uid, userData.userslug, next);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\t\tvar sets = ['users:joindate', 'users:online'];\n\t\t\t\t\t\t\t\tif (parseInt(userData.uid) !== 1) {\n\t\t\t\t\t\t\t\t\tsets.push('users:notvalidated');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdb.sortedSetsAdd(sets, timestamp, userData.uid, next);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\t\tdb.sortedSetsAdd(['users:postcount', 'users:reputation'], 0, userData.uid, next);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\t\tgroups.join('registered-users', userData.uid, next);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\t\tUser.notifications.sendWelcomeNotification(userData.uid, next);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\t\tif (userData.email) {\n\t\t\t\t\t\t\t\t\tasync.parallel([\n\t\t\t\t\t\t\t\t\t\tasync.apply(db.sortedSetAdd, 'email:uid', userData.uid, userData.email.toLowerCase()),\n\t\t\t\t\t\t\t\t\t\tasync.apply(db.sortedSetAdd, 'email:sorted', 0, userData.email.toLowerCase() + ':' + userData.uid)\n\t\t\t\t\t\t\t\t\t], next);\n\n\t\t\t\t\t\t\t\t\tif (parseInt(userData.uid, 10) !== 1 && parseInt(meta.config.requireEmailConfirmation, 10) === 1) {\n\t\t\t\t\t\t\t\t\t\tUser.email.sendValidationEmail(userData.uid, userData.email);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnext();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\t\tif (!data.password) {\n\t\t\t\t\t\t\t\t\treturn next();\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tUser.hashPassword(data.password, function (err, hash) {\n\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tasync.parallel([\n\t\t\t\t\t\t\t\t\t\tasync.apply(User.setUserField, userData.uid, 'password', hash),\n\t\t\t\t\t\t\t\t\t\tasync.apply(User.reset.updateExpiry, userData.uid)\n\t\t\t\t\t\t\t\t\t], next);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\t\tUser.updateDigestSetting(userData.uid, meta.config.dailyDigestFreq, next);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t], next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (results, next) {\n\t\t\t\t\t\tif (userNameChanged) {\n\t\t\t\t\t\t\tUser.notifications.sendNameChangeNotification(userData.uid, userData.username);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tplugins.fireHook('action:user.create', userData);\n\t\t\t\t\t\tnext(null, userData.uid);\n\t\t\t\t\t}\n\t\t\t\t], callback);\n\t\t\t});\n\t\t});\n\t};\n\n\tUser.isDataValid = function (userData, callback) {\n\t\tasync.parallel({\n\t\t\temailValid: function (next) {\n\t\t\t\tif (userData.email) {\n\t\t\t\t\tnext(!utils.isEmailValid(userData.email) ? new Error('[[error:invalid-email]]') : null);\n\t\t\t\t} else {\n\t\t\t\t\tnext();\n\t\t\t\t}\n\t\t\t},\n\t\t\tuserNameValid: function (next) {\n\t\t\t\tnext((!utils.isUserNameValid(userData.username) || !userData.userslug) ? new Error('[[error:invalid-username, ' + userData.username + ']]') : null);\n\t\t\t},\n\t\t\tpasswordValid: function (next) {\n\t\t\t\tif (userData.password) {\n\t\t\t\t\tUser.isPasswordValid(userData.password, next);\n\t\t\t\t} else {\n\t\t\t\t\tnext();\n\t\t\t\t}\n\t\t\t},\n\t\t\temailAvailable: function (next) {\n\t\t\t\tif (userData.email) {\n\t\t\t\t\tUser.email.available(userData.email, function (err, available) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnext(!available ? new Error('[[error:email-taken]]') : null);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tnext();\n\t\t\t\t}\n\t\t\t}\n\t\t}, function (err) {\n\t\t\tcallback(err);\n\t\t});\n\t};\n\n\tUser.isPasswordValid = function (password, callback) {\n\t\tif (!password || !utils.isPasswordValid(password)) {\n\t\t\treturn callback(new Error('[[error:invalid-password]]'));\n\t\t}\n\n\t\tif (password.length < meta.config.minimumPasswordLength) {\n\t\t\treturn callback(new Error('[[user:change_password_error_length]]'));\n\t\t}\n\n\t\tif (password.length > 4096) {\n\t\t\treturn callback(new Error('[[error:password-too-long]]'));\n\t\t}\n\n\t\tcallback();\n\t};\n\n\tfunction renameUsername(userData, callback) {\n\t\tmeta.userOrGroupExists(userData.userslug, function (err, exists) {\n\t\t\tif (err || !exists) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar\tnewUsername = '';\n\t\t\tasync.forever(function (next) {\n\t\t\t\tnewUsername = userData.username + (Math.floor(Math.random() * 255) + 1);\n\t\t\t\tUser.existsBySlug(newUsername, function (err, exists) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t}\n\t\t\t\t\tif (!exists) {\n\t\t\t\t\t\tnext(newUsername);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnext();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, function (username) {\n\t\t\t\tcallback(null, username);\n\t\t\t});\n\t\t});\n\t}\n\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/user/data.js":"'use strict';\n\nvar validator = require('validator');\nvar nconf = require('nconf');\nvar winston = require('winston');\n\nvar db = require('../database');\nvar plugins = require('../plugins');\nvar utils = require('../../public/src/utils');\n\nmodule.exports = function (User) {\n\n\tvar iconBackgrounds = ['#f44336', '#e91e63', '#9c27b0', '#673ab7', '#3f51b5', '#2196f3',\n\t\t'#009688', '#1b5e20', '#33691e', '#827717', '#e65100', '#ff5722', '#795548', '#607d8b'];\n\n\tUser.getUserField = function (uid, field, callback) {\n\t\tUser.getUserFields(uid, [field], function (err, user) {\n\t\t\tcallback(err, user ? user[field] : null);\n\t\t});\n\t};\n\n\tUser.getUserFields = function (uid, fields, callback) {\n\t\tUser.getUsersFields([uid], fields, function (err, users) {\n\t\t\tcallback(err, users ? users[0] : null);\n\t\t});\n\t};\n\n\tUser.getUsersFields = function (uids, fields, callback) {\n\t\tvar fieldsToRemove = [];\n\t\tfunction addField(field) {\n\t\t\tif (fields.indexOf(field) === -1) {\n\t\t\t\tfields.push(field);\n\t\t\t\tfieldsToRemove.push(field);\n\t\t\t}\n\t\t}\n\n\t\tif (!Array.isArray(uids) || !uids.length) {\n\t\t\treturn callback(null, []);\n\t\t}\n\n\t\tvar keys = uids.map(function (uid) {\n\t\t\treturn 'user:' + uid;\n\t\t});\n\n\t\tif (fields.indexOf('uid') === -1) {\n\t\t\tfields.push('uid');\n\t\t}\n\n\t\tif (fields.indexOf('picture') !== -1) {\n\t\t\taddField('email');\n\t\t\taddField('uploadedpicture');\n\t\t}\n\n\t\tif (fields.indexOf('status') !== -1) {\n\t\t\taddField('lastonline');\n\t\t}\n\n\t\tdb.getObjectsFields(keys, fields, function (err, users) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tmodifyUserData(users, fieldsToRemove, callback);\n\t\t});\n\t};\n\n\tUser.getMultipleUserFields = function (uids, fields, callback) {\n\t\twinston.warn('[deprecated] User.getMultipleUserFields is deprecated please use User.getUsersFields');\n\t\tUser.getUsersFields(uids, fields, callback);\n\t};\n\n\tUser.getUserData = function (uid, callback) {\n\t\tUser.getUsersData([uid], function (err, users) {\n\t\t\tcallback(err, users ? users[0] : null);\n\t\t});\n\t};\n\n\tUser.getUsersData = function (uids, callback) {\n\t\tif (!Array.isArray(uids) || !uids.length) {\n\t\t\treturn callback(null, []);\n\t\t}\n\n\t\tvar keys = uids.map(function (uid) {\n\t\t\treturn 'user:' + uid;\n\t\t});\n\n\t\tdb.getObjects(keys, function (err, users) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tmodifyUserData(users, [], callback);\n\t\t});\n\t};\n\n\tfunction modifyUserData(users, fieldsToRemove, callback) {\n\t\tusers.forEach(function (user) {\n\t\t\tif (!user) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (user.hasOwnProperty('username')) {\n\t\t\t\tuser.username = validator.escape(user.username ? user.username.toString() : '');\n\t\t\t}\n\n\t\t\tif (user.password) {\n\t\t\t\tuser.password = undefined;\n\t\t\t}\n\n\t\t\tif (!parseInt(user.uid, 10)) {\n\t\t\t\tuser.uid = 0;\n\t\t\t\tuser.username = '[[global:guest]]';\n\t\t\t\tuser.userslug = '';\n\t\t\t\tuser.picture = '';\n\t\t\t\tuser['icon:text'] = '?';\n\t\t\t\tuser['icon:bgColor'] = '#aaa';\n\t\t\t}\n\n\t\t\tif (user.picture && user.picture === user.uploadedpicture) {\n\t\t\t\tuser.picture = user.uploadedpicture = user.picture.startsWith('http') ? user.picture : nconf.get('relative_path') + user.picture;\n\t\t\t} else if (user.uploadedpicture) {\n\t\t\t\tuser.uploadedpicture = user.uploadedpicture.startsWith('http') ? user.uploadedpicture : nconf.get('relative_path') + user.uploadedpicture;\n\t\t\t}\n\n\t\t\tif (user.hasOwnProperty('status') && parseInt(user.lastonline, 10)) {\n\t\t\t\tuser.status = User.getStatus(user);\n\t\t\t}\n\n\t\t\tfor(var i = 0; i < fieldsToRemove.length; ++i) {\n\t\t\t\tuser[fieldsToRemove[i]] = undefined;\n\t\t\t}\n\n\t\t\t// User Icons\n\t\t\tif (user.hasOwnProperty('picture') && user.username && parseInt(user.uid, 10)) {\n\t\t\t\tuser['icon:text'] = (user.username[0] || '').toUpperCase();\n\t\t\t\tuser['icon:bgColor'] = iconBackgrounds[Array.prototype.reduce.call(user.username, function (cur, next) {\n\t\t\t\t\treturn cur + next.charCodeAt();\n\t\t\t\t}, 0) % iconBackgrounds.length];\n\t\t\t}\n\n\t\t\tif (user.hasOwnProperty('joindate')) {\n\t\t\t\tuser.joindateISO = utils.toISOString(user.joindate);\n\t\t\t}\n\n\t\t\tif (user.hasOwnProperty('lastonline')) {\n\t\t\t\tuser.lastonlineISO = utils.toISOString(user.lastonline) || user.joindateISO;\n\t\t\t}\n\t\t});\n\n\t\tplugins.fireHook('filter:users.get', users, callback);\n\t}\n\n\tUser.setUserField = function (uid, field, value, callback) {\n\t\tcallback = callback || function () {};\n\t\tdb.setObjectField('user:' + uid, field, value, function (err) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tplugins.fireHook('action:user.set', {uid: uid, field: field, value: value, type: 'set'});\n\t\t\tcallback();\n\t\t});\n\t};\n\n\tUser.setUserFields = function (uid, data, callback) {\n\t\tcallback = callback || function () {};\n\t\tdb.setObject('user:' + uid, data, function (err) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tfor (var field in data) {\n\t\t\t\tif (data.hasOwnProperty(field)) {\n\t\t\t\t\tplugins.fireHook('action:user.set', {uid: uid, field: field, value: data[field], type: 'set'});\n\t\t\t\t}\n\t\t\t}\n\t\t\tcallback();\n\t\t});\n\t};\n\n\tUser.incrementUserFieldBy = function (uid, field, value, callback) {\n\t\tcallback = callback || function () {};\n\t\tdb.incrObjectFieldBy('user:' + uid, field, value, function (err, value) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tplugins.fireHook('action:user.set', {uid: uid, field: field, value: value, type: 'increment'});\n\n\t\t\tcallback(null, value);\n\t\t});\n\t};\n\n\tUser.decrementUserFieldBy = function (uid, field, value, callback) {\n\t\tcallback = callback || function () {};\n\t\tdb.incrObjectFieldBy('user:' + uid, field, -value, function (err, value) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tplugins.fireHook('action:user.set', {uid: uid, field: field, value: value, type: 'decrement'});\n\n\t\t\tcallback(null, value);\n\t\t});\n\t};\n\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/user/delete.js":"'use strict';\n\nvar async = require('async');\n\nvar db = require('../database');\nvar posts = require('../posts');\nvar topics = require('../topics');\nvar groups = require('../groups');\nvar plugins = require('../plugins');\nvar batch = require('../batch');\n\nmodule.exports = function (User) {\n\n\tUser.delete = function (callerUid, uid, callback) {\n\t\tif (!parseInt(uid, 10)) {\n\t\t\treturn callback(new Error('[[error:invalid-uid]]'));\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdeletePosts(callerUid, uid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tdeleteTopics(callerUid, uid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tUser.deleteAccount(uid, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tfunction deletePosts(callerUid, uid, callback) {\n\t\tbatch.processSortedSet('uid:' + uid + ':posts', function (ids, next) {\n\t\t\tasync.eachSeries(ids, function (pid, next) {\n\t\t\t\tposts.purge(pid, callerUid, next);\n\t\t\t}, next);\n\t\t}, {alwaysStartAt: 0}, callback);\n\t}\n\n\tfunction deleteTopics(callerUid, uid, callback) {\n\t\tbatch.processSortedSet('uid:' + uid + ':topics', function (ids, next) {\n\t\t\tasync.eachSeries(ids, function (tid, next) {\n\t\t\t\ttopics.purge(tid, callerUid, next);\n\t\t\t}, next);\n\t\t}, {alwaysStartAt: 0}, callback);\n\t}\n\n\tUser.deleteAccount = function (uid, callback) {\n\t\tvar userData;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tUser.exists(uid, next);\n\t\t\t},\n\t\t\tfunction (exists, next) {\n\t\t\t\tif (!exists) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\tUser.getUserFields(uid, ['username', 'userslug', 'fullname', 'email'], next);\n\t\t\t},\n\t\t\tfunction (_userData, next)  {\n\t\t\t\tuserData = _userData;\n\t\t\t\tplugins.fireHook('static:user.delete', {uid: uid}, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tdeleteVotes(uid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tdeleteChats(uid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tUser.auth.revokeAllSessions(uid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tasync.parallel([\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.sortedSetRemove('username:uid', userData.username, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.sortedSetRemove('username:sorted', userData.username.toLowerCase() + ':' + uid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.sortedSetRemove('userslug:uid', userData.userslug, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.sortedSetRemove('fullname:uid', userData.fullname, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tif (userData.email) {\n\t\t\t\t\t\t\tasync.parallel([\n\t\t\t\t\t\t\t\tasync.apply(db.sortedSetRemove, 'email:uid', userData.email.toLowerCase()),\n\t\t\t\t\t\t\t\tasync.apply(db.sortedSetRemove, 'email:sorted', userData.email.toLowerCase() + ':' + uid)\n\t\t\t\t\t\t\t], next);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnext();\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.sortedSetsRemove([\n\t\t\t\t\t\t\t'users:joindate',\n\t\t\t\t\t\t\t'users:postcount',\n\t\t\t\t\t\t\t'users:reputation',\n\t\t\t\t\t\t\t'users:banned',\n\t\t\t\t\t\t\t'users:online',\n\t\t\t\t\t\t\t'users:notvalidated',\n\t\t\t\t\t\t\t'digest:day:uids',\n\t\t\t\t\t\t\t'digest:week:uids',\n\t\t\t\t\t\t\t'digest:month:uids'\n\t\t\t\t\t\t], uid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.decrObjectField('global', 'userCount', next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tvar keys = [\n\t\t\t\t\t\t\t'uid:' + uid + ':notifications:read',\n\t\t\t\t\t\t\t'uid:' + uid + ':notifications:unread',\n\t\t\t\t\t\t\t'uid:' + uid + ':bookmarks',\n\t\t\t\t\t\t\t'uid:' + uid + ':followed_tids',\n\t\t\t\t\t\t\t'uid:' + uid + ':ignored_tids',\n\t\t\t\t\t\t\t'user:' + uid + ':settings',\n\t\t\t\t\t\t\t'uid:' + uid + ':topics', 'uid:' + uid + ':posts',\n\t\t\t\t\t\t\t'uid:' + uid + ':chats', 'uid:' + uid + ':chats:unread',\n\t\t\t\t\t\t\t'uid:' + uid + ':chat:rooms', 'uid:' + uid + ':chat:rooms:unread',\n\t\t\t\t\t\t\t'uid:' + uid + ':upvote', 'uid:' + uid + ':downvote',\n\t\t\t\t\t\t\t'uid:' + uid + ':ignored:cids', 'uid:' + uid + ':flag:pids',\n\t\t\t\t\t\t\t'uid:' + uid + ':sessions', 'uid:' + uid + ':sessionUUID:sessionId'\n\t\t\t\t\t\t];\n\t\t\t\t\t\tdb.deleteAll(keys, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdeleteUserIps(uid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdeleteUserFromFollowers(uid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tgroups.leaveAllGroups(uid, next);\n\t\t\t\t\t}\n\t\t\t\t], next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tdb.deleteAll(['followers:' + uid, 'following:' + uid, 'user:' + uid], next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tfunction deleteVotes(uid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\tupvotedPids: async.apply(db.getSortedSetRange, 'uid:' + uid + ':upvote', 0, -1),\n\t\t\t\t\tdownvotedPids: async.apply(db.getSortedSetRange, 'uid:' + uid + ':downvote', 0, -1)\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (pids, next) {\n\t\t\t\tpids = pids.upvotedPids.concat(pids.downvotedPids).filter(function (pid, index, array) {\n\t\t\t\t\treturn pid && array.indexOf(pid) === index;\n\t\t\t\t});\n\n\t\t\t\tasync.eachSeries(pids, function (pid, next) {\n\t\t\t\t\tposts.unvote(pid, uid, next);\n\t\t\t\t}, next);\n\t\t\t}\n\t\t], function (err) {\n\t\t\tcallback(err);\n\t\t});\n\t}\n\n\tfunction deleteChats(uid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.getSortedSetRange('uid:' + uid + ':chat:rooms', 0, -1, next);\n\t\t\t},\n\t\t\tfunction (roomIds, next) {\n\t\t\t\tvar userKeys = roomIds.map(function (roomId) {\n\t\t\t\t\treturn 'uid:' + uid + ':chat:room:' + roomId + ':mids';\n\t\t\t\t});\n\t\t\t\tvar roomKeys = roomIds.map(function (roomId) {\n\t\t\t\t\treturn 'chat:room:' + roomId + ':uids';\n\t\t\t\t});\n\n\t\t\t\tasync.parallel([\n\t\t\t\t\tasync.apply(db.sortedSetsRemove, roomKeys, uid),\n\t\t\t\t\tasync.apply(db.deleteAll, userKeys)\n\t\t\t\t], next);\n\t\t\t}\n\t\t], function (err) {\n\t\t\tcallback(err);\n\t\t});\n\t}\n\n\tfunction deleteUserIps(uid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.getSortedSetRange('uid:' + uid + ':ip', 0, -1, next);\n\t\t\t},\n\t\t\tfunction (ips, next) {\n\t\t\t\tvar keys = ips.map(function (ip) {\n\t\t\t\t\treturn 'ip:' + ip + ':uid';\n\t\t\t\t});\n\t\t\t\tdb.sortedSetsRemove(keys, uid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tdb.delete('uid:' + uid + ':ip', next);\n\t\t\t}\n\t\t], callback);\n\t}\n\n\tfunction deleteUserFromFollowers(uid, callback) {\n\t\tasync.parallel({\n\t\t\tfollowers: async.apply(db.getSortedSetRange, 'followers:' + uid, 0, -1),\n\t\t\tfollowing: async.apply(db.getSortedSetRange, 'following:' + uid, 0, -1)\n\t\t}, function (err, results) {\n\t\t\tfunction updateCount(uids, name, fieldName, next) {\n\t\t\t\tasync.each(uids, function (uid, next) {\n\t\t\t\t\tdb.sortedSetCard(name + uid, function (err, count) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcount = parseInt(count, 10) || 0;\n\t\t\t\t\t\tdb.setObjectField('user:' + uid, fieldName, count, next);\n\t\t\t\t\t});\n\t\t\t\t}, next);\n\t\t\t}\n\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar followingSets = results.followers.map(function (uid) {\n\t\t\t\treturn 'following:' + uid;\n\t\t\t});\n\n\t\t\tvar followerSets = results.following.map(function (uid) {\n\t\t\t\treturn 'followers:' + uid;\n\t\t\t});\n\n\t\t\tasync.parallel([\n\t\t\t\tasync.apply(db.sortedSetsRemove, followerSets.concat(followingSets), uid),\n\t\t\t\tasync.apply(updateCount, results.following, 'followers:', 'followerCount'),\n\t\t\t\tasync.apply(updateCount, results.followers, 'following:', 'followingCount')\n\t\t\t], callback);\n\t\t});\n\t}\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/user/digest.js":"\"use strict\";\n\nvar async = require('async');\nvar winston = require('winston');\nvar nconf = require('nconf');\n\nvar db = require('../database');\nvar meta = require('../meta');\nvar user = require('../user');\nvar topics = require('../topics');\nvar plugins = require('../plugins');\nvar emailer = require('../emailer');\nvar utils = require('../../public/src/utils');\n\n(function (Digest) {\n\tDigest.execute = function (interval, callback) {\n\t\tcallback = callback || function () {};\n\n\t\tvar digestsDisabled = parseInt(meta.config.disableEmailSubscriptions, 10) === 1;\n\t\tif (digestsDisabled) {\n\t\t\twinston.verbose('[user/jobs] Did not send digests (' + interval + ') because subscription system is disabled.');\n\t\t\treturn callback();\n\t\t}\n\n\t\tif (!interval) {\n\t\t\t// interval is one of: day, week, month, or year\n\t\t\tinterval = 'day';\n\t\t}\n\t\tvar subscribers;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\ttopics: async.apply(topics.getLatestTopics, 0, 0, 9, interval),\n\t\t\t\t\tsubscribers: async.apply(Digest.getSubscribers, interval)\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (data, next) {\n\t\t\t\tsubscribers = data.subscribers;\n\t\t\t\tif (!data.subscribers.length) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\n\t\t\t\t// Fix relative paths in topic data\n\t\t\t\tdata.topics.topics = data.topics.topics.map(function (topicObj) {\n\t\t\t\t\tvar user = topicObj.hasOwnProperty('teaser') && topicObj.teaser !== undefined ? topicObj.teaser.user : topicObj.user;\n\t\t\t\t\tif (user && user.picture && utils.isRelativeUrl(user.picture)) {\n\t\t\t\t\t\tuser.picture = nconf.get('base_url') + user.picture;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn topicObj;\n\t\t\t\t});\n\n\t\t\t\tdata.interval = interval;\n\t\t\t\tDigest.send(data, next);\n\t\t\t}\n\t\t], function (err) {\n\t\t\tif (err) {\n\t\t\t\twinston.error('[user/jobs] Could not send digests (' + interval + '): ' + err.message);\n\t\t\t} else {\n\t\t\t\twinston.verbose('[user/jobs] Digest (' + interval + ') scheduling completed. ' + subscribers.length + ' email(s) sent.');\n\t\t\t}\n\n\t\t\tcallback(err);\n\t\t});\n\t};\n\n\tDigest.getSubscribers = function (interval, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.getSortedSetRange('digest:' + interval + ':uids', 0, -1, next);\n\t\t\t},\n\t\t\tfunction (subscribers, next) {\n\t\t\t\tplugins.fireHook('filter:digest.subscribers', {\n\t\t\t\t\tinterval: interval,\n\t\t\t\t\tsubscribers: subscribers\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tnext(null, results.subscribers);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tDigest.send = function (data, callback) {\n\t\tif (!data || !data.subscribers || !data.subscribers.length) {\n\t\t\treturn callback();\n\t\t}\n\t\tvar now = new Date();\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tuser.getUsersFields(data.subscribers, ['uid', 'username', 'userslug', 'lastonline'], next);\n\t\t\t},\n\t\t\tfunction (users, next) {\n\t\t\t\tasync.eachLimit(users, 100, function (userObj, next) {\n\t\t\t\t\tasync.waterfall([\n\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\tuser.notifications.getDailyUnread(userObj.uid, next);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction (notifications, next) {\n\t\t\t\t\t\t\tnotifications = notifications.filter(Boolean);\n\t\t\t\t\t\t\t// If there are no notifications and no new topics, don't bother sending a digest\n\t\t\t\t\t\t\tif (!notifications.length && !data.topics.topics.length) {\n\t\t\t\t\t\t\t\treturn next();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tnotifications.forEach(function (notification) {\n\t\t\t\t\t\t\t\tif (notification.image && !notification.image.startsWith('http')) {\n\t\t\t\t\t\t\t\t\tnotification.image = nconf.get('url') + notification.image;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\temailer.send('digest', userObj.uid, {\n\t\t\t\t\t\t\t\tsubject: '[' + meta.config.title + '] [[email:digest.subject, ' + (now.getFullYear() + '/' + (now.getMonth() + 1) + '/' + now.getDate()) + ']]',\n\t\t\t\t\t\t\t\tusername: userObj.username,\n\t\t\t\t\t\t\t\tuserslug: userObj.userslug,\n\t\t\t\t\t\t\t\turl: nconf.get('url'),\n\t\t\t\t\t\t\t\tsite_title: meta.config.title || meta.config.browserTitle || 'NodeBB',\n\t\t\t\t\t\t\t\tnotifications: notifications,\n\t\t\t\t\t\t\t\trecent: data.topics.topics,\n\t\t\t\t\t\t\t\tinterval: data.interval\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tnext();\n\t\t\t\t\t\t}\n\t\t\t\t\t], next);\n\t\t\t\t}, next);\n\t\t\t}\n\t\t], function (err) {\n\t\t\tcallback(err);\n\t\t});\n\t};\n\n}(module.exports));\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/user/email.js":"\n'use strict';\n\nvar async = require('async');\nvar nconf = require('nconf');\n\nvar user = require('../user');\nvar utils = require('../../public/src/utils');\nvar translator = require('../../public/src/modules/translator');\nvar plugins = require('../plugins');\nvar db = require('../database');\nvar meta = require('../meta');\nvar emailer = require('../emailer');\n\n(function (UserEmail) {\n\n\tUserEmail.exists = function (email, callback) {\n\t\tuser.getUidByEmail(email.toLowerCase(), function (err, exists) {\n\t\t\tcallback(err, !!exists);\n\t\t});\n\t};\n\n\tUserEmail.available = function (email, callback) {\n\t\tdb.isSortedSetMember('email:uid', email.toLowerCase(), function (err, exists) {\n\t\t\tcallback(err, !exists);\n\t\t});\n\t};\n\n\tUserEmail.sendValidationEmail = function (uid, email, callback) {\n\t\tcallback = callback || function () {};\n\t\tvar confirm_code = utils.generateUUID();\n\t\tvar confirm_link = nconf.get('url') + '/confirm/' + confirm_code;\n\n\t\tvar emailInterval = meta.config.hasOwnProperty('emailConfirmInterval') ? parseInt(meta.config.emailConfirmInterval, 10) : 10;\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.get('uid:' + uid + ':confirm:email:sent', next);\n\t\t\t},\n\t\t\tfunction (sent, next) {\n\t\t\t\tif (sent) {\n\t\t\t\t\treturn next(new Error('[[error:confirm-email-already-sent, ' + emailInterval + ']]'));\n\t\t\t\t}\n\t\t\t\tdb.set('uid:' + uid + ':confirm:email:sent', 1, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tdb.pexpireAt('uid:' + uid + ':confirm:email:sent', Date.now() + (emailInterval * 60 * 1000), next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tplugins.fireHook('filter:user.verify.code', confirm_code, next);\n\t\t\t},\n\t\t\tfunction (_confirm_code, next) {\n\t\t\t\tconfirm_code = _confirm_code;\n\t\t\t\tdb.setObject('confirm:' + confirm_code, {\n\t\t\t\t\temail: email.toLowerCase(),\n\t\t\t\t\tuid: uid\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tdb.expireAt('confirm:' + confirm_code, Math.floor(Date.now() / 1000 + 60 * 60 * 24), next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tuser.getUserField(uid, 'username', next);\n\t\t\t},\n\t\t\tfunction (username, next) {\n\t\t\t\tvar title = meta.config.title || meta.config.browserTitle || 'NodeBB';\n\t\t\t\ttranslator.translate('[[email:welcome-to, ' + title + ']]', meta.config.defaultLang, function (subject) {\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\tsite_title: title,\n\t\t\t\t\t\tusername: username,\n\t\t\t\t\t\tconfirm_link: confirm_link,\n\t\t\t\t\t\tconfirm_code: confirm_code,\n\n\t\t\t\t\t\tsubject: subject,\n\t\t\t\t\t\ttemplate: 'welcome',\n\t\t\t\t\t\tuid: uid\n\t\t\t\t\t};\n\n\t\t\t\t\tif (plugins.hasListeners('action:user.verify')) {\n\t\t\t\t\t\tplugins.fireHook('action:user.verify', {uid: uid, data: data});\n\t\t\t\t\t\tnext();\n\t\t\t\t\t} else {\n\t\t\t\t\t\temailer.send('welcome', uid, data, next);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tUserEmail.confirm = function (code, callback) {\n\t\tdb.getObject('confirm:' + code, function (err, confirmObj) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(new Error('[[error:parse-error]]'));\n\t\t\t}\n\n\t\t\tif (confirmObj && confirmObj.uid && confirmObj.email) {\n\t\t\t\tasync.series([\n\t\t\t\t\tasync.apply(user.setUserField, confirmObj.uid, 'email:confirmed', 1),\n\t\t\t\t\tasync.apply(db.delete, 'confirm:' + code),\n\t\t\t\t\tasync.apply(db.delete, 'uid:' + confirmObj.uid + ':confirm:email:sent'),\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.sortedSetRemove('users:notvalidated', confirmObj.uid, next);\n\t\t\t\t\t}\n\t\t\t\t], function (err) {\n\t\t\t\t\tcallback(err ? new Error('[[error:email-confirm-failed]]') : null);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcallback(new Error('[[error:invalid-data]]'));\n\t\t\t}\n\t\t});\n\t};\n\n}(exports));\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/user/follow.js":"\n'use strict';\n\nvar async = require('async');\nvar plugins = require('../plugins');\nvar db = require('../database');\n\nmodule.exports = function (User) {\n\n\tUser.follow = function (uid, followuid, callback) {\n\t\ttoggleFollow('follow', uid, followuid, callback);\n\t};\n\n\tUser.unfollow = function (uid, unfollowuid, callback) {\n\t\ttoggleFollow('unfollow', uid, unfollowuid, callback);\n\t};\n\n\tfunction toggleFollow(type, uid, theiruid, callback) {\n\t\tif (!parseInt(uid, 10) || !parseInt(theiruid, 10)) {\n\t\t\treturn callback(new Error('[[error:invalid-uid]]'));\n\t\t}\n\n\t\tif (parseInt(uid, 10) === parseInt(theiruid, 10)) {\n\t\t\treturn callback(new Error('[[error:you-cant-follow-yourself]]'));\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tUser.exists(theiruid, next);\n\t\t\t},\n\t\t\tfunction (exists, next) {\n\t\t\t\tif (!exists) {\n\t\t\t\t\treturn next(new Error('[[error:no-user]]'));\n\t\t\t\t}\n\t\t\t\tUser.isFollowing(uid, theiruid, next);\n\t\t\t},\n\t\t\tfunction (isFollowing, next) {\n\t\t\t\tif (type === 'follow') {\n\t\t\t\t\tif (isFollowing) {\n\t\t\t\t\t\treturn next(new Error('[[error:already-following]]'));\n\t\t\t\t\t}\n\t\t\t\t\tvar now = Date.now();\n\t\t\t\t\tasync.parallel([\n\t\t\t\t\t\tasync.apply(db.sortedSetAdd, 'following:' + uid, now, theiruid),\n\t\t\t\t\t\tasync.apply(db.sortedSetAdd, 'followers:' + theiruid, now, uid),\n\t\t\t\t\t\tasync.apply(User.incrementUserFieldBy, uid, 'followingCount', 1),\n\t\t\t\t\t\tasync.apply(User.incrementUserFieldBy, theiruid, 'followerCount', 1)\n\t\t\t\t\t], next);\n\t\t\t\t} else {\n\t\t\t\t\tif (!isFollowing) {\n\t\t\t\t\t\treturn next(new Error('[[error:not-following]]'));\n\t\t\t\t\t}\n\t\t\t\t\tasync.parallel([\n\t\t\t\t\t\tasync.apply(db.sortedSetRemove, 'following:' + uid, theiruid),\n\t\t\t\t\t\tasync.apply(db.sortedSetRemove, 'followers:' + theiruid, uid),\n\t\t\t\t\t\tasync.apply(User.decrementUserFieldBy, uid, 'followingCount', 1),\n\t\t\t\t\t\tasync.apply(User.decrementUserFieldBy, theiruid, 'followerCount', 1)\n\t\t\t\t\t], next);\n\t\t\t\t}\n\t\t\t}\n\t\t], callback);\n\t}\n\n\tUser.getFollowing = function (uid, start, stop, callback) {\n\t\tgetFollow(uid, 'following', start, stop, callback);\n\t};\n\n\tUser.getFollowers = function (uid, start, stop, callback) {\n\t\tgetFollow(uid, 'followers', start, stop, callback);\n\t};\n\n\tfunction getFollow(uid, type, start, stop, callback) {\n\t\tif (!parseInt(uid, 10)) {\n\t\t\treturn callback(null, []);\n\t\t}\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.getSortedSetRevRange(type + ':' + uid, start, stop, next);\n\t\t\t},\n\t\t\tfunction (uids, next) {\n\t\t\t\tplugins.fireHook('filter:user.' + type, {\n\t\t\t\t\tuids: uids,\n\t\t\t\t\tuid: uid,\n\t\t\t\t\tstart: start,\n\t\t\t\t\tstop: stop\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (data, next) {\n\t\t\t\tUser.getUsers(data.uids, uid, next);\n\t\t\t}\n\t\t], callback);\n\t}\n\n\tUser.isFollowing = function (uid, theirid, callback) {\n\t\tif (!parseInt(uid, 10) || !parseInt(theirid, 10)) {\n\t\t\treturn callback(null, false);\n\t\t}\n\t\tdb.isSortedSetMember('following:' + uid, theirid, callback);\n\t};\n\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/user/info.js":"'use strict';\n\nvar async = require('async');\nvar _ = require('underscore');\nvar validator = require('validator');\n\nvar db = require('../database');\nvar posts = require('../posts');\nvar topics = require('../topics');\n\nmodule.exports = function (User) {\n\tUser.getLatestBanInfo = function (uid, callback) {\n\t\t// Simply retrieves the last record of the user's ban, even if they've been unbanned since then.\n\t\tvar timestamp, expiry, reason;\n\n\t\tasync.waterfall([\n\t\t\tasync.apply(db.getSortedSetRevRangeWithScores, 'uid:' + uid + ':bans', 0, 0),\n\t\t\tfunction (record, next) {\n\t\t\t\tif (!record.length) {\n\t\t\t\t\treturn next(new Error('no-ban-info'));\n\t\t\t\t}\n\n\t\t\t\ttimestamp = record[0].score;\n\t\t\t\texpiry = record[0].value;\n\n\t\t\t\tdb.getSortedSetRangeByScore('banned:' + uid + ':reasons', 0, -1, timestamp, timestamp, next);\n\t\t\t},\n\t\t\tfunction (_reason, next) {\n\t\t\t\treason = _reason && _reason.length ? _reason[0] : '';\n\t\t\t\tnext();\n\t\t\t}\n\t\t], function (err) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tcallback(null, {\n\t\t\t\tuid: uid,\n\t\t\t\ttimestamp: timestamp,\n\t\t\t\texpiry: parseInt(expiry, 10),\n\t\t\t\texpiry_readable: new Date(parseInt(expiry, 10)).toString().replace(/:/g, '%3A'),\n\t\t\t\treason: validator.escape(String(reason))\n\t\t\t});\n\t\t});\n\t};\n\n\tUser.getModerationHistory = function (uid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\tflags: async.apply(db.getSortedSetRevRangeWithScores, 'uid:' + uid + ':flag:pids', 0, 19),\n\t\t\t\t\tbans: async.apply(db.getSortedSetRevRangeWithScores, 'uid:' + uid + ':bans', 0, 19),\n\t\t\t\t\treasons: async.apply(db.getSortedSetRevRangeWithScores, 'banned:' + uid + ':reasons', 0, 19)\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (data, next) {\n\t\t\t\tgetFlagMetadata(data, next);\n\t\t\t}\n\t\t], function (err, data) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tformatBanData(data);\n\t\t\tcallback(null, data);\n\t\t});\n\t};\n\n\tUser.getHistory = function (set, callback) {\n\t\tdb.getSortedSetRevRangeWithScores(set, 0, -1, function (err, data) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tcallback(null, data.map(function (set) {\n\t\t\t\tset.timestamp = set.score;\n\t\t\t\tset.timestampISO = new Date(set.score).toISOString();\n\t\t\t\tset.value = validator.escape(String(set.value.split(':')[0]));\n\t\t\t\tdelete set.score;\n\t\t\t\treturn set;\n\t\t\t}));\n\t\t});\n\t};\n\n\tfunction getFlagMetadata(data, callback) {\n\t\tvar pids = data.flags.map(function (flagObj) {\n\t\t\treturn parseInt(flagObj.value, 10);\n\t\t});\n\n\t\tposts.getPostsFields(pids, ['tid'], function (err, postData) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar tids = postData.map(function (post) {\n\t\t\t\treturn post.tid;\n\t\t\t});\n\n\t\t\ttopics.getTopicsFields(tids, ['title'], function (err, topicData) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\t\t\t\tdata.flags = data.flags.map(function (flagObj, idx) {\n\t\t\t\t\tflagObj.pid = flagObj.value;\n\t\t\t\t\tflagObj.timestamp = flagObj.score;\n\t\t\t\t\tflagObj.timestampISO = new Date(flagObj.score).toISOString();\n\t\t\t\t\tflagObj.timestampReadable = new Date(flagObj.score).toString();\n\n\t\t\t\t\tdelete flagObj.value;\n\t\t\t\t\tdelete flagObj.score;\n\n\t\t\t\t\treturn _.extend(flagObj, topicData[idx]);\n\t\t\t\t});\n\n\t\t\t\tcallback(null, data);\n\t\t\t});\n\t\t});\n\t}\n\n\tfunction formatBanData(data) {\n\t\tvar reasons = data.reasons.reduce(function (memo, cur) {\n\t\t\t\tmemo[cur.score] = cur.value;\n\t\t\t\treturn memo;\n\t\t\t}, {});\n\n\t\tdata.bans = data.bans.map(function (banObj) {\n\t\t\tbanObj.until = parseInt(banObj.value, 10);\n\t\t\tbanObj.untilReadable = new Date(banObj.until).toString();\n\t\t\tbanObj.timestamp = parseInt(banObj.score, 10);\n\t\t\tbanObj.timestampReadable = new Date(banObj.score).toString();\n\t\t\tbanObj.timestampISO = new Date(banObj.score).toISOString();\n\t\t\tbanObj.reason = validator.escape(String(reasons[banObj.score] || '')) || '[[user:info.banned-no-reason]]';\n\n\t\t\tdelete banObj.value;\n\t\t\tdelete banObj.score;\n\t\t\tdelete data.reasons;\n\n\t\t\treturn banObj;\n\t\t});\n\t}\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/user/invite.js":"\n'use strict';\n\nvar async = require('async');\nvar nconf = require('nconf');\n\nvar db = require('./../database');\nvar meta = require('../meta');\nvar emailer = require('../emailer');\nvar translator = require('../../public/src/modules/translator');\nvar utils = require('../../public/src/utils');\n\n\nmodule.exports = function (User) {\n\n\tUser.getInvites = function (uid, callback) {\n\t\tdb.getSetMembers('invitation:uid:' + uid, callback);\n\t};\n\n\tUser.getInvitesNumber = function (uid, callback) {\n\t\tdb.setCount('invitation:uid:' + uid, callback);\n\t};\n\n\tUser.getInvitingUsers = function (callback) {\n\t\tdb.getSetMembers('invitation:uids', callback);\n\t};\n\n\tUser.getAllInvites = function (callback) {\n\t\tvar uids;\n\t\tasync.waterfall([\n\t\t\tUser.getInvitingUsers,\n\t\t\tfunction (_uids, next) {\n\t\t\t\tuids = _uids;\n\t\t\t\tasync.map(uids, User.getInvites, next);\n\t\t\t},\n\t\t\tfunction (invitations, next) {\n\t\t\t\tinvitations = invitations.map(function (invites, index) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tuid: uids[index],\n\t\t\t\t\t\tinvitations: invites\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tnext(null, invitations);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tUser.sendInvitationEmail = function (uid, email, callback) {\n\t\tcallback = callback || function () {};\n\n\t\tvar token = utils.generateUUID();\n\t\tvar registerLink = nconf.get('url') + '/register?token=' + token + '&email=' + encodeURIComponent(email);\n\n\t\tvar oneDay = 86400000;\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tUser.getUidByEmail(email, next);\n\t\t\t},\n\t\t\tfunction (exists, next) {\n\t\t\t\tif (exists) {\n\t\t\t\t\treturn next(new Error('[[error:email-taken]]'));\n\t\t\t\t}\n\t\t\t\tnext();\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tasync.parallel([\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.setAdd('invitation:uid:' + uid, email, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.setAdd('invitation:uids', uid, next);\n\t\t\t\t\t}\n\t\t\t\t], function (err) {\n\t\t\t\t\tnext(err);\n\t\t\t\t});\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tdb.set('invitation:email:' + email, token, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tdb.pexpireAt('invitation:email:' + email, Date.now() + oneDay, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tUser.getUserField(uid, 'username', next);\n\t\t\t},\n\t\t\tfunction (username, next) {\n\t\t\t\tvar title = meta.config.title || meta.config.browserTitle || 'NodeBB';\n\t\t\t\ttranslator.translate('[[email:invite, ' + title + ']]', meta.config.defaultLang, function (subject) {\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\tsite_title: title,\n\t\t\t\t\t\tregisterLink: registerLink,\n\t\t\t\t\t\tsubject: subject,\n\t\t\t\t\t\tusername: username,\n\t\t\t\t\t\ttemplate: 'invitation'\n\t\t\t\t\t};\n\n\t\t\t\t\temailer.sendToEmail('invitation', email, meta.config.defaultLang, data, next);\n\t\t\t\t});\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tUser.verifyInvitation = function (query, callback) {\n\t\tif (!query.token || !query.email) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.get('invitation:email:' + query.email, next);\n\t\t\t},\n\t\t\tfunction (token, next) {\n\t\t\t\tif (!token || token !== query.token) {\n\t\t\t\t\treturn next(new Error('[[error:invalid-token]]'));\n\t\t\t\t}\n\n\t\t\t\tnext();\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tUser.deleteInvitation = function (invitedBy, email, callback) {\n\t\tcallback = callback || function () {};\n\t\tasync.waterfall([\n\t\t\tfunction getInvitedByUid(next) {\n\t\t\t\tUser.getUidByUsername(invitedBy, next);\n\t\t\t},\n\t\t\tfunction deleteRegistries(invitedByUid, next) {\n\t\t\t\tif (!invitedByUid) {\n\t\t\t\t\treturn next(new Error('[[error:invalid-username]]'));\n\t\t\t\t}\n\t\t\t\tasync.parallel([\n\t\t\t\t\tfunction deleteFromReferenceList(next) {\n\t\t\t\t\t\tdb.setRemove('invitation:uid:' + invitedByUid, email, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction deleteInviteKey(next) {\n\t\t\t\t\t\tdb.delete('invitation:email:' + email, callback);\n\t\t\t\t\t}\n\t\t\t\t], function (err) {\n\t\t\t\t\tnext(err);\n\t\t\t\t});\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tUser.deleteInvitationKey = function (email, callback) {\n\t\tcallback = callback || function () {};\n\t\tdb.delete('invitation:email:' + email, callback);\n\t};\n\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/user/jobs.js":"'use strict';\n\nvar winston = require('winston');\nvar cronJob = require('cron').CronJob;\n\nvar meta = require('../meta');\n\nvar jobs = {};\n\nmodule.exports = function (User) {\n\tUser.startJobs = function (callback) {\n\t\twinston.verbose('[user/jobs] (Re-)starting user jobs...');\n\t\tvar terminated = 0;\n\t\tvar started = 0;\n\t\tvar digestHour = parseInt(meta.config.digestHour, 10);\n\n\t\t// Fix digest hour if invalid\n\t\tif (isNaN(digestHour)) {\n\t\t\tdigestHour = 17;\n\t\t} else if (digestHour > 23 || digestHour < 0) {\n\t\t\tdigestHour = 0;\n\t\t}\n\n\t\t// Terminate any active cron jobs\n\t\tfor(var jobId in jobs) {\n\t\t\tif (jobs.hasOwnProperty(jobId)) {\n\t\t\t\twinston.verbose('[user/jobs] Terminating job (' + jobId + ')');\n\t\t\t\tjobs[jobId].stop();\n\t\t\t\tdelete jobs[jobId];\n\t\t\t\t++terminated;\n\t\t\t}\n\t\t}\n\t\twinston.verbose('[user/jobs] ' + terminated + ' jobs terminated');\n\n\t\tjobs['digest.daily'] = new cronJob('0 0 ' + digestHour + ' * * *', function () {\n\t\t\twinston.verbose('[user/jobs] Digest job (daily) started.');\n\t\t\tUser.digest.execute('day');\n\t\t}, null, true);\n\t\twinston.verbose('[user/jobs] Starting job (digest.daily)');\n\t\t++started;\n\n\t\tjobs['digest.weekly'] = new cronJob('0 0 ' + digestHour + ' * * 0', function () {\n\t\t\twinston.verbose('[user/jobs] Digest job (weekly) started.');\n\t\t\tUser.digest.execute('week');\n\t\t}, null, true);\n\t\twinston.verbose('[user/jobs] Starting job (digest.weekly)');\n\t\t++started;\n\n\t\tjobs['digest.monthly'] = new cronJob('0 0 ' + digestHour + ' 1 * *', function () {\n\t\t\twinston.verbose('[user/jobs] Digest job (monthly) started.');\n\t\t\tUser.digest.execute('month');\n\t\t}, null, true);\n\t\twinston.verbose('[user/jobs] Starting job (digest.monthly)');\n\t\t++started;\n\n\t\tjobs['reset.clean'] = new cronJob('0 0 0 * * *', User.reset.clean, null, true);\n\t\twinston.verbose('[user/jobs] Starting job (reset.clean)');\n\t\t++started;\n\n\t\twinston.verbose('[user/jobs] ' + started + ' jobs started');\n\n\t\tif (typeof callback === 'function') {\n\t\t\tcallback();\n\t\t}\n\n\t\treturn;\n\t};\n};\n\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/user/notifications.js":"\n'use strict';\n\nvar async = require('async');\nvar winston = require('winston');\nvar S = require('string');\n\nvar db = require('../database');\nvar meta = require('../meta');\nvar notifications = require('../notifications');\nvar privileges = require('../privileges');\n\n(function (UserNotifications) {\n\n\tUserNotifications.get = function (uid, callback) {\n\t\tif (!parseInt(uid, 10)) {\n\t\t\treturn callback(null , {read: [], unread: []});\n\t\t}\n\t\tgetNotifications(uid, 0, 9, function (err, notifications) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tnotifications.read = notifications.read.filter(Boolean);\n\t\t\tnotifications.unread = notifications.unread.filter(Boolean);\n\n\t\t\tvar maxNotifs = 15;\n\t\t\tif (notifications.read.length + notifications.unread.length > maxNotifs) {\n\t\t\t\tnotifications.read.length = maxNotifs - notifications.unread.length;\n\t\t\t}\n\n\t\t\tcallback(null, notifications);\n\t\t});\n\t};\n\n\tUserNotifications.getAll = function (uid, start, stop, callback) {\n\t\tgetNotifications(uid, start, stop, function (err, notifs) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tnotifs = notifs.unread.concat(notifs.read);\n\t\t\tnotifs = notifs.filter(Boolean).sort(function (a, b) {\n\t\t\t\treturn b.datetime - a.datetime;\n\t\t\t});\n\n\t\t\tcallback(null, notifs);\n\t\t});\n\t};\n\n\tfunction getNotifications(uid, start, stop, callback) {\n\t\tasync.parallel({\n\t\t\tunread: function (next) {\n\t\t\t\tgetNotificationsFromSet('uid:' + uid + ':notifications:unread', false, uid, start, stop, next);\n\t\t\t},\n\t\t\tread: function (next) {\n\t\t\t\tgetNotificationsFromSet('uid:' + uid + ':notifications:read', true, uid, start, stop, next);\n\t\t\t}\n\t\t}, callback);\n\t}\n\n\tfunction getNotificationsFromSet(set, read, uid, start, stop, callback) {\n\t\tvar setNids;\n\n\t\tasync.waterfall([\n\t\t\tasync.apply(db.getSortedSetRevRange, set, start, stop),\n\t\t\tfunction (nids, next) {\n\t\t\t\tif(!Array.isArray(nids) || !nids.length) {\n\t\t\t\t\treturn callback(null, []);\n\t\t\t\t}\n\n\t\t\t\tsetNids = nids;\n\t\t\t\tUserNotifications.getNotifications(nids, uid, next);\n\t\t\t},\n\t\t\tfunction (notifs, next) {\n\t\t\t\tvar deletedNids = [];\n\n\t\t\t\tnotifs.forEach(function (notification, index) {\n\t\t\t\t\tif (!notification) {\n\t\t\t\t\t\twinston.verbose('[notifications.get] nid ' + setNids[index] + ' not found. Removing.');\n\t\t\t\t\t\tdeletedNids.push(setNids[index]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnotification.read = read;\n\t\t\t\t\t\tnotification.readClass = !notification.read ? 'unread' : '';\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (deletedNids.length) {\n\t\t\t\t\tdb.sortedSetRemove(set, deletedNids);\n\t\t\t\t}\n\n\t\t\t\tnotifications.merge(notifs, next);\n\t\t\t}\n\t\t], callback);\n\t}\n\n\tUserNotifications.getNotifications = function (nids, uid, callback) {\n\t\tnotifications.getMultiple(nids, function (err, notifications) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tnotifications = notifications.filter(function (notification) {\n\t\t\t\treturn notification && notification.path;\n\t\t\t});\n\t\t\tcallback(null, notifications);\n\t\t});\n\t};\n\n\n\tUserNotifications.getDailyUnread = function (uid, callback) {\n\t\tvar yesterday = Date.now() - (1000 * 60 * 60 * 24);\t// Approximate, can be more or less depending on time changes, makes no difference really.\n\n\t\tdb.getSortedSetRevRangeByScore('uid:' + uid + ':notifications:unread', 0, 20, '+inf', yesterday, function (err, nids) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tif (!Array.isArray(nids) || !nids.length) {\n\t\t\t\treturn callback(null, []);\n\t\t\t}\n\n\t\t\tUserNotifications.getNotifications(nids, uid, callback);\n\t\t});\n\t};\n\n\tUserNotifications.getUnreadCount = function (uid, callback) {\n\t\tif (!parseInt(uid, 10)) {\n\t\t\treturn callback(null, 0);\n\t\t}\n\n\t\t// Collapse any notifications with identical mergeIds\n\t\tasync.waterfall([\n\t\t\tasync.apply(db.getSortedSetRevRange, 'uid:' + uid + ':notifications:unread', 0, 99),\n\t\t\tasync.apply(notifications.filterExists),\n\t\t\tfunction (nids, next) {\n\t\t\t\tvar keys = nids.map(function (nid) {\n\t\t\t\t\treturn 'notifications:' + nid;\n\t\t\t\t});\n\n\t\t\t\tdb.getObjectsFields(keys, ['mergeId'], next);\n\t\t\t}\n\t\t], function (err, mergeIds) {\n\t\t\t// A missing (null) mergeId means that notification is counted separately.\n\t\t\tmergeIds = mergeIds.map(function (set) {\n\t\t\t\treturn set.mergeId;\n\t\t\t});\n\n\t\t\tcallback(err, mergeIds.reduce(function (count, cur, idx, arr) {\n\t\t\t\tif (cur === null || idx === arr.indexOf(cur)) {\n\t\t\t\t\t++count;\n\t\t\t\t}\n\n\t\t\t\treturn count;\n\t\t\t}, 0));\n\t\t});\n\t};\n\n\tUserNotifications.getUnreadByField = function (uid, field, values, callback) {\n\t\tdb.getSortedSetRevRange('uid:' + uid + ':notifications:unread', 0, 99, function (err, nids) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tif (!Array.isArray(nids) || !nids.length) {\n\t\t\t\treturn callback(null, []);\n\t\t\t}\n\n\t\t\tvar keys = nids.map(function (nid) {\n\t\t\t\treturn 'notifications:' + nid;\n\t\t\t});\n\n\t\t\tdb.getObjectsFields(keys, ['nid', field], function (err, notifications) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\tvalues = values.map(function () { return values.toString(); });\n\t\t\t\tnids = notifications.filter(function (notification) {\n\t\t\t\t\treturn notification && notification[field] && values.indexOf(notification[field].toString()) !== -1;\n\t\t\t\t}).map(function (notification) {\n\t\t\t\t\treturn notification.nid;\n\t\t\t\t});\n\n\t\t\t\tcallback(null, nids);\n\t\t\t});\n\t\t});\n\t};\n\n\tUserNotifications.deleteAll = function (uid, callback) {\n\t\tif (!parseInt(uid, 10)) {\n\t\t\treturn callback();\n\t\t}\n\t\tasync.parallel([\n\t\t\tfunction (next) {\n\t\t\t\tdb.delete('uid:' + uid + ':notifications:unread', next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tdb.delete('uid:' + uid + ':notifications:read', next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tUserNotifications.sendTopicNotificationToFollowers = function (uid, topicData, postData) {\n\t\tvar followers;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.getSortedSetRange('followers:' + uid, 0, -1, next);\n\t\t\t},\n\t\t\tfunction (followers, next) {\n\t\t\t\tif (!Array.isArray(followers) || !followers.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tprivileges.categories.filterUids('read', topicData.cid, followers, next);\n\t\t\t},\n\t\t\tfunction (_followers, next) {\n\t\t\t\tfollowers = _followers;\n\t\t\t\tif (!followers.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar title = topicData.title;\n\t\t\t\tif (title) {\n\t\t\t\t\ttitle = S(title).decodeHTMLEntities().s;\n\t\t\t\t}\n\n\t\t\t\tnotifications.create({\n\t\t\t\t\tbodyShort: '[[notifications:user_posted_topic, ' + postData.user.username + ', ' + title + ']]',\n\t\t\t\t\tbodyLong: postData.content,\n\t\t\t\t\tpid: postData.pid,\n\t\t\t\t\tpath: '/post/' + postData.pid,\n\t\t\t\t\tnid: 'tid:' + postData.tid + ':uid:' + uid,\n\t\t\t\t\ttid: postData.tid,\n\t\t\t\t\tfrom: uid\n\t\t\t\t}, next);\n\t\t\t}\n\t\t], function (err, notification) {\n\t\t\tif (err) {\n\t\t\t\treturn winston.error(err);\n\t\t\t}\n\n\t\t\tif (notification) {\n\t\t\t\tnotifications.push(notification, followers);\n\t\t\t}\n\t\t});\n\t};\n\n\tUserNotifications.sendWelcomeNotification = function (uid, callback) {\n\t\tcallback = callback || function () {};\n\t\tif (!meta.config.welcomeNotification) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tvar path = meta.config.welcomeLink ? meta.config.welcomeLink : '#';\n\n\t\tnotifications.create({\n\t\t\tbodyShort: meta.config.welcomeNotification,\n\t\t\tpath: path,\n\t\t\tnid: 'welcome_' + uid\n\t\t}, function (err, notification) {\n\t\t\tif (err || !notification) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tnotifications.push(notification, [uid], callback);\n\t\t});\n\t};\n\n\tUserNotifications.sendNameChangeNotification = function (uid, username) {\n\t\tnotifications.create({\n\t\t\tbodyShort: '[[user:username_taken_workaround, ' + username + ']]',\n\t\t\timage: 'brand:logo',\n\t\t\tnid: 'username_taken:' + uid,\n\t\t\tdatetime: Date.now()\n\t\t}, function (err, notification) {\n\t\t\tif (!err && notification) {\n\t\t\t\tnotifications.push(notification, uid);\n\t\t\t}\n\t\t});\n\t};\n\n\tUserNotifications.pushCount = function (uid) {\n\t\tvar websockets = require('./../socket.io');\n\t\tUserNotifications.getUnreadCount(uid, function (err, count) {\n\t\t\tif (err) {\n\t\t\t\treturn winston.error(err.stack);\n\t\t\t}\n\n\t\t\twebsockets.in('uid_' + uid).emit('event:notifications.updateCount', count);\n\t\t});\n\t};\n\n}(exports));\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/user/picture.js":"'use strict';\n\nvar async = require('async');\nvar path = require('path');\nvar fs = require('fs');\nvar os = require('os');\nvar nconf = require('nconf');\nvar crypto = require('crypto');\nvar winston = require('winston');\nvar request = require('request');\nvar mime = require('mime');\n\nvar plugins = require('../plugins');\nvar file = require('../file');\nvar image = require('../image');\nvar meta = require('../meta');\nvar db = require('../database');\n\nmodule.exports = function (User) {\n\n\tUser.uploadPicture = function (uid, picture, callback) {\n\n\t\tvar uploadSize = parseInt(meta.config.maximumProfileImageSize, 10) || 256;\n\t\tvar extension = path.extname(picture.name);\n\t\tvar updateUid = uid;\n\t\tvar imageDimension = parseInt(meta.config.profileImageDimension, 10) || 128;\n\t\tvar convertToPNG = parseInt(meta.config['profile:convertProfileImageToPNG'], 10) === 1;\n\t\tvar keepAllVersions = parseInt(meta.config['profile:keepAllUserImages'], 10) === 1;\n\t\tvar uploadedImage;\n\n\t\tif (parseInt(meta.config.allowProfileImageUploads) !== 1) {\n\t\t\treturn callback(new Error('[[error:profile-image-uploads-disabled]]'));\n\t\t}\n\n\t\tif (picture.size > uploadSize * 1024) {\n\t\t\treturn callback(new Error('[[error:file-too-big, ' + uploadSize + ']]'));\n\t\t}\n\n\t\tif (!extension) {\n\t\t\treturn callback(new Error('[[error:invalid-image-extension]]'));\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tif (plugins.hasListeners('filter:uploadImage')) {\n\t\t\t\t\treturn plugins.fireHook('filter:uploadImage', {image: picture, uid: updateUid}, next);\n\t\t\t\t}\n\n\t\t\t\tvar filename = updateUid + '-profileimg' + (keepAllVersions ? '-' + Date.now() : '') + (convertToPNG ? '.png' : extension);\n\n\t\t\t\tasync.waterfall([\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tfile.isFileTypeAllowed(picture.path, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\timage.resizeImage({\n\t\t\t\t\t\t\tpath: picture.path,\n\t\t\t\t\t\t\textension: extension,\n\t\t\t\t\t\t\twidth: imageDimension,\n\t\t\t\t\t\t\theight: imageDimension\n\t\t\t\t\t\t}, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tif (!convertToPNG) {\n\t\t\t\t\t\t\treturn next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tasync.series([\n\t\t\t\t\t\t\tasync.apply(image.normalise, picture.path, extension),\n\t\t\t\t\t\t\tasync.apply(fs.rename, picture.path + '.png', picture.path)\n\t\t\t\t\t\t], function (err) {\n\t\t\t\t\t\t\tnext(err);\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tfile.saveFileToLocal(filename, 'profile', picture.path, next);\n\t\t\t\t\t},\n\t\t\t\t], next);\n\t\t\t},\n\t\t\tfunction (_image, next) {\n\t\t\t\tuploadedImage = _image;\n\t\t\t\tUser.setUserFields(updateUid, {uploadedpicture: uploadedImage.url, picture: uploadedImage.url}, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tnext(null, uploadedImage);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tUser.uploadFromUrl = function (uid, url, callback) {\n\t\tif (!plugins.hasListeners('filter:uploadImage')) {\n\t\t\treturn callback(new Error('[[error:no-plugin]]'));\n\t\t}\n\n\t\trequest.head(url, function (err, res) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tvar uploadSize = parseInt(meta.config.maximumProfileImageSize, 10) || 256;\n\t\t\tvar size = res.headers['content-length'];\n\t\t\tvar type = res.headers['content-type'];\n\t\t\tvar extension = mime.extension(type);\n\n\t\t\tif (['png', 'jpeg', 'jpg', 'gif'].indexOf(extension) === -1) {\n\t\t\t\treturn callback(new Error('[[error:invalid-image-extension]]'));\n\t\t\t}\n\n\t\t\tif (size > uploadSize * 1024) {\n\t\t\t\treturn callback(new Error('[[error:file-too-big, ' + uploadSize + ']]'));\n\t\t\t}\n\n\t\t\tvar picture = {url: url, name: ''};\n\t\t\tplugins.fireHook('filter:uploadImage', {image: picture, uid: uid}, function (err, image) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\t\t\t\tUser.setUserFields(uid, {uploadedpicture: image.url, picture: image.url});\n\t\t\t\tcallback(null, image);\n\t\t\t});\n\t\t});\n\t};\n\n\tUser.updateCoverPosition = function (uid, position, callback) {\n\t\tUser.setUserField(uid, 'cover:position', position, callback);\n\t};\n\n\tUser.updateCoverPicture = function (data, callback) {\n\t\tvar keepAllVersions = parseInt(meta.config['profile:keepAllUserImages'], 10) === 1;\n\t\tvar url, md5sum;\n\n\t\tif (!data.imageData && data.position) {\n\t\t\treturn User.updateCoverPosition(data.uid, data.position, callback);\n\t\t}\n\n\t\tif (!data.imageData && !data.file) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tvar size = data.file ? data.file.size : data.imageData.length;\n\t\t\t\tmeta.config.maximumCoverImageSize = meta.config.maximumCoverImageSize || 2048;\n\t\t\t\tif (size > parseInt(meta.config.maximumCoverImageSize, 10) * 1024) {\n\t\t\t\t\treturn next(new Error('[[error:file-too-big, ' + meta.config.maximumCoverImageSize + ']]'));\n\t\t\t\t}\n\n\t\t\t\tif (data.file) {\n\t\t\t\t\treturn next();\n\t\t\t\t}\n\n\t\t\t\tmd5sum = crypto.createHash('md5');\n\t\t\t\tmd5sum.update(data.imageData);\n\t\t\t\tmd5sum = md5sum.digest('hex');\n\n\t\t\t\tdata.file = {\n\t\t\t\t\tpath: path.join(os.tmpdir(), md5sum)\n\t\t\t\t};\n\n\t\t\t\tvar buffer = new Buffer(data.imageData.slice(data.imageData.indexOf('base64') + 7), 'base64');\n\n\t\t\t\tfs.writeFile(data.file.path, buffer, {\n\t\t\t\t\tencoding: 'base64'\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tvar image = {\n\t\t\t\t\tname: 'profileCover',\n\t\t\t\t\tpath: data.file.path,\n\t\t\t\t\tuid: data.uid\n\t\t\t\t};\n\n\t\t\t\tif (plugins.hasListeners('filter:uploadImage')) {\n\t\t\t\t\treturn plugins.fireHook('filter:uploadImage', {image: image, uid: data.uid}, next);\n\t\t\t\t}\n\n\t\t\t\tvar filename = data.uid + '-profilecover' + (keepAllVersions ? '-' + Date.now() : '');\n\t\t\t\tasync.waterfall([\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tfile.isFileTypeAllowed(data.file.path, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tfile.saveFileToLocal(filename, 'profile', image.path, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (upload, next) {\n\t\t\t\t\t\tnext(null, {\n\t\t\t\t\t\t\turl: nconf.get('relative_path') + upload.url,\n\t\t\t\t\t\t\tname: image.name\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t], next);\n\t\t\t},\n\t\t\tfunction (uploadData, next) {\n\t\t\t\turl = uploadData.url;\n\t\t\t\tUser.setUserField(data.uid, 'cover:url', uploadData.url, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tfs.unlink(data.file.path, function (err) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\twinston.error(err);\n\t\t\t\t\t}\n\t\t\t\t\tnext();\n\t\t\t\t});\n\t\t\t}\n\t\t], function (err) {\n\t\t\tif (err) {\n\t\t\t\treturn fs.unlink(data.file.path, function (unlinkErr) {\n\t\t\t\t\tif (unlinkErr) {\n\t\t\t\t\t\twinston.error(unlinkErr);\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback(err);\t// send back the original error\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (data.position) {\n\t\t\t\tUser.updateCoverPosition(data.uid, data.position, function (err) {\n\t\t\t\t\tcallback(err, {url: url});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcallback(err, {url: url});\n\t\t\t}\n\t\t});\n\t};\n\n\tUser.removeCoverPicture = function (data, callback) {\n\t\tdb.deleteObjectField('user:' + data.uid, 'cover:url', callback);\n\t};\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/user/posts.js":"'use strict';\n\nvar async = require('async');\nvar db = require('../database');\nvar meta = require('../meta');\nvar privileges = require('../privileges');\n\nmodule.exports = function (User) {\n\n\tUser.isReadyToPost = function (uid, cid, callback) {\n\t\tif (parseInt(uid, 10) === 0) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tasync.parallel({\n\t\t\tuserData: function (next) {\n\t\t\t\tUser.getUserFields(uid, ['banned', 'lastposttime', 'joindate', 'email', 'email:confirmed', 'reputation'], next);\n\t\t\t},\n\t\t\texists: function (next) {\n\t\t\t\tdb.exists('user:' + uid, next);\n\t\t\t},\n\t\t\tisAdminOrMod: function (next) {\n\t\t\t\tprivileges.categories.isAdminOrMod(cid, uid, next);\n\t\t\t}\n\t\t}, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tif (!results.exists) {\n\t\t\t\treturn callback(new Error('[[error:no-user]]'));\n\t\t\t}\n\n\t\t\tif (results.isAdminOrMod) {\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tvar userData = results.userData;\n\n\t\t\tif (parseInt(userData.banned, 10) === 1) {\n\t\t\t\treturn callback(new Error('[[error:user-banned]]'));\n\t\t\t}\n\n\t\t\tif (parseInt(meta.config.requireEmailConfirmation, 10) === 1 && parseInt(userData['email:confirmed'], 10) !== 1) {\n\t\t\t\treturn callback(new Error('[[error:email-not-confirmed]]'));\n\t\t\t}\n\n\t\t\tvar now = Date.now();\n\t\t\tif (now - parseInt(userData.joindate, 10) < parseInt(meta.config.initialPostDelay, 10) * 1000) {\n\t\t\t\treturn callback(new Error('[[error:user-too-new, ' + meta.config.initialPostDelay + ']]'));\n\t\t\t}\n\n\t\t\tvar lastposttime = userData.lastposttime || 0;\n\n\t\t\tif (parseInt(meta.config.newbiePostDelay, 10) > 0 && parseInt(meta.config.newbiePostDelayThreshold, 10) > parseInt(userData.reputation, 10) && now - parseInt(lastposttime, 10) < parseInt(meta.config.newbiePostDelay, 10) * 1000) {\n\t\t\t\treturn callback(new Error('[[error:too-many-posts-newbie, ' + meta.config.newbiePostDelay + ', ' + meta.config.newbiePostDelayThreshold + ']]'));\n\t\t\t} else if (now - parseInt(lastposttime, 10) < parseInt(meta.config.postDelay, 10) * 1000) {\n\t\t\t\treturn callback(new Error('[[error:too-many-posts, ' + meta.config.postDelay + ']]'));\n\t\t\t}\n\n\t\t\tcallback();\n\t\t});\n\t};\n\n\tUser.onNewPostMade = function (postData, callback) {\n\t\tasync.series([\n\t\t\tfunction (next) {\n\t\t\t\tUser.addPostIdToUser(postData.uid, postData.pid, postData.timestamp, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tUser.incrementUserPostCountBy(postData.uid, 1, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tUser.setUserField(postData.uid, 'lastposttime', postData.timestamp, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tUser.updateLastOnlineTime(postData.uid, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tUser.addPostIdToUser = function (uid, pid, timestamp, callback) {\n\t\tdb.sortedSetAdd('uid:' + uid + ':posts', timestamp, pid, callback);\n\t};\n\n\tUser.incrementUserPostCountBy = function (uid, value, callback) {\n\t\tcallback = callback || function () {};\n\t\tUser.incrementUserFieldBy(uid, 'postcount', value, function (err, newpostcount) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tif (!parseInt(uid, 10)) {\n\t\t\t\treturn callback();\n\t\t\t}\n\t\t\tdb.sortedSetAdd('users:postcount', newpostcount, uid, callback);\n\t\t});\n\t};\n\n\tUser.getPostIds = function (uid, start, stop, callback) {\n\t\tdb.getSortedSetRevRange('uid:' + uid + ':posts', start, stop, function (err, pids) {\n\t\t\tcallback(err, Array.isArray(pids) ? pids : []);\n\t\t});\n\t};\n\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/user/profile.js":"\n'use strict';\n\nvar async = require('async');\nvar S = require('string');\n\nvar utils = require('../../public/src/utils');\nvar meta = require('../meta');\nvar db = require('../database');\nvar groups = require('../groups');\nvar plugins = require('../plugins');\n\nmodule.exports = function (User) {\n\n\tUser.updateProfile = function (uid, data, callback) {\n\t\tvar fields = ['username', 'email', 'fullname', 'website', 'location',\n\t\t\t'groupTitle', 'birthday', 'signature', 'aboutme', 'picture', 'uploadedpicture'];\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tplugins.fireHook('filter:user.updateProfile', {uid: uid, data: data, fields: fields}, next);\n\t\t\t},\n\t\t\tfunction (data, next) {\n\t\t\t\tfields = data.fields;\n\t\t\t\tdata = data.data;\n\n\t\t\t\tasync.series([\n\t\t\t\t\tasync.apply(isAboutMeValid, data),\n\t\t\t\t\tasync.apply(isSignatureValid, data),\n\t\t\t\t\tasync.apply(isEmailAvailable, data, uid),\n\t\t\t\t\tasync.apply(isUsernameAvailable, data, uid),\n\t\t\t\t\tasync.apply(isGroupTitleValid, data)\n\t\t\t\t], function (err) {\n\t\t\t\t\tnext(err);\n\t\t\t\t});\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tasync.each(fields, function (field, next) {\n\t\t\t\t\tif (!(data[field] !== undefined && typeof data[field] === 'string')) {\n\t\t\t\t\t\treturn next();\n\t\t\t\t\t}\n\n\t\t\t\t\tdata[field] = data[field].trim();\n\n\t\t\t\t\tif (field === 'email') {\n\t\t\t\t\t\treturn updateEmail(uid, data.email, next);\n\t\t\t\t\t} else if (field === 'username') {\n\t\t\t\t\t\treturn updateUsername(uid, data.username, next);\n\t\t\t\t\t} else if (field === 'fullname') {\n\t\t\t\t\t\treturn updateFullname(uid, data.fullname, next);\n\t\t\t\t\t} else if (field === 'signature') {\n\t\t\t\t\t\tdata[field] = S(data[field]).stripTags().s;\n\t\t\t\t\t}\n\n\t\t\t\t\tUser.setUserField(uid, field, data[field], next);\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tplugins.fireHook('action:user.updateProfile', {data: data, uid: uid});\n\t\t\t\tUser.getUserFields(uid, ['email', 'username', 'userslug', 'picture', 'icon:text', 'icon:bgColor'], next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tfunction isAboutMeValid(data, callback) {\n\t\tif (data.aboutme !== undefined && data.aboutme.length > meta.config.maximumAboutMeLength) {\n\t\t\tcallback(new Error('[[error:about-me-too-long, ' + meta.config.maximumAboutMeLength + ']]'));\n\t\t} else {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\tfunction isSignatureValid(data, callback) {\n\t\tif (data.signature !== undefined && data.signature.length > meta.config.maximumSignatureLength) {\n\t\t\tcallback(new Error('[[error:signature-too-long, ' + meta.config.maximumSignatureLength + ']]'));\n\t\t} else {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\tfunction isEmailAvailable(data, uid, callback) {\n\t\tif (!data.email) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tif (!utils.isEmailValid(data.email)) {\n\t\t\treturn callback(new Error('[[error:invalid-email]]'));\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tUser.getUserField(uid, 'email', next);\n\t\t\t},\n\t\t\tfunction (email, next) {\n\t\t\t\tif (email === data.email) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\tUser.email.available(data.email, next);\n\t\t\t},\n\t\t\tfunction (available, next) {\n\t\t\t\tnext(!available ? new Error('[[error:email-taken]]') : null);\n\t\t\t}\n\t\t], callback);\n\t}\n\n\tfunction isUsernameAvailable(data, uid, callback) {\n\t\tif (!data.username) {\n\t\t\treturn callback();\n\t\t}\n\t\tdata.username = data.username.trim();\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tUser.getUserFields(uid, ['username', 'userslug'], next);\n\t\t\t},\n\t\t\tfunction (userData, next) {\n\t\t\t\tvar userslug = utils.slugify(data.username);\n\n\t\t\t\tif (data.username.length < meta.config.minimumUsernameLength) {\n\t\t\t\t\treturn next(new Error('[[error:username-too-short]]'));\n\t\t\t\t}\n\n\t\t\t\tif (data.username.length > meta.config.maximumUsernameLength) {\n\t\t\t\t\treturn next(new Error('[[error:username-too-long]]'));\n\t\t\t\t}\n\n\t\t\t\tif (!utils.isUserNameValid(data.username) || !userslug) {\n\t\t\t\t\treturn next(new Error('[[error:invalid-username]]'));\n\t\t\t\t}\n\n\t\t\t\tif (userslug === userData.userslug) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\tUser.existsBySlug(userslug, next);\n\t\t\t},\n\t\t\tfunction (exists, next) {\n\t\t\t\tnext(exists ? new Error('[[error:username-taken]]') : null);\n\t\t\t}\n\t\t], callback);\n\t}\n\n\tfunction isGroupTitleValid(data, callback) {\n\t\tif (data.groupTitle === 'registered-users' || groups.isPrivilegeGroup(data.groupTitle)) {\n\t\t\tcallback(new Error('[[error:invalid-group-title]]'));\n\t\t} else {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\tfunction updateEmail(uid, newEmail, callback) {\n\t\tUser.getUserFields(uid, ['email', 'picture', 'uploadedpicture'], function (err, userData) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tuserData.email = userData.email || '';\n\n\t\t\tif (userData.email === newEmail) {\n\t\t\t\treturn callback();\n\t\t\t}\n\t\t\tasync.series([\n\t\t\t\tasync.apply(db.sortedSetRemove, 'email:uid', userData.email.toLowerCase()),\n\t\t\t\tasync.apply(db.sortedSetRemove, 'email:sorted', userData.email.toLowerCase() + ':' + uid)\n\t\t\t], function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\tasync.parallel([\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.sortedSetAdd('email:uid', uid, newEmail.toLowerCase(), next);\n\t\t\t\t\t},\n\t\t\t\t\tasync.apply(db.sortedSetAdd, 'user:' + uid + ':emails', Date.now(), newEmail + ':' + Date.now()),\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.sortedSetAdd('email:sorted',  0, newEmail.toLowerCase() + ':' + uid, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tUser.setUserField(uid, 'email', newEmail, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tif (parseInt(meta.config.requireEmailConfirmation, 10) === 1 && newEmail) {\n\t\t\t\t\t\t\tUser.email.sendValidationEmail(uid, newEmail);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tUser.setUserField(uid, 'email:confirmed', 0, next);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\tdb.sortedSetAdd('users:notvalidated', Date.now(), uid, next);\n\t\t\t\t\t}\n\t\t\t\t], callback);\n\t\t\t});\n\t\t});\n\t}\n\n\tfunction updateUsername(uid, newUsername, callback) {\n\t\tif (!newUsername) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tUser.getUserFields(uid, ['username', 'userslug'], function (err, userData) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tasync.parallel([\n\t\t\t\tfunction (next) {\n\t\t\t\t\tupdateUidMapping('username', uid, newUsername, userData.username, next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tvar newUserslug = utils.slugify(newUsername);\n\t\t\t\t\tupdateUidMapping('userslug', uid, newUserslug, userData.userslug, next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\tasync.series([\n\t\t\t\t\t\tasync.apply(db.sortedSetRemove, 'username:sorted', userData.username.toLowerCase() + ':' + uid),\n\t\t\t\t\t\tasync.apply(db.sortedSetAdd, 'username:sorted', 0, newUsername.toLowerCase() + ':' + uid),\n\t\t\t\t\t\tasync.apply(db.sortedSetAdd, 'user:' + uid + ':usernames', Date.now(), newUsername + ':' + Date.now())\n\t\t\t\t\t], next);\n\t\t\t\t},\n\t\t\t], callback);\n\t\t});\n\t}\n\n\tfunction updateUidMapping(field, uid, value, oldValue, callback) {\n\t\tif (value === oldValue) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tasync.series([\n\t\t\tfunction (next) {\n\t\t\t\tdb.sortedSetRemove(field + ':uid', oldValue, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tUser.setUserField(uid, field, value, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tif (value) {\n\t\t\t\t\tdb.sortedSetAdd(field + ':uid', uid, value, next);\n\t\t\t\t} else {\n\t\t\t\t\tnext();\n\t\t\t\t}\n\t\t\t}\n\t\t], callback);\n\t}\n\n\tfunction updateFullname(uid, newFullname, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tUser.getUserField(uid, 'fullname', next);\n\t\t\t},\n\t\t\tfunction (fullname, next) {\n\t\t\t\tupdateUidMapping('fullname', uid, newFullname, fullname, next);\n\t\t\t}\n\t\t], callback);\n\t}\n\n\tUser.changePassword = function (uid, data, callback) {\n\t\tif (!uid || !data || !data.uid) {\n\t\t\treturn callback(new Error('[[error:invalid-uid]]'));\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tUser.isPasswordValid(data.newPassword, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tif (parseInt(uid, 10) !== parseInt(data.uid, 10)) {\n\t\t\t\t\tUser.isAdministrator(uid, next);\n\t\t\t\t} else {\n\t\t\t\t\tUser.isPasswordCorrect(uid, data.currentPassword, next);\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction (isAdminOrPasswordMatch, next) {\n\t\t\t\tif (!isAdminOrPasswordMatch) {\n\t\t\t\t\treturn next(new Error('[[error:change_password_error_wrong_current]]'));\n\t\t\t\t}\n\n\t\t\t\tUser.hashPassword(data.newPassword, next);\n\t\t\t},\n\t\t\tfunction (hashedPassword, next) {\n\t\t\t\tasync.parallel([\n\t\t\t\t\tasync.apply(User.setUserField, data.uid, 'password', hashedPassword),\n\t\t\t\t\tasync.apply(User.reset.updateExpiry, data.uid)\n\t\t\t\t], function (err) {\n\t\t\t\t\tnext(err);\n\t\t\t\t});\n\t\t\t}\n\t\t], callback);\n\t};\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/user/reset.js":"'use strict';\n\nvar async = require('async'),\n\tnconf = require('nconf'),\n\twinston = require('winston'),\n\n\tuser = require('../user'),\n\tutils = require('../../public/src/utils'),\n\ttranslator = require('../../public/src/modules/translator'),\n\n\tdb = require('../database'),\n\tmeta = require('../meta'),\n\temailer = require('../emailer');\n\n(function (UserReset) {\n\tvar twoHours = 7200000;\n\n\tUserReset.validate = function (code, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.getObjectField('reset:uid', code, next);\n\t\t\t},\n\t\t\tfunction (uid, next) {\n\t\t\t\tif (!uid) {\n\t\t\t\t\treturn callback(null, false);\n\t\t\t\t}\n\t\t\t\tdb.sortedSetScore('reset:issueDate', code, next);\n\t\t\t},\n\t\t\tfunction (issueDate, next) {\n\t\t\t\tnext(null, parseInt(issueDate, 10) > Date.now() - twoHours);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tUserReset.generate = function (uid, callback) {\n\t\tvar code = utils.generateUUID();\n\t\tasync.parallel([\n\t\t\tasync.apply(db.setObjectField, 'reset:uid', code, uid),\n\t\t\tasync.apply(db.sortedSetAdd, 'reset:issueDate', Date.now(), code)\n\t\t], function (err) {\n\t\t\tcallback(err, code);\n\t\t});\n\t};\n\n\tfunction canGenerate(uid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.sortedSetScore('reset:issueDate:uid', uid, next);\n\t\t\t},\n\t\t\tfunction (score, next) {\n\t\t\t\tif (score > Date.now() - 1000 * 60) {\n\t\t\t\t\treturn next(new Error('[[error:cant-reset-password-more-than-once-a-minute]]'));\n\t\t\t\t}\n\t\t\t\tnext();\n\t\t\t}\n\t\t], callback);\n\t}\n\n\tUserReset.send = function (email, callback) {\n\t\tvar uid;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tuser.getUidByEmail(email, next);\n\t\t\t},\n\t\t\tfunction (_uid, next) {\n\t\t\t\tif (!_uid) {\n\t\t\t\t\treturn next(new Error('[[error:invalid-email]]'));\n\t\t\t\t}\n\n\t\t\t\tuid = _uid;\n\t\t\t\tcanGenerate(uid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tdb.sortedSetAdd('reset:issueDate:uid', Date.now(), uid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tUserReset.generate(uid, next);\n\t\t\t},\n\t\t\tfunction (code, next) {\n\t\t\t\ttranslator.translate('[[email:password-reset-requested, ' + (meta.config.title || 'NodeBB') + ']]', meta.config.defaultLang, function (subject) {\n\t\t\t\t\tnext(null, subject, code);\n\t\t\t\t});\n\t\t\t},\n\t\t\tfunction (subject, code, next) {\n\t\t\t\tvar reset_link = nconf.get('url') + '/reset/' + code;\n\t\t\t\temailer.send('reset', uid, {\n\t\t\t\t\tsite_title: (meta.config.title || 'NodeBB'),\n\t\t\t\t\treset_link: reset_link,\n\t\t\t\t\tsubject: subject,\n\t\t\t\t\ttemplate: 'reset',\n\t\t\t\t\tuid: uid\n\t\t\t\t}, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tUserReset.commit = function (code, password, callback) {\n\t\tvar uid;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tuser.isPasswordValid(password, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tUserReset.validate(code, next);\n\t\t\t},\n\t\t\tfunction (validated, next) {\n\t\t\t\tif (!validated) {\n\t\t\t\t\treturn next(new Error('[[error:reset-code-not-valid]]'));\n\t\t\t\t}\n\t\t\t\tdb.getObjectField('reset:uid', code, next);\n\t\t\t},\n\t\t\tfunction (_uid, next) {\n\t\t\t\tuid = _uid;\n\t\t\t\tif (!uid) {\n\t\t\t\t\treturn next(new Error('[[error:reset-code-not-valid]]'));\n\t\t\t\t}\n\n\t\t\t\tuser.hashPassword(password, next);\n\t\t\t},\n\t\t\tfunction (hash, next) {\n\t\t\t\tasync.parallel([\n\t\t\t\t\tasync.apply(user.setUserField, uid, 'password', hash),\n\t\t\t\t\tasync.apply(db.deleteObjectField, 'reset:uid', code),\n\t\t\t\t\tasync.apply(db.sortedSetRemove, 'reset:issueDate', code),\n\t\t\t\t\tasync.apply(db.sortedSetRemove, 'reset:issueDate:uid', uid),\n\t\t\t\t\tasync.apply(user.reset.updateExpiry, uid),\n\t\t\t\t\tasync.apply(user.auth.resetLockout, uid)\n\t\t\t\t], next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tUserReset.updateExpiry = function (uid, callback) {\n\t\tvar oneDay = 1000 * 60 * 60 * 24;\n\t\tvar expireDays = parseInt(meta.config.passwordExpiryDays || 0, 10);\n\t\tvar expiry = Date.now() + (oneDay * expireDays);\n\n\t\tcallback = callback || function () {};\n\t\tuser.setUserField(uid, 'passwordExpiry', expireDays > 0 ? expiry : 0, callback);\n\t};\n\n\tUserReset.clean = function (callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\ttokens: function (next) {\n\t\t\t\t\t\tdb.getSortedSetRangeByScore('reset:issueDate', 0, -1, '-inf', Date.now() - twoHours, next);\n\t\t\t\t\t},\n\t\t\t\t\tuids: function (next) {\n\t\t\t\t\t\tdb.getSortedSetRangeByScore('reset:issueDate:uid', 0, -1, '-inf', Date.now() - twoHours, next);\n\t\t\t\t\t}\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tif (!results.tokens.length && !results.uids.length) {\n\t\t\t\t\treturn next();\n\t\t\t\t}\n\n\t\t\t\twinston.verbose('[UserReset.clean] Removing ' + results.tokens.length + ' reset tokens from database');\n\t\t\t\tasync.parallel([\n\t\t\t\t\tasync.apply(db.deleteObjectFields, 'reset:uid', results.tokens),\n\t\t\t\t\tasync.apply(db.sortedSetRemove, 'reset:issueDate', results.tokens),\n\t\t\t\t\tasync.apply(db.sortedSetRemove, 'reset:issueDate:uid', results.uids)\n\t\t\t\t], next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n}(exports));\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/user/search.js":"\n'use strict';\n\nvar async = require('async');\nvar meta = require('../meta');\nvar plugins = require('../plugins');\nvar db = require('../database');\n\nmodule.exports = function (User) {\n\n\tUser.search = function (data, callback) {\n\t\tvar query = data.query || '';\n\t\tvar searchBy = data.searchBy || 'username';\n\t\tvar page = data.page || 1;\n\t\tvar uid = data.uid || 0;\n\t\tvar paginate = data.hasOwnProperty('paginate') ? data.paginate : true;\n\n\t\tif (searchBy === 'ip') {\n\t\t\treturn searchByIP(query, uid, callback);\n\t\t}\n\n\t\tvar startTime = process.hrtime();\n\n\t\tvar searchResult = {};\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tif (data.findUids) {\n\t\t\t\t\tdata.findUids(query, searchBy, next);\n\t\t\t\t} else {\n\t\t\t\t\tfindUids(query, searchBy, next);\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction (uids, next) {\n\t\t\t\tfilterAndSortUids(uids, data, next);\n\t\t\t},\n\t\t\tfunction (uids, next) {\n\t\t\t\tplugins.fireHook('filter:users.search', {uids: uids, uid: uid}, next);\n\t\t\t},\n\t\t\tfunction (data, next) {\n\t\t\t\tvar uids = data.uids;\n\t\t\t\tsearchResult.matchCount = uids.length;\n\n\t\t\t\tif (paginate) {\n\t\t\t\t\tvar resultsPerPage = parseInt(meta.config.userSearchResultsPerPage, 10) || 20;\n\t\t\t\t\tvar start = Math.max(0, page - 1) * resultsPerPage;\n\t\t\t\t\tvar stop = start + resultsPerPage;\n\t\t\t\t\tsearchResult.pageCount = Math.ceil(uids.length / resultsPerPage);\n\t\t\t\t\tuids = uids.slice(start, stop);\n\t\t\t\t}\n\n\t\t\t\tUser.getUsers(uids, uid, next);\n\t\t\t},\n\t\t\tfunction (userData, next) {\n\t\t\t\tsearchResult.timing = (process.elapsedTimeSince(startTime) / 1000).toFixed(2);\n\t\t\t\tsearchResult.users = userData;\n\t\t\t\tnext(null, searchResult);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tfunction findUids(query, searchBy, callback) {\n\t\tif (!query) {\n\t\t\treturn callback(null, []);\n\t\t}\n\t\tquery = query.toLowerCase();\n\t\tvar min = query;\n\t\tvar max = query.substr(0, query.length - 1) + String.fromCharCode(query.charCodeAt(query.length - 1) + 1);\n\n\t\tvar resultsPerPage = parseInt(meta.config.userSearchResultsPerPage, 10) || 20;\n\t\tvar hardCap = resultsPerPage * 10;\n\n\t\tdb.getSortedSetRangeByLex(searchBy + ':sorted', min, max, 0, hardCap, function (err, data) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar uids = data.map(function (data) {\n\t\t\t\treturn data.split(':')[1];\n\t\t\t});\n\t\t\tcallback(null, uids);\n\t\t});\n\t}\n\n\tfunction filterAndSortUids(uids, data, callback) {\n\t\tvar sortBy = data.sortBy || 'joindate';\n\n\t\tvar fields = ['uid', sortBy];\n\t\tif (data.onlineOnly) {\n\t\t\tfields = fields.concat(['status', 'lastonline']);\n\t\t}\n\t\tif (data.bannedOnly) {\n\t\t\tfields.push('banned');\n\t\t}\n\t\tif (data.flaggedOnly) {\n\t\t\tfields.push('flags');\n\t\t}\n\n\t\tUser.getUsersFields(uids, fields, function (err, userData) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tif (data.onlineOnly) {\n\t\t\t\tuserData = userData.filter(function (user) {\n\t\t\t\t\treturn user && user.status !== 'offline' && (Date.now() - parseInt(user.lastonline, 10) < 300000);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (data.bannedOnly) {\n\t\t\t\tuserData = userData.filter(function (user) {\n\t\t\t\t\treturn user && user.banned;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (data.flaggedOnly) {\n\t\t\t\tuserData = userData.filter(function (user) {\n\t\t\t\t\treturn user && parseInt(user.flags, 10) > 0;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tsortUsers(userData, sortBy);\n\n\t\t\tuids = userData.map(function (user) {\n\t\t\t\treturn user && user.uid;\n\t\t\t});\n\n\t\t\tcallback(null, uids);\n\t\t});\n\t}\n\n\tfunction sortUsers(userData, sortBy) {\n\t\tif (sortBy === 'joindate' || sortBy === 'postcount' || sortBy === 'reputation') {\n\t\t\tuserData.sort(function (u1, u2) {\n\t\t\t\treturn u2[sortBy] - u1[sortBy];\n\t\t\t});\n\t\t} else {\n\t\t\tuserData.sort(function (u1, u2) {\n\t\t\t\tif(u1[sortBy] < u2[sortBy]) {\n\t\t\t\t\treturn -1;\n\t\t\t\t} else if(u1[sortBy] > u2[sortBy]) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction searchByIP(ip, uid, callback) {\n\t\tvar start = process.hrtime();\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.getSortedSetRevRange('ip:' + ip + ':uid', 0, -1, next);\n\t\t\t},\n\t\t\tfunction (uids, next) {\n\t\t\t\tUser.getUsers(uids, uid, next);\n\t\t\t},\n\t\t\tfunction (users, next) {\n\t\t\t\tvar diff = process.hrtime(start);\n\t\t\t\tvar timing = (diff[0] * 1e3 + diff[1] / 1e6).toFixed(1);\n\t\t\t\tnext(null, {timing: timing, users: users});\n\t\t\t}\n\t\t], callback);\n\t}\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/user/settings.js":"\n'use strict';\n\nvar async = require('async');\nvar meta = require('../meta');\nvar db = require('../database');\nvar plugins = require('../plugins');\n\nmodule.exports = function (User) {\n\n\tUser.getSettings = function (uid, callback) {\n\t\tif (!parseInt(uid, 10)) {\n\t\t\treturn onSettingsLoaded(0, {}, callback);\n\t\t}\n\n\t\tdb.getObject('user:' + uid + ':settings', function (err, settings) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tonSettingsLoaded(uid, settings ? settings : {}, callback);\n\t\t});\n\t};\n\n\tUser.getMultipleUserSettings = function (uids, callback) {\n\t\tif (!Array.isArray(uids) || !uids.length) {\n\t\t\treturn callback(null, []);\n\t\t}\n\n\t\tvar keys = uids.map(function (uid) {\n\t\t\treturn 'user:' + uid + ':settings';\n\t\t});\n\n\t\tdb.getObjects(keys, function (err, settings) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < settings.length; ++i) {\n\t\t\t\tsettings[i] = settings[i] || {};\n\t\t\t\tsettings[i].uid = uids[i];\n\t\t\t}\n\n\t\t\tasync.map(settings, function (setting, next) {\n\t\t\t\tonSettingsLoaded(setting.uid, setting, next);\n\t\t\t}, callback);\n\t\t});\n\t};\n\n\tfunction onSettingsLoaded(uid, settings, callback) {\n\t\tplugins.fireHook('filter:user.getSettings', {uid: uid, settings: settings}, function (err, data) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tsettings = data.settings;\n\n\t\t\tvar defaultTopicsPerPage = parseInt(meta.config.topicsPerPage, 10) || 20;\n\t\t\tvar defaultPostsPerPage = parseInt(meta.config.postsPerPage, 10) || 20;\n\n\t\t\tsettings.showemail = parseInt(getSetting(settings, 'showemail', 0), 10) === 1;\n\t\t\tsettings.showfullname = parseInt(getSetting(settings, 'showfullname', 0), 10) === 1;\n\t\t\tsettings.openOutgoingLinksInNewTab = parseInt(getSetting(settings, 'openOutgoingLinksInNewTab', 0), 10) === 1;\n\t\t\tsettings.dailyDigestFreq = getSetting(settings, 'dailyDigestFreq', 'off');\n\t\t\tsettings.usePagination = parseInt(getSetting(settings, 'usePagination', 0), 10) === 1;\n\t\t\tsettings.topicsPerPage = Math.min(settings.topicsPerPage ? parseInt(settings.topicsPerPage, 10) : defaultTopicsPerPage, defaultTopicsPerPage);\n\t\t\tsettings.postsPerPage = Math.min(settings.postsPerPage ? parseInt(settings.postsPerPage, 10) : defaultPostsPerPage, defaultPostsPerPage);\n\t\t\tsettings.userLang = settings.userLang || meta.config.defaultLang || 'en-GB';\n\t\t\tsettings.topicPostSort = getSetting(settings, 'topicPostSort', 'oldest_to_newest');\n\t\t\tsettings.categoryTopicSort = getSetting(settings, 'categoryTopicSort', 'newest_to_oldest');\n\t\t\tsettings.followTopicsOnCreate = parseInt(getSetting(settings, 'followTopicsOnCreate', 1), 10) === 1;\n\t\t\tsettings.followTopicsOnReply = parseInt(getSetting(settings, 'followTopicsOnReply', 0), 10) === 1;\n\t\t\tsettings.sendChatNotifications = parseInt(getSetting(settings, 'sendChatNotifications', 0), 10) === 1;\n\t\t\tsettings.sendPostNotifications = parseInt(getSetting(settings, 'sendPostNotifications', 0), 10) === 1;\n\t\t\tsettings.restrictChat = parseInt(getSetting(settings, 'restrictChat', 0), 10) === 1;\n\t\t\tsettings.topicSearchEnabled = parseInt(getSetting(settings, 'topicSearchEnabled', 0), 10) === 1;\n\t\t\tsettings.delayImageLoading = parseInt(getSetting(settings, 'delayImageLoading', 1), 10) === 1;\n\t\t\tsettings.bootswatchSkin = settings.bootswatchSkin || 'default';\n\t\t\tsettings.scrollToMyPost = parseInt(getSetting(settings, 'scrollToMyPost', 1), 10) === 1;\n\n\t\t\tcallback(null, settings);\n\t\t});\n\t}\n\n\tfunction getSetting(settings, key, defaultValue) {\n\t\tif (settings[key] || settings[key] === 0) {\n\t\t\treturn settings[key];\n\t\t} else if (meta.config[key] || meta.config[key] === 0) {\n\t\t\treturn meta.config[key];\n\t\t}\n\t\treturn defaultValue;\n\t}\n\n\tUser.saveSettings = function (uid, data, callback) {\n\t\tif (!data.postsPerPage || parseInt(data.postsPerPage, 10) <= 1 || parseInt(data.postsPerPage, 10) > meta.config.postsPerPage) {\n\t\t\treturn callback(new Error('[[error:invalid-pagination-value, 2, ' + meta.config.postsPerPage + ']]'));\n\t\t}\n\n\t\tif (!data.topicsPerPage || parseInt(data.topicsPerPage, 10) <= 1 || parseInt(data.topicsPerPage, 10) > meta.config.topicsPerPage) {\n\t\t\treturn callback(new Error('[[error:invalid-pagination-value, 2, ' + meta.config.topicsPerPage + ']]'));\n\t\t}\n\n\t\tdata.userLang = data.userLang || meta.config.defaultLang;\n\n\t\tplugins.fireHook('action:user.saveSettings', {uid: uid, settings: data});\n\n\t\tvar settings = {\n\t\t\tshowemail: data.showemail,\n\t\t\tshowfullname: data.showfullname,\n\t\t\topenOutgoingLinksInNewTab: data.openOutgoingLinksInNewTab,\n\t\t\tdailyDigestFreq: data.dailyDigestFreq || 'off',\n\t\t\tusePagination: data.usePagination,\n\t\t\ttopicsPerPage: Math.min(data.topicsPerPage, parseInt(meta.config.topicsPerPage, 10) || 20),\n\t\t\tpostsPerPage: Math.min(data.postsPerPage, parseInt(meta.config.postsPerPage, 10) || 20),\n\t\t\tuserLang: data.userLang || meta.config.defaultLang,\n\t\t\tfollowTopicsOnCreate: data.followTopicsOnCreate,\n\t\t\tfollowTopicsOnReply: data.followTopicsOnReply,\n\t\t\tsendChatNotifications: data.sendChatNotifications,\n\t\t\tsendPostNotifications: data.sendPostNotifications,\n\t\t\trestrictChat: data.restrictChat,\n\t\t\ttopicSearchEnabled: data.topicSearchEnabled,\n\t\t\tdelayImageLoading: data.delayImageLoading,\n\t\t\thomePageRoute : ((data.homePageRoute === 'custom' ? data.homePageCustom : data.homePageRoute) || '').replace(/^\\//, ''),\n\t\t\tscrollToMyPost: data.scrollToMyPost,\n\t\t\tnotificationSound: data.notificationSound,\n\t\t\tincomingChatSound: data.incomingChatSound,\n\t\t\toutgoingChatSound: data.outgoingChatSound\n\t\t};\n\n\t\tif (data.bootswatchSkin) {\n\t\t\tsettings.bootswatchSkin = data.bootswatchSkin;\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.setObject('user:' + uid + ':settings', settings, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tUser.updateDigestSetting(uid, data.dailyDigestFreq, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tUser.getSettings(uid, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tUser.updateDigestSetting = function (uid, dailyDigestFreq, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tdb.sortedSetsRemove(['digest:day:uids', 'digest:week:uids', 'digest:month:uids'], uid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tif (['day', 'week', 'month'].indexOf(dailyDigestFreq) !== -1) {\n\t\t\t\t\tdb.sortedSetAdd('digest:' + dailyDigestFreq + ':uids', Date.now(), uid, next);\n\t\t\t\t} else {\n\t\t\t\t\tnext();\n\t\t\t\t}\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tUser.setSetting = function (uid, key, value, callback) {\n\t\tdb.setObjectField('user:' + uid + ':settings', key, value, callback);\n\t};\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/user/topics.js":"'use strict';\n\nvar async = require('async');\nvar db = require('../database');\n\nmodule.exports = function (User) {\n\n\tUser.getIgnoredTids = function (uid, start, stop, callback) {\n\t\tdb.getSortedSetRevRange('uid:' + uid + ':ignored_tids', start, stop, callback);\n\t};\n\n\tUser.addTopicIdToUser = function (uid, tid, timestamp, callback) {\n\t\tasync.parallel([\n\t\t\tasync.apply(db.sortedSetAdd, 'uid:' + uid + ':topics', timestamp, tid),\n\t\t\tasync.apply(User.incrementUserFieldBy, uid, 'topiccount', 1)\n\t\t], callback);\n\t};\n\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/widgets/index.js":"\"use strict\";\n\nvar async = require('async');\nvar winston = require('winston');\nvar templates = require('templates.js');\n\nvar plugins = require('../plugins');\nvar translator = require('../../public/src/modules/translator');\nvar db = require('../database');\n\nvar widgets = {};\n\nwidgets.render = function (uid, area, req, res, callback) {\n\tif (!area.locations || !area.template) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\twidgets.getAreas(['global', area.template], area.locations, function (err, data) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tvar widgetsByLocation = {};\n\n\t\tasync.map(area.locations, function (location, done) {\n\t\t\twidgetsByLocation[location] = data.global[location].concat(data[area.template][location]);\n\n\t\t\tif (!widgetsByLocation[location].length) {\n\t\t\t\treturn done(null, {location: location, widgets: []});\n\t\t\t}\n\n\t\t\tasync.map(widgetsByLocation[location], function (widget, next) {\n\t\t\t\tif (!widget || !widget.data ||\n\t\t\t\t\t(!!widget.data['hide-registered'] && uid !== 0) ||\n\t\t\t\t\t(!!widget.data['hide-guests'] && uid === 0) ||\n\t\t\t\t\t(!!widget.data['hide-mobile'] && area.isMobile)) {\n\t\t\t\t\treturn next();\n\t\t\t\t}\n\n\t\t\t\tplugins.fireHook('filter:widget.render:' + widget.widget, {\n\t\t\t\t\tuid: uid,\n\t\t\t\t\tarea: area,\n\t\t\t\t\tdata: widget.data,\n\t\t\t\t\treq: req,\n\t\t\t\t\tres: res\n\t\t\t\t}, function (err, html) {\n\t\t\t\t\tif (err || html === null) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof html !== 'string') {\n\t\t\t\t\t\thtml = '';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (widget.data.container && widget.data.container.match('{body}')) {\n\t\t\t\t\t\ttranslator.translate(widget.data.title, function (title) {\n\t\t\t\t\t\t\thtml = templates.parse(widget.data.container, {\n\t\t\t\t\t\t\t\ttitle: title,\n\t\t\t\t\t\t\t\tbody: html\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tnext(null, {html: html});\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnext(null, {html: html});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, function (err, result) {\n\t\t\t\tdone(err, {location: location, widgets: result.filter(Boolean)});\n\t\t\t});\n\t\t}, callback);\n\t});\n};\n\nwidgets.getAreas = function (templates, locations, callback) {\n\tvar keys = templates.map(function (tpl) {\n\t\treturn 'widgets:' + tpl;\n\t});\n\tdb.getObjectsFields(keys, locations, function (err, data) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tvar returnData = {};\n\n\t\ttemplates.forEach(function (template, index) {\n\t\t\treturnData[template] = returnData[template] || {};\n\t\t\tlocations.forEach(function (location) {\n\t\t\t\tif (data && data[index] && data[index][location]) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturnData[template][location] = JSON.parse(data[index][location]);\n\t\t\t\t\t} catch(err) {\n\t\t\t\t\t\twinston.error('can not parse widget data. template:  ' + template + ' location: ' + location);\n\t\t\t\t\t\treturnData[template][location] = [];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturnData[template][location] = [];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tcallback(null, returnData);\n\t});\n};\n\nwidgets.getArea = function (template, location, callback) {\n\tdb.getObjectField('widgets:' + template, location, function (err, result) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\t\tif (!result) {\n\t\t\treturn callback(null, []);\n\t\t}\n\t\ttry {\n\t\t\tresult = JSON.parse(result);\n\t\t} catch(err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tcallback(null, result);\n\t});\n};\n\nwidgets.setArea = function (area, callback) {\n\tif (!area.location || !area.template) {\n\t\treturn callback(new Error('Missing location and template data'));\n\t}\n\n\tdb.setObjectField('widgets:' + area.template, area.location, JSON.stringify(area.widgets), callback);\n};\n\nwidgets.reset = function (callback) {\n\tvar defaultAreas = [\n\t\t{ name: 'Draft Zone', template: 'global', location: 'header' },\n\t\t{ name: 'Draft Zone', template: 'global', location: 'footer' },\n\t\t{ name: 'Draft Zone', template: 'global', location: 'sidebar' }\n\t];\n\n\tasync.parallel({\n\t\tareas: function (next) {\n\t\t\tplugins.fireHook('filter:widgets.getAreas', defaultAreas, next);\n\t\t},\n\t\tdrafts: function (next) {\n\t\t\twidgets.getArea('global', 'drafts', next);\n\t\t}\n\t}, function (err, results) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tvar drafts = results.drafts || [];\n\n\t\tasync.each(results.areas, function (area, next) {\n\t\t\twidgets.getArea(area.template, area.location, function (err, areaData) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn next(err);\n\t\t\t\t}\n\n\t\t\t\tdrafts = drafts.concat(areaData);\n\t\t\t\tarea.widgets = [];\n\t\t\t\twidgets.setArea(area, next);\n\t\t\t});\n\t\t}, function (err) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\twidgets.setArea({\n\t\t\t\ttemplate: 'global',\n\t\t\t\tlocation: 'drafts',\n\t\t\t\twidgets: drafts\n\t\t\t}, callback);\n\t\t});\n\t});\n};\n\nmodule.exports = widgets;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/admin/settings.js":"'use strict';\n/*global define, app, socket, ajaxify */\n\ndefine('admin/settings', ['uploader'], function (uploader) {\n\tvar Settings = {};\n\n\tSettings.init = function () {\n\t\tconsole.warn('[deprecation] require(\\'admin/settings\\').init() has been deprecated, please call require(\\'admin/settings\\').prepare() directly instead.');\n\t\tSettings.prepare();\n\t};\n\n\tSettings.populateTOC = function () {\n\t\t$('.settings-header').each(function () {\n\t\t\tvar header = $(this).text(),\n\t\t\t\tanchor = header.toLowerCase().replace(/ /g, '-').trim();\n\n\t\t\t$(this).prepend('<a name=\"' + anchor + '\"></a>');\n\t\t\t$('.section-content ul').append('<li><a href=\"#' + anchor + '\">' + header + '</a></li>');\n\t\t});\n\t};\n\n\tSettings.prepare = function (callback) {\n\t\t// Populate the fields on the page from the config\n\t\tvar fields = $('#content [data-field]'),\n\t\t\tnumFields = fields.length,\n\t\t\tsaveBtn = $('#save'),\n\t\t\trevertBtn = $('#revert'),\n\t\t\tx, key, inputType, field;\n\n\t\t// Handle unsaved changes\n\t\t$(fields).on('change', function () {\n\t\t\tapp.flags = app.flags || {};\n\t\t\tapp.flags._unsaved = true;\n\t\t});\n\n\t\tfor (x = 0; x < numFields; x++) {\n\t\t\tfield = fields.eq(x);\n\t\t\tkey = field.attr('data-field');\n\t\t\tinputType = field.attr('type');\n\t\t\tif (field.is('input')) {\n\t\t\t\tif (app.config[key]) {\n\t\t\t\t\tswitch (inputType) {\n\t\t\t\t\tcase 'text':\n\t\t\t\t\tcase 'hidden':\n\t\t\t\t\tcase 'password':\n\t\t\t\t\tcase 'textarea':\n\t\t\t\t\tcase 'number':\n\t\t\t\t\t\tfield.val(app.config[key]);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'checkbox':\n\t\t\t\t\t\tvar checked = parseInt(app.config[key], 10) === 1;\n\t\t\t\t\t\tfield.prop('checked', checked);\n\t\t\t\t\t\tfield.parents('.mdl-switch').toggleClass('is-checked', checked);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (field.is('textarea')) {\n\t\t\t\tif (app.config.hasOwnProperty(key)) {\n\t\t\t\t\tfield.val(app.config[key]);\n\t\t\t\t}\n\t\t\t} else if (field.is('select')) {\n\t\t\t\tif (app.config.hasOwnProperty(key)) {\n\t\t\t\t\tfield.val(app.config[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\trevertBtn.off('click').on('click', function () {\n\t\t\tajaxify.refresh();\n\t\t});\n\n\t\tsaveBtn.off('click').on('click', function (e) {\n\t\t\te.preventDefault();\n\n\t\t\tsaveFields(fields, function onFieldsSaved(err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn app.alert({\n\t\t\t\t\t\talert_id: 'config_status',\n\t\t\t\t\t\ttimeout: 2500,\n\t\t\t\t\t\ttitle: 'Changes Not Saved',\n\t\t\t\t\t\tmessage: 'NodeBB encountered a problem saving your changes',\n\t\t\t\t\t\ttype: 'danger'\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tapp.flags._unsaved = false;\n\n\t\t\t\tapp.alert({\n\t\t\t\t\talert_id: 'config_status',\n\t\t\t\t\ttimeout: 2500,\n\t\t\t\t\ttitle: 'Changes Saved',\n\t\t\t\t\tmessage: 'Your changes to the NodeBB configuration have been saved.',\n\t\t\t\t\ttype: 'success'\n\t\t\t\t});\n\n\t\t\t\t$(window).trigger('action:admin.settingsSaved');\n\t\t\t});\n\t\t});\n\n\t\thandleUploads();\n\n\t\t$('#clear-sitemap-cache').off('click').on('click', function () {\n\t\t\tsocket.emit('admin.settings.clearSitemapCache', function () {\n\t\t\t\tapp.alertSuccess('Sitemap Cache Cleared!');\n\t\t\t});\n\t\t\treturn false;\n\t\t});\n\n\t\tif (typeof callback === 'function') {\n\t\t\tcallback();\n\t\t}\n\n\t\tsetTimeout(function () {\n\t\t\t$(window).trigger('action:admin.settingsLoaded');\n\t\t}, 0);\n\t};\n\n\tfunction handleUploads() {\n\t\t$('#content input[data-action=\"upload\"]').each(function () {\n\t\t\tvar uploadBtn = $(this);\n\t\t\tuploadBtn.on('click', function () {\n\t\t\t\tuploader.show({\n\t\t\t\t\ttitle: uploadBtn.attr('data-title'),\n\t\t\t\t\tdescription: uploadBtn.attr('data-description'),\n\t\t\t\t\troute: uploadBtn.attr('data-route'),\n\t\t\t\t\tparams: {},\n\t\t\t\t\tshowHelp: uploadBtn.attr('data-help') ? uploadBtn.attr('data-help') === 1 : undefined,\n\t\t\t\t\taccept: uploadBtn.attr('data-accept')\n\t\t\t\t}, function (image) {\n\t\t\t\t\t// need to move these into template, ex data-callback\n\t\t\t\t\tif (ajaxify.currentPage === 'admin/general/sounds') {\n\t\t\t\t\t\tajaxify.refresh();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$('#' + uploadBtn.attr('data-target')).val(image);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tSettings.remove = function (key) {\n\t\tsocket.emit('admin.config.remove', key);\n\t};\n\n\tfunction saveFields(fields, callback) {\n\t\tvar data = {};\n\n\t\tfields.each(function () {\n\t\t\tvar field = $(this);\n\t\t\tvar key = field.attr('data-field'),\n\t\t\t\tvalue, inputType;\n\n\t\t\tif (field.is('input')) {\n\t\t\t\tinputType = field.attr('type');\n\t\t\t\tswitch (inputType) {\n\t\t\t\tcase 'text':\n\t\t\t\tcase 'password':\n\t\t\t\tcase 'hidden':\n\t\t\t\tcase 'textarea':\n\t\t\t\tcase 'number':\n\t\t\t\t\tvalue = field.val();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'checkbox':\n\t\t\t\t\tvalue = field.prop('checked') ? '1' : '0';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (field.is('textarea') || field.is('select')) {\n\t\t\t\tvalue = field.val();\n\t\t\t}\n\n\t\t\tdata[key] = value;\n\t\t});\n\n\t\tsocket.emit('admin.config.setMultiple', data, function (err) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tfor(var field in data) {\n\t\t\t\tif (data.hasOwnProperty(field)) {\n\t\t\t\t\tapp.config[field] = data[field];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcallback();\n\t\t});\n\t}\n\n\treturn Settings;\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/client/categories.js":"'use strict';\n\n/* globals define, socket, app, templates, ajaxify*/\n\ndefine('forum/categories', ['components', 'translator'], function (components, translator) {\n\tvar\tcategories = {};\n\n\t$(window).on('action:ajaxify.start', function (ev, data) {\n\t\tif (ajaxify.currentPage !== data.url) {\n\t\t\tsocket.removeListener('event:new_post', categories.onNewPost);\n\t\t}\n\t});\n\n\tcategories.init = function () {\n\t\tapp.enterRoom('categories');\n\n\t\tsocket.removeListener('event:new_post', categories.onNewPost);\n\t\tsocket.on('event:new_post', categories.onNewPost);\n\n\t\t$('.category-header').tooltip({\n\t\t\tplacement: 'bottom'\n\t\t});\n\t};\n\n\tcategories.onNewPost = function (data) {\n\t\tif (data && data.posts && data.posts.length && data.posts[0].topic) {\n\t\t\trenderNewPost(data.posts[0].topic.cid, data.posts[0]);\n\t\t}\n\t};\n\n\tfunction renderNewPost(cid, post) {\n\t\tvar category = components.get('categories/category', 'cid', cid);\n\t\tvar numRecentReplies = category.attr('data-numRecentReplies');\n\t\tif (!numRecentReplies || !parseInt(numRecentReplies, 10)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar recentPosts = category.find('[component=\"category/posts\"]');\n\t\tvar insertBefore = recentPosts.first();\n\n\t\tparseAndTranslate([post], function (html) {\n\t\t\thtml.hide();\n\t\t\tif(recentPosts.length === 0) {\n\t\t\t\thtml.appendTo(category);\n\t\t\t} else {\n\t\t\t\thtml.insertBefore(recentPosts.first());\n\t\t\t}\n\n\t\t\thtml.fadeIn();\n\n\t\t\tapp.createUserTooltips();\n\t\t\thtml.find('.timeago').timeago();\n\n\t\t\tif (category.find('[component=\"category/posts\"]').length > parseInt(numRecentReplies, 10)) {\n\t\t\t\trecentPosts.last().remove();\n\t\t\t}\n\n\t\t\t$(window).trigger('action:posts.loaded', {posts: [post]});\n\t\t});\n\t}\n\n\tfunction parseAndTranslate(posts, callback) {\n\t\ttemplates.parse('categories', '(categories.)?posts', {categories: {posts: posts}}, function (html) {\n\t\t\ttranslator.translate(html, function (translatedHTML) {\n\t\t\t\ttranslatedHTML = $(translatedHTML);\n\t\t\t\ttranslatedHTML.find('.post-content img:not(.not-responsive)').addClass('img-responsive');\n\n\t\t\t\tcallback(translatedHTML);\n\t\t\t});\n\t\t});\n\t}\n\n\treturn categories;\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/client/category.js":"\"use strict\";\n/* global define, config, templates, app, utils, ajaxify, socket */\n\ndefine('forum/category', [\n\t'forum/infinitescroll',\n\t'share',\n\t'navigator',\n\t'forum/categoryTools',\n\t'sort',\n\t'components',\n\t'translator',\n\t'topicSelect',\n\t'forum/pagination'\n], function (infinitescroll, share, navigator, categoryTools, sort, components, translator, topicSelect, pagination) {\n\tvar Category = {};\n\n\t$(window).on('action:ajaxify.start', function (ev, data) {\n\t\tif (ajaxify.currentPage !== data.url) {\n\t\t\tnavigator.disable();\n\n\t\t\tremoveListeners();\n\t\t}\n\t});\n\n\tfunction removeListeners() {\n\t\tsocket.removeListener('event:new_topic', Category.onNewTopic);\n\t\tcategoryTools.removeListeners();\n\t}\n\n\tCategory.init = function () {\n\t\tvar\tcid = ajaxify.data.cid;\n\n\t\tapp.enterRoom('category_' + cid);\n\n\t\tshare.addShareHandlers(ajaxify.data.name);\n\n\t\tsocket.removeListener('event:new_topic', Category.onNewTopic);\n\t\tsocket.on('event:new_topic', Category.onNewTopic);\n\n\t\tcategoryTools.init(cid);\n\n\t\tsort.handleSort('categoryTopicSort', 'user.setCategorySort', 'category/' + ajaxify.data.slug);\n\n\t\tif (!config.usePagination) {\n\t\t\tnavigator.init('[component=\"category/topic\"]', ajaxify.data.topic_count, Category.toTop, Category.toBottom, Category.navigatorCallback);\n\t\t}\n\n\t\tenableInfiniteLoadingOrPagination();\n\n\t\t$('[component=\"category\"]').on('click', '[component=\"topic/header\"]', function () {\n\t\t\tvar clickedIndex = $(this).parents('[data-index]').attr('data-index');\n\t\t\t$('[component=\"category/topic\"]').each(function (index, el) {\n\t\t\t\tif ($(el).offset().top - $(window).scrollTop() > 0) {\n\t\t\t\t\tlocalStorage.setItem('category:' + cid + ':bookmark', $(el).attr('data-index'));\n\t\t\t\t\tlocalStorage.setItem('category:' + cid + ':bookmark:clicked', clickedIndex);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\thandleIgnoreWatch(cid);\n\n\t\t$(window).trigger('action:topics.loaded', {topics: ajaxify.data.topics});\n\t\t$(window).trigger('action:category.loaded', {cid: ajaxify.data.cid});\n\t};\n\n\tfunction handleIgnoreWatch(cid) {\n\t\t$('[component=\"category/watching\"], [component=\"category/ignoring\"]').on('click', function () {\n\t\t\tvar $this = $(this);\n\t\t\tvar command = $this.attr('component') === 'category/watching' ? 'watch' : 'ignore';\n\n\t\t\tsocket.emit('categories.' + command, cid, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t}\n\n\t\t\t\t$('[component=\"category/watching/menu\"]').toggleClass('hidden', command !== 'watch');\n\t\t\t\t$('[component=\"category/watching/check\"]').toggleClass('fa-check', command === 'watch');\n\n\t\t\t\t$('[component=\"category/ignoring/menu\"]').toggleClass('hidden', command !== 'ignore');\n\t\t\t\t$('[component=\"category/ignoring/check\"]').toggleClass('fa-check', command === 'ignore');\n\n\t\t\t\tapp.alertSuccess('[[category:' + command + '.message]]');\n\t\t\t});\n\t\t});\n\t}\n\n\tCategory.toTop = function () {\n\t\tnavigator.scrollTop(0);\n\t};\n\n\tCategory.toBottom = function () {\n\t\tsocket.emit('categories.getTopicCount', ajaxify.data.cid, function (err, count) {\n\t\t\tif (err) {\n\t\t\t\treturn app.alertError(err.message);\n\t\t\t}\n\n\t\t\tnavigator.scrollBottom(count - 1);\n\t\t});\n\t};\n\n\tCategory.navigatorCallback = function (topIndex, bottomIndex, elementCount) {\n\t\treturn bottomIndex;\n\t};\n\n\t$(window).on('action:popstate', function (ev, data) {\n\t\tif (data.url.startsWith('category/')) {\n\t\t\tvar cid = data.url.match(/^category\\/(\\d+)/);\n\t\t\tif (cid && cid[1]) {\n\t\t\t\tcid = cid[1];\n\t\t\t}\n\t\t\tif (!cid) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar bookmarkIndex = localStorage.getItem('category:' + cid + ':bookmark');\n\t\t\tvar clickedIndex = localStorage.getItem('category:' + cid + ':bookmark:clicked');\n\n\t\t\tbookmarkIndex = Math.max(0, parseInt(bookmarkIndex, 10) || 0);\n\t\t\tclickedIndex = Math.max(0, parseInt(clickedIndex, 10) || 0);\n\t\t\tif (!parseInt(bookmarkIndex, 10)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (config.usePagination) {\n\t\t\t\tvar page = Math.ceil((parseInt(bookmarkIndex, 10) + 1) / config.topicsPerPage);\n\t\t\t\tif (parseInt(page, 10) !== ajaxify.data.pagination.currentPage) {\n\t\t\t\t\tpagination.loadPage(page, function () {\n\t\t\t\t\t\tCategory.scrollToTopic(bookmarkIndex, clickedIndex, 400);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tCategory.scrollToTopic(bookmarkIndex, clickedIndex, 400);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (bookmarkIndex === 0) {\n\t\t\t\t\tCategory.highlightTopic(clickedIndex);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t$('[component=\"category\"]').empty();\n\n\t\t\t\tloadTopicsAfter(Math.max(0, bookmarkIndex - 1) + 1, 1, function () {\n\t\t\t\t\tCategory.scrollToTopic(bookmarkIndex, clickedIndex, 0);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n\n\tCategory.highlightTopic = function (topicIndex) {\n\t\tvar highlight = components.get('category/topic', 'index', topicIndex);\n\n\t\tif (highlight.length && !highlight.hasClass('highlight')) {\n\t\t\thighlight.addClass('highlight');\n\t\t\tsetTimeout(function () {\n\t\t\t\thighlight.removeClass('highlight');\n\t\t\t}, 5000);\n\t\t}\n\t};\n\n\tCategory.scrollToTopic = function (bookmarkIndex, clickedIndex, duration, offset) {\n\t\tif (!bookmarkIndex) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!offset) {\n\t\t\toffset = 0;\n\t\t}\n\n\t\tvar scrollTo = components.get('category/topic', 'index', bookmarkIndex);\n\t\tvar\tcid = ajaxify.data.cid;\n\n\t\tif (scrollTo.length && cid) {\n\t\t\t$('html, body').animate({\n\t\t\t\tscrollTop: (scrollTo.offset().top - offset) + 'px'\n\t\t\t}, duration !== undefined ? duration : 400, function () {\n\t\t\t\tCategory.highlightTopic(clickedIndex);\n\t\t\t\tnavigator.update();\n\t\t\t});\n\t\t}\n\t};\n\n\tfunction enableInfiniteLoadingOrPagination() {\n\t\tif (!config.usePagination) {\n\t\t\tinfinitescroll.init($('[component=\"category\"]'), Category.loadMoreTopics);\n\t\t} else {\n\t\t\tnavigator.disable();\n\t\t}\n\t}\n\n\tCategory.onNewTopic = function (topic) {\n\t\tvar\tcid = ajaxify.data.cid;\n\t\tif (!topic || parseInt(topic.cid, 10) !== parseInt(cid, 10)) {\n\t\t\treturn;\n\t\t}\n\n\t\t$(window).trigger('filter:categories.new_topic', topic);\n\n\t\tvar editable = !!$('.thread-tools').length;\n\n\t\ttemplates.parse('category', 'topics', {\n\t\t\tprivileges: {editable: editable},\n\t\t\tshowSelect: editable,\n\t\t\ttopics: [topic],\n\t\t\ttemplate: {category: true}\n\t\t}, function (html) {\n\t\t\ttranslator.translate(html, function (translatedHTML) {\n\t\t\t\tvar topic = $(translatedHTML),\n\t\t\t\t\tcontainer = $('[component=\"category\"]'),\n\t\t\t\t\ttopics = $('[component=\"category/topic\"]'),\n\t\t\t\t\tnumTopics = topics.length;\n\n\t\t\t\t$('[component=\"category\"]').removeClass('hidden');\n\t\t\t\t$('.category-sidebar').removeClass('hidden');\n\n\t\t\t\tvar noTopicsWarning = $('#category-no-topics');\n\t\t\t\tif (noTopicsWarning.length) {\n\t\t\t\t\tnoTopicsWarning.remove();\n\t\t\t\t\tajaxify.widgets.render('category', window.location.pathname.slice(1));\n\t\t\t\t}\n\n\t\t\t\tif (numTopics > 0) {\n\t\t\t\t\tfor (var x = 0; x < numTopics; x++) {\n\t\t\t\t\t\tvar pinned = $(topics[x]).hasClass('pinned');\n\t\t\t\t\t\tif (pinned) {\n\t\t\t\t\t\t\tif(x === numTopics - 1) {\n\t\t\t\t\t\t\t\ttopic.insertAfter(topics[x]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttopic.insertBefore(topics[x]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcontainer.append(topic);\n\t\t\t\t}\n\n\t\t\t\ttopic.hide().fadeIn('slow');\n\n\t\t\t\ttopic.find('.timeago').timeago();\n\t\t\t\tapp.createUserTooltips();\n\t\t\t\tupdateTopicCount();\n\n\t\t\t\t$(window).trigger('action:categories.new_topic.loaded');\n\t\t\t});\n\t\t});\n\t};\n\n\tfunction updateTopicCount() {\n\t\tsocket.emit('categories.getTopicCount', ajaxify.data.cid, function (err, topicCount) {\n\t\t\tif(err) {\n\t\t\t\treturn app.alertError(err.message);\n\t\t\t}\n\t\t\tnavigator.setCount(topicCount);\n\t\t});\n\t}\n\n\tCategory.loadMoreTopics = function (direction) {\n\t\tif (!$('[component=\"category\"]').length || !$('[component=\"category\"]').children().length) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar topics = $('[component=\"category/topic\"]');\n\t\tvar afterEl = direction > 0 ? topics.last() : topics.first();\n\t\tvar after = (parseInt(afterEl.attr('data-index'), 10) || 0) + 1;\n\n\t\tloadTopicsAfter(after, direction);\n\t};\n\n\tfunction loadTopicsAfter(after, direction, callback) {\n\t\tcallback = callback || function () {};\n\t\tif (!utils.isNumber(after) || (after === 0 && components.get('category/topic', 'index', 0).length)) {\n\t\t\treturn callback();\n\t\t}\n\n\t\t$(window).trigger('action:categories.loading');\n\t\tvar params = utils.params();\n\t\tinfinitescroll.loadMore('categories.loadMore', {\n\t\t\tcid: ajaxify.data.cid,\n\t\t\tafter: after,\n\t\t\tdirection: direction,\n\t\t\tauthor: params.author,\n\t\t\ttag: params.tag,\n\t\t\tcategoryTopicSort: config.categoryTopicSort\n\t\t}, function (data, done) {\n\t\t\tif (data.topics && data.topics.length) {\n\t\t\t\tCategory.onTopicsLoaded(data, direction, done);\n\t\t\t} else {\n\t\t\t\tdone();\n\t\t\t}\n\n\t\t\t$(window).trigger('action:categories.loaded');\n\t\t\tcallback();\n\t\t});\n\t}\n\n\n\tCategory.onTopicsLoaded = function (data, direction, callback) {\n\t\tif (!data || !data.topics.length) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tfunction removeAlreadyAddedTopics(topics) {\n\t\t\treturn topics.filter(function (topic) {\n\t\t\t\treturn components.get('category/topic', 'tid', topic.tid).length === 0;\n\t\t\t});\n\t\t}\n\n\t\tdata.topics = removeAlreadyAddedTopics(data.topics);\n\t\tif (!data.topics.length) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tdata.showSelect = data.privileges.editable;\n\n\t\tvar after, before;\n\t\tvar topics = $('[component=\"category/topic\"]');\n\n\t\tif (direction > 0 && topics.length) {\n\t\t\tafter = topics.last();\n\t\t} else if (direction < 0 && topics.length) {\n\t\t\tbefore = topics.first();\n\t\t}\n\n\t\tapp.parseAndTranslate('category', 'topics', data, function (html) {\n\t\t\t$('[component=\"category\"]').removeClass('hidden');\n\t\t\t$('.category-sidebar').removeClass('hidden');\n\n\t\t\t$('#category-no-topics').remove();\n\n\t\t\tif (after) {\n\t\t\t\thtml.insertAfter(after);\n\t\t\t} else if (before) {\n\t\t\t\tvar height = $(document).height(),\n\t\t\t\t \tscrollTop = $(window).scrollTop();\n\n\t\t\t\thtml.insertBefore(before);\n\n\t\t\t\t$(window).scrollTop(scrollTop + ($(document).height() - height));\n\t\t\t} else {\n\t\t\t\t$('[component=\"category\"]').append(html);\n\t\t\t}\n\n\t\t\tif (!topicSelect.getSelectedTids().length) {\n\t\t\t\tinfinitescroll.removeExtra($('[component=\"category/topic\"]'), direction, 60);\n\t\t\t}\n\n\t\t\thtml.find('.timeago').timeago();\n\t\t\tapp.createUserTooltips();\n\t\t\tutils.makeNumbersHumanReadable(html.find('.human-readable-number'));\n\n\t\t\t$(window).trigger('action:topics.loaded', {topics: data.topics});\n\n\t\t\tcallback();\n\t\t});\n\t};\n\n\treturn Category;\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/client/categoryTools.js":"\n'use strict';\n\n/* globals define, app, socket, bootbox, ajaxify */\n\n\ndefine('forum/categoryTools', ['forum/topic/move', 'topicSelect', 'components', 'translator'], function (move, topicSelect, components, translator) {\n\n\tvar CategoryTools = {};\n\n\tCategoryTools.init = function (cid) {\n\t\tCategoryTools.cid = cid;\n\n\t\ttopicSelect.init(updateDropdownOptions);\n\n\t\tcomponents.get('topic/delete').on('click', function () {\n\t\t\tcategoryCommand('delete', topicSelect.getSelectedTids());\n\t\t\treturn false;\n\t\t});\n\n\t\tcomponents.get('topic/restore').on('click', function () {\n\t\t\tcategoryCommand('restore', topicSelect.getSelectedTids());\n\t\t\treturn false;\n\t\t});\n\n\t\tcomponents.get('topic/purge').on('click', function () {\n\t\t\tcategoryCommand('purge', topicSelect.getSelectedTids());\n\t\t\treturn false;\n\t\t});\n\n\t\tcomponents.get('topic/lock').on('click', function () {\n\t\t\tvar tids = topicSelect.getSelectedTids();\n\t\t\tif (tids.length) {\n\t\t\t\tsocket.emit('topics.lock', {tids: tids, cid: CategoryTools.cid}, onCommandComplete);\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tcomponents.get('topic/unlock').on('click', function () {\n\t\t\tvar tids = topicSelect.getSelectedTids();\n\t\t\tif (tids.length) {\n\t\t\t\tsocket.emit('topics.unlock', {tids: tids, cid: CategoryTools.cid}, onCommandComplete);\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tcomponents.get('topic/pin').on('click', function () {\n\t\t\tvar tids = topicSelect.getSelectedTids();\n\t\t\tif (tids.length) {\n\t\t\t\tsocket.emit('topics.pin', {tids: tids, cid: CategoryTools.cid}, onCommandComplete);\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tcomponents.get('topic/unpin').on('click', function () {\n\t\t\tvar tids = topicSelect.getSelectedTids();\n\t\t\tif (tids.length) {\n\t\t\t\tsocket.emit('topics.unpin', {tids: tids, cid: CategoryTools.cid}, onCommandComplete);\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tcomponents.get('topic/mark-unread-for-all').on('click', function () {\n\t\t\tvar tids = topicSelect.getSelectedTids();\n\t\t\tif (tids.length) {\n\t\t\t\tsocket.emit('topics.markAsUnreadForAll', tids, function (err) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t\t}\n\t\t\t\t\tapp.alertSuccess('[[topic:markAsUnreadForAll.success]]');\n\t\t\t\t\ttids.forEach(function (tid) {\n\t\t\t\t\t\t$('[component=\"category/topic\"][data-tid=\"' + tid + '\"]').addClass('unread');\n\t\t\t\t\t});\n\t\t\t\t\tonCommandComplete();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn false;\n\t\t});\n\n\t\tcomponents.get('topic/move').on('click', function () {\n\t\t\tvar tids = topicSelect.getSelectedTids();\n\n\t\t\tif (tids.length) {\n\t\t\t\tmove.init(tids, cid, onCommandComplete);\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tcomponents.get('topic/move-all').on('click', function () {\n\t\t\tmove.init(null, cid, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t}\n\n\t\t\t\tajaxify.refresh();\n\t\t\t});\n\t\t});\n\n\t\tCategoryTools.removeListeners();\n\t\tsocket.on('event:topic_deleted', setDeleteState);\n\t\tsocket.on('event:topic_restored', setDeleteState);\n\t\tsocket.on('event:topic_purged', onTopicPurged);\n\t\tsocket.on('event:topic_locked', setLockedState);\n\t\tsocket.on('event:topic_unlocked', setLockedState);\n\t\tsocket.on('event:topic_pinned', setPinnedState);\n\t\tsocket.on('event:topic_unpinned', setPinnedState);\n\t\tsocket.on('event:topic_moved', onTopicMoved);\n\t};\n\n\tfunction categoryCommand(command, tids) {\n\t\tif (!tids.length) {\n\t\t\treturn;\n\t\t}\n\n\t\ttranslator.translate('[[topic:thread_tools.' + command + '_confirm]]', function (msg) {\n\t\t\tbootbox.confirm(msg, function (confirm) {\n\t\t\t\tif (!confirm) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tsocket.emit('topics.' + command, {tids: tids, cid: CategoryTools.cid}, onDeletePurgeComplete);\n\t\t\t});\n\t\t});\n\t}\n\n\tCategoryTools.removeListeners = function () {\n\t\tsocket.removeListener('event:topic_deleted', setDeleteState);\n\t\tsocket.removeListener('event:topic_restored', setDeleteState);\n\t\tsocket.removeListener('event:topic_purged', onTopicPurged);\n\t\tsocket.removeListener('event:topic_locked', setLockedState);\n\t\tsocket.removeListener('event:topic_unlocked', setLockedState);\n\t\tsocket.removeListener('event:topic_pinned', setPinnedState);\n\t\tsocket.removeListener('event:topic_unpinned', setPinnedState);\n\t\tsocket.removeListener('event:topic_moved', onTopicMoved);\n\t};\n\n\tfunction closeDropDown() {\n\t\t$('.thread-tools.open').find('.dropdown-toggle').trigger('click');\n\t}\n\n\tfunction onCommandComplete(err) {\n\t\tif (err) {\n\t\t\treturn app.alertError(err.message);\n\t\t}\n\t\tcloseDropDown();\n\t\ttopicSelect.unselectAll();\n\t}\n\n\tfunction onDeletePurgeComplete(err) {\n\t\tif (err) {\n\t\t\treturn app.alertError(err.message);\n\t\t}\n\t\tcloseDropDown();\n\t\tupdateDropdownOptions();\n\t}\n\n\tfunction updateDropdownOptions() {\n\n\t\tvar tids = topicSelect.getSelectedTids();\n\t\tvar isAnyDeleted = isAny(isTopicDeleted, tids);\n\t\tvar areAllDeleted = areAll(isTopicDeleted, tids);\n\t\tvar isAnyPinned = isAny(isTopicPinned, tids);\n\t\tvar isAnyLocked = isAny(isTopicLocked, tids);\n\n\t\tcomponents.get('topic/delete').toggleClass('hidden', isAnyDeleted);\n\t\tcomponents.get('topic/restore').toggleClass('hidden', !isAnyDeleted);\n\t\tcomponents.get('topic/purge').toggleClass('hidden', !areAllDeleted);\n\n\t\tcomponents.get('topic/lock').toggleClass('hidden', isAnyLocked);\n\t\tcomponents.get('topic/unlock').toggleClass('hidden', !isAnyLocked);\n\n\t\tcomponents.get('topic/pin').toggleClass('hidden', isAnyPinned);\n\t\tcomponents.get('topic/unpin').toggleClass('hidden', !isAnyPinned);\n\t}\n\n\tfunction isAny(method, tids) {\n\t\tfor(var i = 0; i < tids.length; ++i) {\n\t\t\tif(method(tids[i])) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction areAll(method, tids) {\n\t\tfor(var i = 0; i < tids.length; ++i) {\n\t\t\tif(!method(tids[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction isTopicDeleted(tid) {\n\t\treturn getTopicEl(tid).hasClass('deleted');\n\t}\n\n\tfunction isTopicLocked(tid) {\n\t\treturn getTopicEl(tid).hasClass('locked');\n\t}\n\n\tfunction isTopicPinned(tid) {\n\t\treturn getTopicEl(tid).hasClass('pinned');\n\t}\n\n\tfunction getTopicEl(tid) {\n\t\treturn components.get('category/topic', 'tid', tid);\n\t}\n\n\tfunction setDeleteState(data) {\n\t\tvar topic = getTopicEl(data.tid);\n\t\ttopic.toggleClass('deleted', data.isDeleted);\n\t\ttopic.find('[component=\"topic/locked\"]').toggleClass('hide', !data.isDeleted);\n\t}\n\n\tfunction setPinnedState(data) {\n\t\tvar topic = getTopicEl(data.tid);\n\t\ttopic.toggleClass('pinned', data.isPinned);\n\t\ttopic.find('[component=\"topic/pinned\"]').toggleClass('hide', !data.isPinned);\n\t\tajaxify.refresh();\n\t}\n\n\tfunction setLockedState(data) {\n\t\tvar topic = getTopicEl(data.tid);\n\t\ttopic.toggleClass('locked', data.isLocked);\n\t\ttopic.find('[component=\"topic/locked\"]').toggleClass('hide', !data.isLocked);\n\t}\n\n\tfunction onTopicMoved(data) {\n\t\tgetTopicEl(data.tid).remove();\n\t}\n\n\tfunction onTopicPurged(data) {\n\t\tgetTopicEl(data.tid).remove();\n\t}\n\n\treturn CategoryTools;\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/client/chats.js":"'use strict';\n\n/* globals define, app, ajaxify, utils, socket, templates */\n\ndefine('forum/chats', [\n\t'components',\n\t'translator',\n\t'mousetrap',\n\t'forum/chats/recent',\n\t'forum/chats/search',\n\t'forum/chats/messages'\n], function (components, translator, mousetrap, recentChats, search, messages) {\n\tvar Chats = {\n\t\tinitialised: false\n\t};\n\n\tvar newMessage = false;\n\n\tChats.init = function () {\n\t\tvar env = utils.findBootstrapEnvironment();\n\n\t\tif (!Chats.initialised) {\n\t\t\tChats.addSocketListeners();\n\t\t\tChats.addGlobalEventListeners();\n\t\t}\n\n\t\tChats.addEventListeners();\n\t\tChats.createTagsInput($('[component=\"chat/messages\"] .users-tag-input'), ajaxify.data);\n\t\tChats.createAutoComplete($('[component=\"chat/input\"]'));\n\n\t\tcomponents.get('expanded-chat/controlsToggle').on('click', function () {\n\t\t\tcomponents.get('expanded-chat/controls').toggleClass('hide');\n\t\t});\n\n\t\tif (env === 'md' || env === 'lg') {\n\t\t\tChats.resizeMainWindow();\n\t\t\tChats.addHotkeys();\n\t\t}\n\n\t\tmessages.scrollToBottom($('.expanded-chat ul'));\n\n\t\tChats.initialised = true;\n\n\t\tsearch.init();\n\n\t\tif (ajaxify.data.hasOwnProperty('roomId')) {\n\t\t\tcomponents.get('chat/input').focus();\n\t\t}\n\t};\n\n\tChats.addEventListeners = function () {\n\t\t$('[component=\"chat/recent\"]').on('click', '[component=\"chat/leave\"]', function () {\n\t\t\tChats.leave($(this).parents('[data-roomid]'));\n\t\t\treturn false;\n\t\t});\n\n\t\t$('[component=\"chat/recent\"]').on('click', '[component=\"chat/recent/room\"]', function () {\n\t\t\tChats.switchChat($(this).attr('data-roomid'));\n\t\t});\n\n\t\tChats.addSendHandlers(ajaxify.data.roomId, $('.chat-input'), $('.expanded-chat button[data-action=\"send\"]'));\n\n\t\t$('[data-action=\"pop-out\"]').on('click', function () {\n\n\t\t\tvar text = components.get('chat/input').val();\n\t\t\tvar roomId = ajaxify.data.roomId;\n\n\t\t\tif (app.previousUrl && app.previousUrl.match(/chats/)) {\n\t\t\t\tajaxify.go('user/' + ajaxify.data.userslug + '/chats', function () {\n\t\t\t\t\tapp.openChat(roomId, ajaxify.data.uid);\n\t\t\t\t}, true);\n\t\t\t} else {\n\t\t\t\twindow.history.go(-1);\n\t\t\t\tapp.openChat(roomId, ajaxify.data.uid);\n\t\t\t}\n\n\t\t\t$(window).one('action:chat.loaded', function () {\n\t\t\t\tcomponents.get('chat/input').val(text);\n\t\t\t});\n\t\t});\n\n\t\tChats.addEditDeleteHandler(components.get('chat/messages'), ajaxify.data.roomId);\n\n\t\trecentChats.init();\n\n\t\tChats.addRenameHandler(ajaxify.data.roomId, $('[component=\"chat/room/name\"]'));\n\t\tChats.addScrollHandler(ajaxify.data.roomId, ajaxify.data.uid, $('.chat-content'));\n\t};\n\n\tChats.addScrollHandler = function (roomId, uid, el) {\n\t\tvar loading = false;\n\t\tel.off('scroll').on('scroll', function () {\n\t\t\tif (loading) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar top = (el[0].scrollHeight - el.height()) * 0.1;\n\t\t\tif (el.scrollTop() >= top) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tloading = true;\n\t\t\tvar start =  parseInt($('.chat-content').children('[data-index]').first().attr('data-index'), 10) + 1;\n\t\t\tsocket.emit('modules.chats.getMessages', {roomId: roomId, uid: uid, start: start}, function (err, data) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t}\n\t\t\t\tif (!data) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tmessages.parseMessage(data, function (html) {\n\t\t\t\t\tvar currentScrollTop = el.scrollTop();\n\t\t\t\t\tvar previousHeight = el[0].scrollHeight;\n\t\t\t\t\thtml = $(html);\n\t\t\t\t\tel.prepend(html);\n\t\t\t\t\thtml.find('.timeago').timeago();\n\t\t\t\t\thtml.find('img:not(.not-responsive)').addClass('img-responsive');\n\t\t\t\t\tel.scrollTop((el[0].scrollHeight - previousHeight) + currentScrollTop);\n\t\t\t\t\tloading = false;\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n\n\tChats.addEditDeleteHandler = function (element, roomId) {\n\t\telement.on('click', '[data-action=\"edit\"]', function () {\n\t\t\tvar messageId = $(this).parents('[data-mid]').attr('data-mid');\n\t\t\tvar inputEl = components.get('chat/input');\n\t\t\tmessages.prepEdit(inputEl, messageId, roomId);\n\t\t}).on('click', '[data-action=\"delete\"]', function () {\n\t\t\tvar messageId = $(this).parents('[data-mid]').attr('data-mid');\n\t\t\tmessages.delete(messageId, roomId);\n\t\t});\n\t};\n\n\tChats.addHotkeys = function () {\n\t\tmousetrap.bind('ctrl+up', function () {\n\t\t\tvar activeContact = $('.chats-list .bg-primary'),\n\t\t\t\tprev = activeContact.prev();\n\n\t\t\tif (prev.length) {\n\t\t\t\tChats.switchChat(prev.attr('data-roomid'));\n\t\t\t}\n\t\t});\n\t\tmousetrap.bind('ctrl+down', function () {\n\t\t\tvar activeContact = $('.chats-list .bg-primary'),\n\t\t\t\tnext = activeContact.next();\n\n\t\t\tif (next.length) {\n\t\t\t\tChats.switchChat(next.attr('data-roomid'));\n\t\t\t}\n\t\t});\n\t\tmousetrap.bind('up', function (e) {\n\t\t\tif (e.target === components.get('chat/input').get(0)) {\n\t\t\t\t// Retrieve message id from messages list\n\t\t\t\tvar message = components.get('chat/messages').find('.chat-message[data-self=\"1\"]').last();\n\t\t\t\tvar lastMid = message.attr('data-mid');\n\t\t\t\tvar inputEl = components.get('chat/input');\n\n\t\t\t\tmessages.prepEdit(inputEl, lastMid, ajaxify.data.roomId);\n\t\t\t}\n\t\t});\n\t};\n\n\tChats.addRenameHandler = function (roomId, inputEl) {\n\t\tvar oldName = inputEl.val();\n\t\tinputEl.on('blur keypress', function (ev) {\n\t\t\tif (ev.type === 'keypress' && ev.keyCode !== 13) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar newName = inputEl.val();\n\n\t\t\tif (oldName === newName) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsocket.emit('modules.chats.renameRoom', {roomId: roomId, newName: newName}, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t}\n\t\t\t\toldName = newName;\n\t\t\t\tinputEl.blur();\n\t\t\t});\n\t\t});\n\t};\n\n\tChats.addSendHandlers = function (roomId, inputEl, sendEl) {\n\t\tinputEl.off('keypress').on('keypress', function (e) {\n\t\t\tif (e.which === 13 && !e.shiftKey) {\n\t\t\t\tmessages.sendMessage(roomId, inputEl);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\n\t\tsendEl.off('click').on('click', function () {\n\t\t\tmessages.sendMessage(roomId, inputEl);\n\t\t\tinputEl.focus();\n\t\t\treturn false;\n\t\t});\n\t};\n\n\tChats.createAutoComplete = function (element) {\n\t\tvar data = {\n\t\t\telement: element,\n\t\t\tstrategies: [],\n\t\t\toptions: {\n\t\t\t\tzIndex: 20000,\n\t\t\t\tlistPosition: function (position) {\n\t\t\t\t\tthis.$el.css(this._applyPlacement(position));\n\t\t\t\t\tthis.$el.css('position', 'absolute');\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t$(window).trigger('chat:autocomplete:init', data);\n\t\tif (data.strategies.length) {\n\t\t\tdata.element.textcomplete(data.strategies, data.options);\n\t\t}\n\t};\n\n\tChats.createTagsInput = function (tagEl, data) {\n\t\ttagEl.tagsinput({\n\t\t\tconfirmKeys: [13, 44],\n\t\t\ttrimValue: true\n\t\t});\n\n\t\tif (data.users && data.users.length) {\n\t\t\tdata.users.forEach(function (user) {\n\t\t\t\ttagEl.tagsinput('add', $('<div/>').html(user.username).text());\n\t\t\t});\n\t\t}\n\n\t\ttagEl.on('beforeItemAdd', function (event) {\n\t\t\tevent.cancel = event.item === app.user.username;\n\t\t});\n\n\t\ttagEl.on('itemAdded', function (event) {\n\t\t\tif (event.item === app.user.username) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsocket.emit('modules.chats.addUserToRoom', {roomId: data.roomId, username: event.item}, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\tapp.alertError(err.message);\n\t\t\t\t\ttagEl.tagsinput('remove', event.item, {nouser: true});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\ttagEl.on('beforeItemRemove', function (event) {\n\t\t\tif (event.options && event.options.nouser) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tevent.cancel = !data.isOwner || tagEl.tagsinput('items').length < 2;\n\t\t\tif (!data.owner) {\n\t\t\t\treturn app.alertError('[[error:not-allowed]]');\n\t\t\t}\n\n\t\t\tif (tagEl.tagsinput('items').length < 2) {\n\t\t\t\treturn app.alertError('[[error:cant-remove-last-user]]');\n\t\t\t}\n\t\t});\n\n\t\ttagEl.on('itemRemoved', function (event) {\n\t\t\tif (event.options && event.options.nouser) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsocket.emit('modules.chats.removeUserFromRoom', {roomId: data.roomId, username: event.item}, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tvar input = $('.users-tag-container').find('.bootstrap-tagsinput input');\n\n\t\trequire(['autocomplete'], function (autocomplete) {\n\t\t\tautocomplete.user(input);\n\t\t});\n\t};\n\n\tChats.leave = function (el) {\n\t\tvar roomId = el.attr('data-roomid');\n\t\tsocket.emit('modules.chats.leave', roomId, function (err) {\n\t\t\tif (err) {\n\t\t\t\treturn app.alertError(err.message);\n\t\t\t}\n\t\t\tif (parseInt(roomId, 10) === ajaxify.data.roomId) {\n\t\t\t\tajaxify.go('user/' + ajaxify.data.userslug + '/chats');\n\t\t\t} else {\n\t\t\t\tel.remove();\n\t\t\t}\n\t\t});\n\t};\n\n\tChats.switchChat = function (roomid) {\n\t\tajaxify.go('user/' + ajaxify.data.userslug + '/chats/' + roomid);\n\t};\n\n\tChats.addGlobalEventListeners = function () {\n\t\t$(window).on('resize', Chats.resizeMainWindow);\n\t\t$(window).on('mousemove keypress click', function () {\n\t\t\tif (newMessage && ajaxify.data.roomId) {\n\t\t\t\tsocket.emit('modules.chats.markRead', ajaxify.data.roomId);\n\t\t\t\tnewMessage = false;\n\t\t\t}\n\t\t});\n\t};\n\n\tChats.addSocketListeners = function () {\n\t\tsocket.on('event:chats.receive', function (data) {\n\t\t\tif (parseInt(data.roomId, 10) === parseInt(ajaxify.data.roomId, 10)) {\n\t\t\t\tnewMessage = data.self === 0;\n\t\t\t\tdata.message.self = data.self;\n\n\t\t\t\tmessages.appendChatMessage($('.expanded-chat .chat-content'), data.message);\n\t\t\t} else {\n\t\t\t\tif (ajaxify.currentPage.startsWith(\"chats\")) {\n\t\t\t\t\tvar roomEl = $('[data-roomid=' + data.roomId + ']');\n\n\t\t\t\t\tif (roomEl.length > 0) {\n\t\t\t\t\t\troomEl.addClass(\"unread\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar recentEl = components.get('chat/recent');\n\t\t\t\t\t\ttemplates.parse('partials/chats/recent_room', {\n\t\t\t\t\t\t\trooms: { \"roomId\": data.roomId, \"lastUser\": data.message.fromUser, \"usernames\": data.message.fromUser.username, \"unread\": true }\n\t\t\t\t\t\t}, function (html) {\n\t\t\t\t\t\t\ttranslator.translate(html, function (translated) {\n\t\t\t\t\t\t\t    recentEl.prepend(translated);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tsocket.on('event:user_status_change', function (data) {\n\t\t\tapp.updateUserStatus($('.chats-list [data-uid=\"' + data.uid + '\"] [component=\"user/status\"]'), data.status);\n\t\t});\n\n\t\tmessages.onChatMessageEdit();\n\n\t\tsocket.on('event:chats.roomRename', function (data) {\n\t\t\t$('[component=\"chat/room/name\"]').val($('<div/>').html(data.newName).text());\n\t\t});\n\t};\n\n\tChats.resizeMainWindow = function () {\n\t\tvar\tmessagesList = $('.expanded-chat .chat-content');\n\n\t\tif (messagesList.length) {\n\t\t\tvar margin = $('.expanded-chat ul').outerHeight(true) - $('.expanded-chat ul').height();\n\t\t\tvar inputHeight = $('.chat-input').outerHeight(true);\n\t\t\tvar fromTop = messagesList.offset().top;\n\t\t\tvar searchHeight = $('.chat-search').height();\n\t\t\tvar searchListHeight = $('[component=\"chat/search/list\"]').outerHeight(true) - $('[component=\"chat/search/list\"]').height();\n\n\t\t\tmessagesList.height($(window).height() - (fromTop + inputHeight + (margin * 4)));\n\t\t\tcomponents.get('chat/recent').height($('.expanded-chat').height() - (searchHeight + searchListHeight));\n\t\t\t$('[component=\"chat/search/list\"]').css('max-height', components.get('chat/recent').height() / 2 + 'px');\n\t\t}\n\n\t\tChats.setActive();\n\t};\n\n\tChats.setActive = function () {\n\t\tif (ajaxify.data.roomId) {\n\t\t\tsocket.emit('modules.chats.markRead', ajaxify.data.roomId);\n\t\t\t$('.expanded-chat input').focus();\n\t\t}\n\t\t$('.chats-list li').removeClass('bg-primary');\n\t\t$('.chats-list li[data-roomid=\"' + ajaxify.data.roomId + '\"]').addClass('bg-primary');\n\t};\n\n\n\treturn Chats;\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/client/compose.js":"'use strict';\n\n/* globals define */\n\ndefine('forum/compose', [], function () {\n\tvar Compose = {};\n\n\tCompose.init = function () {\n\t\tvar container = $('.composer');\n\n\t\tif (container.length) {\n\t\t\t$(window).trigger('action:composer.enhance', {\n\t\t\t\tcontainer: container\n\t\t\t});\n\t\t}\n\t};\n\n\treturn Compose;\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/client/footer.js":"\"use strict\";\n/*globals define, app, socket*/\n\ndefine('forum/footer', ['notifications', 'chat', 'components', 'translator'], function (Notifications, Chat, components, translator) {\n\n\tNotifications.prepareDOM();\n\tChat.prepareDOM();\n\ttranslator.prepareDOM();\n\n\tfunction updateUnreadTopicCount(count) {\n\t\t$('#unread-count i')\n\t\t\t.toggleClass('unread-count', count > 0)\n\t\t\t.attr('data-content', count > 99 ? '99+' : count);\n\t}\n\n\tfunction updateUnreadNewTopicCount(count) {\n\t\t$('#unread-new-count i')\n\t\t\t.toggleClass('unread-count', count > 0)\n\t\t\t.attr('data-content', count > 99 ? '99+' : count);\n\t}\n\n\tfunction updateUnreadChatCount(count) {\n\t\tcomponents.get('chat/icon')\n\t\t\t.toggleClass('unread-count', count > 0)\n\t\t\t.attr('data-content', count > 99 ? '99+' : count);\n\t}\n\n\tfunction initUnreadTopics() {\n\t\tvar unreadTopics = {};\n\n\t\tfunction onNewPost(data) {\n\t\t\tif (data && data.posts && data.posts.length) {\n\t\t\t\tvar post = data.posts[0];\n\n\t\t\t\tif (parseInt(post.uid, 10) !== parseInt(app.user.uid, 10) && !unreadTopics[post.topic.tid]) {\n\t\t\t\t\tincreaseUnreadCount();\n\t\t\t\t\tmarkTopicsUnread(post.topic.tid);\n\t\t\t\t\tunreadTopics[post.topic.tid] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction increaseUnreadCount() {\n\t\t\tvar count = parseInt($('#unread-count i').attr('data-content'), 10) + 1;\n\t\t\tupdateUnreadTopicCount(count);\n\t\t}\n\n\t\tfunction markTopicsUnread(tid) {\n\t\t\t$('[data-tid=\"' + tid + '\"]').addClass('unread');\n\t\t}\n\n\t\t$(window).on('action:ajaxify.end', function (ev, data) {\n\t\t\tif (data.url) {\n\t\t\t\tvar tid = data.url.match(/^topic\\/(\\d+)/);\n\n\t\t\t\tif (tid && tid[1]) {\n\t\t\t\t\tdelete unreadTopics[tid[1]];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tsocket.on('event:new_post', onNewPost);\n\t}\n\n\tif (app.user.uid) {\n\t\tsocket.emit('user.getUnreadCounts', function (err, data) {\n\t\t\tif (err) {\n\t\t\t\treturn app.alert(err.message);\n\t\t\t}\n\n\t\t\tupdateUnreadTopicCount(data.unreadTopicCount);\n\t\t\tupdateUnreadNewTopicCount(data.unreadNewTopicCount);\n\t\t\tupdateUnreadChatCount(data.unreadChatCount);\n\t\t\tNotifications.updateNotifCount(data.unreadNotificationCount);\n\t\t});\n\t}\n\n\tsocket.on('event:unread.updateCount', updateUnreadTopicCount);\n\tsocket.on('event:unread.updateChatCount', updateUnreadChatCount);\n\n\tinitUnreadTopics();\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/client/infinitescroll.js":"'use strict';\n\n/* globals define, socket, app */\n\ndefine('forum/infinitescroll', function () {\n\n\tvar scroll = {};\n\tvar callback;\n\tvar previousScrollTop = 0;\n\tvar loadingMore\t= false;\n\tvar container;\n\n\tscroll.init = function (el, cb) {\n\t\tif (typeof el === 'function') {\n\t\t\tcallback = el;\n\t\t\tcontainer = $('body');\n\t\t} else {\n\t\t\tcallback = cb;\n\t\t\tcontainer = el || $('body');\n\t\t}\n\n\t\t$(window).off('scroll', onScroll).on('scroll', onScroll);\n\t};\n\n\tfunction onScroll() {\n\t\tif (loadingMore) {\n\t\t\treturn;\n\t\t}\n\t\tvar currentScrollTop = $(window).scrollTop();\n\t\tvar wh = $(window).height();\n\t\tvar viewportHeight = container.height() - wh;\n\t\tvar offsetTop = container.offset() ? container.offset().top : 0;\n\t\tvar scrollPercent = 100 * (currentScrollTop - offsetTop) / (viewportHeight <= 0 ? wh : viewportHeight);\n\n\t\tvar top = 20, bottom = 80;\n\n\t\tvar direction = currentScrollTop > previousScrollTop ? 1 : -1;\n\n\t\tif (scrollPercent < top && currentScrollTop < previousScrollTop) {\n\t\t\tcallback(direction);\n\t\t} else if (scrollPercent > bottom && currentScrollTop > previousScrollTop) {\n\t\t\tcallback(direction);\n\t\t} else if (scrollPercent < 0 && direction > 0 && viewportHeight < 0) {\n\t\t\tcallback(direction);\n\t\t}\n\n\t\tpreviousScrollTop = currentScrollTop;\n\t}\n\n\tscroll.loadMore = function (method, data, callback) {\n\t\tif (loadingMore) {\n\t\t\treturn;\n\t\t}\n\t\tloadingMore = true;\n\n\t\tvar hookData = {method: method, data: data};\n\t\t$(window).trigger('action:infinitescroll.loadmore', hookData);\n\n\t\tsocket.emit(hookData.method, hookData.data, function (err, data) {\n\t\t\tif (err) {\n\t\t\t\tloadingMore = false;\n\t\t\t\treturn app.alertError(err.message);\n\t\t\t}\n\t\t\tcallback(data, function () {\n\t\t\t\tloadingMore = false;\n\t\t\t});\n\t\t});\n\t};\n\n\tscroll.removeExtra = function (els, direction, count) {\n\t\tif (els.length <= count) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar removeCount = els.length - count;\n\t\tif (direction > 0) {\n\t\t\tvar height = $(document).height(),\n\t\t\t\tscrollTop = $(window).scrollTop();\n\n\t\t\tels.slice(0, removeCount).remove();\n\n\t\t\t$(window).scrollTop(scrollTop + ($(document).height() - height));\n\t\t} else {\n\t\t\tels.slice(els.length - removeCount).remove();\n\t\t}\n\t};\n\n\treturn scroll;\n});","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/client/login.js":"\"use strict\";\n/* global define, app, config, RELATIVE_PATH */\n\ndefine('forum/login', ['translator'], function (translator) {\n\tvar\tLogin = {};\n\n\tLogin.init = function () {\n\t\tvar errorEl = $('#login-error-notify'),\n\t\t\tsubmitEl = $('#login'),\n\t\t\tformEl = $('#login-form');\n\n\t\tsubmitEl.on('click', function (e) {\n\t\t\te.preventDefault();\n\n\t\t\tif (!$('#username').val() || !$('#password').val()) {\n\t\t\t\terrorEl.find('p').translateText('[[error:invalid-username-or-password]]');\n\t\t\t\terrorEl.show();\n\t\t\t} else {\n\t\t\t\terrorEl.hide();\n\n\t\t\t\tif (submitEl.hasClass('disabled')) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tsubmitEl.addClass('disabled');\n\n\t\t\t\t/*\n\t\t\t\t\tSet session refresh flag (otherwise the session check will trip and throw invalid session modal)\n\t\t\t\t\tWe know the session is/will be invalid (uid mismatch) because the user is attempting a login\n\t\t\t\t*/\n\t\t\t\tapp.flags = app.flags || {};\n\t\t\t\tapp.flags._sessionRefresh = true;\n\n\t\t\t\tformEl.ajaxSubmit({\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'x-csrf-token': config.csrf_token\n\t\t\t\t\t},\n\t\t\t\t\tsuccess: function (data, status) {\n\t\t\t\t\t\twindow.location.href = data + '?loggedin';\n\t\t\t\t\t},\n\t\t\t\t\terror: function (data, status) {\n\t\t\t\t\t\tif (data.status === 403 && data.responseText === 'Forbidden') {\n\t\t\t\t\t\t\twindow.location.href = config.relative_path + '/login?error=csrf-invalid';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\terrorEl.find('p').translateText(data.responseText);\n\t\t\t\t\t\t\terrorEl.show();\n\t\t\t\t\t\t\tsubmitEl.removeClass('disabled');\n\t\t\t\t\t\t\tapp.flags._sessionRefresh = false;\n\n\t\t\t\t\t\t\t// Select the entire password if that field has focus\n\t\t\t\t\t\t\tif ($('#password:focus').size()) {\n\t\t\t\t\t\t\t\t$('#password').select();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t$('#login-error-notify button').on('click', function (e) {\n\t\t\te.preventDefault();\n\t\t\terrorEl.hide();\n\t\t\treturn false;\n\t\t});\n\n\t\tif ($('#content #username').attr('readonly')) {\n\t\t\t$('#content #password').val('').focus();\n\t\t} else {\n\t\t\t$('#content #username').focus();\n\t\t}\n\t};\n\n\treturn Login;\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/client/notifications.js":"'use strict';\n\n/* globals define, socket, app */\n\ndefine('forum/notifications', ['components', 'notifications', 'forum/infinitescroll'], function (components, notifs, infinitescroll) {\n\tvar Notifications = {};\n\n\tNotifications.init = function () {\n\t\tvar listEl = $('.notifications-list');\n\t\tlistEl.on('click', '[component=\"notifications/item/link\"]', function () {\n\t\t\tvar nid = $(this).parents('[data-nid]').attr('data-nid');\n\t\t\tsocket.emit('notifications.markRead', nid, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn app.alertError(err);\n\t\t\t\t}\n\n\t\t\t\tsocket.emit('notifications.getCount', function (err, count) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t\t}\n\n\t\t\t\t\tnotifs.updateNotifCount(count);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\t$('.timeago').timeago();\n\n\t\tcomponents.get('notifications/mark_all').on('click', function () {\n\t\t\tsocket.emit('notifications.markAllRead', function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t}\n\n\t\t\t\tcomponents.get('notifications/item').removeClass('unread');\n\t\t\t\tnotifs.updateNotifCount(0);\n\t\t\t});\n\t\t});\n\n\t\tinfinitescroll.init(loadMoreNotifications);\n\t};\n\n\tfunction loadMoreNotifications(direction) {\n\t\tif (direction < 0) {\n\t\t\treturn;\n\t\t}\n\t\tvar notifList = $('.notifications-list');\n\t\tinfinitescroll.loadMore('notifications.loadMore', {\n\t\t\tafter: notifList.attr('data-nextstart')\n\t\t}, function (data, done) {\n\t\t\tif (!data) {\n\t\t\t\treturn done();\n\t\t\t}\n\t\t\tnotifList.attr('data-nextstart', data.nextStart);\n\t\t\tif (!data.notifications || !data.notifications.length) {\n\t\t\t\treturn done();\n\t\t\t}\n\t\t\tapp.parseAndTranslate('notifications', 'notifications', {notifications: data.notifications}, function (html) {\n\t\t\t\tnotifList.append(html);\n\t\t\t\thtml.find('.timeago').timeago();\n\t\t\t\tdone();\n\t\t\t});\n\t\t});\n\t}\n\n\treturn Notifications;\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/client/popular.js":"'use strict';\n\n/* globals define, app, socket*/\n\ndefine('forum/popular', ['components'], function (components) {\n\tvar Popular = {};\n\n\tPopular.init = function () {\n\t\tapp.enterRoom('popular_topics');\n\n\t\tcomponents.get('popular/tab')\n\t\t\t.removeClass('active')\n\t\t\t.find('a[href=\"' + window.location.pathname + '\"]')\n\t\t\t.parent().addClass('active');\n\t};\n\n\treturn Popular;\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/client/recent.js":"'use strict';\n\n/* globals define, app, socket, utils, ajaxify, config */\n\ndefine('forum/recent', ['forum/infinitescroll', 'components'], function (infinitescroll, components) {\n\tvar\tRecent = {};\n\n\tvar newTopicCount = 0;\n\tvar newPostCount = 0;\n\n\t$(window).on('action:ajaxify.start', function (ev, data) {\n\t\tif (ajaxify.currentPage !== data.url) {\n\t\t\tRecent.removeListeners();\n\t\t}\n\t});\n\n\tRecent.init = function () {\n\t\tapp.enterRoom('recent_topics');\n\n\t\tRecent.watchForNewPosts();\n\n\t\t$('#new-topics-alert').on('click', function () {\n\t\t\t$(this).addClass('hide');\n\t\t});\n\n\t\tif (!config.usePagination) {\n\t\t\tinfinitescroll.init(Recent.loadMoreTopics);\n\t\t}\n\n\t\t$(window).trigger('action:topics.loaded', {topics: ajaxify.data.topics});\n\t};\n\n\tRecent.watchForNewPosts = function () {\n\t\tnewPostCount = 0;\n\t\tnewTopicCount = 0;\n\t\tRecent.removeListeners();\n\t\tsocket.on('event:new_topic', onNewTopic);\n\t\tsocket.on('event:new_post', onNewPost);\n\t};\n\n\tfunction onNewTopic(data) {\n\t\tif (ajaxify.data.selectedCategory && parseInt(ajaxify.data.selectedCategory.cid, 10) !== parseInt(data.cid, 10)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (ajaxify.data.selectedFilter && ajaxify.data.selectedFilter.filter === 'watched') {\n\t\t\treturn;\n\t\t}\n\n\t\t++newTopicCount;\n\t\tRecent.updateAlertText();\n\t}\n\n\tfunction onNewPost(data) {\n\t\tfunction showAlert() {\n\t\t\t++newPostCount;\n\t\t\tRecent.updateAlertText();\n\t\t}\n\n\t\tvar post = data.posts[0];\n\t\tif (!post || !post.topic) {\n\t\t\treturn;\n\t\t}\n\t\tif (parseInt(post.topic.mainPid, 10) === parseInt(post.pid, 10)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (ajaxify.data.selectedCategory && parseInt(ajaxify.data.selectedCategory.cid, 10) !== parseInt(post.topic.cid, 10)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (ajaxify.data.selectedFilter && ajaxify.data.selectedFilter.filter === 'new') {\n\t\t\treturn;\n\t\t}\n\n\t\tif (ajaxify.data.selectedFilter && ajaxify.data.selectedFilter.filter === 'watched') {\n\t\t\tsocket.emit('topics.isFollowed', post.tid, function (err, isFollowed) {\n\t\t\t\tif (err) {\n\t\t\t\t\tapp.alertError(err.message);\n\t\t\t\t}\n\t\t\t\tif (isFollowed) {\n\t\t\t\t\tshowAlert();\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tshowAlert();\n\t}\n\n\tRecent.removeListeners = function () {\n\t\tsocket.removeListener('event:new_topic', onNewTopic);\n\t\tsocket.removeListener('event:new_post', onNewPost);\n\t};\n\n\tRecent.updateAlertText = function () {\n\t\tvar text = '';\n\n\t\tif (newTopicCount === 0) {\n\t\t\tif (newPostCount === 1) {\n\t\t\t\ttext = '[[recent:there-is-a-new-post]]';\n\t\t\t} else if (newPostCount > 1) {\n\t\t\t\ttext = '[[recent:there-are-new-posts, ' + newPostCount + ']]';\n\t\t\t}\n\t\t} else if (newTopicCount === 1) {\n\t\t\tif (newPostCount === 0) {\n\t\t\t\ttext = '[[recent:there-is-a-new-topic]]';\n\t\t\t} else if (newPostCount === 1) {\n\t\t\t\ttext = '[[recent:there-is-a-new-topic-and-a-new-post]]';\n\t\t\t} else if (newPostCount > 1) {\n\t\t\t\ttext = '[[recent:there-is-a-new-topic-and-new-posts, ' + newPostCount + ']]';\n\t\t\t}\n\t\t} else if (newTopicCount > 1) {\n\t\t\tif (newPostCount === 0) {\n\t\t\t\ttext = '[[recent:there-are-new-topics, ' + newTopicCount + ']]';\n\t\t\t} else if (newPostCount === 1) {\n\t\t\t\ttext = '[[recent:there-are-new-topics-and-a-new-post, ' + newTopicCount + ']]';\n\t\t\t} else if (newPostCount > 1) {\n\t\t\t\ttext = '[[recent:there-are-new-topics-and-new-posts, ' + newTopicCount + ', ' + newPostCount + ']]';\n\t\t\t}\n\t\t}\n\n\t\ttext += ' [[recent:click-here-to-reload]]';\n\n\t\t$('#new-topics-alert').translateText(text).removeClass('hide').fadeIn('slow');\n\t\t$('#category-no-topics').addClass('hide');\n\t};\n\n\tRecent.loadMoreTopics = function (direction) {\n\t\tif (direction < 0 || !$('[component=\"category\"]').length) {\n\t\t\treturn;\n\t\t}\n\n\t\tinfinitescroll.loadMore('topics.loadMoreRecentTopics', {\n\t\t\tafter: $('[component=\"category\"]').attr('data-nextstart'),\n\t\t\tcid: utils.params().cid,\n\t\t\tfilter: ajaxify.data.selectedFilter.filter,\n\t\t\tset: $('[component=\"category\"]').attr('data-set') ? $('[component=\"category\"]').attr('data-set') : 'topics:recent'\n\t\t}, function (data, done) {\n\t\t\tif (data.topics && data.topics.length) {\n\t\t\t\tRecent.onTopicsLoaded('recent', data.topics, false, done);\n\t\t\t} else {\n\t\t\t\tdone();\n\t\t\t}\n\t\t\t$('[component=\"category\"]').attr('data-nextstart', data.nextStart);\n\t\t});\n\t};\n\n\tRecent.onTopicsLoaded = function (templateName, topics, showSelect, callback) {\n\n\t\ttopics = topics.filter(function (topic) {\n\t\t\treturn !components.get('category/topic', 'tid', topic.tid).length;\n\t\t});\n\n\t\tif (!topics.length) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tapp.parseAndTranslate(templateName, 'topics', {topics: topics, showSelect: showSelect}, function (html) {\n\t\t\t$('#category-no-topics').remove();\n\n\t\t\t$('[component=\"category\"]').append(html);\n\t\t\thtml.find('.timeago').timeago();\n\t\t\tapp.createUserTooltips();\n\t\t\tutils.makeNumbersHumanReadable(html.find('.human-readable-number'));\n\t\t\t$(window).trigger('action:topics.loaded', {topics: topics});\n\t\t\tcallback();\n\t\t});\n\t};\n\n\treturn Recent;\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/client/register.js":"'use strict';\n\n/* globals define, app, utils, socket, config, ajaxify, bootbox */\n\n\ndefine('forum/register', ['translator'], function (translator) {\n\tvar Register = {},\n\t\tvalidationError = false,\n\t\tsuccessIcon = '';\n\n\tRegister.init = function () {\n\t\tvar email = $('#email'),\n\t\t\tusername = $('#username'),\n\t\t\tpassword = $('#password'),\n\t\t\tpassword_confirm = $('#password-confirm'),\n\t\t\tregister = $('#register');\n\n\t\thandleLanguageOverride();\n\n\t\t$('#referrer').val(app.previousUrl);\n\n\t\temail.on('blur', function () {\n\t\t\tif (email.val().length) {\n\t\t\t\tvalidateEmail(email.val());\n\t\t\t}\n\t\t});\n\n\t\tvar query = utils.params();\n\t\tif (query.email && query.token) {\n\t\t\temail.val(decodeURIComponent(query.email));\n\t\t\t$('#token').val(query.token);\n\t\t}\n\n\t\t// Update the \"others can mention you via\" text\n\t\tusername.on('keyup', function () {\n\t\t\t$('#yourUsername').text(this.value.length > 0 ? utils.slugify(this.value) : 'username');\n\t\t});\n\n\t\tusername.on('blur', function () {\n\t\t\tif (username.val().length) {\n\t\t\t\tvalidateUsername(username.val());\n\t\t\t}\n\t\t});\n\n\t\tpassword.on('blur', function () {\n\t\t\tif (password.val().length) {\n\t\t\t\tvalidatePassword(password.val(), password_confirm.val());\n\t\t\t}\n\t\t});\n\n\t\tpassword_confirm.on('blur', function () {\n\t\t\tif (password_confirm.val().length) {\n\t\t\t\tvalidatePasswordConfirm(password.val(), password_confirm.val());\n\t\t\t}\n\t\t});\n\n\t\tfunction validateForm(callback) {\n\t\t\tvalidationError = false;\n\t\t\tvalidatePassword(password.val(), password_confirm.val());\n\t\t\tvalidatePasswordConfirm(password.val(), password_confirm.val());\n\n\t\t\tvalidateEmail(email.val(), function () {\n\t\t\t\tvalidateUsername(username.val(), callback);\n\t\t\t});\n\t\t}\n\n\t\tregister.on('click', function (e) {\n\t\t\tvar registerBtn = $(this);\n\t\t\tvar errorEl = $('#register-error-notify');\n\t\t\terrorEl.addClass('hidden');\n\t\t\te.preventDefault();\n\t\t\tvalidateForm(function () {\n\t\t\t\tif (validationError) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tregisterBtn.addClass('disabled');\n\n\t\t\t\tregisterBtn.parents('form').ajaxSubmit({\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'x-csrf-token': config.csrf_token\n\t\t\t\t\t},\n\t\t\t\t\tsuccess: function (data) {\n\t\t\t\t\t\tregisterBtn.removeClass('disabled');\n\t\t\t\t\t\tif (!data) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (data.referrer) {\n\t\t\t\t\t\t\twindow.location.href = data.referrer;\n\t\t\t\t\t\t} else if (data.message) {\n\t\t\t\t\t\t\trequire(['translator'], function (translator) {\n\t\t\t\t\t\t\t\ttranslator.translate(data.message, function (msg) {\n\t\t\t\t\t\t\t\t\tbootbox.alert(msg);\n\t\t\t\t\t\t\t\t\tajaxify.go('/');\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\terror: function (data) {\n\t\t\t\t\t\ttranslator.translate(data.responseText, config.defaultLang, function (translated) {\n\t\t\t\t\t\t\tif (data.status === 403 && data.responseText === 'Forbidden') {\n\t\t\t\t\t\t\t\twindow.location.href = config.relative_path + '/register?error=csrf-invalid';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\terrorEl.find('p').text(translated);\n\t\t\t\t\t\t\t\terrorEl.removeClass('hidden');\n\t\t\t\t\t\t\t\tregisterBtn.removeClass('disabled');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n\n\tfunction validateEmail(email, callback) {\n\t\tcallback = callback || function () {};\n\t\tvar email_notify = $('#email-notify');\n\n\t\tif (!utils.isEmailValid(email)) {\n\t\t\tshowError(email_notify, '[[error:invalid-email]]');\n\t\t\treturn callback();\n\t\t}\n\n\t\tsocket.emit('user.emailExists', {\n\t\t\temail: email\n\t\t}, function (err, exists) {\n\t\t\tif (err) {\n\t\t\t\tapp.alertError(err.message);\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tif (exists) {\n\t\t\t\tshowError(email_notify, '[[error:email-taken]]');\n\t\t\t} else {\n\t\t\t\tshowSuccess(email_notify, successIcon);\n\t\t\t}\n\n\t\t\tcallback();\n\t\t});\n\t}\n\n\tfunction validateUsername(username, callback) {\n\t\tcallback = callback || function () {};\n\n\t\tvar username_notify = $('#username-notify');\n\n\t\tif (username.length < ajaxify.data.minimumUsernameLength) {\n\t\t\tshowError(username_notify, '[[error:username-too-short]]');\n\t\t} else if (username.length > ajaxify.data.maximumUsernameLength) {\n\t\t\tshowError(username_notify, '[[error:username-too-long]]');\n\t\t} else if (!utils.isUserNameValid(username) || !utils.slugify(username)) {\n\t\t\tshowError(username_notify, '[[error:invalid-username]]');\n\t\t} else {\n\t\t\tsocket.emit('user.exists', {\n\t\t\t\tusername: username\n\t\t\t}, function (err, exists) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t}\n\n\t\t\t\tif (exists) {\n\t\t\t\t\tshowError(username_notify, '[[error:username-taken]]');\n\t\t\t\t} else {\n\t\t\t\t\tshowSuccess(username_notify, successIcon);\n\t\t\t\t}\n\n\t\t\t\tcallback();\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction validatePassword(password, password_confirm) {\n\t\tvar password_notify = $('#password-notify'),\n\t\t\tpassword_confirm_notify = $('#password-confirm-notify');\n\n\t\tif (password.length < ajaxify.data.minimumPasswordLength) {\n\t\t\tshowError(password_notify, '[[user:change_password_error_length]]');\n\t\t} else if (password.length > 4096) {\n\t\t\tshowError(password_notify, '[[error:password-too-long]]');\n\t\t} else if (!utils.isPasswordValid(password)) {\n\t\t\tshowError(password_notify, '[[user:change_password_error]]');\n\t\t} else if (password === $('#username').val()) {\n\t\t\tshowError(password_notify, '[[user:password_same_as_username]]');\n\t\t} else if (password === $('#email').val()) {\n\t\t\tshowError(password_notify, '[[user:password_same_as_email]]');\n\t\t} else {\n\t\t\tshowSuccess(password_notify, successIcon);\n\t\t}\n\n\t\tif (password !== password_confirm && password_confirm !== '') {\n\t\t\tshowError(password_confirm_notify, '[[user:change_password_error_match]]');\n\t\t}\n\t}\n\n\tfunction validatePasswordConfirm(password, password_confirm) {\n\t\tvar password_notify = $('#password-notify'),\n\t\t\tpassword_confirm_notify = $('#password-confirm-notify');\n\n\t\tif (!password || password_notify.hasClass('alert-error')) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (password !== password_confirm) {\n\t\t\tshowError(password_confirm_notify, '[[user:change_password_error_match]]');\n\t\t} else {\n\t\t\tshowSuccess(password_confirm_notify, successIcon);\n\t\t}\n\t}\n\n\tfunction showError(element, msg) {\n\t\ttranslator.translate(msg, function (msg) {\n\t\t\telement.html(msg);\n\t\t\telement.parent()\n\t\t\t\t.removeClass('register-success')\n\t\t\t\t.addClass('register-danger');\n\t\t\telement.show();\n\t\t});\n\t\tvalidationError = true;\n\t}\n\n\tfunction showSuccess(element, msg) {\n\t\ttranslator.translate(msg, function (msg) {\n\t\t\telement.html(msg);\n\t\t\telement.parent()\n\t\t\t\t.removeClass('register-danger')\n\t\t\t\t.addClass('register-success');\n\t\t\telement.show();\n\t\t});\n\t}\n\n\tfunction handleLanguageOverride() {\n\t\tif (!app.user.uid && config.defaultLang !== config.userLang) {\n\t\t\tvar formEl = $('[component=\"register/local\"]'),\n\t\t\t\tlangEl = $('<input type=\"hidden\" name=\"userLang\" value=\"' + config.userLang + '\" />');\n\n\t\t\tformEl.append(langEl);\n\t\t}\n\t}\n\n\treturn Register;\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/client/reset_code.js":"\"use strict\";\n/*globals define, app, ajaxify, socket, config*/\n\ndefine('forum/reset_code', function () {\n\tvar\tResetCode = {};\n\n\tResetCode.init = function () {\n\t\tvar reset_code = ajaxify.data.code;\n\n\t\tvar resetEl = $('#reset');\n\t\tvar password = $('#password');\n\t\tvar repeat = $('#repeat');\n\n\t\tresetEl.on('click', function () {\n\t\t\tif (password.val().length < ajaxify.data.minimumPasswordLength) {\n\t\t\t\tapp.alertError('[[reset_password:password_too_short]]');\n\t\t\t} else if (password.val() !== repeat.val()) {\n\t\t\t\tapp.alertError('[[reset_password:passwords_do_not_match]]');\n\t\t\t} else {\n\t\t\t\tresetEl.prop('disabled', true).html('<i class=\"fa fa-spin fa-refresh\"></i> Changing Password');\n\t\t\t\tsocket.emit('user.reset.commit', {\n\t\t\t\t\tcode: reset_code,\n\t\t\t\t\tpassword: password.val()\n\t\t\t\t}, function (err) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tajaxify.refresh();\n\t\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t\t}\n\n\t\t\t\t\twindow.location.href = config.relative_path + '/login';\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t};\n\n\treturn ResetCode;\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/client/reset.js":"\"use strict\";\n/*globals define, app, socket*/\n\ndefine('forum/reset', function () {\n\tvar\tResetPassword = {};\n\n\tResetPassword.init = function () {\n\t\tvar inputEl = $('#email'),\n\t\t\terrorEl = $('#error'),\n\t\t\tsuccessEl = $('#success');\n\n\t\t$('#reset').on('click', function () {\n\t\t\tif (inputEl.val() && inputEl.val().indexOf('@') !== -1) {\n\t\t\t\tsocket.emit('user.reset.send', inputEl.val(), function (err) {\n\t\t\t\t\tif(err) {\n\t\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t\t}\n\n\t\t\t\t\terrorEl.addClass('hide');\n\t\t\t\t\tsuccessEl.removeClass('hide');\n\t\t\t\t\tinputEl.val('');\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsuccessEl.addClass('hide');\n\t\t\t\terrorEl.removeClass('hide');\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t};\n\n\treturn ResetPassword;\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/client/search.js":"'use strict';\n\n/* globals app, define, utils*/\n\ndefine('forum/search', ['search', 'autocomplete'], function (searchModule, autocomplete) {\n\tvar\tSearch = {};\n\n\tSearch.init = function () {\n\t\tvar searchQuery = $('#results').attr('data-search-query');\n\n\t\t$('#search-input').val(searchQuery);\n\n\t\tvar searchIn = $('#search-in');\n\n\t\tfillOutForm();\n\n\t\tsearchIn.on('change', function () {\n\t\t\tupdateFormItemVisiblity(searchIn.val());\n\t\t});\n\n\t\thighlightMatches(searchQuery);\n\n\t\t$('#advanced-search').off('submit').on('submit', function (e) {\n\t\t\te.preventDefault();\n\t\t\tsearchModule.query(getSearchData(), function () {\n\t\t\t\t$('#search-input').val('');\n\t\t\t});\n\t\t\treturn false;\n\t\t});\n\n\t\thandleSavePreferences();\n\n\t\tenableAutoComplete();\n\t};\n\n\tfunction getSearchData() {\n\t\tvar form = $('#advanced-search');\n\t\tvar searchData = {\n\t\t\tin: $('#search-in').val()\n\t\t};\n\t\tsearchData.term = $('#search-input').val();\n\t\tif (searchData.in === 'posts' || searchData.in === 'titlesposts' || searchData.in === 'titles') {\n\t\t\tsearchData.by = form.find('#posted-by-user').val();\n\t\t\tsearchData.categories = form.find('#posted-in-categories').val();\n\t\t\tsearchData.searchChildren = form.find('#search-children').is(':checked');\n\t\t\tsearchData.replies = form.find('#reply-count').val();\n\t\t\tsearchData.repliesFilter = form.find('#reply-count-filter').val();\n\t\t\tsearchData.timeFilter = form.find('#post-time-filter').val();\n\t\t\tsearchData.timeRange = form.find('#post-time-range').val();\n\t\t\tsearchData.sortBy = form.find('#post-sort-by').val();\n\t\t\tsearchData.sortDirection = form.find('#post-sort-direction').val();\n\t\t\tsearchData.showAs = form.find('#show-as-topics').is(':checked') ? 'topics' : 'posts';\n\t\t}\n\n\t\treturn searchData;\n\t}\n\n\tfunction updateFormItemVisiblity(searchIn) {\n\t\tvar hide = searchIn.indexOf('posts') === -1 && searchIn.indexOf('titles') === -1;\n\t\t$('.post-search-item').toggleClass('hide', hide);\n\t}\n\n\tfunction fillOutForm() {\n\t\tvar params = utils.params();\n\t\tvar searchData = searchModule.getSearchPreferences();\n\t\tvar formData = utils.merge(searchData, params);\n\n\t\tif (formData) {\n\t\t\tif (params.term) {\n\t\t\t\t$('#search-input').val(params.term);\n\t\t\t}\n\n\t\t\tif (formData.in) {\n\t\t\t\t$('#search-in').val(formData.in);\n\t\t\t\tupdateFormItemVisiblity(formData.in);\n\t\t\t}\n\n\t\t\tif (formData.by) {\n\t\t\t\t$('#posted-by-user').val(formData.by);\n\t\t\t}\n\n\n\t\t\tif (formData.categories) {\n\t\t\t\t$('#posted-in-categories').val(formData.categories);\n\t\t\t}\n\n\t\t\tif (formData.searchChildren) {\n\t\t\t\t$('#search-children').prop('checked', true);\n\t\t\t}\n\n\t\t\tif (formData.replies) {\n\t\t\t\t$('#reply-count').val(formData.replies);\n\t\t\t\t$('#reply-count-filter').val(formData.repliesFilter);\n\t\t\t}\n\n\t\t\tif (formData.timeRange) {\n\t\t\t\t$('#post-time-range').val(formData.timeRange);\n\t\t\t\t$('#post-time-filter').val(formData.timeFilter);\n\t\t\t}\n\n\t\t\tif (formData.sortBy) {\n\t\t\t\t$('#post-sort-by').val(formData.sortBy);\n\t\t\t\t$('#post-sort-direction').val(formData.sortDirection);\n\t\t\t}\n\n\t\t\tif (formData.showAs) {\n\t\t\t\tvar isTopic = formData.showAs === 'topics';\n\t\t\t\tvar isPost = formData.showAs === 'posts';\n\t\t\t\t$('#show-as-topics').prop('checked', isTopic).parent().toggleClass('active', isTopic);\n\t\t\t\t$('#show-as-posts').prop('checked', isPost).parent().toggleClass('active', isPost);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction highlightMatches(searchQuery) {\n\t\tif (!searchQuery) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar regexStr = searchQuery.replace(/^\"/, '').replace(/\"$/, '').trim().split(' ').join('|');\n\t\tvar regex = new RegExp('(' + regexStr + ')', 'gi');\n\n\t\t$('.search-result-text p, .search-result-text h4').each(function () {\n\t\t\tvar result = $(this), nested = [];\n\n\t\t\tresult.find('*').each(function () {\n\t\t\t\t$(this).after('<!-- ' + nested.length + ' -->');\n\t\t\t\tnested.push($('<div />').append($(this)));\n\t\t\t});\n\n\t\t\tresult.html(result.html().replace(regex, '<strong>$1</strong>'));\n\n\t\t\tfor (var i = 0, ii = nested.length; i < ii; i++) {\n\t\t\t\tresult.html(result.html().replace('<!-- ' + i + ' -->', nested[i].html()));\n\t\t\t}\n\t\t});\n\n\t\t$('.search-result-text').find('img:not(.not-responsive)').addClass('img-responsive');\n\t}\n\n\tfunction handleSavePreferences() {\n\t\t$('#save-preferences').on('click', function () {\n\t\t\tlocalStorage.setItem('search-preferences', JSON.stringify(getSearchData()));\n\t\t\tapp.alertSuccess('[[search:search-preferences-saved]]');\n\t\t\treturn false;\n\t\t});\n\n\t\t$('#clear-preferences').on('click', function () {\n\t\t\tlocalStorage.removeItem('search-preferences');\n\t\t\tvar query = $('#search-input').val();\n\t\t\t$('#advanced-search')[0].reset();\n\t\t\t$('#search-input').val(query);\n\t\t\tapp.alertSuccess('[[search:search-preferences-cleared]]');\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tfunction enableAutoComplete() {\n\t\tautocomplete.user($('#posted-by-user'));\n\t}\n\n\treturn Search;\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/client/tag.js":"'use strict';\n\n/* globals define, app, ajaxify, socket */\n\ndefine('forum/tag', ['forum/recent', 'forum/infinitescroll'], function (recent, infinitescroll) {\n\tvar Tag = {};\n\n\tTag.init = function () {\n\t\tapp.enterRoom('tags');\n\n\t\tif ($('body').height() <= $(window).height() && $('[component=\"category\"]').children().length >= 20) {\n\t\t\t$('#load-more-btn').show();\n\t\t}\n\n\t\t$('#load-more-btn').on('click', function () {\n\t\t\tloadMoreTopics();\n\t\t});\n\n\t\tif (!config.usePagination) {\n\t\t\tinfinitescroll.init(loadMoreTopics);\n\t\t}\n\n\t\tfunction loadMoreTopics(direction) {\n\t\t\tif(direction < 0 || !$('[component=\"category\"]').length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tinfinitescroll.loadMore('topics.loadMoreFromSet', {\n\t\t\t\tset: 'tag:' + ajaxify.data.tag + ':topics',\n\t\t\t\tafter: $('[component=\"category\"]').attr('data-nextstart')\n\t\t\t}, function (data, done) {\n\t\t\t\tif (data.topics && data.topics.length) {\n\t\t\t\t\trecent.onTopicsLoaded('tag', data.topics, false, done);\n\t\t\t\t} else {\n\t\t\t\t\tdone();\n\t\t\t\t\t$('#load-more-btn').hide();\n\t\t\t\t}\n\t\t\t\t$('[component=\"category\"]').attr('data-nextstart', data.nextStart);\n\t\t\t});\n\t\t}\n\t};\n\n\treturn Tag;\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/client/tags.js":"'use strict';\n\n/* globals define, app, utils, socket */\n\ndefine('forum/tags', ['forum/infinitescroll'], function (infinitescroll) {\n\tvar Tags = {};\n\tvar timeoutId = 0;\n\n\tTags.init = function () {\n\t\tapp.enterRoom('tags');\n\n\t\t$('#tag-search').on('input propertychange', function () {\n\t\t\tif (timeoutId) {\n\t\t\t\tclearTimeout(timeoutId);\n\t\t\t\ttimeoutId = 0;\n\t\t\t}\n\n\t\t\tif (!$('#tag-search').val().length) {\n\t\t\t\treturn resetSearch();\n\t\t\t}\n\n\t\t\ttimeoutId = setTimeout(function () {\n\t\t\t\tsocket.emit('topics.searchAndLoadTags', {query: $('#tag-search').val()}, function (err, results) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t\t}\n\t\t\t\t\tonTagsLoaded(results.tags, true, function () {\n\t\t\t\t\t\ttimeoutId = 0;\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}, 100);\n\t\t});\n\n\t\tinfinitescroll.init(Tags.loadMoreTags);\n\t};\n\n\tTags.loadMoreTags = function (direction) {\n\t\tif (direction < 0 || !$('.tag-list').length || $('#tag-search').val()) {\n\t\t\treturn;\n\t\t}\n\n\t\tinfinitescroll.loadMore('topics.loadMoreTags', {\n\t\t\tafter: $('.tag-list').attr('data-nextstart')\n\t\t}, function (data, done) {\n\t\t\tif (data && data.tags && data.tags.length) {\n\t\t\t\tonTagsLoaded(data.tags, false, done);\n\t\t\t\t$('.tag-list').attr('data-nextstart', data.nextStart);\n\t\t\t} else {\n\t\t\t\tdone();\n\t\t\t}\n\t\t});\n\t};\n\n\tfunction resetSearch() {\n\t\tsocket.emit('topics.loadMoreTags', {\n\t\t\tafter: 0\n\t\t}, function (err, data) {\n\t\t\tif (err) {\n\t\t\t\treturn app.alertError(err.message);\n\t\t\t}\n\t\t\tonTagsLoaded(data.tags, true);\n\t\t});\n\t}\n\n\tfunction onTagsLoaded(tags, replace, callback) {\n\t\tcallback = callback || function () {};\n\t\tapp.parseAndTranslate('tags', 'tags', {tags: tags}, function (html) {\n\t\t\t$('.tag-list')[replace ? 'html' : 'append'](html);\n\t\t\tutils.makeNumbersHumanReadable(html.find('.human-readable-number'));\n\t\t\tcallback();\n\t\t});\n\t}\n\n\treturn Tags;\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/client/topic.js":"'use strict';\n\n\n/* globals define, app, socket, config, ajaxify, RELATIVE_PATH, utils */\n\ndefine('forum/topic', [\n\t'forum/infinitescroll',\n\t'forum/topic/threadTools',\n\t'forum/topic/postTools',\n\t'forum/topic/events',\n\t'forum/topic/posts',\n\t'forum/topic/replies',\n\t'navigator',\n\t'sort',\n\t'components'\n], function (infinitescroll, threadTools, postTools, events, posts, replies, navigator, sort, components) {\n\tvar\tTopic = {},\n\t\tcurrentUrl = '';\n\n\t$(window).on('action:ajaxify.start', function (ev, data) {\n\t\tif (Topic.replaceURLTimeout) {\n\t\t\tclearTimeout(Topic.replaceURLTimeout);\n\t\t\tTopic.replaceURLTimeout = 0;\n\t\t}\n\n\t\tif (ajaxify.currentPage !== data.url) {\n\t\t\tnavigator.disable();\n\t\t\tcomponents.get('navbar/title').find('span').text('').hide();\n\t\t\tapp.removeAlert('bookmark');\n\n\t\t\tevents.removeListeners();\n\t\t\t$(window).off('keydown', onKeyDown);\n\t\t}\n\n\t\tif (data.url && !data.url.startsWith('topic/')) {\n\t\t\trequire(['search'], function (search) {\n\t\t\t\tif (search.topicDOM.active) {\n\t\t\t\t\tsearch.topicDOM.end();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n\tTopic.init = function () {\n\t\tvar tid = ajaxify.data.tid;\n\n\t\t$(window).trigger('action:topic.loading');\n\n\t\tapp.enterRoom('topic_' + tid);\n\n\t\tposts.processPage(components.get('post'));\n\n\t\tpostTools.init(tid);\n\t\tthreadTools.init(tid);\n\t\treplies.init(tid);\n\t\tevents.init();\n\n\t\tsort.handleSort('topicPostSort', 'user.setTopicSort', 'topic/' + ajaxify.data.slug);\n\n\t\tif (!config.usePagination) {\n\t\t\tinfinitescroll.init($('[component=\"topic\"]'), posts.loadMorePosts);\n\t\t}\n\n\t\taddBlockQuoteHandler();\n\n\t\taddParentHandler();\n\n\t\thandleKeys();\n\n\t\tnavigator.init('[component=\"post\"]', ajaxify.data.postcount, Topic.toTop, Topic.toBottom, Topic.navigatorCallback, Topic.calculateIndex);\n\n\t\thandleBookmark(tid);\n\n\t\t$(window).on('scroll', updateTopicTitle);\n\n\t\thandleTopicSearch();\n\n\t\t$(window).trigger('action:topic.loaded', ajaxify.data);\n\t};\n\n\tfunction handleKeys() {\n\t\tif (!config.usePagination) {\n\t\t\t$(window).off('keydown', onKeyDown).on('keydown', onKeyDown);\n\t\t}\n\t}\n\n\tfunction onKeyDown(ev) {\n\t\tif (ev.target.nodeName === 'BODY') {\n\t\t\tif (ev.shiftKey || ev.ctrlKey || ev.altKey) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (ev.which === 36) { // home key\n\t\t\t\tTopic.toTop();\n\t\t\t\treturn false;\n\t\t\t} else if (ev.which === 35) { // end key\n\t\t\t\tTopic.toBottom();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleTopicSearch() {\n\t\trequire(['search', 'mousetrap'], function (search, mousetrap) {\n\t\t\t$('.topic-search')\n\t\t\t\t.on('click', '.prev', function () {\n\t\t\t\t\tsearch.topicDOM.prev();\n\t\t\t\t})\n\t\t\t\t.on('click', '.next', function () {\n\t\t\t\t\tsearch.topicDOM.next();\n\t\t\t\t});\n\n\t\t\tmousetrap.bind('ctrl+f', function (e) {\n\t\t\t\tif (config.topicSearchEnabled) {\n\t\t\t\t\t// If in topic, open search window and populate, otherwise regular behaviour\n\t\t\t\t\tvar match = ajaxify.currentPage.match(/^topic\\/([\\d]+)/),\n\t\t\t\t\t\ttid;\n\t\t\t\t\tif (match) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\ttid = match[1];\n\t\t\t\t\t\t$('#search-fields input').val('in:topic-' + tid + ' ');\n\t\t\t\t\t\tapp.prepareSearch();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tTopic.toTop = function () {\n\t\tnavigator.scrollTop(0);\n\t};\n\n\tTopic.toBottom = function () {\n\t\tsocket.emit('topics.postcount', ajaxify.data.tid, function (err, postCount) {\n\t\t\tif (err) {\n\t\t\t\treturn app.alertError(err.message);\n\t\t\t}\n\t\t\tif (config.topicPostSort !== 'oldest_to_newest') {\n\t\t\t\tpostCount = 2;\n\t\t\t}\n\t\t\tnavigator.scrollBottom(postCount - 1);\n\t\t});\n\t};\n\n\tfunction handleBookmark(tid) {\n\t\t// use the user's bookmark data if available, fallback to local if available\n\t\tvar bookmark = ajaxify.data.bookmark || localStorage.getItem('topic:' + tid + ':bookmark');\n\t\tvar postIndex = getPostIndex();\n\n\t\tif (postIndex && window.location.search.indexOf('page=') === -1) {\n\t\t\tif (components.get('post/anchor', postIndex).length) {\n\t\t\t\treturn navigator.scrollToPostIndex(postIndex, true, 0);\n\t\t\t}\n\t\t} else if (bookmark && (!config.usePagination || (config.usePagination && ajaxify.data.pagination.currentPage === 1)) && ajaxify.data.postcount > ajaxify.data.bookmarkThreshold) {\n\t\t\tnavigator.update(0);\n\t\t\tapp.alert({\n\t\t\t\talert_id: 'bookmark',\n\t\t\t\tmessage: '[[topic:bookmark_instructions]]',\n\t\t\t\ttimeout: 0,\n\t\t\t\ttype: 'info',\n\t\t\t\tclickfn : function () {\n\t\t\t\t\tnavigator.scrollToPost(parseInt(bookmark - 1, 10), true);\n\t\t\t\t},\n\t\t\t\tclosefn : function () {\n\t\t\t\t\tlocalStorage.removeItem('topic:' + tid + ':bookmark');\n\t\t\t\t}\n\t\t\t});\n\t\t\tsetTimeout(function () {\n\t\t\t\tapp.removeAlert('bookmark');\n\t\t\t}, 10000);\n\t\t} else {\n\t\t\tnavigator.update(0);\n\t\t}\n\t}\n\n\tfunction getPostIndex() {\n\t\tvar parts = window.location.pathname.split('/');\n\t\tvar lastPart = parts[parts.length - 1];\n\t\tif (lastPart && utils.isNumber(lastPart)) {\n\t\t\tlastPart = Math.max(0, parseInt(lastPart, 10) - 1);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (lastPart > 0 && !components.get('post/anchor', lastPart).length) {\n\t\t\treturn components.get('post/anchor').last().attr('name');\n\t\t}\n\n\t\treturn lastPart;\n\t}\n\n\tfunction addBlockQuoteHandler() {\n\t\tcomponents.get('topic').on('click', 'blockquote .toggle', function () {\n\t\t\tvar blockQuote = $(this).parent('blockquote');\n\t\t\tvar toggle = $(this);\n\t\t\tblockQuote.toggleClass('uncollapsed');\n\t\t\tvar collapsed = !blockQuote.hasClass('uncollapsed');\n\t\t\ttoggle.toggleClass('fa-angle-down', collapsed).toggleClass('fa-angle-up', !collapsed);\n\t\t});\n\t}\n\n\tfunction addParentHandler() {\n\t\tcomponents.get('topic').on('click', '[component=\"post/parent\"]', function (e) {\n\t\t\tvar toPid = $(this).attr('data-topid');\n\n\t\t\tvar toPost = $('[component=\"post\"][data-pid=\"' + toPid + '\"]');\n\t\t\tif (toPost.length) {\n\t\t\t\te.preventDefault();\n\t\t\t\tnavigator.scrollToPost(toPost.attr('data-index'), true);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction updateTopicTitle() {\n\t\tvar span = components.get('navbar/title').find('span');\n\t\tif ($(window).scrollTop() > 50 && span.hasClass('hidden')) {\n\t\t\tspan.html(ajaxify.data.title).removeClass('hidden');\n\t\t} else if ($(window).scrollTop() <= 50 && !span.hasClass('hidden')) {\n\t\t\tspan.html('').addClass('hidden');\n\t\t}\n\t\tif ($(window).scrollTop() > 300) {\n\t\t\tapp.removeAlert('bookmark');\n\t\t}\n\t}\n\n\tTopic.calculateIndex = function (index, elementCount) {\n\t\tif (index !== 1 && config.topicPostSort !== 'oldest_to_newest') {\n\t\t\treturn elementCount - index + 2;\n\t\t}\n\t\treturn index;\n\t};\n\n\tTopic.navigatorCallback = function (index, elementCount, threshold) {\n\t\tvar path = ajaxify.removeRelativePath(window.location.pathname.slice(1));\n\t\tif (!path.startsWith('topic')) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (navigator.scrollActive) {\n\t\t\treturn;\n\t\t}\n\n\t\tposts.loadImages(threshold);\n\n\t\tvar newUrl = 'topic/' + ajaxify.data.slug + (index > 1 ? ('/' + index) : '');\n\n\t\tif (newUrl !== currentUrl) {\n\n\t\t\tif (Topic.replaceURLTimeout) {\n\t\t\t\tclearTimeout(Topic.replaceURLTimeout);\n\t\t\t}\n\n\t\t\tTopic.replaceURLTimeout = setTimeout(function () {\n\n\t\t\t\tif (index >= elementCount && app.user.uid) {\n\t\t\t\t\tsocket.emit('topics.markAsRead', [ajaxify.data.tid]);\n\t\t\t\t}\n\n\t\t\t\tupdateUserBookmark(index);\n\n\t\t\t\tTopic.replaceURLTimeout = 0;\n\t\t\t\tif (history.replaceState) {\n\t\t\t\t\tvar search = window.location.search || '';\n\t\t\t\t\tif (!config.usePagination) {\n\t\t\t\t\t\tsearch = (search && !/^\\?page=\\d+$/.test(search) ? search : '');\n\t\t\t\t\t}\n\n\t\t\t\t\thistory.replaceState({\n\t\t\t\t\t\turl: newUrl + search\n\t\t\t\t\t}, null, window.location.protocol + '//' + window.location.host + RELATIVE_PATH + '/' + newUrl + search);\n\t\t\t\t}\n\t\t\t\tcurrentUrl = newUrl;\n\t\t\t}, 500);\n\t\t}\n\t};\n\n\tfunction updateUserBookmark(index) {\n\t\tvar bookmarkKey = 'topic:' + ajaxify.data.tid + ':bookmark';\n\t\tvar currentBookmark = ajaxify.data.bookmark || localStorage.getItem(bookmarkKey);\n\n\t\tif (ajaxify.data.postcount > ajaxify.data.bookmarkThreshold && (!currentBookmark || parseInt(index, 10) > parseInt(currentBookmark, 10))) {\n\t\t\tif (app.user.uid) {\n\t\t\t\tsocket.emit('topics.bookmark', {\n\t\t\t\t\t'tid': ajaxify.data.tid,\n\t\t\t\t\t'index': index\n\t\t\t\t}, function (err) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t\t}\n\t\t\t\t\tajaxify.data.bookmark = index;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlocalStorage.setItem(bookmarkKey, index);\n\t\t\t}\n\t\t}\n\n\t\t// removes the bookmark alert when we get to / past the bookmark\n\t\tif (!currentBookmark || parseInt(index, 10) >= parseInt(currentBookmark, 10)) {\n\t\t\tapp.removeAlert('bookmark');\n\t\t}\n\n\t}\n\n\n\treturn Topic;\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/client/unread.js":"'use strict';\n\n/* globals define, app, socket */\n\ndefine('forum/unread', ['forum/recent', 'topicSelect', 'forum/infinitescroll', 'components'], function (recent, topicSelect, infinitescroll, components) {\n\tvar Unread = {};\n\n\t$(window).on('action:ajaxify.start', function (ev, data) {\n\t\tif (ajaxify.currentPage !== data.url) {\n\t\t\trecent.removeListeners();\n\t\t}\n\t});\n\n\tUnread.init = function () {\n\t\tapp.enterRoom('unread_topics');\n\n\t\t$('#new-topics-alert').on('click', function () {\n\t\t\t$(this).addClass('hide');\n\t\t});\n\n\t\trecent.watchForNewPosts();\n\n\t\t$(window).trigger('action:topics.loaded', {topics: ajaxify.data.topics});\n\n\t\t$('#markSelectedRead').on('click', function () {\n\t\t\tvar tids = topicSelect.getSelectedTids();\n\t\t\tif(!tids.length) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsocket.emit('topics.markAsRead', tids, function (err) {\n\t\t\t\tif(err) {\n\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t}\n\n\t\t\t\tdoneRemovingTids(tids);\n\t\t\t});\n\t\t});\n\n\t\t$('#markAllRead').on('click', function () {\n\t\t\tsocket.emit('topics.markAllRead', function (err) {\n\t\t\t\tif(err) {\n\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t}\n\n\t\t\t\tapp.alertSuccess('[[unread:topics_marked_as_read.success]]');\n\n\t\t\t\t$('[component=\"category\"]').empty();\n\t\t\t\t$('[component=\"pagination\"]').addClass('hidden');\n\t\t\t\t$('#category-no-topics').removeClass('hidden');\n\t\t\t\t$('.markread').addClass('hidden');\n\t\t\t});\n\t\t});\n\n\t\t$('.markread').on('click', '.category', function () {\n\t\t\tfunction getCategoryTids(cid) {\n\t\t\t\tvar tids = [];\n\t\t\t\tcomponents.get('category/topic', 'cid', cid).each(function () {\n\t\t\t\t\ttids.push($(this).attr('data-tid'));\n\t\t\t\t});\n\t\t\t\treturn tids;\n\t\t\t}\n\t\t\tvar cid = $(this).attr('data-cid');\n\t\t\tvar tids = getCategoryTids(cid);\n\n\t\t\tsocket.emit('topics.markCategoryTopicsRead', cid, function (err) {\n\t\t\t\tif(err) {\n\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t}\n\n\t\t\t\tdoneRemovingTids(tids);\n\t\t\t});\n\t\t});\n\n\t\ttopicSelect.init();\n\n\t\tif ($(\"body\").height() <= $(window).height() && $('[component=\"category\"]').children().length >= 20) {\n\t\t\t$('#load-more-btn').show();\n\t\t}\n\n\t\t$('#load-more-btn').on('click', function () {\n\t\t\tloadMoreTopics();\n\t\t});\n\n\t\tif (!config.usePagination) {\n\t\t\tinfinitescroll.init(loadMoreTopics);\n\t\t}\n\n\t\tfunction loadMoreTopics(direction) {\n\t\t\tif(direction < 0 || !$('[component=\"category\"]').length) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar params = utils.params();\n\t\t\tvar cid = params.cid;\n\t\t\tinfinitescroll.loadMore('topics.loadMoreUnreadTopics', {\n\t\t\t\tafter: $('[component=\"category\"]').attr('data-nextstart'),\n\t\t\t\tcid: cid,\n\t\t\t\tfilter: ajaxify.data.selectedFilter.filter\n\t\t\t}, function (data, done) {\n\t\t\t\tif (data.topics && data.topics.length) {\n\t\t\t\t\trecent.onTopicsLoaded('unread', data.topics, true, done);\n\t\t\t\t\t$('[component=\"category\"]').attr('data-nextstart', data.nextStart);\n\t\t\t\t} else {\n\t\t\t\t\tdone();\n\t\t\t\t\t$('#load-more-btn').hide();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\tfunction doneRemovingTids(tids) {\n\t\tremoveTids(tids);\n\n\t\tapp.alertSuccess('[[unread:topics_marked_as_read.success]]');\n\n\t\tif (!$('[component=\"category\"]').children().length) {\n\t\t\t$('#category-no-topics').removeClass('hidden');\n\t\t\t$('.markread').addClass('hidden');\n\t\t}\n\t}\n\n\tfunction removeTids(tids) {\n\t\tfor(var i = 0; i < tids.length; ++i) {\n\t\t\tcomponents.get('category/topic', 'tid', tids[i]).remove();\n\t\t}\n\t}\n\n\n\treturn Unread;\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/client/users.js":"'use strict';\n\n/* globals define, socket, app, templates, bootbox, utils */\n\ndefine('forum/users', ['translator'], function (translator) {\n\tvar\tUsers = {};\n\n\tvar searchTimeoutID = 0;\n\n\t$(window).on('action:ajaxify.start', function () {\n\t\tif (searchTimeoutID) {\n\t\t\tclearTimeout(searchTimeoutID);\n\t\t\tsearchTimeoutID = 0;\n\t\t}\n\t});\n\n\tUsers.init = function () {\n\t\tapp.enterRoom('user_list');\n\n\t\tvar section = utils.params().section ? ('?section=' + utils.params().section) : '';\n\t\t$('.nav-pills li').removeClass('active').find('a[href=\"' + window.location.pathname + section + '\"]').parent().addClass('active');\n\n\t\thandleSearch();\n\n\t\thandleInvite();\n\n\t\tsocket.removeListener('event:user_status_change', onUserStatusChange);\n\t\tsocket.on('event:user_status_change', onUserStatusChange);\n\t};\n\n\tfunction handleSearch() {\n\t\tsearchTimeoutID = 0;\n\n\t\t$('#search-user').on('keyup', function () {\n\t\t\tif (searchTimeoutID) {\n\t\t\t\tclearTimeout(searchTimeoutID);\n\t\t\t\tsearchTimeoutID = 0;\n\t\t\t}\n\n\t\t\tsearchTimeoutID = setTimeout(doSearch, 150);\n\t\t});\n\n\t\t$('.search select, .search input[type=\"checkbox\"]').on('change', function () {\n\t\t\tdoSearch();\n\t\t});\n\t}\n\n\tfunction doSearch() {\n\t\t$('[component=\"user/search/icon\"]').removeClass('fa-search').addClass('fa-spinner fa-spin');\n\t\tvar username = $('#search-user').val();\n\t\tvar activeSection = getActiveSection();\n\n\t\tvar query = {\n\t\t\tsection: activeSection,\n\t\t\tpage: 1\n\t\t};\n\n\t\tif (!username) {\n\t\t\treturn loadPage(query);\n\t\t}\n\n\t\tquery.term = username;\n\t\tquery.sortBy = getSortBy();\n\n\t\tif ($('.search .online-only').is(':checked') || (activeSection === 'online')) {\n\t\t\tquery.onlineOnly = true;\n\t\t}\n\t\tif (activeSection === 'banned') {\n\t\t\tquery.bannedOnly =  true;\n\t\t}\n\t\tif (activeSection === 'flagged') {\n\t\t\tquery.flaggedOnly = true;\n\t\t}\n\n\t\tloadPage(query);\n\t}\n\n\tfunction getSortBy() {\n\t\tvar sortBy;\n\t\tvar activeSection = getActiveSection();\n\t\tif (activeSection === 'sort-posts') {\n\t\t\tsortBy = 'postcount';\n\t\t} else if (activeSection === 'sort-reputation') {\n\t\t\tsortBy = 'reputation';\n\t\t} else if (activeSection === 'users') {\n\t\t\tsortBy = 'joindate';\n\t\t}\n\t\treturn sortBy;\n\t}\n\n\n\tfunction loadPage(query) {\n\t\tvar qs = decodeURIComponent($.param(query));\n\t\t$.get(config.relative_path + '/api/users?' + qs, renderSearchResults).fail(function (xhrErr) {\n\t\t\tif (xhrErr && xhrErr.responseJSON && xhrErr.responseJSON.error) {\n\t\t\t\tapp.alertError(xhrErr.responseJSON.error);\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction renderSearchResults(data) {\n\t\ttemplates.parse('partials/paginator', {pagination: data.pagination}, function (html) {\n\t\t\t$('.pagination-container').replaceWith(html);\n\t\t});\n\n\t\ttemplates.parse('users', 'users', data, function (html) {\n\t\t\ttranslator.translate(html, function (translated) {\n\t\t\t\ttranslated = $(translated);\n\t\t\t\t$('#users-container').html(translated);\n\t\t\t\ttranslated.find('span.timeago').timeago();\n\t\t\t\t$('[component=\"user/search/icon\"]').addClass('fa-search').removeClass('fa-spinner fa-spin');\n\t\t\t});\n\t\t});\n\t}\n\n\tfunction onUserStatusChange(data) {\n\t\tvar section = getActiveSection();\n\n\t\tif ((section.startsWith('online') || section.startsWith('users'))) {\n\t\t\tupdateUser(data);\n\t\t}\n\t}\n\n\tfunction updateUser(data) {\n\t\tapp.updateUserStatus($('#users-container [data-uid=\"' + data.uid + '\"] [component=\"user/status\"]'), data.status);\n\t}\n\n\tfunction getActiveSection() {\n\t\treturn utils.params().section || '';\n\t}\n\n\tfunction handleInvite() {\n\t\t$('[component=\"user/invite\"]').on('click', function () {\n\t\t\tbootbox.prompt('Email: ', function (email) {\n\t\t\t\tif (!email) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tsocket.emit('user.invite', email, function (err) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t\t}\n\t\t\t\t\tapp.alertSuccess('[[users:invitation-email-sent, ' + email + ']]');\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\treturn Users;\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/modules/alerts.js":"'use strict';\n/* globals define, templates */\n\ndefine('alerts', ['translator', 'components'], function (translator, components) {\n\tvar module = {};\n\n\tmodule.alert = function (params) {\n\t\tparams.alert_id = 'alert_button_' + (params.alert_id ? params.alert_id : new Date().getTime());\n\t\tparams.title = params.title ? params.title.trim() || '' : '';\n\t\tparams.message = params.message ? params.message.trim() : '';\n\t\tparams.type = params.type || 'info';\n\n\t\tvar alert = $('#' + params.alert_id);\n\t\tif (alert.length) {\n\t\t\tupdateAlert(alert, params);\n\t\t} else {\n\t\t\tcreateNew(params);\n\t\t}\n\t};\n\n\tfunction createNew(params) {\n\t\ttemplates.parse('alert', params, function (alertTpl) {\n\t\t\ttranslator.translate(alertTpl, function (translatedHTML) {\n\t\t\t\tvar alert = $('#' + params.alert_id);\n\t\t\t\tif (alert.length) {\n\t\t\t\t\treturn updateAlert(alert, params);\n\t\t\t\t}\n\t\t\t\talert = $(translatedHTML);\n\t\t\t\talert.fadeIn(200);\n\n\t\t\t\tcomponents.get('toaster/tray').prepend(alert);\n\n\t\t\t\tif(typeof params.closefn === 'function') {\n\t\t\t\t\talert.find('button').on('click', function () {\n\t\t\t\t\t\tparams.closefn();\n\t\t\t\t\t\tfadeOut(alert);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (params.timeout) {\n\t\t\t\t\tstartTimeout(alert, params.timeout);\n\t\t\t\t}\n\n\t\t\t\tif (typeof params.clickfn === 'function') {\n\t\t\t\t\talert\n\t\t\t\t\t\t.addClass('pointer')\n\t\t\t\t\t\t.on('click', function (e) {\n\t\t\t\t\t\t\tif(!$(e.target).is('.close')) {\n\t\t\t\t\t\t\t\tparams.clickfn();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfadeOut(alert);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tmodule.remove = function (id) {\n\t\t$('#alert_button_' + id).remove();\n\t};\n\n\tfunction updateAlert(alert, params) {\n\t\talert.find('strong').html(params.title);\n\t\talert.find('p').html(params.message);\n\t\talert.attr('class', 'alert alert-dismissable alert-' + params.type);\n\n\t\tclearTimeout(parseInt(alert.attr('timeoutId'), 10));\n\t\tif (params.timeout) {\n\t\t\tstartTimeout(alert, params.timeout);\n\t\t}\n\n\t\talert.children().fadeOut(100);\n\t\ttranslator.translate(alert.html(), function (translatedHTML) {\n\t\t\talert.children().fadeIn(100);\n\t\t\talert.html(translatedHTML);\n\t\t});\n\n\t\t// Handle changes in the clickfn\n\t\talert.off('click').removeClass('pointer');\n\t\tif (typeof params.clickfn === 'function') {\n\t\t\talert\n\t\t\t\t.addClass('pointer')\n\t\t\t\t.on('click', function (e) {\n\t\t\t\t\tif(!$(e.target).is('.close')) {\n\t\t\t\t\t\tparams.clickfn();\n\t\t\t\t\t}\n\t\t\t\t\tfadeOut(alert);\n\t\t\t\t});\n\t\t}\n\t}\n\n\tfunction fadeOut(alert) {\n\t\talert.fadeOut(500, function () {\n\t\t\t$(this).remove();\n\t\t});\n\t}\n\n\tfunction startTimeout(alert, timeout) {\n\t\tvar timeoutId = setTimeout(function () {\n\t\t\tfadeOut(alert);\n\t\t}, timeout);\n\n\t\talert.attr('timeoutId', timeoutId);\n\t}\n\n\treturn module;\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/modules/autocomplete.js":"\n'use strict';\n\n/* globals define, socket, app */\n\ndefine('autocomplete', function () {\n\tvar module = {};\n\n\tmodule.user = function (input, onselect) {\n\t\tapp.loadJQueryUI(function () {\n\t\t\tinput.autocomplete({\n\t\t\t\tdelay: 200,\n\t\t\t\topen: function () {\n\t\t\t\t\t$(this).autocomplete('widget').css('z-index', 20000);\n\t\t\t\t},\n\t\t\t\tselect: onselect,\n\t\t\t\tsource: function (request, response) {\n\t\t\t\t\tsocket.emit('user.search', {query: request.term}, function (err, result) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (result && result.users) {\n\t\t\t\t\t\t\tvar names = result.users.map(function (user) {\n\t\t\t\t\t\t\t\tvar username = $('<div/>').html(user.username).text();\n\t\t\t\t\t\t\t\treturn user && {\n\t\t\t\t\t\t\t\t\tlabel: username,\n\t\t\t\t\t\t\t\t\tvalue: username,\n\t\t\t\t\t\t\t\t\tuser: {\n\t\t\t\t\t\t\t\t\t\tuid: user.uid,\n\t\t\t\t\t\t\t\t\t\tname: user.username,\n\t\t\t\t\t\t\t\t\t\tslug: user.userslug\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tresponse(names);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$('.ui-autocomplete a').attr('data-ajaxify', 'false');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n\n\tmodule.group = function (input, onselect) {\n\t\tapp.loadJQueryUI(function () {\n\t\t\tinput.autocomplete({\n\t\t\t\tdelay: 200,\n\t\t\t\tselect: onselect,\n\t\t\t\tsource: function (request, response) {\n\t\t\t\t\tsocket.emit('groups.search', {\n\t\t\t\t\t\tquery: request.term\n\t\t\t\t\t}, function (err, results) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (results && results.length) {\n\t\t\t\t\t\t\tvar names = results.map(function (group) {\n\t\t\t\t\t\t\t\treturn group && {\n\t\t\t\t\t\t\t\t\tlabel: group.name,\n\t\t\t\t\t\t\t\t\tvalue: group.name,\n\t\t\t\t\t\t\t\t\tgroup: {\n\t\t\t\t\t\t\t\t\t\tname: group.name,\n\t\t\t\t\t\t\t\t\t\tslug: group.slug\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tresponse(names);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$('.ui-autocomplete a').attr('data-ajaxify', 'false');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n\n\treturn module;\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/modules/chat.js":"\"use strict\";\n/* globals app, define, socket, templates, utils, ajaxify */\n\ndefine('chat', [\n\t'components',\n\t'taskbar',\n\t'string',\n\t'sounds',\n\t'forum/chats',\n\t'forum/chats/messages',\n\t'translator'\n], function (components, taskbar, S, sounds, Chats, ChatsMessages, translator) {\n\n\tvar module = {};\n\tvar newMessage = false;\n\n\tmodule.prepareDOM = function () {\n\t\tvar chatsToggleEl = components.get('chat/dropdown');\n\t\tvar chatsListEl = components.get('chat/list');\n\n\t\tchatsToggleEl.on('click', function () {\n\t\t\tif (chatsToggleEl.parent().hasClass('open')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmodule.loadChatsDropdown(chatsListEl);\n\t\t});\n\n\t\tchatsListEl.on('click', '[data-roomid]', function (ev) {\n\t\t\tif ($(ev.target).parents('.user-link').length) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar roomId = $(this).attr('data-roomid');\n\t\t\tif (!ajaxify.currentPage.match(/^chats\\//)) {\n\t\t\t\tapp.openChat(roomId);\n\t\t\t} else {\n\t\t\t\tajaxify.go('user/' + app.user.userslug + '/chats/' + roomId);\n\t\t\t}\n\t\t});\n\n\t\t$('[component=\"chats/mark-all-read\"]').on('click', function () {\n\t\t\tsocket.emit('modules.chats.markAllRead', function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn app.alertError(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tsocket.on('event:chats.receive', function (data) {\n\t\t\tvar username = data.message.fromUser.username;\n\t\t\tvar isSelf = data.self === 1;\n\t\t\tdata.message.self = data.self;\n\n\t\t\tnewMessage = data.self === 0;\n\t\t\tif (module.modalExists(data.roomId)) {\n\t\t\t\tvar modal = module.getModal(data.roomId);\n\n\t\t\t\tChatsMessages.appendChatMessage(modal.find('.chat-content'), data.message);\n\n\t\t\t\tif (modal.is(':visible')) {\n\t\t\t\t\ttaskbar.updateActive(modal.attr('UUID'));\n\t\t\t\t\tChatsMessages.scrollToBottom(modal.find('.chat-content'));\n\t\t\t\t} else {\n\t\t\t\t\tmodule.toggleNew(modal.attr('UUID'), true, true);\n\t\t\t\t}\n\n\t\t\t\tif (!isSelf && (!modal.is(':visible') || !app.isFocused)) {\n\t\t\t\t\tapp.alternatingTitle('[[modules:chat.user_has_messaged_you, ' + username + ']]');\n\t\t\t\t\tsounds.play('chat-incoming');\n\n\t\t\t\t\ttaskbar.push('chat', modal.attr('UUID'), {\n\t\t\t\t\t\ttitle: username,\n\t\t\t\t\t\ttouid: data.message.fromUser.uid,\n\t\t\t\t\t\troomId: data.roomId\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsocket.emit('modules.chats.loadRoom', {roomId: data.roomId}, function (err, roomData) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t\t}\n\t\t\t\t\troomData.users = roomData.users.filter(function (user) {\n\t\t\t\t\t\treturn user && parseInt(user.uid, 10) !== parseInt(app.user.uid, 10);\n\t\t\t\t\t});\n\t\t\t\t\troomData.silent = true;\n\t\t\t\t\troomData.uid = app.user.uid;\n\t\t\t\t\tmodule.createModal(roomData, function (modal) {\n\t\t\t\t\t\tmodule.toggleNew(modal.attr('UUID'), !isSelf, true);\n\t\t\t\t\t\tif (!isSelf) {\n\t\t\t\t\t\t\tapp.alternatingTitle('[[modules:chat.user_has_messaged_you, ' + username + ']]');\n\t\t\t\t\t\t\tsounds.play('chat-incoming');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tsocket.on('event:user_status_change', function (data) {\n\t\t\tvar modal = module.getModal(data.uid);\n\t\t\tapp.updateUserStatus(modal.find('[component=\"user/status\"]'), data.status);\n\t\t});\n\n\t\tsocket.on('event:chats.roomRename', function (data) {\n\t\t\tmodule.getModal(data.roomId).find('[component=\"chat/room/name\"]').val($('<div/>').html(data.newName).text());\n\t\t});\n\n\t\tChatsMessages.onChatMessageEdit();\n\t};\n\n\tmodule.loadChatsDropdown = function (chatsListEl) {\n\t\tsocket.emit('modules.chats.getRecentChats', {uid: app.user.uid, after: 0}, function (err, data) {\n\t\t\tif (err) {\n\t\t\t\treturn app.alertError(err.message);\n\t\t\t}\n\n\t\t\tvar rooms = data.rooms.filter(function (room) {\n\t\t\t    return room.teaser;\n\t\t\t});\n\n\t\t\ttemplates.parse('partials/chats/dropdown', {\n\t\t\t\trooms: rooms\n\t\t\t}, function (html) {\n\t\t\t\ttranslator.translate(html, function (translated) {\n\t\t\t\t\tchatsListEl.empty().html(translated);\n\t\t\t\t\tapp.createUserTooltips(chatsListEl, 'right');\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n\n\tmodule.bringModalToTop = function (chatModal) {\n\t\tvar topZ = 0;\n\n\t\ttaskbar.updateActive(chatModal.attr('UUID'));\n\n\t\tif ($('.chat-modal').length === 1) {\n\t\t\treturn;\n\t\t}\n\t\t$('.chat-modal').each(function () {\n\t\t\tvar thisZ = parseInt($(this).css('zIndex'), 10);\n\t\t\tif (thisZ > topZ) {\n\t\t\t\ttopZ = thisZ;\n\t\t\t}\n\t\t});\n\n\t\tchatModal.css('zIndex', topZ + 1);\n\t};\n\n\tmodule.getModal = function (roomId) {\n\t\treturn $('#chat-modal-' + roomId);\n\t};\n\n\tmodule.modalExists = function (roomId) {\n\t\treturn $('#chat-modal-' + roomId).length !== 0;\n\t};\n\n\tmodule.createModal = function (data, callback) {\n\t\tapp.parseAndTranslate('chat', data, function (chatModal) {\n\n\t\t\tvar uuid = utils.generateUUID();\n\t\t\tvar dragged = false;\n\n\t\t\tchatModal.attr('id', 'chat-modal-' + data.roomId);\n\t\t\tchatModal.attr('roomId', data.roomId);\n\t\t\tchatModal.attr('intervalId', 0);\n\t\t\tchatModal.attr('UUID', uuid);\n\t\t\tchatModal.css('position', 'fixed');\n\t\t\tchatModal.css('zIndex', 100);\n\t\t\tchatModal.appendTo($('body'));\n\t\t\tchatModal.find('.timeago').timeago();\n\t\t\tmodule.center(chatModal);\n\n\t\t\tapp.loadJQueryUI(function () {\n\t\t\t\tchatModal.find('.modal-content').resizable({\n\t\t\t\t\thandles: 'n, e, s, w, se',\n\t\t\t\t\tminHeight: 250,\n\t\t\t\t\tminWidth: 400\n\t\t\t\t});\n\n\t\t\t\tchatModal.find('.modal-content').on('resize', function (event, ui) {\n\t\t\t\t\tif (ui.originalSize.height === ui.size.height) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tchatModal.find('.chat-content').css('height', module.calculateChatListHeight(chatModal));\n\t\t\t\t});\n\n\t\t\t\tchatModal.draggable({\n\t\t\t\t\tstart:function () {\n\t\t\t\t\t\tmodule.bringModalToTop(chatModal);\n\t\t\t\t\t},\n\t\t\t\t\tstop:function () {\n\t\t\t\t\t\tchatModal.find('#chat-message-input').focus();\n\t\t\t\t\t},\n\t\t\t\t\tdistance: 10,\n\t\t\t\t\thandle: '.modal-header'\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tchatModal.find('#chat-close-btn').on('click', function () {\n\t\t\t\tmodule.close(chatModal);\n\t\t\t});\n\n\t\t\tfunction gotoChats() {\n\t\t\t\tvar text = components.get('chat/input').val();\n\t\t\t\t$(window).one('action:ajaxify.end', function () {\n\t\t\t\t\tcomponents.get('chat/input').val(text);\n\t\t\t\t});\n\n\t\t\t\tajaxify.go('user/' + app.user.userslug + '/chats/' + chatModal.attr('roomId'));\n\t\t\t\tmodule.close(chatModal);\n\t\t\t}\n\n\t\t\tchatModal.find('.modal-header').on('dblclick', gotoChats);\n\t\t\tchatModal.find('button[data-action=\"maximize\"]').on('click', gotoChats);\n\t\t\tchatModal.find('button[data-action=\"minimize\"]').on('click', function () {\n\t\t\t\tvar uuid = chatModal.attr('uuid');\n\t\t\t\tmodule.minimize(uuid);\n\t\t\t});\n\n\t\t\tchatModal.on('click', function () {\n\t\t\t\tmodule.bringModalToTop(chatModal);\n\n\t\t\t\tif (dragged) {\n\t\t\t\t\tdragged = false;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tchatModal.on('mousemove', function (e) {\n\t\t\t\tif (e.which === 1) {\n\t\t\t\t\tdragged = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tchatModal.on('mousemove keypress click', function () {\n\t\t\t\tif (newMessage) {\n\t\t\t\t\tsocket.emit('modules.chats.markRead', data.roomId);\n\t\t\t\t\tnewMessage = false;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tChats.addEditDeleteHandler(chatModal.find('[component=\"chat/messages\"]'), data.roomId);\n\n\t\t\tchatModal.find('[component=\"chat/controlsToggle\"]').on('click', function () {\n\t\t\t\tvar messagesEl = chatModal.find('[component=\"chat/messages\"]');\n\n\t\t\t\tchatModal.find('[component=\"chat/controls\"]').toggle();\n\t\t\t\tmessagesEl.css('height', module.calculateChatListHeight(chatModal));\n\t\t\t});\n\n\t\t\tChats.addRenameHandler(chatModal.attr('roomId'), chatModal.find('[component=\"chat/room/name\"]'));\n\n\t\t\tChats.addSendHandlers(chatModal.attr('roomId'), chatModal.find('#chat-message-input'), chatModal.find('#chat-message-send-btn'));\n\n\t\t\tChats.createTagsInput(chatModal.find('.users-tag-input'), data);\n\t\t\tChats.createAutoComplete(chatModal.find('[component=\"chat/input\"]'));\n\n\t\t\tChats.addScrollHandler(chatModal.attr('roomId'), data.uid, chatModal.find('.chat-content'));\n\n\t\t\ttaskbar.push('chat', chatModal.attr('UUID'), {\n\t\t\t\ttitle: data.roomName || (data.users.length ? data.users[0].username : ''),\n\t\t\t\troomId: data.roomId,\n\t\t\t\ticon: 'fa-comment',\n\t\t\t\tstate: ''\n\t\t\t});\n\n\t\t\t$(window).trigger('action:chat.loaded', chatModal);\n\n\t\t\tif (typeof callback === 'function') {\n\t\t\t\tcallback(chatModal);\n\t\t\t}\n\t\t});\n\t};\n\n\tmodule.focusInput = function (chatModal) {\n\t\tchatModal.find('#chat-message-input').focus();\n\t};\n\n\tmodule.close = function (chatModal) {\n\t\tclearInterval(chatModal.attr('intervalId'));\n\t\tchatModal.attr('intervalId', 0);\n\t\tchatModal.remove();\n\t\tchatModal.data('modal', null);\n\t\ttaskbar.discard('chat', chatModal.attr('UUID'));\n\n\t\tif (chatModal.attr('data-mobile')) {\n\t\t\tmodule.disableMobileBehaviour(chatModal);\n\t\t}\n\t};\n\n\tmodule.center = function (chatModal) {\n\t\tvar hideAfter = false;\n\t\tif (chatModal.hasClass('hide')) {\n\t\t\tchatModal.removeClass('hide');\n\t\t\thideAfter = true;\n\t\t}\n\t\tchatModal.css('left', Math.max(0, (($(window).width() - $(chatModal).outerWidth()) / 2) + $(window).scrollLeft()) + 'px');\n\t\tchatModal.css('top', Math.max(0, $(window).height() / 2 - $(chatModal).outerHeight() / 2) + 'px');\n\n\t\tif (hideAfter) {\n\t\t\tchatModal.addClass('hide');\n\t\t}\n\t\treturn chatModal;\n\t};\n\n\tmodule.load = function (uuid) {\n\t\tvar chatModal = $('div[UUID=\"' + uuid + '\"]');\n\t\tchatModal.removeClass('hide');\n\t\ttaskbar.updateActive(uuid);\n\t\tChatsMessages.scrollToBottom(chatModal.find('.chat-content'));\n\t\tmodule.bringModalToTop(chatModal);\n\t\tmodule.focusInput(chatModal);\n\t\tsocket.emit('modules.chats.markRead', chatModal.attr('roomId'));\n\n\t\tvar env = utils.findBootstrapEnvironment();\n\t\tif (env === 'xs' || env === 'sm') {\n\t\t\tmodule.enableMobileBehaviour(chatModal);\n\t\t}\n\t};\n\n\tmodule.enableMobileBehaviour = function (modalEl) {\n\t\tapp.toggleNavbar(false);\n\t\tmodalEl.attr('data-mobile', '1');\n\t\tvar messagesEl = modalEl.find('.chat-content');\n\t\tmessagesEl.css('height', module.calculateChatListHeight(modalEl));\n\n\t\t$(window).on('resize', function () {\n\t\t\tmessagesEl.css('height', module.calculateChatListHeight(modalEl));\n\t\t});\n\t};\n\n\tmodule.disableMobileBehaviour = function () {\n\t\tapp.toggleNavbar(true);\n\t};\n\n\tmodule.calculateChatListHeight = function (modalEl) {\n\t\tvar totalHeight = modalEl.find('.modal-content').outerHeight() - modalEl.find('.modal-header').outerHeight();\n\t\tvar padding = parseInt(modalEl.find('.modal-body').css('padding-top'), 10) + parseInt(modalEl.find('.modal-body').css('padding-bottom'), 10);\n\t\tvar contentMargin = parseInt(modalEl.find('.chat-content').css('margin-top'), 10) + parseInt(modalEl.find('.chat-content').css('margin-bottom'), 10);\n\t\tvar inputGroupHeight = modalEl.find('.input-group').outerHeight();\n\n\t\treturn totalHeight - padding - contentMargin - inputGroupHeight;\n\t};\n\n\tmodule.minimize = function (uuid) {\n\t\tvar chatModal = $('div[UUID=\"' + uuid + '\"]');\n\t\tchatModal.addClass('hide');\n\t\ttaskbar.minimize('chat', uuid);\n\t\tclearInterval(chatModal.attr('intervalId'));\n\t\tchatModal.attr('intervalId', 0);\n\t};\n\n\tmodule.toggleNew = taskbar.toggleNew;\n\n\n\treturn module;\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/modules/components.js":"\"use strict\";\ndefine('components', function () {\n\tvar components = {};\n\n\tcomponents.core = {\n\t\t'topic/teaser': function (tid) {\n\t\t\tif (tid) {\n\t\t\t\treturn $('[component=\"category/topic\"][data-tid=\"' + tid + '\"] [component=\"topic/teaser\"]');\n\t\t\t} else {\n\t\t\t\treturn $('[component=\"topic/teaser\"]');\n\t\t\t}\n\t\t},\n\t\t'topic': function (name, value) {\n\t\t\treturn $('[component=\"topic\"][data-' + name + '=\"' + value + '\"]');\n\t\t},\n\t\t'post': function (name, value) {\n\t\t\treturn $('[component=\"post\"][data-' + name + '=\"' + value + '\"]');\n\t\t},\n\t\t'post/content': function (pid) {\n\t\t\treturn components.core.post('pid', pid).find('[component=\"post/content\"]');\n\t\t},\n\t\t'post/header': function (pid) {\n\t\t\treturn components.core.post('pid', pid).find('[component=\"post/header\"]');\n\t\t},\n\t\t'post/anchor': function (index) {\n\t\t\treturn components.core.post('index', index).find('[component=\"post/anchor\"]');\n\t\t},\n\t\t'post/vote-count': function (pid) {\n\t\t\treturn components.core.post('pid', pid).find('[component=\"post/vote-count\"]');\n\t\t},\n\t\t'post/bookmark-count': function (pid) {\n\t\t\treturn components.core.post('pid', pid).find('[component=\"post/bookmark-count\"]');\n\t\t},\n\n\t\t'user/postcount': function (uid) {\n\t\t\treturn $('[component=\"user/postcount\"][data-uid=\"' + uid + '\"]');\n\t\t},\n\t\t'user/reputation': function (uid) {\n\t\t\treturn $('[component=\"user/reputation\"][data-uid=\"' + uid + '\"]');\n\t\t},\n\n\t\t'category/topic': function (name, value) {\n\t\t\treturn $('[component=\"category/topic\"][data-' + name + '=\"' + value + '\"]');\n\t\t},\n\n\t\t'categories/category': function (name, value) {\n\t\t\treturn $('[component=\"categories/category\"][data-' + name + '=\"' + value + '\"]');\n\t\t},\n\n\t\t'chat/message': function (messageId) {\n\t\t\treturn $('[component=\"chat/message\"][data-mid=\"' + messageId + '\"]');\n\t\t},\n\t\t'chat/message/body': function (messageId) {\n\t\t\treturn $('[component=\"chat/message\"][data-mid=\"' + messageId + '\"] [component=\"chat/message/body\"]');\n\t\t}\n\t};\n\n\tcomponents.get = function () {\n\t\tvar args = Array.prototype.slice.call(arguments, 1);\n\n\t\tif (components.core[arguments[0]] && args.length) {\n\t\t\treturn components.core[arguments[0]].apply(this, args);\n\t\t} else {\n\t\t\treturn $('[component=\"' + arguments[0] + '\"]');\n\t\t}\n\t};\n\n\treturn components;\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/modules/coverPhoto.js":"\"use strict\";\n/* globals define, app */\n\ndefine('coverPhoto', [\n\t'vendor/jquery/draggable-background/backgroundDraggable'\n], function () {\n\n\tvar coverPhoto = {\n\t\tcoverEl: null,\n\t\tsaveFn: null\n\t};\n\n\tcoverPhoto.init = function (coverEl, saveFn, uploadFn, removeFn) {\n\t\tcoverPhoto.coverEl = coverEl;\n\t\tcoverPhoto.saveFn = saveFn;\n\n\t\tcoverEl.find('.upload').on('click', uploadFn);\n\t\tcoverEl.find('.resize').on('click', function () {\n\t\t\tenableDragging(coverEl);\n\t\t});\n\t\tcoverEl.find('.remove').on('click', removeFn);\n\n\t\tcoverEl\n\t\t\t.on('dragover', coverPhoto.onDragOver)\n\t\t\t.on('drop', coverPhoto.onDrop);\n\n\t\tcoverEl.find('.save').on('click', coverPhoto.save);\n\t\tcoverEl.addClass('initialised');\n\t};\n\n\tcoverPhoto.onDragOver = function (e) {\n\t\te.stopPropagation();\n\t\te.preventDefault();\n\t\te.originalEvent.dataTransfer.dropEffect = 'copy';\n\t};\n\n\tcoverPhoto.onDrop = function (e) {\n\t\te.stopPropagation();\n\t\te.preventDefault();\n\n\t\tvar files = e.originalEvent.dataTransfer.files,\n\t\treader = new FileReader();\n\n\t\tif (files.length && files[0].type.match('image.*')) {\n\t\t\treader.onload = function (e) {\n\t\t\t\tcoverPhoto.coverEl.css('background-image', 'url(' + e.target.result + ')');\n\t\t\t\tcoverPhoto.newCover = e.target.result;\n\t\t\t};\n\n\t\t\treader.readAsDataURL(files[0]);\n\t\t\tenableDragging(coverPhoto.coverEl);\n\t\t}\n\t};\n\n\tfunction enableDragging(coverEl) {\n\t\tcoverEl.toggleClass('active', 1)\n\t\t\t.backgroundDraggable({\n\t\t\t\taxis: 'y',\n\t\t\t\tunits: 'percent'\n\t\t\t});\n\n\t\tapp.alert({\n\t\t\talert_id: 'drag_start',\n\t\t\ttitle: '[[modules:cover.dragging_title]]',\n\t\t\tmessage: '[[modules:cover.dragging_message]]',\n\t\t\ttimeout: 5000\n\t\t});\n\t}\n\n\tcoverPhoto.save = function () {\n\t\tcoverPhoto.coverEl.addClass('saving');\n\n\t\tcoverPhoto.saveFn(coverPhoto.newCover || undefined, coverPhoto.coverEl.css('background-position'), function (err) {\n\t\t\tif (!err) {\n\t\t\t\tcoverPhoto.coverEl.toggleClass('active', 0);\n\t\t\t\tcoverPhoto.coverEl.backgroundDraggable('disable');\n\t\t\t\tcoverPhoto.coverEl.off('dragover', coverPhoto.onDragOver);\n\t\t\t\tcoverPhoto.coverEl.off('drop', coverPhoto.onDrop);\n\t\t\t\tapp.alertSuccess('[[modules:cover.saved]]');\n\t\t\t} else {\n\t\t\t\tapp.alertError(err.message);\n\t\t\t}\n\n\t\t\tcoverPhoto.coverEl.removeClass('saving');\n\t\t});\n\t};\n\n\treturn coverPhoto;\n});","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/modules/iconSelect.js":"\"use strict\";\n\n/* globals define, bootbox, templates */\n\ndefine('iconSelect', function () {\n\tvar iconSelect = {};\n\n\ticonSelect.init = function (el, onModified) {\n\t\tonModified = onModified || function () {};\n\t\tvar doubleSize = el.hasClass('fa-2x'),\n\t\t\tselected = el.attr('class').replace('fa-2x', '').replace('fa', '').replace(/\\s+/g, '');\n\n\t\t$('#icons .selected').removeClass('selected');\n\n\t\tif (selected) {\n\t\t\t$('#icons .fa-icons .fa.' + selected).addClass('selected');\n\t\t}\n\n\t\ttemplates.parse('partials/fontawesome', {}, function (html) {\n\t\t\thtml = $(html);\n\t\t\thtml.find('.fa-icons').prepend($('<i class=\"fa fa-nbb-none\"></i>'));\n\n\t\t\tvar picker = bootbox.dialog({\n\t\t\t\t\tonEscape: true,\n\t\t\t\t\tbackdrop: true,\n\t\t\t\t\tshow: false,\n\t\t\t\t\tmessage: html,\n\t\t\t\t\ttitle: 'Select an Icon',\n\t\t\t\t\tbuttons: {\n\t\t\t\t\t\tnoIcon: {\n\t\t\t\t\t\t\tlabel: 'No Icon',\n\t\t\t\t\t\t\tclassName: 'btn-default',\n\t\t\t\t\t\t\tcallback: function () {\n\t\t\t\t\t\t\t\tel.attr('class', 'fa ' + (doubleSize ? 'fa-2x ' : ''));\n\t\t\t\t\t\t\t\tel.val('');\n\t\t\t\t\t\t\t\tel.attr('value', '');\n\n\t\t\t\t\t\t\t\tonModified(el);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tsuccess: {\n\t\t\t\t\t\t\tlabel: 'Select',\n\t\t\t\t\t\t\tclassName: 'btn-primary',\n\t\t\t\t\t\t\tcallback: function (confirm) {\n\t\t\t\t\t\t\t\tvar iconClass = $('.bootbox .selected').attr('class');\n\t\t\t\t\t\t\t\tvar categoryIconClass = $('<div/>').addClass(iconClass).removeClass('fa').removeClass('selected').attr('class');\n\n\t\t\t\t\t\t\t\tif (categoryIconClass) {\n\t\t\t\t\t\t\t\t\tel.attr('class', 'fa ' + (doubleSize ? 'fa-2x ' : '') + categoryIconClass);\n\t\t\t\t\t\t\t\t\tel.val(categoryIconClass);\n\t\t\t\t\t\t\t\t\tel.attr('value', categoryIconClass);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tonModified(el);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tpicker.on('show.bs.modal', function () {\n\t\t\t\tvar modalEl = $(this),\n\t\t\t\t\tsearchEl = modalEl.find('input');\n\n\t\t\t\tif (selected) {\n\t\t\t\t\tmodalEl.find('.' + selected).addClass('selected');\n\t\t\t\t\tsearchEl.val(selected.replace('fa-', ''));\n\t\t\t\t}\n\t\t\t}).modal('show');\n\n\t\t\tpicker.on('shown.bs.modal', function () {\n\t\t\t\tvar modalEl = $(this),\n\t\t\t\t\tsearchEl = modalEl.find('input'),\n\t\t\t\t\ticons = modalEl.find('.fa-icons i'),\n\t\t\t\t\tsubmitEl = modalEl.find('button.btn-primary');\n\n\t\t\t\tfunction changeSelection(newSelection) {\n\t\t\t\t\tmodalEl.find('i.selected').removeClass('selected');\n\t\t\t\t\tif (newSelection) {\n\t\t\t\t\t\tnewSelection.addClass('selected');\n\t\t\t\t\t} else if (searchEl.val().length === 0) {\n\t\t\t\t\t\tif (selected) {\n\t\t\t\t\t\t\tmodalEl.find('.' + selected).addClass('selected');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmodalEl.find('i:visible').first().addClass('selected');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Focus on the input box\n\t\t\t\tsearchEl.selectRange(0, searchEl.val().length);\n\n\t\t\t\tmodalEl.find('.icon-container').on('click', 'i', function () {\n\t\t\t\t\tsearchEl.val($(this).attr('class').replace('fa fa-', '').replace('selected', ''));\n\t\t\t\t\tchangeSelection($(this));\n\t\t\t\t});\n\n\t\t\t\tsearchEl.on('keyup', function (e) {\n\t\t\t\t\tif (e.keyCode !== 13) {\n\t\t\t\t\t\t// Filter\n\t\t\t\t\t\ticons.show();\n\t\t\t\t\t\ticons.each(function (idx, el) {\n\t\t\t\t\t\t\tif (!el.className.match(new RegExp('^fa fa-.*' + searchEl.val() + '.*$'))) {\n\t\t\t\t\t\t\t\t$(el).hide();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tchangeSelection();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsubmitEl.click();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n\n\treturn iconSelect;\n});\n\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/modules/navigator.js":"\n'use strict';\n\n/* globals define, ajaxify, utils, config */\n\n\ndefine('navigator', ['forum/pagination', 'components'], function (pagination, components) {\n\n\tvar navigator = {};\n\tvar index = 1;\n\tvar count = 0;\n\tvar navigatorUpdateTimeoutId = 0;\n\n\tnavigator.scrollActive = false;\n\n\tnavigator.init = function (selector, count, toTop, toBottom, callback, calculateIndex) {\n\t\tindex = 1;\n\t\tnavigator.selector = selector;\n\t\tnavigator.callback = callback;\n\t\ttoTop = toTop || function () {};\n\t\ttoBottom = toBottom || function () {};\n\n\t\t$(window).off('scroll', navigator.delayedUpdate).on('scroll', navigator.delayedUpdate);\n\n\t\t$('.pagination-block .dropdown-menu').off('click').on('click', function (e) {\n\t\t\te.stopPropagation();\n\t\t});\n\n\t\t$('.pagination-block').off('shown.bs.dropdown', '.dropdown').on('shown.bs.dropdown', '.dropdown', function () {\n\t\t\tsetTimeout(function () {\n\t\t\t\t$('.pagination-block input').focus();\n\t\t\t}, 100);\n\t\t});\n\n\t\t$('.pagination-block .pageup').off('click').on('click', navigator.scrollUp);\n\t\t$('.pagination-block .pagedown').off('click').on('click', navigator.scrollDown);\n\t\t$('.pagination-block .pagetop').off('click').on('click', toTop);\n\t\t$('.pagination-block .pagebottom').off('click').on('click', toBottom);\n\n\t\t$('.pagination-block input').on('keydown', function (e) {\n\t\t\tif (e.which === 13) {\n\t\t\t\tvar input = $(this);\n\t\t\t\tif (!utils.isNumber(input.val())) {\n\t\t\t\t\tinput.val('');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar index = parseInt(input.val(), 10);\n\t\t\t\tif (typeof calculateIndex === 'function') {\n\t\t\t\t\tindex = calculateIndex(index, count);\n\t\t\t\t}\n\n\t\t\t\tvar url = generateUrl(index);\n\t\t\t\tinput.val('');\n\t\t\t\t$('.pagination-block .dropdown-toggle').trigger('click');\n\t\t\t\tajaxify.go(url);\n\t\t\t}\n\t\t});\n\n\t\tnavigator.setCount(count);\n\t};\n\n\tfunction generateUrl(index) {\n\t\tvar pathname = window.location.pathname.replace(config.relative_path, '');\n\t\tvar parts = pathname.split('/');\n\t\treturn parts[1] + '/' + parts[2] + '/' + parts[3] + (index ? '/' + index : '');\n\t}\n\n\tnavigator.setCount = function (value) {\n\t\tcount = parseInt(value, 10);\n\t\tnavigator.updateTextAndProgressBar();\n\t};\n\n\tnavigator.show = function () {\n\t\ttoggle(true);\n\t};\n\n\tnavigator.disable = function () {\n\t\tcount = 0;\n\t\tindex = 1;\n\t\tnavigator.selector = navigator.callback = null;\n\t\t$(window).off('scroll', navigator.update);\n\n\t\ttoggle(false);\n\t};\n\n\tfunction toggle(flag) {\n\t\tvar path = ajaxify.removeRelativePath(window.location.pathname.slice(1));\n\t\tif (flag && (!path.startsWith('topic') && !path.startsWith('category'))) {\n\t\t\treturn;\n\t\t}\n\n\t\t$('.pagination-block').toggleClass('ready', flag);\n\t}\n\n\tnavigator.delayedUpdate = function () {\n\t\tif (navigatorUpdateTimeoutId) {\n\t\t\tclearTimeout(navigatorUpdateTimeoutId);\n\t\t\tnavigatorUpdateTimeoutId = 0;\n\t\t}\n\t\tnavigatorUpdateTimeoutId = setTimeout(navigator.update, 100);\n\t};\n\n\tnavigator.update = function (threshold) {\n\t\t/*\n\t\t\tThe \"threshold\" is defined as the distance from the top of the page to\n\t\t\ta spot where a user is expecting to begin reading.\n\t\t*/\n\t\tthreshold = typeof threshold === 'number' ? threshold : undefined;\n\n\t\tvar els = $(navigator.selector);\n\t\tif (els.length) {\n\t\t\tindex = parseInt(els.first().attr('data-index'), 10) + 1;\n\t\t}\n\n\t\tvar scrollTop = $(window).scrollTop();\n\t\tvar windowHeight = $(window).height();\n\t\tvar documentHeight = $(document).height();\n\t\tvar middleOfViewport = scrollTop + windowHeight / 2;\n\t\tvar previousDistance = Number.MAX_VALUE;\n\t\tels.each(function () {\n\t\t\tvar distanceToMiddle = Math.abs(middleOfViewport - $(this).offset().top);\n\n\t\t\tif (distanceToMiddle > previousDistance) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (distanceToMiddle < previousDistance) {\n\t\t\t\tindex = parseInt($(this).attr('data-index'), 10) + 1;\n\t\t\t\tpreviousDistance = distanceToMiddle;\n\t\t\t}\n\t\t});\n\n\t\tvar atTop = scrollTop === 0 && parseInt(els.first().attr('data-index'), 10) === 0;\n\t\tvar nearBottom = scrollTop + windowHeight > documentHeight - 100 && parseInt(els.last().attr('data-index'), 10) === count - 1;\n\n\t\tif (atTop) {\n\t\t\tindex = 1;\n\t\t} else if (nearBottom) {\n\t\t\tindex = count;\n\t\t}\n\n\t\t// If a threshold is undefined, try to determine one based on new index\n\t\tif (threshold === undefined && ajaxify.data.template.topic === true) {\n\t\t\tif (atTop) {\n\t\t\t\tthreshold = 0;\n\t\t\t} else {\n\t\t\t\tvar anchorEl = components.get('post/anchor', index - 1);\n\t\t\t\tif (anchorEl.length) {\n\t\t\t\t\tvar anchorRect = anchorEl.get(0).getBoundingClientRect();\n\t\t\t\t\tthreshold = anchorRect.top;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (typeof navigator.callback === 'function') {\n\t\t\tnavigator.callback(index, count, threshold);\n\t\t}\n\n\t\tnavigator.updateTextAndProgressBar();\n\t\ttoggle(!!count);\n\t};\n\n\tnavigator.updateTextAndProgressBar = function () {\n\t\tif (!utils.isNumber(index)) {\n\t\t\treturn;\n\t\t}\n\t\tindex = index > count ? count : index;\n\n\t\t$('.pagination-block .pagination-text').translateHtml('[[global:pagination.out_of, ' + index + ', ' + count + ']]');\n\t\t$('.pagination-block .progress-bar').width((index / count * 100) + '%');\n\t};\n\n\tnavigator.scrollUp = function () {\n\t\t$('body,html').animate({\n\t\t\tscrollTop: $(window).scrollTop() - $(window).height()\n\t\t});\n\t};\n\n\tnavigator.scrollDown = function () {\n\t\t$('body,html').animate({\n\t\t\tscrollTop: $(window).scrollTop() + $(window).height()\n\t\t});\n\t};\n\n\tnavigator.scrollTop = function (index) {\n\t\tif ($(navigator.selector + '[data-index=\"' + index + '\"]').length) {\n\t\t\tnavigator.scrollToPost(index, true);\n\t\t} else {\n\t\t\tajaxify.go(generateUrl());\n\t\t}\n\t};\n\n\tnavigator.scrollBottom = function (index) {\n\t\tif (parseInt(index, 10) < 0) {\n\t\t\treturn;\n\t\t}\n\t\tif ($(navigator.selector + '[data-index=\"' + index + '\"]').length) {\n\t\t\tnavigator.scrollToPost(index, true);\n\t\t} else {\n\t\t\tindex = parseInt(index, 10) + 1;\n\t\t\tajaxify.go(generateUrl(index));\n\t\t}\n\t};\n\n\tnavigator.scrollToPost = function (postIndex, highlight, duration) {\n\t\tif (!utils.isNumber(postIndex) || !components.get('topic').length) {\n\t\t\treturn;\n\t\t}\n\n\t\tduration = duration !== undefined ? duration : 400;\n\t\tnavigator.scrollActive = true;\n\n\t\tif (components.get('post/anchor', postIndex).length) {\n\t\t\treturn navigator.scrollToPostIndex(postIndex, highlight, duration);\n\t\t}\n\n\t\tif (config.usePagination) {\n\t\t\tvar index = postIndex;\n\t\t\tif (config.topicPostSort === 'most_votes' || config.topicPostSort === 'newest_to_oldest') {\n\t\t\t\tindex = ajaxify.data.postcount - index;\n\t\t\t}\n\t\t\tvar page = Math.max(1, Math.ceil(index / config.postsPerPage));\n\n\t\t\tif (parseInt(page, 10) !== ajaxify.data.pagination.currentPage) {\n\t\t\t\tpagination.loadPage(page, function () {\n\t\t\t\t\tnavigator.scrollToPostIndex(postIndex, highlight, duration);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tnavigator.scrollToPostIndex(postIndex, highlight, duration);\n\t\t\t}\n\t\t} else {\n\t\t\tnavigator.scrollActive = false;\n\t\t\tpostIndex = parseInt(postIndex, 10) + 1;\n\t\t\tajaxify.go(generateUrl(postIndex));\n\t\t}\n\t};\n\n\tnavigator.scrollToPostIndex = function (postIndex, highlight, duration) {\n\t\tvar scrollTo = components.get('post', 'index', postIndex);\n\t\tvar postHeight = scrollTo.height();\n\t\tvar viewportHeight = $(window).height();\n\t\tvar navbarHeight = components.get('navbar').height();\n\n\t\tif (!scrollTo.length) {\n\t\t\tnavigator.scrollActive = false;\n\t\t\treturn;\n\t\t}\n\n\t\t// Temporarily disable navigator update on scroll\n\t\t$(window).off('scroll', navigator.update);\n\n\t\tduration = duration !== undefined ? duration : 400;\n\t\tnavigator.scrollActive = true;\n\t\tvar done = false;\n\n\t\tfunction animateScroll() {\n\t\t\tvar scrollTop = 0;\n\t\t\tif (postHeight < viewportHeight) {\n\t\t\t\tscrollTop = (scrollTo.offset().top - (viewportHeight / 2) + (postHeight / 2));\n\t\t\t} else {\n\t\t\t\tscrollTop = scrollTo.offset().top - navbarHeight;\n\t\t\t}\n\n\t\t\t$('html, body').animate({\n\t\t\t\tscrollTop: scrollTop + 'px'\n\t\t\t}, duration, function () {\n\t\t\t\tif (done) {\n\t\t\t\t\t// Re-enable onScroll behaviour\n\t\t\t\t\t$(window).on('scroll', navigator.update);\n\t\t\t\t\tvar scrollToRect = scrollTo.get(0).getBoundingClientRect();\n\t\t\t\t\tnavigator.update(scrollToRect.top);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tdone = true;\n\n\t\t\t\tnavigator.scrollActive = false;\n\t\t\t\thighlightPost();\n\t\t\t\t$('body').scrollTop($('body').scrollTop() - 1);\n\t\t\t\t$('html').scrollTop($('html').scrollTop() - 1);\n\t\t\t});\n\t\t}\n\n\t\tfunction highlightPost() {\n\t\t\tif (highlight) {\n\t\t\t\tscrollTo.addClass('highlight');\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tscrollTo.removeClass('highlight');\n\t\t\t\t}, 10000);\n\t\t\t}\n\t\t}\n\n\t\tif (components.get('topic').length) {\n\t\t\tanimateScroll();\n\t\t} else {\n\t\t\tnavigator.scrollActive = false;\n\t\t}\n\t};\n\n\n\treturn navigator;\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/modules/notifications.js":"'use strict';\n\n/* globals define, socket, app, ajaxify, templates, Tinycon*/\n\ndefine('notifications', ['sounds', 'translator', 'components'], function (sound, translator, components) {\n\tvar Notifications = {};\n\n\tvar unreadNotifs = {};\n\n\tNotifications.prepareDOM = function () {\n\t\tvar notifContainer = components.get('notifications'),\n\t\t\tnotifTrigger = notifContainer.children('a'),\n\t\t\tnotifList = components.get('notifications/list'),\n\t\t\tnotifIcon = components.get('notifications/icon');\n\n\t\tnotifTrigger\n\t\t\t.on('click', function (e) {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (notifContainer.hasClass('open')) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tNotifications.loadNotifications(notifList);\n\t\t\t})\n\t\t\t.on('dblclick', function (e) {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (parseInt(notifIcon.attr('data-content'), 10) > 0) {\n\t\t\t\t\tNotifications.markAllRead();\n\t\t\t\t}\n\t\t\t});\n\n\t\tnotifList.on('click', '[data-nid]', function () {\n\t\t\tvar unread = $(this).hasClass('unread');\n\t\t\tvar nid = $(this).attr('data-nid');\n\t\t\tif (!unread) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsocket.emit('notifications.markRead', nid, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t}\n\t\t\t\tincrementNotifCount(-1);\n\t\t\t\tif (unreadNotifs[nid]) {\n\t\t\t\t\tdelete unreadNotifs[nid];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tnotifContainer.on('click', '.mark-all-read', Notifications.markAllRead);\n\n\t\tnotifList.on('click', '.mark-read', function () {\n\t\t\tvar liEl = $(this).parent();\n\t\t\tvar unread = liEl.hasClass('unread');\n\t\t\tvar nid = liEl.attr('data-nid');\n\n\t\t\tsocket.emit('notifications.mark' + (unread ? 'Read' : 'Unread'), nid, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t}\n\n\t\t\t\tliEl.toggleClass('unread');\n\t\t\t\tincrementNotifCount(unread ? -1 : 1);\n\t\t\t\tif (unread && unreadNotifs[nid]) {\n\t\t\t\t\tdelete unreadNotifs[nid];\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn false;\n\t\t});\n\n\t\tfunction incrementNotifCount(delta) {\n\t\t\tvar count = parseInt(notifIcon.attr('data-content'), 10) + delta;\n\t\t\tNotifications.updateNotifCount(count);\n\t\t}\n\n\t\tsocket.on('event:new_notification', function (notifData) {\n\t\t\t// If a path is defined, show notif data, otherwise show generic data\n\t\t\tvar payload = {\n\t\t\t\talert_id: 'new_notif',\n\t\t\t\ttitle: '[[notifications:new_notification]]',\n\t\t\t\ttimeout: 2000\n\t\t\t};\n\n\t\t\tif (notifData.path) {\n\t\t\t\tpayload.message = notifData.bodyShort;\n\t\t\t\tpayload.type = 'info';\n\t\t\t\tpayload.clickfn = function () {\n\t\t\t\t\tif (notifData.path.startsWith('http') && notifData.path.startsWith('https')) {\n\t\t\t\t\t\twindow.location.href = notifData.path;\n\t\t\t\t\t} else {\n\t\t\t\t\t\twindow.location.href = window.location.protocol + '//' + window.location.host + config.relative_path + notifData.path;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpayload.message = '[[notifications:you_have_unread_notifications]]';\n\t\t\t\tpayload.type = 'warning';\n\t\t\t}\n\n\t\t\tapp.alert(payload);\n\t\t\tapp.refreshTitle();\n\n\t\t\tif (ajaxify.currentPage === 'notifications') {\n\t\t\t\tajaxify.refresh();\n\t\t\t}\n\n\t\t\tsocket.emit('notifications.getCount', function (err, count) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t}\n\n\t\t\t\tNotifications.updateNotifCount(count);\n\t\t\t});\n\n\t\t\tif (!unreadNotifs[notifData.nid]) {\n\t\t\t\tsound.play('notification');\n\t\t\t\tunreadNotifs[notifData.nid] = true;\n\t\t\t}\n\t\t});\n\n\t\tsocket.on('event:notifications.updateCount', function (count) {\n\t\t\tNotifications.updateNotifCount(count);\n\t\t});\n\t};\n\n\tNotifications.loadNotifications = function (notifList) {\n\t\tsocket.emit('notifications.get', null, function (err, data) {\n\t\t\tif (err) {\n\t\t\t\treturn app.alertError(err.message);\n\t\t\t}\n\n\t\t\tvar notifs = data.unread.concat(data.read).sort(function (a, b) {\n\t\t\t\treturn parseInt(a.datetime, 10) > parseInt(b.datetime, 10) ? -1 : 1;\n\t\t\t});\n\n\t\t\ttranslator.toggleTimeagoShorthand();\n\t\t\tfor(var i = 0; i < notifs.length; ++i) {\n\t\t\t\tnotifs[i].timeago = $.timeago(new Date(parseInt(notifs[i].datetime, 10)));\n\t\t\t}\n\t\t\ttranslator.toggleTimeagoShorthand();\n\n\t\t\ttemplates.parse('partials/notifications_list', {notifications: notifs}, function (html) {\n\t\t\t\tnotifList.translateHtml(html);\n\t\t\t});\n\t\t});\n\t};\n\n\tNotifications.updateNotifCount = function (count) {\n\t\tvar notifIcon = components.get('notifications/icon');\n\t\tcount = Math.max(0, count);\n\t\tif (count > 0) {\n\t\t\tnotifIcon.removeClass('fa-bell-o').addClass('fa-bell');\n\t\t} else {\n\t\t\tnotifIcon.removeClass('fa-bell').addClass('fa-bell-o');\n\t\t}\n\n\t\tnotifIcon.toggleClass('unread-count', count > 0);\n\t\tnotifIcon.attr('data-content', count > 99 ? '99+' : count);\n\n\t\tvar payload = {\n\t\t\tcount: count,\n\t\t\tupdateFavicon: true\n\t\t};\n\t\t$(window).trigger('action:notification.updateCount', payload);\n\n\t\tif (payload.updateFavicon) {\n\t\t\tTinycon.setBubble(count > 99 ? '99+' : count);\n\t\t}\n\t};\n\n\tNotifications.markAllRead = function () {\n\t\tsocket.emit('notifications.markAllRead', function (err) {\n\t\t\tif (err) {\n\t\t\t\tapp.alertError(err.message);\n\t\t\t}\n\t\t\tNotifications.updateNotifCount(0);\n\t\t\tunreadNotifs = {};\n\t\t});\n\t};\n\n\treturn Notifications;\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/modules/postSelect.js":"'use strict';\n\n/* globals define*/\n\ndefine('postSelect', ['components'], function (components) {\n\tvar PostSelect = {};\n\n\tPostSelect.pids = [];\n\n\tPostSelect.init = function (onSelect) {\n\t\tPostSelect.pids.length = 0;\n\t\tcomponents.get('topic').on('click', '[data-pid]', function () {\n\t\t\ttogglePostSelection($(this), onSelect);\n\t\t});\n\t\tdisableClicksOnPosts();\n\t};\n\n\n\tfunction togglePostSelection(post, callback) {\n\t\tvar newPid = post.attr('data-pid');\n\n\t\tif (parseInt(post.attr('data-index'), 10) === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (newPid) {\n\t\t\tvar index = PostSelect.pids.indexOf(newPid);\n\t\t\tif(index === -1) {\n\t\t\t\tPostSelect.pids.push(newPid);\n\t\t\t\tpost.toggleClass('bg-success', true);\n\t\t\t} else {\n\t\t\t\tPostSelect.pids.splice(index, 1);\n\t\t\t\tpost.toggleClass('bg-success', false);\n\t\t\t}\n\n\t\t\tif (PostSelect.pids.length) {\n\t\t\t\tPostSelect.pids.sort(function (a,b) { return a - b; });\n\t\t\t}\n\t\t\tcallback();\n\t\t}\n\t}\n\n\n\tfunction disableClicks() {\n\t\treturn false;\n\t}\n\n\tfunction disableClicksOnPosts() {\n\t\tcomponents.get('post').on('click', 'button,a', disableClicks);\n\t}\n\n\tPostSelect.enableClicksOnPosts = function () {\n\t\tcomponents.get('post').off('click', 'button,a', disableClicks);\n\t};\n\n\n\n\treturn PostSelect;\n});","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/modules/scrollStop.js":"'use strict';\n\n/* globals console, define */\n\n/*\n\tThe point of this library is to enhance(tm) a textarea so that if scrolled,\n\tyou can only scroll to the top of it and the event doesn't bubble up to\n\tthe document... because it does... and it's annoying at times.\n\n\tWhile I'm here, might I say this is a solved issue on Linux?\n*/\n\ndefine('scrollStop', function () {\n\tvar Module = {};\n\n\tModule.apply = function (element) {\n\t\t$(element).on('mousewheel', function (e) {\n\t\t\tvar scrollTop = this.scrollTop;\n\t\t\tvar scrollHeight = this.scrollHeight;\n\t\t\tvar elementHeight = this.getBoundingClientRect().height;\n\t\t\t\n\t\t\tif (\n\t\t\t\t(e.originalEvent.deltaY < 0 && scrollTop === 0) ||\t\t\t\t\t\t\t// scroll up\n\t\t\t\t(e.originalEvent.deltaY > 0 && (elementHeight + scrollTop) > scrollHeight)\t// scroll down\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t};\n\n\treturn Module;\n});","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/modules/search.js":"\"use strict\";\n/* globals socket, ajaxify, app, define, config */\n\ndefine('search', ['navigator', 'translator'], function (nav, translator) {\n\n\tvar Search = {\n\t\tcurrent: {}\n\t};\n\n\tSearch.query = function (data, callback) {\n\t\tvar term = data.term;\n\n\t\t// Detect if a tid was specified\n\t\tvar topicSearch = term.match(/^in:topic-([\\d]+) /);\n\n\t\tif (!topicSearch) {\n\t\t\tterm = term.replace(/^[ ?#]*/, '');\n\n\t\t\ttry {\n\t\t\t\tterm = encodeURIComponent(term);\n\t\t\t} catch(e) {\n\t\t\t\treturn app.alertError('[[error:invalid-search-term]]');\n\t\t\t}\n\n\t\t\tajaxify.go('search?' + createQueryString(data));\n\t\t\tcallback();\n\t\t} else {\n\t\t\tvar cleanedTerm = term.replace(topicSearch[0], '');\n\t\t\tvar tid = topicSearch[1];\n\n\t\t\tif (cleanedTerm.length > 0) {\n\t\t\t\tSearch.queryTopic(tid, cleanedTerm, callback);\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction createQueryString(data) {\n\t\tvar searchIn = data['in'] || 'titlesposts';\n\t\tvar postedBy = data.by || '';\n\t\tvar query = {\n\t\t\tterm: data.term,\n\t\t\t'in': searchIn\n\t\t};\n\n\t\tif (postedBy && (searchIn === 'posts' || searchIn === 'titles' || searchIn === 'titlesposts')) {\n\t\t\tquery.by = postedBy;\n\t\t}\n\n\t\tif (data.categories && data.categories.length) {\n\t\t\tquery.categories = data.categories;\n\t\t\tif (data.searchChildren) {\n\t\t\t\tquery.searchChildren = data.searchChildren;\n\t\t\t}\n\t\t}\n\n\t\tif (parseInt(data.replies, 10) > 0) {\n\t\t\tquery.replies = data.replies;\n\t\t\tquery.repliesFilter = data.repliesFilter || 'atleast';\n\t\t}\n\n\t\tif (data.timeRange) {\n\t\t\tquery.timeRange = data.timeRange;\n\t\t\tquery.timeFilter = data.timeFilter || 'newer';\n\t\t}\n\n\t\tif (data.sortBy) {\n\t\t\tquery.sortBy = data.sortBy;\n\t\t\tquery.sortDirection = data.sortDirection;\n\t\t}\n\n\t\tif (data.showAs) {\n\t\t\tquery.showAs = data.showAs;\n\t\t}\n\t\treturn decodeURIComponent($.param(query));\n\t}\n\n\tSearch.getSearchPreferences = function () {\n\t\ttry {\n\t\t\treturn JSON.parse(localStorage.getItem('search-preferences') || '{}');\n\t\t} catch(e) {\n\t\t\treturn {};\n\t\t}\n\t};\n\n\tSearch.queryTopic = function (tid, term, callback) {\n\t\tsocket.emit('topics.search', {\n\t\t\ttid: tid,\n\t\t\tterm: term\n\t\t}, function (err, pids) {\n\t\t\tif (err) {\n\t\t\t\treturn app.alertError(err.message);\n\t\t\t}\n\n\t\t\tif (Array.isArray(pids)) {\n\t\t\t\t// Sort pids numerically & store\n\t\t\t\tSearch.current = {\n\t\t\t\t\tresults: pids.sort(function (a, b) {\n\t\t\t\t\t\treturn a - b;\n\t\t\t\t\t}),\n\t\t\t\t\ttid: tid,\n\t\t\t\t\tterm: term\n\t\t\t\t};\n\n\t\t\t\tSearch.checkPagePresence(tid, function () {\n\t\t\t\t\tSearch.topicDOM.update(0);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n\n\tSearch.checkPagePresence = function (tid, callback) {\n\t\tif (parseInt(ajaxify.data.tid, 10) !== parseInt(tid, 10)) {\n\t\t\tajaxify.go('topic/' + tid, callback);\n\t\t} else {\n\t\t\tcallback();\n\t\t}\n\t};\n\n\tSearch.topicDOM = {\n\t\tactive: false\n\t};\n\n\tSearch.topicDOM.prev = function () {\n\t\tSearch.topicDOM.update((Search.current.index === 0) ? Search.current.results.length - 1 : Search.current.index - 1);\n\t};\n\n\tSearch.topicDOM.next = function () {\n\t\tSearch.topicDOM.update((Search.current.index === Search.current.results.length - 1) ? 0 : Search.current.index + 1);\n\t};\n\n\tSearch.topicDOM.update = function (index) {\n\t\tvar topicSearchEl = $('.topic-search');\n\t\tSearch.current.index = index;\n\n\t\tSearch.topicDOM.start();\n\n\t\tif (Search.current.results.length > 0) {\n\t\t\ttopicSearchEl.find('.count').html((index + 1) + ' / ' + Search.current.results.length);\n\t\t\ttopicSearchEl.find('.prev, .next').removeAttr('disabled');\n\t\t\tvar data = {\n\t\t\t\tpid: Search.current.results[index],\n\t\t\t\ttid: Search.current.tid,\n\t\t\t\ttopicPostSort: config.topicPostSort\n\t\t\t};\n\t\t\tsocket.emit('posts.getPidIndex', data, function (err, postIndex) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t}\n\n\t\t\t\tnav.scrollToPost(postIndex, true);\n\t\t\t});\n\t\t} else {\n\t\t\ttranslator.translate('[[search:no-matches]]', function (text) {\n\t\t\t\ttopicSearchEl.find('.count').html(text);\n\t\t\t});\n\t\t\ttopicSearchEl.removeClass('hidden').find('.prev, .next').attr('disabled', 'disabled');\n\t\t}\n\t};\n\n\tSearch.topicDOM.start = function () {\n\t\t$('.topic-search').removeClass('hidden');\n\t\tif (!Search.topicDOM.active) {\n\t\t\tSearch.topicDOM.active = true;\n\n\t\t\t// Bind to esc\n\t\t\trequire(['mousetrap'], function (mousetrap) {\n\t\t\t\tmousetrap.bind('esc', Search.topicDOM.end);\n\t\t\t});\n\t\t}\n\t};\n\n\tSearch.topicDOM.end = function () {\n\t\t$('.topic-search').addClass('hidden').find('.prev, .next').attr('disabled', 'disabled');\n\t\tSearch.topicDOM.active = false;\n\n\t\t// Unbind esc\n\t\trequire(['mousetrap'], function (mousetrap) {\n\t\t\tmousetrap.unbind('esc', Search.topicDOM.end);\n\t\t});\n\t};\n\n\treturn Search;\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/modules/settings.js":"\"use strict\";\n/*global define, app, socket*/\n\ndefine('settings', function () {\n\n\tvar DEFAULT_PLUGINS = [\n\t\t'settings/checkbox',\n\t\t'settings/number',\n\t\t'settings/textarea',\n\t\t'settings/select',\n\t\t'settings/array',\n\t\t'settings/key',\n\t\t'settings/object'\n\t];\n\n\tvar Settings,\n\t\tonReady = [],\n\t\twaitingJobs = 0,\n\t\thelper;\n\n\t/**\n\t Returns the hook of given name that matches the given type or element.\n\t @param type The type of the element to get the matching hook for, or the element itself.\n\t @param name The name of the hook.\n\t */\n\tfunction getHook(type, name) {\n\t\tvar hook, plugin;\n\t\tif (typeof type !== 'string') {\n\t\t\ttype = $(type);\n\t\t\ttype = type.data('type') || type.attr('type') || type.prop('tagName');\n\t\t}\n\t\tplugin = Settings.plugins[type.toLowerCase()];\n\t\tif (plugin == null) {\n\t\t\treturn void 0;\n\t\t}\n\t\thook = plugin[name];\n\t\tif (typeof hook === 'function') {\n\t\t\treturn hook;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\thelper = {\n\t\t/**\n\t\t @returns Object A deep clone of the given object.\n\t\t */\n\t\tdeepClone: function (obj) {\n\t\t\tif (typeof obj === 'object') {\n\t\t\t\treturn JSON.parse(JSON.stringify(obj));\n\t\t\t} else {\n\t\t\t\treturn obj;\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t Creates a new Element with given data.\n\t\t @param tagName The tag-name of the element to create.\n\t\t @param data The attributes to set.\n\t\t @param text The text to add into the element.\n\t\t @returns HTMLElement The created element.\n\t\t */\n\t\tcreateElement: function (tagName, data, text) {\n\t\t\tvar element = document.createElement(tagName);\n\t\t\tfor (var k in data) {\n\t\t\t\tif (data.hasOwnProperty(k)) {\n\t\t\t\t\telement.setAttribute(k, data[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (text) {\n\t\t\t\telement.appendChild(document.createTextNode(text));\n\t\t\t}\n\t\t\treturn element;\n\t\t},\n\t\t/**\n\t\t Calls the init-hook of the given element.\n\t\t @param element The element to initialize.\n\t\t */\n\t\tinitElement: function (element) {\n\t\t\tvar hook = getHook(element, 'init');\n\t\t\tif (hook != null) {\n\t\t\t\thook.call(Settings, $(element));\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t Calls the destruct-hook of the given element.\n\t\t @param element The element to destruct.\n\t\t */\n\t\tdestructElement: function (element) {\n\t\t\tvar hook = getHook(element, 'destruct');\n\t\t\tif (hook != null) {\n\t\t\t\thook.call(Settings, $(element));\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t Creates and initializes a new element.\n\t\t @param type The type of the new element.\n\t\t @param tagName The tag-name of the new element.\n\t\t @param data The data to forward to create-hook or use as attributes.\n\t\t @returns JQuery The created element.\n\t\t */\n\t\tcreateElementOfType: function (type, tagName, data) {\n\t\t\tvar element, hook = getHook(type, 'create');\n\t\t\tif (hook != null) {\n\t\t\t\telement = $(hook.call(Settings, type, tagName, data));\n\t\t\t} else {\n\t\t\t\tif (data == null) {\n\t\t\t\t\tdata = {};\n\t\t\t\t}\n\t\t\t\tif (type != null) {\n\t\t\t\t\tdata.type = type;\n\t\t\t\t}\n\t\t\t\telement = $(helper.createElement(tagName || 'input', data));\n\t\t\t}\n\t\t\telement.data('type', type);\n\t\t\thelper.initElement(element);\n\t\t\treturn element;\n\t\t},\n\t\t/**\n\t\t Creates a new Array that contains values of given Array depending on trim and empty.\n\t\t @param array The array to clean.\n\t\t @param trim Whether to trim each value if it has a trim-function.\n\t\t @param empty Whether empty values should get added.\n\t\t @returns Array The filtered and/or modified Array.\n\t\t */\n\t\tcleanArray: function (array, trim, empty) {\n\t\t\tvar cleaned = [];\n\t\t\tif (!trim && empty) {\n\t\t\t\treturn array;\n\t\t\t}\n\t\t\tfor (var i = 0; i < array.length; i++) {\n\t\t\t\tvar value = array[i];\n\t\t\t\tif (trim) {\n\t\t\t\t\tvalue = value === true ? 1 : value === false ? 0 : typeof value.trim === 'function' ? value.trim() : value;\n\t\t\t\t}\n\t\t\t\tif (empty || (value != null ? value.length : void 0)) {\n\t\t\t\t\tcleaned.push(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn cleaned;\n\t\t},\n\t\tisTrue: function (value) {\n\t\t\treturn value === 'true' || +value === 1;\n\t\t},\n\t\tisFalse: function (value) {\n\t\t\treturn value === 'false' || +value === 0;\n\t\t},\n\t\t/**\n\t\t Calls the get-hook of the given element and returns its result.\n\t\t If no hook is specified it gets treated as input-field.\n\t\t @param element The element of that the value should get read.\n\t\t @returns Object The value of the element.\n\t\t */\n\t\treadValue: function (element) {\n\t\t\tvar empty = !helper.isFalse(element.data('empty')),\n\t\t\t\ttrim = !helper.isFalse(element.data('trim')),\n\t\t\t\tsplit = element.data('split'),\n\t\t\t\thook = getHook(element, 'get'),\n\t\t\t\tvalue;\n\t\t\tif (hook != null) {\n\t\t\t\treturn hook.call(Settings, element, trim, empty);\n\t\t\t}\n\t\t\tif (split != null) {\n\t\t\t\tempty = helper.isTrue(element.data('empty')); // default empty-value is false for arrays\n\t\t\t\tvalue = element.val();\n\t\t\t\tvar array = (value != null ? value.split(split || ',') : void 0) || [];\n\t\t\t\treturn helper.cleanArray(array, trim, empty);\n\t\t\t} else {\n\t\t\t\tvalue = element.val();\n\t\t\t\tif (trim && value != null && typeof value.trim === 'function') {\n\t\t\t\t\tvalue = value.trim();\n\t\t\t\t}\n\t\t\t\tif (empty || value !== void 0 && (value == null || value.length !== 0)) {\n\t\t\t\t\treturn value;\n\t\t\t\t} else {\n\t\t\t\t\treturn void 0;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t Calls the set-hook of the given element.\n\t\t If no hook is specified it gets treated as input-field.\n\t\t @param element The JQuery-Object of the element to fill.\n\t\t @param value The value to set.\n\t\t */\n\t\tfillField: function (element, value) {\n\t\t\tvar hook = getHook(element, 'set'),\n\t\t\t\ttrim = element.data('trim');\n\t\t\ttrim = trim !== 'false' && +trim !== 0;\n\t\t\tif (hook != null) {\n\t\t\t\treturn hook.call(Settings, element, value, trim);\n\t\t\t}\n\t\t\tif (value instanceof Array) {\n\t\t\t\tvalue = value.join(element.data('split') || (trim ? ', ' : ','));\n\t\t\t}\n\t\t\tif (trim && value && typeof value.trim === 'function') {\n\t\t\t\tvalue = value.trim();\n\t\t\t\tif (typeof value.toString === 'function') {\n\t\t\t\t\tvalue = value.toString();\n\t\t\t\t}\n\t\t\t} else if (value != null) {\n\t\t\t\tif (typeof value.toString === 'function') {\n\t\t\t\t\tvalue = value.toString();\n\t\t\t\t}\n\t\t\t\tif (trim) {\n\t\t\t\t\tvalue = value.trim();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvalue = '';\n\t\t\t}\n\t\t\tif (value !== void 0) {\n\t\t\t\telement.val(value);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t Calls the init-hook and {@link helper.fillField} on each field within wrapper-object.\n\t\t @param wrapper The wrapper-element to set settings within.\n\t\t */\n\t\tinitFields: function (wrapper) {\n\t\t\t$('[data-key]', wrapper).each(function (ignored, field) {\n\t\t\t\tfield = $(field);\n\t\t\t\tvar hook = getHook(field, 'init'),\n\t\t\t\t\tkeyParts = field.data('key').split('.'),\n\t\t\t\t\tvalue = Settings.get();\n\t\t\t\tif (hook != null) {\n\t\t\t\t\thook.call(Settings, field);\n\t\t\t\t}\n\t\t\t\tfor (var i = 0; i < keyParts.length; i++) {\n\t\t\t\t\tvar part = keyParts[i];\n\t\t\t\t\tif (part && value != null) {\n\t\t\t\t\t\tvalue = value[part];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\thelper.fillField(field, value);\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t Increases the amount of jobs before settings are ready by given amount.\n\t\t @param amount The amount of jobs to register.\n\t\t */\n\t\tregisterReadyJobs: function (amount) {\n\t\t\treturn waitingJobs += amount;\n\t\t},\n\t\t/**\n\t\t Decreases the amount of jobs before settings are ready by given amount or 1.\n\t\t If the amount is less or equal 0 all callbacks registered by {@link helper.whenReady} get called.\n\t\t @param amount The amount of jobs that finished.\n\t\t */\n\t\tbeforeReadyJobsDecreased: function (amount) {\n\t\t\tif (amount == null) {\n\t\t\t\tamount = 1;\n\t\t\t}\n\t\t\tif (waitingJobs > 0) {\n\t\t\t\twaitingJobs -= amount;\n\t\t\t\tif (waitingJobs <= 0) {\n\t\t\t\t\tfor (var i = 0; i < onReady.length; i++) {\n\t\t\t\t\t\tonReady[i]();\n\t\t\t\t\t}\n\t\t\t\t\tonReady = [];\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t Calls the given callback when the settings are ready.\n\t\t @param callback The callback.\n\t\t */\n\t\twhenReady: function (callback) {\n\t\t\tif (waitingJobs <= 0) {\n\t\t\t\tcallback();\n\t\t\t} else {\n\t\t\t\tonReady.push(callback);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t Persists the given settings with given hash.\n\t\t @param hash The hash to use as settings-id.\n\t\t @param settings The settings-object to persist.\n\t\t @param notify Whether to send notification when settings got saved.\n\t\t @param callback The callback to call when done.\n\t\t */\n\t\tpersistSettings: function (hash, settings, notify, callback) {\n\t\t\tif (settings != null && settings._ != null && typeof settings._ !== 'string') {\n\t\t\t\tsettings = helper.deepClone(settings);\n\t\t\t\tsettings._ = JSON.stringify(settings._);\n\t\t\t}\n\t\t\tsocket.emit('admin.settings.set', {\n\t\t\t\thash: hash,\n\t\t\t\tvalues: settings\n\t\t\t}, function (err) {\n\t\t\t\tif (notify) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tapp.alert({\n\t\t\t\t\t\t\ttitle: 'Settings Not Saved',\n\t\t\t\t\t\t\ttype: 'danger',\n\t\t\t\t\t\t\tmessage: \"NodeBB failed to save the settings.\",\n\t\t\t\t\t\t\ttimeout: 5000\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tapp.alert({\n\t\t\t\t\t\t\ttitle: 'Settings Saved',\n\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\tmessage: \"Settings have been successfully saved\",\n\t\t\t\t\t\t\ttimeout: 2500\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (typeof callback === 'function') {\n\t\t\t\t\tcallback(err);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t Sets the settings to use to given settings.\n\t\t @param settings The settings to use.\n\t\t */\n\t\tuse: function (settings) {\n\t\t\ttry {\n\t\t\t\tsettings._ = JSON.parse(settings._);\n\t\t\t} catch (_error) {}\n\t\t\tSettings.cfg = settings;\n\t\t}\n\t};\n\n\n\tSettings = {\n\t\thelper: helper,\n\t\tplugins: {},\n\t\tcfg: {},\n\n\t\t/**\n\t\t Returns the saved settings.\n\t\t @returns Object The settings.\n\t\t */\n\t\tget: function () {\n\t\t\tif (Settings.cfg != null && Settings.cfg._ !== void 0) {\n\t\t\t\treturn Settings.cfg._;\n\t\t\t}\n\t\t\treturn Settings.cfg;\n\t\t},\n\t\t/**\n\t\t Registers a new plugin and calls its use-hook.\n\t\t @param service The plugin to register.\n\t\t @param types The types to bind the plugin to.\n\t\t */\n\t\tregisterPlugin: function (service, types) {\n\t\t\tif (types == null) {\n\t\t\t\ttypes = service.types;\n\t\t\t} else {\n\t\t\t\tservice.types = types;\n\t\t\t}\n\t\t\tif (typeof service.use === 'function') {\n\t\t\t\tservice.use.call(Settings);\n\t\t\t}\n\t\t\tfor (var i = 0; i < types.length; i++) {\n\t\t\t\tvar type = types[i].toLowerCase();\n\t\t\t\tif (Settings.plugins[type] == null) {\n\t\t\t\t\tSettings.plugins[type] = service;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t Sets the settings to given ones, resets the fields within given wrapper and saves the settings server-side.\n\t\t @param hash The hash to use as settings-id.\n\t\t @param settings The settings to set.\n\t\t @param wrapper The wrapper-element to find settings within.\n\t\t @param callback The callback to call when done.\n\t\t @param notify Whether to send notification when settings got saved.\n\t\t */\n\t\tset: function (hash, settings, wrapper, callback, notify) {\n\t\t\tif (notify == null) {\n\t\t\t\tnotify = true;\n\t\t\t}\n\t\t\thelper.whenReady(function () {\n\t\t\t\thelper.use(settings);\n\t\t\t\thelper.initFields(wrapper || 'form');\n\t\t\t\thelper.persistSettings(hash, settings, notify, callback);\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t Fetches the settings from server and calls {@link Settings.helper.initFields} once the settings are ready.\n\t\t @param hash The hash to use as settings-id.\n\t\t @param wrapper The wrapper-element to set settings within.\n\t\t @param callback The callback to call when done.\n\t\t */\n\t\tsync: function (hash, wrapper, callback) {\n\t\t\tsocket.emit('admin.settings.get', {\n\t\t\t\thash: hash\n\t\t\t}, function (err, values) {\n\t\t\t\tif (err) {\n\t\t\t\t\tif (typeof callback === 'function') {\n\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thelper.whenReady(function () {\n\t\t\t\t\t\thelper.use(values);\n\t\t\t\t\t\thelper.initFields(wrapper || 'form');\n\t\t\t\t\t\tif (typeof callback === 'function') {\n\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t Reads the settings from fields and saves them server-side.\n\t\t @param hash The hash to use as settings-id.\n\t\t @param wrapper The wrapper-element to find settings within.\n\t\t @param callback The callback to call when done.\n\t\t @param notify Whether to send notification when settings got saved.\n\t\t */\n\t\tpersist: function (hash, wrapper, callback, notify) {\n\t\t\tvar notSaved = [],\n\t\t\t\tfields = $('[data-key]', wrapper || 'form').toArray();\n\t\t\tif (notify == null) {\n\t\t\t\tnotify = true;\n\t\t\t}\n\t\t\tfor (var i = 0; i < fields.length; i++) {\n\t\t\t\tvar field = $(fields[i]),\n\t\t\t\t\tvalue = helper.readValue(field),\n\t\t\t\t\tparentCfg = Settings.get(),\n\t\t\t\t\tkeyParts = field.data('key').split('.'),\n\t\t\t\t\tlastKey = keyParts[keyParts.length - 1];\n\t\t\t\tif (keyParts.length > 1) {\n\t\t\t\t\tfor (var j = 0; j < keyParts.length - 1; j++) {\n\t\t\t\t\t\tvar part = keyParts[j];\n\t\t\t\t\t\tif (part && parentCfg != null) {\n\t\t\t\t\t\t\tparentCfg = parentCfg[part];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (parentCfg != null) {\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tparentCfg[lastKey] = value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelete parentCfg[lastKey];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tnotSaved.push(field.data('key'));\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (notSaved.length) {\n\t\t\t\tapp.alert({\n\t\t\t\t\ttitle: 'Attributes Not Saved',\n\t\t\t\t\tmessage: \"'\" + (notSaved.join(', ')) + \"' could not be saved. Please contact the plugin-author!\",\n\t\t\t\t\ttype: 'danger',\n\t\t\t\t\ttimeout: 5000\n\t\t\t\t});\n\t\t\t}\n\t\t\thelper.persistSettings(hash, Settings.cfg, notify, callback);\n\t\t},\n\t\tload: function (hash, formEl, callback) {\n\t\t\tcallback = callback || function () {};\n\t\t\tsocket.emit('admin.settings.get', {\n\t\t\t\thash: hash\n\t\t\t}, function (err, values) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\t// Parse all values. If they are json, return json\n\t\t\t\tfor(var key in values) {\n\t\t\t\t\tif (values.hasOwnProperty(key)) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tvalues[key] = JSON.parse(values[key]);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t// Leave the value as is\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$(formEl).deserialize(values);\n\t\t\t\t$(formEl).find('input[type=\"checkbox\"]').each(function () {\n\t\t\t\t\t$(this).parents('.mdl-switch').toggleClass('is-checked', $(this).is(':checked'));\n\t\t\t\t});\n\t\t\t\t$(window).trigger('action:admin.settingsLoaded');\n\n\t\t\t\t// Handle unsaved changes\n\t\t\t\t$(formEl).on('change', 'input, select, textarea', function () {\n\t\t\t\t\tapp.flags = app.flags || {};\n\t\t\t\t\tapp.flags._unsaved = true;\n\t\t\t\t});\n\n\t\t\t\tcallback(null, values);\n\t\t\t});\n\t\t},\n\t\tsave: function (hash, formEl, callback) {\n\t\t\tformEl = $(formEl);\n\t\t\tif (formEl.length) {\n\t\t\t\tvar values = formEl.serializeObject();\n\t\t\t\t// \"Fix\" checkbox values, so that unchecked options are not omitted\n\t\t\t\tformEl.find('input[type=\"checkbox\"]').each(function (idx, inputEl) {\n\t\t\t\t\tinputEl = $(inputEl);\n\t\t\t\t\tif (!inputEl.is(':checked')) {\n\t\t\t\t\t\tvalues[inputEl.attr('name')] = 'off';\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Normalizing value of multiple selects\n\t\t\t\tformEl.find('select[multiple]').each(function (idx, selectEl) {\n\t\t\t\t\tselectEl = $(selectEl);\n\t\t\t\t\tvalues[selectEl.attr('name')] = JSON.stringify(selectEl.val());\n\t\t\t\t});\n\n\t\t\t\tsocket.emit('admin.settings.set', {\n\t\t\t\t\thash: hash,\n\t\t\t\t\tvalues: values\n\t\t\t\t}, function (err) {\n\t\t\t\t\t// Remove unsaved flag to re-enable ajaxify\n\t\t\t\t\tapp.flags._unsaved = false;\n\n\t\t\t\t\tif (typeof callback === 'function') {\n\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tapp.alert({\n\t\t\t\t\t\t\t\ttitle: 'Error while saving settings',\n\t\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\t\ttimeout: 2500\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tapp.alert({\n\t\t\t\t\t\t\t\ttitle: 'Settings Saved',\n\t\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\t\ttimeout: 2500\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\n\thelper.registerReadyJobs(1);\n\trequire(DEFAULT_PLUGINS, function () {\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tSettings.registerPlugin(arguments[i]);\n\t\t}\n\t\thelper.beforeReadyJobsDecreased();\n\t});\n\n\treturn Settings;\n\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/modules/share.js":"'use strict';\n\n/* globals define */\n\ndefine('share', function () {\n\n\tvar module = {};\n\n\tmodule.addShareHandlers = function (name) {\n\n\t\tvar baseUrl = window.location.protocol + '//' + window.location.host;\n\n\t\tfunction openShare(url, urlToPost, width, height) {\n\t\t\twindow.open(url + encodeURIComponent(baseUrl + urlToPost), '_blank', 'width=' + width + ',height=' + height + ',scrollbars=no,status=no');\n\t\t\treturn false;\n\t\t}\n\n\t\t$('#content').off('shown.bs.dropdown', '.share-dropdown').on('shown.bs.dropdown', '.share-dropdown', function () {\n\n\t\t\tvar postLink = $(this).find('.post-link');\n\t\t\tpostLink.val(baseUrl + getPostUrl($(this)));\n\n\t\t\t// without the setTimeout can't select the text in the input\n\t\t\tsetTimeout(function () {\n\t\t\t\tpostLink.putCursorAtEnd().select();\n\t\t\t}, 50);\n\t\t});\n\n\t\taddHandler('.post-link', function (e) {\n\t\t\te.preventDefault();\n\t\t\treturn false;\n\t\t});\n\n\t\taddHandler('[component=\"share/twitter\"]', function () {\n\t\t\treturn openShare('https://twitter.com/intent/tweet?text=' + encodeURIComponent(name) + '&url=', getPostUrl($(this)), 550, 420);\n\t\t});\n\n\t\taddHandler('[component=\"share/facebook\"]', function () {\n\t\t\treturn openShare('https://www.facebook.com/sharer/sharer.php?u=', getPostUrl($(this)), 626, 436);\n\t\t});\n\n\t\taddHandler('[component=\"share/google\"]', function () {\n\t\t\treturn openShare('https://plus.google.com/share?url=', getPostUrl($(this)), 500, 570);\n\t\t});\n\n\t\t$(window).trigger('action:share.addHandlers', {openShare: openShare});\n\t};\n\n\tfunction addHandler(selector, callback) {\n\t\t$('#content').off('click', selector).on('click', selector, callback);\n\t}\n\n\tfunction getPostUrl(clickedElement) {\n\t\tvar pid = parseInt(clickedElement.parents('[data-pid]').attr('data-pid'), 10);\n\t\treturn '/post' + (pid ? '/' + (pid) : '');\n\t}\n\n\treturn module;\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/modules/sort.js":"'use strict';\n/* globals define, config, socket, app, ajaxify, templates */\n\ndefine('sort', ['components'], function (components) {\n\tvar module = {};\n\n\tmodule.handleSort = function (field, method, gotoOnSave) {\n\t\tvar threadSort = components.get('thread/sort');\n\t\tthreadSort.find('i').removeClass('fa-check');\n\t\tvar currentSetting = threadSort.find('a[data-sort=\"' + config[field] + '\"]');\n\t\tcurrentSetting.find('i').addClass('fa-check');\n\n\t\t$('.category, .topic').on('click', '[component=\"thread/sort\"] a', function () {\n\t\t\tvar newSetting = $(this).attr('data-sort');\n\t\t\tsocket.emit(method, newSetting, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t}\n\t\t\t\tconfig[field] = newSetting;\n\t\t\t\tajaxify.go(gotoOnSave);\n\t\t\t});\n\t\t});\n\t};\n\n\treturn module;\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/modules/sounds.js":"\"use strict\";\n/* global app, define, socket, config */\n\ndefine('sounds', ['buzz'], function (buzz) {\n\tvar\tSounds = {};\n\n\tvar loadedSounds = {};\n\tvar eventSoundMapping;\n\tvar files;\n\n\tsocket.on('event:sounds.reloadMapping', function () {\n\t\tSounds.reloadMapping();\n\t});\n\n\tSounds.reloadMapping = function () {\n\t\tsocket.emit('modules.sounds.getMapping', function (err, mapping) {\n\t\t\tif (err) {\n\t\t\t\treturn app.alertError(err.message);\n\t\t\t}\n\t\t\teventSoundMapping = mapping;\n\t\t});\n\t};\n\n\tfunction loadData(callback) {\n\t\tsocket.emit('modules.sounds.getData', function (err, data) {\n\t\t\tif (err) {\n\t\t\t\treturn app.alertError('[sounds] Could not load sound mapping!');\n\t\t\t}\n\t\t\teventSoundMapping = data.mapping;\n\t\t\tfiles = data.files;\n\t\t\tcallback();\n\t\t});\n\t}\n\n\tfunction isSoundLoaded(fileName) {\n\t\treturn loadedSounds[fileName];\n\t}\n\n\tfunction loadFile(fileName, callback) {\n\t\tfunction createSound() {\n\t\t\tif (files && files[fileName]) {\n\t\t\t\tloadedSounds[fileName] = new buzz.sound(files[fileName]);\n\t\t\t}\n\t\t\tcallback();\n\t\t}\n\n\t\tif (isSoundLoaded(fileName)) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tif (!files || !files[fileName]) {\n\t\t\treturn loadData(createSound);\n\t\t}\n\t\tcreateSound();\n\t}\n\n\tSounds.play = function (name) {\n\t\tfunction play() {\n\t\t\tSounds.playFile(eventSoundMapping[name]);\n\t\t}\n\n\t\tif (!eventSoundMapping) {\n\t\t\treturn loadData(play);\n\t\t}\n\n\t\tplay();\n\t};\n\n\tSounds.playFile = function (fileName) {\n\t\tif (!fileName) {\n\t\t\treturn;\n\t\t}\n\n\t\tfunction play() {\n\t\t\tif (loadedSounds[fileName]) {\n\t\t\t\tloadedSounds[fileName].play();\n\t\t\t} else {\n\t\t\t\tapp.alertError('[sounds] Not found: ' + fileName);\n\t\t\t}\n\t\t}\n\n\t\tif (isSoundLoaded(fileName)) {\n\t\t\tplay();\n\t\t} else {\n\t\t\tloadFile(fileName, play);\n\t\t}\n\t};\n\n\treturn Sounds;\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/modules/string.js":"/*\nstring.js - Copyright (C) 2012-2013, JP Richardson <jprichardson@gmail.com>\n*/!function(){\"use strict\";function n(e,t){t!==null&&t!==undefined?typeof t==\"string\"?e.s=t:e.s=t.toString():e.s=t,e.orig=t,t!==null&&t!==undefined?e.__defineGetter__?e.__defineGetter__(\"length\",function(){return e.s.length}):e.length=t.length:e.length=-1}function r(e){n(this,e)}function u(){for(var e in s)(function(e){var t=s[e];i.hasOwnProperty(e)||(o.push(e),i[e]=function(){return String.prototype.s=this,t.apply(this,arguments)})})(e)}function a(){for(var e=0;e<o.length;++e)delete String.prototype[o[e]];o.length=0}function c(){var e=h(),t={};for(var n=0;n<e.length;++n){var r=e[n],s=i[r];try{var o=typeof s.apply(\"teststring\",[]);t[r]=o}catch(u){}}return t}function h(){var e=[];if(Object.getOwnPropertyNames)return e=Object.getOwnPropertyNames(i),e.splice(e.indexOf(\"valueOf\"),1),e.splice(e.indexOf(\"toString\"),1),e;var t={},n=[];for(var r in String.prototype)t[r]=r;for(var r in Object.prototype)delete t[r];for(var r in t)e.push(r);return e}function p(e){return new r(e)}function d(e,t){var n=[],r;for(r=0;r<e.length;r++)n.push(e[r]),t&&t.call(e,e[r],r);return n}var e=\"1.7.0\",t={},i=String.prototype,s=r.prototype={between:function(e,t){var n=this.s,r=n.indexOf(e),i=n.indexOf(t),s=r+e.length;return new this.constructor(i>r?n.slice(s,i):\"\")},camelize:function(){var e=this.trim().s.replace(/(\\-|_|\\s)+(.)?/g,function(e,t,n){return n?n.toUpperCase():\"\"});return new this.constructor(e)},capitalize:function(){return new this.constructor(this.s.substr(0,1).toUpperCase()+this.s.substring(1).toLowerCase())},charAt:function(e){return this.s.charAt(e)},chompLeft:function(e){var t=this.s;return t.indexOf(e)===0?(t=t.slice(e.length),new this.constructor(t)):this},chompRight:function(e){if(this.endsWith(e)){var t=this.s;return t=t.slice(0,t.length-e.length),new this.constructor(t)}return this},collapseWhitespace:function(){var e=this.s.replace(/[\\s\\xa0]+/g,\" \").replace(/^\\s+|\\s+$/g,\"\");return new this.constructor(e)},contains:function(e){return this.s.indexOf(e)>=0},count:function(e){var t=0,n=this.s.indexOf(e);while(n>=0)t+=1,n=this.s.indexOf(e,n+1);return t},dasherize:function(){var e=this.trim().s.replace(/[_\\s]+/g,\"-\").replace(/([A-Z])/g,\"-$1\").replace(/-+/g,\"-\").toLowerCase();return new this.constructor(e)},decodeHtmlEntities:function(){var e=this.s;return e=e.replace(/&#(\\d+);?/g,function(e,t){return String.fromCharCode(t)}).replace(/&#[xX]([A-Fa-f0-9]+);?/g,function(e,t){return String.fromCharCode(parseInt(t,16))}).replace(/&([^;\\W]+;?)/g,function(e,n){var r=n.replace(/;$/,\"\"),i=t[n]||n.match(/;$/)&&t[r];return typeof i==\"number\"?String.fromCharCode(i):typeof i==\"string\"?i:e}),new this.constructor(e)},endsWith:function(e){var t=this.s.length-e.length;return t>=0&&this.s.indexOf(e,t)===t},escapeHTML:function(){return new this.constructor(this.s.replace(/[&<>\"']/g,function(e){return\"&\"+m[e]+\";\"}))},ensureLeft:function(e){var t=this.s;return t.indexOf(e)===0?this:new this.constructor(e+t)},ensureRight:function(e){var t=this.s;return this.endsWith(e)?this:new this.constructor(t+e)},humanize:function(){if(this.s===null||this.s===undefined)return new this.constructor(\"\");var e=this.underscore().replace(/_id$/,\"\").replace(/_/g,\" \").trim().capitalize();return new this.constructor(e)},isAlpha:function(){return!/[^a-z\\xC0-\\xFF]/.test(this.s.toLowerCase())},isAlphaNumeric:function(){return!/[^0-9a-z\\xC0-\\xFF]/.test(this.s.toLowerCase())},isEmpty:function(){return this.s===null||this.s===undefined?!0:/^[\\s\\xa0]*$/.test(this.s)},isLower:function(){return this.isAlpha()&&this.s.toLowerCase()===this.s},isNumeric:function(){return!/[^0-9]/.test(this.s)},isUpper:function(){return this.isAlpha()&&this.s.toUpperCase()===this.s},left:function(e){if(e>=0){var t=this.s.substr(0,e);return new this.constructor(t)}return this.right(-e)},lines:function(){return this.replaceAll(\"\\r\\n\",\"\\n\").s.split(\"\\n\")},pad:function(e,t){t==null&&(t=\" \");if(this.s.length>=e)return new this.constructor(this.s);e-=this.s.length;var n=Array(Math.ceil(e/2)+1).join(t),r=Array(Math.floor(e/2)+1).join(t);return new this.constructor(n+this.s+r)},padLeft:function(e,t){return t==null&&(t=\" \"),this.s.length>=e?new this.constructor(this.s):new this.constructor(Array(e-this.s.length+1).join(t)+this.s)},padRight:function(e,t){return t==null&&(t=\" \"),this.s.length>=e?new this.constructor(this.s):new this.constructor(this.s+Array(e-this.s.length+1).join(t))},parseCSV:function(e,t,n,r){e=e||\",\",n=n||\"\\\\\",typeof t==\"undefined\"&&(t='\"');var i=0,s=[],o=[],u=this.s.length,a=!1,f=this,l=function(e){return f.s.charAt(e)};if(typeof r!=\"undefined\")var c=[];t||(a=!0);while(i<u){var h=l(i);switch(h){case n:if(a&&(n!==t||l(i+1)===t)){i+=1,s.push(l(i));break}if(n!==t)break;case t:a=!a;break;case e:a&&t?s.push(h):(o.push(s.join(\"\")),s.length=0);break;case r:a?s.push(h):c&&(o.push(s.join(\"\")),c.push(o),o=[],s.length=0);break;default:a&&s.push(h)}i+=1}return o.push(s.join(\"\")),c?(c.push(o),c):o},replaceAll:function(e,t){var n=this.s.split(e).join(t);return new this.constructor(n)},right:function(e){if(e>=0){var t=this.s.substr(this.s.length-e,e);return new this.constructor(t)}return this.left(-e)},setValue:function(e){return n(this,e),this},slugify:function(){var e=(new r(this.s.replace(/[^\\w\\s-]/g,\"\").toLowerCase())).dasherize().s;return e.charAt(0)===\"-\"&&(e=e.substr(1)),new this.constructor(e)},startsWith:function(e){return this.s.lastIndexOf(e,0)===0},stripPunctuation:function(){return new this.constructor(this.s.replace(/[^\\w\\s]|_/g,\"\").replace(/\\s+/g,\" \"))},stripTags:function(){var e=this.s,t=arguments.length>0?arguments:[\"\"];return d(t,function(t){e=e.replace(RegExp(\"</?\"+t+\"[^<>]*>\",\"gi\"),\"\")}),new this.constructor(e)},template:function(e,t,n){var r=this.s,t=t||p.TMPL_OPEN,n=n||p.TMPL_CLOSE,i=t.replace(/[-[\\]()*\\s]/g,\"\\\\$&\").replace(/\\$/g,\"\\\\$\"),s=n.replace(/[-[\\]()*\\s]/g,\"\\\\$&\").replace(/\\$/g,\"\\\\$\"),o=new RegExp(i+\"(.+?)\"+s,\"g\"),u=r.match(o)||[];return u.forEach(function(i){var s=i.substring(t.length,i.length-n.length);typeof e[s]!=\"undefined\"&&(r=r.replace(i,e[s]))}),new this.constructor(r)},times:function(e){return new this.constructor((new Array(e+1)).join(this.s))},toBoolean:function(){if(typeof this.orig==\"string\"){var e=this.s.toLowerCase();return e===\"true\"||e===\"yes\"||e===\"on\"}return this.orig===!0||this.orig===1},toFloat:function(e){var t=parseFloat(this.s);return e?parseFloat(t.toFixed(e)):t},toInt:function(){return/^\\s*-?0x/i.test(this.s)?parseInt(this.s,16):parseInt(this.s,10)},trim:function(){var e;return typeof i.trim==\"undefined\"?e=this.s.replace(/(^\\s*|\\s*$)/g,\"\"):e=this.s.trim(),new this.constructor(e)},trimLeft:function(){var e;return i.trimLeft?e=this.s.trimLeft():e=this.s.replace(/(^\\s*)/g,\"\"),new this.constructor(e)},trimRight:function(){var e;return i.trimRight?e=this.s.trimRight():e=this.s.replace(/\\s+$/,\"\"),new this.constructor(e)},truncate:function(e,t){var n=this.s;e=~~e,t=t||\"...\";if(n.length<=e)return new this.constructor(n);var i=function(e){return e.toUpperCase()!==e.toLowerCase()?\"A\":\" \"},s=n.slice(0,e+1).replace(/.(?=\\W*\\w*$)/g,i);return s.slice(s.length-2).match(/\\w\\w/)?s=s.replace(/\\s*\\S+$/,\"\"):s=(new r(s.slice(0,s.length-1))).trimRight().s,(s+t).length>n.length?new r(n):new r(n.slice(0,s.length)+t)},toCSV:function(){function u(e){return e!==null&&e!==\"\"}var e=\",\",t='\"',n=\"\\\\\",i=!0,s=!1,o=[];typeof arguments[0]==\"object\"?(e=arguments[0].delimiter||e,e=arguments[0].separator||e,t=arguments[0].qualifier||t,i=!!arguments[0].encloseNumbers,n=arguments[0].escape||n,s=!!arguments[0].keys):typeof arguments[0]==\"string\"&&(e=arguments[0]),typeof arguments[1]==\"string\"&&(t=arguments[1]),arguments[1]===null&&(t=null);if(this.orig instanceof Array)o=this.orig;else for(var a in this.orig)this.orig.hasOwnProperty(a)&&(s?o.push(a):o.push(this.orig[a]));var f=n+t,l=[];for(var c=0;c<o.length;++c){var h=u(t);typeof o[c]==\"number\"&&(h&=i),h&&l.push(t);if(o[c]!==null&&o[c]!==undefined){var p=(new r(o[c])).replaceAll(t,f).s;l.push(p)}else l.push(\"\");h&&l.push(t),e&&l.push(e)}return l.length=l.length-1,new this.constructor(l.join(\"\"))},toString:function(){return this.s},underscore:function(){var e=this.trim().s.replace(/([a-z\\d])([A-Z]+)/g,\"$1_$2\").replace(/[-\\s]+/g,\"_\").toLowerCase();return(new r(this.s.charAt(0))).isUpper()&&(e=\"_\"+e),new this.constructor(e)},unescapeHTML:function(){return new this.constructor(this.s.replace(/\\&([^;]+);/g,function(e,t){var n;return t in v?v[t]:(n=t.match(/^#x([\\da-fA-F]+)$/))?String.fromCharCode(parseInt(n[1],16)):(n=t.match(/^#(\\d+)$/))?String.fromCharCode(~~n[1]):e}))},valueOf:function(){return this.s.valueOf()}},o=[],f=c();for(var l in f)(function(e){var t=i[e];typeof t==\"function\"&&(s[e]||(f[e]===\"string\"?s[e]=function(){return new this.constructor(t.apply(this,arguments))}:s[e]=t))})(l);s.repeat=s.times,s.include=s.contains,s.toInteger=s.toInt,s.toBool=s.toBoolean,s.decodeHTMLEntities=s.decodeHtmlEntities,s.constructor=r,p.extendPrototype=u,p.restorePrototype=a,p.VERSION=e,p.TMPL_OPEN=\"{{\",p.TMPL_CLOSE=\"}}\",p.ENTITIES=t,typeof module!=\"undefined\"&&typeof module.exports!=\"undefined\"?module.exports=p:typeof define==\"function\"&&define.amd?define('string', [],function(){return p}):window.S=p;var v={lt:\"<\",gt:\">\",quot:'\"',apos:\"'\",amp:\"&\"},m={};for(var g in v)m[v[g]]=g;t={amp:\"&\",gt:\">\",lt:\"<\",quot:'\"',apos:\"'\",AElig:198,Aacute:193,Acirc:194,Agrave:192,Aring:197,Atilde:195,Auml:196,Ccedil:199,ETH:208,Eacute:201,Ecirc:202,Egrave:200,Euml:203,Iacute:205,Icirc:206,Igrave:204,Iuml:207,Ntilde:209,Oacute:211,Ocirc:212,Ograve:210,Oslash:216,Otilde:213,Ouml:214,THORN:222,Uacute:218,Ucirc:219,Ugrave:217,Uuml:220,Yacute:221,aacute:225,acirc:226,aelig:230,agrave:224,aring:229,atilde:227,auml:228,ccedil:231,eacute:233,ecirc:234,egrave:232,eth:240,euml:235,iacute:237,icirc:238,igrave:236,iuml:239,ntilde:241,oacute:243,ocirc:244,ograve:242,oslash:248,otilde:245,ouml:246,szlig:223,thorn:254,uacute:250,ucirc:251,ugrave:249,uuml:252,yacute:253,yuml:255,copy:169,reg:174,nbsp:160,iexcl:161,cent:162,pound:163,curren:164,yen:165,brvbar:166,sect:167,uml:168,ordf:170,laquo:171,not:172,shy:173,macr:175,deg:176,plusmn:177,sup1:185,sup2:178,sup3:179,acute:180,micro:181,para:182,middot:183,cedil:184,ordm:186,raquo:187,frac14:188,frac12:189,frac34:190,iquest:191,times:215,divide:247,\"OElig;\":338,\"oelig;\":339,\"Scaron;\":352,\"scaron;\":353,\"Yuml;\":376,\"fnof;\":402,\"circ;\":710,\"tilde;\":732,\"Alpha;\":913,\"Beta;\":914,\"Gamma;\":915,\"Delta;\":916,\"Epsilon;\":917,\"Zeta;\":918,\"Eta;\":919,\"Theta;\":920,\"Iota;\":921,\"Kappa;\":922,\"Lambda;\":923,\"Mu;\":924,\"Nu;\":925,\"Xi;\":926,\"Omicron;\":927,\"Pi;\":928,\"Rho;\":929,\"Sigma;\":931,\"Tau;\":932,\"Upsilon;\":933,\"Phi;\":934,\"Chi;\":935,\"Psi;\":936,\"Omega;\":937,\"alpha;\":945,\"beta;\":946,\"gamma;\":947,\"delta;\":948,\"epsilon;\":949,\"zeta;\":950,\"eta;\":951,\"theta;\":952,\"iota;\":953,\"kappa;\":954,\"lambda;\":955,\"mu;\":956,\"nu;\":957,\"xi;\":958,\"omicron;\":959,\"pi;\":960,\"rho;\":961,\"sigmaf;\":962,\"sigma;\":963,\"tau;\":964,\"upsilon;\":965,\"phi;\":966,\"chi;\":967,\"psi;\":968,\"omega;\":969,\"thetasym;\":977,\"upsih;\":978,\"piv;\":982,\"ensp;\":8194,\"emsp;\":8195,\"thinsp;\":8201,\"zwnj;\":8204,\"zwj;\":8205,\"lrm;\":8206,\"rlm;\":8207,\"ndash;\":8211,\"mdash;\":8212,\"lsquo;\":8216,\"rsquo;\":8217,\"sbquo;\":8218,\"ldquo;\":8220,\"rdquo;\":8221,\"bdquo;\":8222,\"dagger;\":8224,\"Dagger;\":8225,\"bull;\":8226,\"hellip;\":8230,\"permil;\":8240,\"prime;\":8242,\"Prime;\":8243,\"lsaquo;\":8249,\"rsaquo;\":8250,\"oline;\":8254,\"frasl;\":8260,\"euro;\":8364,\"image;\":8465,\"weierp;\":8472,\"real;\":8476,\"trade;\":8482,\"alefsym;\":8501,\"larr;\":8592,\"uarr;\":8593,\"rarr;\":8594,\"darr;\":8595,\"harr;\":8596,\"crarr;\":8629,\"lArr;\":8656,\"uArr;\":8657,\"rArr;\":8658,\"dArr;\":8659,\"hArr;\":8660,\"forall;\":8704,\"part;\":8706,\"exist;\":8707,\"empty;\":8709,\"nabla;\":8711,\"isin;\":8712,\"notin;\":8713,\"ni;\":8715,\"prod;\":8719,\"sum;\":8721,\"minus;\":8722,\"lowast;\":8727,\"radic;\":8730,\"prop;\":8733,\"infin;\":8734,\"ang;\":8736,\"and;\":8743,\"or;\":8744,\"cap;\":8745,\"cup;\":8746,\"int;\":8747,\"there4;\":8756,\"sim;\":8764,\"cong;\":8773,\"asymp;\":8776,\"ne;\":8800,\"equiv;\":8801,\"le;\":8804,\"ge;\":8805,\"sub;\":8834,\"sup;\":8835,\"nsub;\":8836,\"sube;\":8838,\"supe;\":8839,\"oplus;\":8853,\"otimes;\":8855,\"perp;\":8869,\"sdot;\":8901,\"lceil;\":8968,\"rceil;\":8969,\"lfloor;\":8970,\"rfloor;\":8971,\"lang;\":9001,\"rang;\":9002,\"loz;\":9674,\"spades;\":9824,\"clubs;\":9827,\"hearts;\":9829,\"diams;\":9830}}.call(this);\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/modules/taskbar.js":"\"use strict\";\n/*global define, app, templates*/\n\ndefine('taskbar', function () {\n\tvar taskbar = {};\n\n\ttaskbar.init = function () {\n\t\tvar self = this;\n\n\t\ttemplates.parse('modules/taskbar', {}, function (html) {\n\t\t\tself.taskbar = $(html);\n\t\t\tself.tasklist = self.taskbar.find('ul');\n\t\t\t$(document.body).append(self.taskbar);\n\n\t\t\tself.taskbar.on('click', 'li', function () {\n\t\t\t\tvar\t$btn = $(this),\n\t\t\t\t\tmodule = $btn.attr('data-module'),\n\t\t\t\t\tuuid = $btn.attr('data-uuid');\n\n\t\t\t\trequire([module], function (module) {\n\t\t\t\t\tif (!$btn.hasClass('active')) {\n\t\t\t\t\t\tminimizeAll();\n\t\t\t\t\t\tmodule.load(uuid);\n\t\t\t\t\t\ttaskbar.toggleNew(uuid, false);\n\t\t\t\t\t\tapp.alternatingTitle('');\n\n\t\t\t\t\t\ttaskbar.tasklist.removeClass('active');\n\t\t\t\t\t\t$btn.addClass('active');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmodule.minimize(uuid);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn false;\n\t\t\t});\n\t\t});\n\t};\n\n\ttaskbar.discard = function (module, uuid) {\n\t\tvar btnEl = taskbar.tasklist.find('[data-module=\"' + module + '\"][data-uuid=\"' + uuid + '\"]');\n\t\tbtnEl.remove();\n\t\t\n\t\tupdate();\n\t};\n\n\ttaskbar.push = function (module, uuid, options) {\n\t\tvar element = taskbar.tasklist.find('li[data-uuid=\"' + uuid + '\"]');\n\n\t\tvar data = {\n\t\t\tmodule: module,\n\t\t\tuuid: uuid,\n\t\t\toptions: options,\n\t\t\telement: element\n\t\t};\n\n\t\t$(window).trigger('filter:taskbar.push', data);\n\n\t\tif (!element.length && data.module) {\n\t\t\tcreateTaskbar(data);\n\t\t}\n\t};\n\n\ttaskbar.get = function (module) {\n\t\tvar items = $('[data-module=\"' + module + '\"]').map(function (idx, el) {\n\t\t\treturn $(el).data();\n\t\t});\n\n\t\treturn items;\n\t};\n\n\ttaskbar.minimize = function (module, uuid) {\n\t\tvar btnEl = taskbar.tasklist.find('[data-module=\"' + module + '\"][data-uuid=\"' + uuid + '\"]');\n\t\tbtnEl.toggleClass('active', false);\n\t};\n\n\ttaskbar.toggleNew = function (uuid, state, silent) {\n\t\tvar btnEl = taskbar.tasklist.find('[data-uuid=\"' + uuid + '\"]');\n\t\tbtnEl.toggleClass('new', state);\n\n\t\tif (!silent) {\n\t\t\t$(window).trigger('action:taskbar.toggleNew', uuid);\n\t\t}\n\t};\n\n\ttaskbar.updateActive = function (uuid) {\n\t\tvar\ttasks = taskbar.tasklist.find('li');\n\t\ttasks.removeClass('active');\n\t\ttasks.filter('[data-uuid=\"' + uuid + '\"]').addClass('active');\n\t};\n\n\ttaskbar.isActive = function (uuid) {\n\t\tvar taskBtn = taskbar.tasklist.find('li[data-uuid=\"' + uuid + '\"]');\n\t\treturn taskBtn.hasClass('active');\n\t};\n\n\tfunction update() {\n\t\tvar\ttasks = taskbar.tasklist.find('li');\n\n\t\tif (tasks.length > 0) {\n\t\t\ttaskbar.taskbar.attr('data-active', '1');\n\t\t} else {\n\t\t\ttaskbar.taskbar.removeAttr('data-active');\n\t\t}\n\t}\n\n\tfunction minimizeAll() {\n\t\ttaskbar.tasklist.find('.active').removeClass('active');\n\t}\n\n\tfunction createTaskbar(data) {\n\t\tvar title = $('<div></div>').text(data.options.title || 'NodeBB Task').html();\n\n\t\tvar\ttaskbarEl = $('<li />')\n\t\t\t.addClass(data.options.className)\n\t\t\t.html('<a href=\"#\">' +\n\t\t\t\t(data.options.icon ? '<i class=\"fa ' + data.options.icon + '\"></i> ' : '') +\n\t\t\t\t(data.options.image ? '<img src=\"' + data.options.image + '\"/> ' : '') +\n\t\t\t\t'<span>' + title + '</span>' +\n\t\t\t\t'</a>')\n\t\t\t.attr({\n\t\t\t\t'data-module': data.module,\n\t\t\t\t'data-uuid': data.uuid\n\t\t\t})\n\t\t\t.addClass(data.options.state !== undefined ? data.options.state : 'active');\n\n\t\tif (!data.options.state || data.options.state === 'active') {\n\t\t\tminimizeAll();\n\t\t}\n\n\t\ttaskbar.tasklist.append(taskbarEl);\n\t\tupdate();\n\n\t\tdata.element = taskbarEl;\n\n\t\ttaskbarEl.data(data);\n\t\t$(window).trigger('action:taskbar.pushed', data);\n\t}\n\n\treturn taskbar;\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/modules/topicSelect.js":"'use strict';\n\n/* globals define*/\n\ndefine('topicSelect', ['components'], function (components) {\n\tvar TopicSelect = {};\n\tvar lastSelected;\n\n\tvar topicsContainer;\n\n\tTopicSelect.init = function (onSelect) {\n\t\ttopicsContainer = $('[component=\"category\"]');\n\t\ttopicsContainer.on('selectstart', function () {\n\t\t\treturn false;\n\t\t});\n\n\t\ttopicsContainer.on('click', '[component=\"topic/select\"]', function (ev) {\n\t\t\tvar select = $(this);\n\n\t\t\tif (ev.shiftKey) {\n\t\t\t\tselectRange($(this).parents('[component=\"category/topic\"]').attr('data-tid'));\n\t\t\t\tlastSelected = select;\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar isSelected = select.parents('[data-tid]').hasClass('selected');\n\t\t\ttoggleSelect(select, !isSelected);\n\t\t\tlastSelected = select;\n\t\t\tif (typeof onSelect === 'function') {\n\t\t\t\tonSelect();\n\t\t\t}\n\t\t});\n\t};\n\n\tfunction toggleSelect(select, isSelected) {\n\t\tselect.toggleClass('fa-check-square-o', isSelected);\n\t\tselect.toggleClass('fa-square-o', !isSelected);\n\t\tselect.parents('[component=\"category/topic\"]').toggleClass('selected', isSelected);\n\t}\n\n\tTopicSelect.getSelectedTids = function () {\n\t\tvar tids = [];\n\t\ttopicsContainer.find('[component=\"category/topic\"].selected').each(function () {\n\t\t\ttids.push($(this).attr('data-tid'));\n\t\t});\n\t\treturn tids;\n\t};\n\n\tTopicSelect.unselectAll = function () {\n\t\ttopicsContainer.find('[component=\"category/topic\"].selected').removeClass('selected');\n\t\ttopicsContainer.find('[component=\"topic/select\"]').toggleClass('fa-check-square-o', false).toggleClass('fa-square-o', true);\n\t};\n\n\tfunction selectRange(clickedTid) {\n\n\t\tif(!lastSelected) {\n\t\t\tlastSelected = $('[component=\"category/topic\"]').first().find('[component=\"topic/select\"]');\n\t\t}\n\n\t\tvar isClickedSelected = components.get('category/topic', 'tid', clickedTid).hasClass('selected');\n\n\t\tvar clickedIndex = getIndex(clickedTid);\n\t\tvar lastIndex = getIndex(lastSelected.parents('[component=\"category/topic\"]').attr('data-tid'));\n\t\tselectIndexRange(clickedIndex, lastIndex, !isClickedSelected);\n\t}\n\n\tfunction selectIndexRange(start, end, isSelected) {\n\t\tif (start > end) {\n\t\t\tvar tmp = start;\n\t\t\tstart = end;\n\t\t\tend = tmp;\n\t\t}\n\n\t\tfor(var i = start; i <= end; ++i) {\n\t\t\tvar topic = $('[component=\"category/topic\"]').eq(i);\n\t\t\ttoggleSelect(topic.find('[component=\"topic/select\"]'), isSelected);\n\t\t}\n\t}\n\n\tfunction getIndex(tid) {\n\t\treturn components.get('category/topic', 'tid', tid).index('[component=\"category/topic\"]');\n\t}\n\n\treturn TopicSelect;\n});","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/modules/translator.js":"/* global define, jQuery, config, utils, window, Promise */\n\n(function (factory) {\n\t'use strict';\n\tfunction loadClient(language, namespace) {\n\t\treturn Promise.resolve(jQuery.getJSON(config.relative_path + '/api/language/' + language + '/' + namespace));\n\t}\n\tif (typeof define === 'function' && define.amd) {\n\t\t// AMD. Register as a named module\n\t\tdefine('translator', ['string'], function (string) {\n\t\t\treturn factory(string, loadClient);\n\t\t});\n\t} else if (typeof module === 'object' && module.exports) {\n\t\t// Node\n\t\t(function () {\n\t\t\trequire('promise-polyfill');\n\t\t\tvar languages = require('../../../src/languages');\n\n\t\t\tfunction loadServer(language, namespace) {\n\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\tlanguages.get(language, namespace, function (err, data) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresolve(data);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tmodule.exports = factory(require('string'), loadServer);\n\t\t}());\n\t} else {\n\t\twindow.translator = factory(window.string, loadClient);\n\t}\n}(function (string, load) {\n\t'use strict';\n\tvar assign = Object.assign || jQuery.extend;\n\tfunction classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\tvar Translator = (function () {\n\t\t/**\n\t\t * Construct a new Translator object\n\t\t * @param {string} language - Language code for this translator instance\n\t\t */\n\t\tfunction Translator(language) {\n\t\t\tvar self = this;\n\t\t\tclassCallCheck(self, Translator);\n\n\t\t\tif (!language) {\n\t\t\t\tthrow new TypeError('Parameter `language` must be a language string. Received ' + language + (language === '' ? '(empty string)' : ''));\n\t\t\t}\n\n\t\t\tself.modules = Object.keys(Translator.moduleFactories).map(function (namespace) {\n\t\t\t\tvar factory = Translator.moduleFactories[namespace];\n\t\t\t\treturn [namespace, factory(language)];\n\t\t\t}).reduce(function (prev, elem) {\n\t\t\t\tvar namespace = elem[0];\n\t\t\t\tvar module = elem[1];\n\t\t\t\tprev[namespace] = module;\n\n\t\t\t\treturn prev;\n\t\t\t}, {});\n\n\t\t\tself.lang = language;\n\t\t\tself.translations = {};\n\t\t}\n\n\t\tTranslator.prototype.load = load;\n\n\t\t/**\n\t\t * Parse the translation instructions into the language of the Translator instance\n\t\t * @param {string} str - Source string\n\t\t * @returns {Promise<string>}\n\t\t */\n\t\tTranslator.prototype.translate = function translate(str) {\n\t\t\t// regex for valid text in namespace / key\n\t\t\tvar validText = 'a-zA-Z0-9\\\\-_.\\\\/';\n\t\t\tvar validTextRegex = new RegExp('[' + validText + ']');\n\t\t\tvar invalidTextRegex = new RegExp('[^' + validText + '\\\\]]');\n\n\t\t\t// current cursor position\n\t\t\tvar cursor = 0;\n\t\t\t// last break of the input string\n\t\t\tvar lastBreak = 0;\n\t\t\t// length of the input string\n\t\t\tvar len = str.length;\n\t\t\t// array to hold the promises for the translations\n\t\t\t// and the strings of untranslated text in between\n\t\t\tvar toTranslate = [];\n\n\t\t\t// split a translator string into an array of tokens\n\t\t\t// but don't split by commas inside other translator strings\n\t\t\tfunction split(text) {\n\t\t\t\tvar len = text.length;\n\t\t\t\tvar arr = [];\n\t\t\t\tvar i = 0;\n\t\t\t\tvar brk = 0;\n\t\t\t\tvar level = 0;\n\n\t\t\t\twhile (i + 2 <= len) {\n\t\t\t\t\tif (text.slice(i, i + 2) === '[[') {\n\t\t\t\t\t\tlevel += 1;\n\t\t\t\t\t\ti += 1;\n\t\t\t\t\t} else if (text.slice(i, i + 2) === ']]') {\n\t\t\t\t\t\tlevel -= 1;\n\t\t\t\t\t\ti += 1;\n\t\t\t\t\t} else if (level === 0 && text[i] === ',') {\n\t\t\t\t\t\tarr.push(text.slice(brk, i).trim());\n\t\t\t\t\t\ti += 1;\n\t\t\t\t\t\tbrk = i;\n\t\t\t\t\t}\n\t\t\t\t\ti += 1;\n\t\t\t\t}\n\t\t\t\tarr.push(text.slice(brk, i + 1).trim());\n\t\t\t\treturn arr;\n\t\t\t}\n\n\t\t\t// the loooop, we'll go to where the cursor\n\t\t\t// is equal to the length of the string since\n\t\t\t// slice doesn't include the ending index\n\t\t\twhile (cursor + 2 <= len) {\n\t\t\t\t// if the current position in the string looks\n\t\t\t\t// like the beginning of a translation string\n\t\t\t\tif (str.slice(cursor, cursor + 2) === '[[') {\n\t\t\t\t\t// split the string from the last break\n\t\t\t\t\t// to the character before the cursor\n\t\t\t\t\t// add that to the result array\n\t\t\t\t\ttoTranslate.push(str.slice(lastBreak, cursor));\n\t\t\t\t\t// set the cursor position past the beginning\n\t\t\t\t\t// brackets of the translation string\n\t\t\t\t\tcursor += 2;\n\t\t\t\t\t// set the last break to our current\n\t\t\t\t\t// spot since we just broke the string\n\t\t\t\t\tlastBreak = cursor;\n\n\t\t\t\t\t// the current level of nesting of the translation strings\n\t\t\t\t\tvar level = 0;\n\t\t\t\t\tvar sliced;\n\t\t\t\t\t// validating the current string is actually a translation\n\t\t\t\t\tvar textBeforeColonFound = false;\n\t\t\t\t\tvar colonFound = false;\n\t\t\t\t\tvar textAfterColonFound = false;\n\t\t\t\t\tvar commaAfterNameFound = false;\n\n\t\t\t\t\twhile (cursor + 2 <= len) {\n\t\t\t\t\t\tsliced = str.slice(cursor, cursor + 2);\n\t\t\t\t\t\t// found some text after the double bracket, \n\t\t\t\t\t\t// so this is probably a translation string\n\t\t\t\t\t\tif (!textBeforeColonFound && validTextRegex.test(sliced[0])) {\n\t\t\t\t\t\t\ttextBeforeColonFound = true;\n\t\t\t\t\t\t\tcursor += 1;\n\t\t\t\t\t\t// found a colon, so this is probably a translation string\n\t\t\t\t\t\t} else if (textBeforeColonFound && !colonFound && sliced[0] === ':') {\n\t\t\t\t\t\t\tcolonFound = true;\n\t\t\t\t\t\t\tcursor += 1;\n\t\t\t\t\t\t// found some text after the colon,\n\t\t\t\t\t\t// so this is probably a translation string\n\t\t\t\t\t\t} else if (colonFound && !textAfterColonFound && validTextRegex.test(sliced[0])) {\n\t\t\t\t\t\t\ttextAfterColonFound = true;\n\t\t\t\t\t\t\tcursor += 1;\n\t\t\t\t\t\t} else if (textAfterColonFound && !commaAfterNameFound && sliced[0] === ',') {\n\t\t\t\t\t\t\tcommaAfterNameFound = true;\n\t\t\t\t\t\t\tcursor += 1;\n\t\t\t\t\t\t// a space or comma was found before the name\n\t\t\t\t\t\t// this isn't a translation string, so back out\n\t\t\t\t\t\t} else if (!(textBeforeColonFound && colonFound && textAfterColonFound && commaAfterNameFound) && \n\t\t\t\t\t\t\t\tinvalidTextRegex.test(sliced[0])) {\n\t\t\t\t\t\t\tcursor += 1;\n\t\t\t\t\t\t\tlastBreak -= 2;\n\t\t\t\t\t\t\tif (level > 0) {\n\t\t\t\t\t\t\t\tlevel -= 1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t// if we're at the beginning of another translation string,\n\t\t\t\t\t\t// we're nested, so add to our level\n\t\t\t\t\t\t} else if (sliced === '[[') {\n\t\t\t\t\t\t\tlevel += 1;\n\t\t\t\t\t\t\tcursor += 2;\n\t\t\t\t\t\t// if we're at the end of a translation string\n\t\t\t\t\t\t} else if (sliced === ']]') {\n\t\t\t\t\t\t\t// if we're at the base level, then this is the end\n\t\t\t\t\t\t\tif (level === 0) {\n\t\t\t\t\t\t\t\t// so grab the name and args\n\t\t\t\t\t\t\t\tvar result = split(str.slice(lastBreak, cursor));\n\t\t\t\t\t\t\t\tvar name = result[0];\n\t\t\t\t\t\t\t\tvar args = result.slice(1);\n\n\t\t\t\t\t\t\t\t// add the translation promise to the array\n\t\t\t\t\t\t\t\ttoTranslate.push(this.translateKey(name, args));\n\t\t\t\t\t\t\t\t// skip past the ending brackets\n\t\t\t\t\t\t\t\tcursor += 2;\n\t\t\t\t\t\t\t\t// set this as our last break\n\t\t\t\t\t\t\t\tlastBreak = cursor;\n\t\t\t\t\t\t\t\t// and we're no longer in a translation string,\n\t\t\t\t\t\t\t\t// so continue with the main loop\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// otherwise we lower the level\n\t\t\t\t\t\t\tlevel -= 1;\n\t\t\t\t\t\t\t// and skip past the ending brackets\n\t\t\t\t\t\t\tcursor += 2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// otherwise just move to the next character\n\t\t\t\t\t\t\tcursor += 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// move to the next character\n\t\t\t\tcursor += 1;\n\t\t\t}\n\n\t\t\t// add the remaining text after the last translation string\n\t\t\ttoTranslate.push(str.slice(lastBreak, cursor + 2));\n\n\t\t\t// and return a promise for the concatenated translated string\n\t\t\treturn Promise.all(toTranslate).then(function (translated) {\n\t\t\t\treturn translated.join('');\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * Translates a specific key and array of arguments\n\t\t * @param {string} name - Translation key (ex. 'global:home')\n\t\t * @param {string[]} args - Arguments for `%1`, `%2`, etc\n\t\t * @returns {Promise<string>}\n\t\t */\n\t\tTranslator.prototype.translateKey = function translateKey(name, args) {\n\t\t\tvar self = this;\n\n\t\t\tvar result = name.split(':', 2);\n\t\t\tvar namespace = result[0];\n\t\t\tvar key = result[1];\n\n\t\t\tif (self.modules[namespace]) {\n\t\t\t\treturn Promise.resolve(self.modules[namespace](key, args));\n\t\t\t}\n\n\t\t\tif (namespace && !key) {\n\t\t\t\treturn Promise.resolve('[[' + namespace + ']]');\n\t\t\t}\n\n\t\t\tvar translation = this.getTranslation(namespace, key);\n\t\t\tvar argsToTranslate = args.map(function (arg) {\n\t\t\t\treturn string(arg).collapseWhitespace().decodeHTMLEntities().escapeHTML().s;\n\t\t\t}).map(function (arg) {\n\t\t\t\treturn self.translate(arg);\n\t\t\t});\n\n\t\t\t// so we can await all promises at once\n\t\t\targsToTranslate.unshift(translation);\n\n\t\t\treturn Promise.all(argsToTranslate).then(function (result) {\n\t\t\t\tvar translated = result[0];\n\t\t\t\tvar translatedArgs = result.slice(1);\n\n\t\t\t\tif (!translated) {\n\t\t\t\t\treturn key;\n\t\t\t\t}\n\t\t\t\tvar out = translated;\n\t\t\t\ttranslatedArgs.forEach(function (arg, i) {\n\t\t\t\t\tout = out.replace(new RegExp('%' + (i + 1), 'g'), arg);\n\t\t\t\t});\n\t\t\t\treturn out;\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * Load translation file (or use a cached version), and optionally return the translation of a certain key\n\t\t * @param {string} namespace - The file name of the translation namespace\n\t\t * @param {string} [key] - The key of the specific translation to getJSON\n\t\t * @returns {Promise<Object|string>}\n\t\t */\n\t\tTranslator.prototype.getTranslation = function getTranslation(namespace, key) {\n\t\t\tvar translation;\n\t\t\tif (!namespace) {\n\t\t\t\tconsole.warn('[translator] Parameter `namespace` is ' + namespace + (namespace === '' ? '(empty string)' : ''));\n\t\t\t\ttranslation = Promise.resolve({});\n\t\t\t} else {\n\t\t\t\ttranslation = this.translations[namespace] = this.translations[namespace] || this.load(this.lang, namespace);\n\t\t\t}\n\n\t\t\tif (key) {\n\t\t\t\treturn translation.then(function (x) {\n\t\t\t\t\treturn x[key];\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn translation;\n\t\t};\n\n\t\t/**\n\t\t * Get the language of the current environment, falling back to defaults\n\t\t * @returns {string}\n\t\t */\n\t\tTranslator.getLanguage = function getLanguage() {\n\t\t\tvar lang;\n\n\t\t\tif (typeof window === 'object' && window.config && window.utils) {\n\t\t\t\tlang = utils.params().lang || config.userLang || config.defaultLang || 'en-GB';\n\t\t\t} else {\n\t\t\t\tvar meta = require('../../../src/meta');\n\t\t\t\tlang = meta.config.defaultLang || 'en-GB';\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t};\n\n\t\t/**\n\t\t * Create and cache a new Translator instance, or return a cached one\n\t\t * @param {string} [language] - ('en-GB') Language string\n\t\t * @returns {Translator}\n\t\t */\n\t\tTranslator.create = function create(language) {\n\t\t\tif (!language) {\n\t\t\t\tlanguage = Translator.getLanguage();\n\t\t\t}\n\n\t\t\tTranslator.cache[language] = Translator.cache[language] || new Translator(language);\n\n\t\t\treturn Translator.cache[language];\n\t\t};\n\n\t\tTranslator.cache = {};\n\n\t\t/**\n\t\t * Register a custom module to handle translations\n\t\t * @param {string} namespace - Namespace to handle translation for\n\t\t * @param {Function} factory - Function to return the translation function for this namespace\n\t\t */\n\t\tTranslator.registerModule = function registerModule(namespace, factory) {\n\t\t\tTranslator.moduleFactories[namespace] = factory;\n\n\t\t\tObject.keys(Translator.cache).forEach(function (key) {\n\t\t\t\tvar translator = Translator.cache[key];\n\t\t\t\ttranslator.modules[namespace] = factory(translator.lang);\n\t\t\t});\n\t\t};\n\n\t\tTranslator.moduleFactories = {};\n\n\t\treturn Translator;\n\t}());\n\n\tvar adaptor = {\n\t\t/**\n\t\t * The Translator class\n\t\t */\n\t\tTranslator: Translator,\n\n\t\t/**\n\t\t * Legacy translator function for backwards compatibility\n\t\t */\n\t\ttranslate: function translate(text, language, callback) {\n\t\t\t// console.warn('[translator] `translator.translate(text, [lang, ]callback)` is deprecated. ' +\n\t\t\t//   'Use the `translator.Translator` class instead.');\n\n\t\t\tvar cb = callback;\n\t\t\tvar lang = language;\n\t\t\tif (typeof language === 'function') {\n\t\t\t\tcb = language;\n\t\t\t\tlang = null;\n\t\t\t}\n\n\t\t\tif (!(typeof text === 'string' || text instanceof String) || text === '') {\n\t\t\t\treturn cb('');\n\t\t\t}\n\n\t\t\tTranslator.create(lang).translate(text).then(function (output) {\n\t\t\t\treturn cb(output);\n\t\t\t}).catch(function (err) {\n\t\t\t\tconsole.error('Translation failed: ' + err.stack);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Construct a translator pattern\n\t\t * @param {string} name - Translation name\n\t\t * @param {string[]} args - Optional arguments for the pattern\n\t\t */\n\t\tcompile: function compile() {\n\t\t\tvar args = Array.prototype.slice.call(arguments, 0);\n\n\t\t\treturn '[[' + args.join(', ') + ']]';\n\t\t},\n\n\t\t/**\n\t\t * Escape translation patterns from text\n\t\t */\n\t\tescape: function escape(text) {\n\t\t\treturn typeof text === 'string' ? text.replace(/\\[\\[([\\S]*?)\\]\\]/g, '\\\\[\\\\[$1\\\\]\\\\]') : text;\n\t\t},\n\n\t\t/**\n\t\t * Unescape translation patterns from text\n\t\t */\n\t\tunescape: function unescape(text) {\n\t\t\treturn typeof text === 'string' ? text.replace(/\\\\\\[\\\\\\[([\\S]*?)\\\\\\]\\\\\\]/g, '[[$1]]') : text;\n\t\t},\n\n\t\t/**\n\t\t * Add translations to the cache\n\t\t */\n\t\taddTranslation: function addTranslation(language, namespace, translation) {\n\t\t\tTranslator.create(language).getTranslation(namespace).then(function (translations) {\n\t\t\t\tassign(translations, translation);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Get the translations object\n\t\t */\n\t\tgetTranslations: function getTranslations(language, namespace, callback) {\n\t\t\tcallback = callback || function () {};\n\t\t\tTranslator.create(language).getTranslation(namespace).then(callback);\n\t\t},\n\n\t\t/**\n\t\t * Alias of getTranslations\n\t\t */\n\t\tload: function load(language, namespace, callback) {\n\t\t\tadaptor.getTranslations(language, namespace, callback);\n\t\t},\n\n\t\t/**\n\t\t * Get the language of the current environment, falling back to defaults\n\t\t */\n\t\tgetLanguage: Translator.getLanguage,\n\n\t\ttoggleTimeagoShorthand: function toggleTimeagoShorthand() {\n\t\t\tvar tmp = assign({}, jQuery.timeago.settings.strings);\n\t\t\tjQuery.timeago.settings.strings = assign({}, adaptor.timeagoShort);\n\t\t\tadaptor.timeagoShort = assign({}, tmp);\n\t\t},\n\t\tprepareDOM: function prepareDOM() {\n\t\t\t// Load the appropriate timeago locale file,\n\t\t\t// and correct NodeBB language codes to timeago codes, if necessary\n\t\t\tvar languageCode = void 0;\n\t\t\tswitch (config.userLang) {\n\t\t\t\tcase 'en-GB':\n\t\t\t\tcase 'en-US':\n\t\t\t\t\tlanguageCode = 'en';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'fa-IR':\n\t\t\t\t\tlanguageCode = 'fa';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'pt-BR':\n\t\t\t\t\tlanguageCode = 'pt-br';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'nb':\n\t\t\t\t\tlanguageCode = 'no';\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tlanguageCode = config.userLang;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tjQuery.getScript(config.relative_path + '/vendor/jquery/timeago/locales/jquery.timeago.' + languageCode + '.js').done(function () {\n\t\t\t\tjQuery('.timeago').timeago();\n\t\t\t\tadaptor.timeagoShort = assign({}, jQuery.timeago.settings.strings);\n\n\t\t\t\t// Retrieve the shorthand timeago values as well\n\t\t\t\tjQuery.getScript(config.relative_path + '/vendor/jquery/timeago/locales/jquery.timeago.' + languageCode + '-short.js').done(function () {\n\t\t\t\t\t// Switch back to long-form\n\t\t\t\t\tadaptor.toggleTimeagoShorthand();\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Add directional code if necessary\n\t\t\tadaptor.translate('[[language:dir]]', function (value) {\n\t\t\t\tif (value) {\n\t\t\t\t\tjQuery('html').css('direction', value).attr('data-dir', value);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\treturn adaptor;\n}));\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/public/src/modules/uploader.js":"'use strict';\n\n/* globals define, templates */\n\ndefine('uploader', ['translator'], function (translator) {\n\n\tvar module = {};\n\n\tmodule.open = function (route, params, fileSize, callback) {\n\t\tconsole.warn('[uploader] uploader.open() is deprecated, please use uploader.show() instead, and pass parameters as a singe option with callback, e.g. uploader.show({}, callback);');\n\t\tmodule.show({\n\t\t\troute: route,\n\t\t\tparams: params,\n\t\t\tfileSize: fileSize\n\t\t}, callback);\n\t};\n\n\tmodule.show = function (data, callback) {\n\t\tvar fileSize = data.hasOwnProperty('fileSize') && data.fileSize !== undefined ? parseInt(data.fileSize, 10) : false;\n\t\tparseModal({\n\t\t\tshowHelp: data.hasOwnProperty('showHelp') && data.showHelp !== undefined ? data.showHelp : true,\n\t\t\tfileSize: fileSize,\n\t\t\ttitle: data.title || '[[global:upload_file]]',\n\t\t\tdescription: data.description || '',\n\t\t\tbutton: data.button || '[[global:upload]]',\n\t\t\taccept: data.accept ? data.accept.replace(/,/g, '&#44; ') : ''\n\t\t}, function (uploadModal) {\n\t\t\tuploadModal = $(uploadModal);\n\n\t\t\tuploadModal.modal('show');\n\t\t \tuploadModal.on('hidden.bs.modal', function () {\n\t\t\t\tuploadModal.remove();\n\t\t\t});\n\n\t\t\tvar uploadForm = uploadModal.find('#uploadForm');\n\t\t\tuploadForm.attr('action', data.route);\n\t\t\tuploadForm.find('#params').val(JSON.stringify(data.params));\n\n\t\t\tuploadModal.find('#fileUploadSubmitBtn').on('click', function () {\n\t\t\t\t$(this).addClass('disabled');\n\t\t\t\tuploadForm.submit();\n\t\t\t});\n\n\t\t\tuploadForm.submit(function () {\n\t\t\t\tonSubmit(uploadModal, fileSize, callback);\n\t\t\t\treturn false;\n\t\t\t});\n\t\t});\n\t};\n\n\tmodule.hideAlerts = function (modal) {\n\t\t$(modal).find('#alert-status, #alert-success, #alert-error, #upload-progress-box').addClass('hide');\n\t};\n\n\tfunction onSubmit(uploadModal, fileSize, callback) {\n\t\tfunction showAlert(type, message) {\n\t\t\tmodule.hideAlerts(uploadModal);\n\t\t\tif (type === 'error') {\n\t\t\t\tuploadModal.find('#fileUploadSubmitBtn').removeClass('disabled');\n\t\t\t}\n\t\t\tuploadModal.find('#alert-' + type).translateText(message).removeClass('hide');\n\t\t}\n\n\t\tshowAlert('status', '[[uploads:uploading-file]]');\n\n\t\tuploadModal.find('#upload-progress-bar').css('width', '0%');\n\t\tuploadModal.find('#upload-progress-box').show().removeClass('hide');\n\n\t\tvar fileInput = uploadModal.find('#fileInput');\n\t\tif (!fileInput.val()) {\n\t\t\treturn showAlert('error', '[[uploads:select-file-to-upload]]');\n\t\t}\n\t\tif (!hasValidFileSize(fileInput[0], fileSize)) {\n\t\t\treturn showAlert('error', '[[error:file-too-big, ' + fileSize + ']]');\n\t\t}\n\n\t\tuploadModal.find('#uploadForm').ajaxSubmit({\n\t\t\theaders: {\n\t\t\t\t'x-csrf-token': config.csrf_token\n\t\t\t},\n\t\t\terror: function (xhr) {\n\t\t\t\txhr = maybeParse(xhr);\n\t\t\t\tshowAlert('error', xhr.responseJSON ? (xhr.responseJSON.error || xhr.statusText) : 'error uploading, code : ' + xhr.status);\n\t\t\t},\n\t\t\tuploadProgress: function (event, position, total, percent) {\n\t\t\t\tuploadModal.find('#upload-progress-bar').css('width', percent + '%');\n\t\t\t},\n\t\t\tsuccess: function (response) {\n\t\t\t\tresponse = maybeParse(response);\n\n\t\t\t\tif (response.error) {\n\t\t\t\t\treturn showAlert('error', response.error);\n\t\t\t\t}\n\n\t\t\t\tcallback(response[0].url);\n\n\t\t\t\tshowAlert('success', '[[uploads:upload-success]]');\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tmodule.hideAlerts(uploadModal);\n\t\t\t\t\tuploadModal.modal('hide');\n\t\t\t\t}, 750);\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction parseModal(tplVals, callback) {\n\t\ttemplates.parse('partials/modals/upload_file_modal', tplVals, function (html) {\n\t\t\ttranslator.translate(html, callback);\n\t\t});\n\t}\n\n\tfunction maybeParse(response) {\n\t\tif (typeof response === 'string') {\n\t\t\ttry {\n\t\t\t\treturn $.parseJSON(response);\n\t\t\t} catch (e) {\n\t\t\t\treturn {error: '[[error:parse-error]]'};\n\t\t\t}\n\t\t}\n\t\treturn response;\n\t}\n\n\tfunction hasValidFileSize(fileElement, maxSize) {\n\t\tif (window.FileReader && maxSize) {\n\t\t\treturn fileElement.files[0].size <= maxSize * 1000;\n\t\t}\n\t\treturn true;\n\t}\n\n\treturn module;\n});\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/accounts/chats.js":"'use strict';\n\nvar async = require('async');\n\nvar messaging = require('../../messaging');\nvar meta = require('../../meta');\nvar user = require('../../user');\nvar helpers = require('../helpers');\n\nvar chatsController = {};\n\nchatsController.get = function (req, res, callback) {\n\tif (parseInt(meta.config.disableChat, 10) === 1) {\n\t\treturn callback();\n\t}\n\tvar uid;\n\tvar username;\n\tvar recentChats;\n\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tasync.parallel({\n\t\t\t\tuid: async.apply(user.getUidByUserslug, req.params.userslug),\n\t\t\t\tusername: async.apply(user.getUsernameByUserslug, req.params.userslug)\n\t\t\t}, next);\n\t\t},\n\t\tfunction (results, next) {\n\t\t\tuid = results.uid;\n\t\t\tusername = results.username;\n\t\t\tif (!uid) {\n\t\t\t\treturn callback();\n\t\t\t}\n\t\t\tmessaging.getRecentChats(req.uid, uid, 0, 19, next);\n\t\t},\n\t\tfunction (_recentChats, next) {\n\t\t\trecentChats = _recentChats;\n\t\t\tif (!recentChats) {\n\t\t\t\treturn callback();\n\t\t\t}\n\t\t\tif (!req.params.roomid) {\n\t\t\t\treturn res.render('chats', {\n\t\t\t\t\trooms: recentChats.rooms,\n\t\t\t\t\tuid: uid,\n\t\t\t\t\tuserslug: req.params.userslug,\n\t\t\t\t\tnextStart: recentChats.nextStart,\n\t\t\t\t\tallowed: true,\n\t\t\t\t\ttitle: '[[pages:chats]]',\n\t\t\t\t\tbreadcrumbs: helpers.buildBreadcrumbs([{text: username, url: '/user/' + req.params.userslug}, {text: '[[pages:chats]]'}])\n\t\t\t\t});\n\t\t\t}\n\t\t\tmessaging.isUserInRoom(req.uid, req.params.roomid, next);\n\t\t},\n\t\tfunction (inRoom, next) {\n\t\t\tif (!inRoom) {\n\t\t\t\treturn callback();\n\t\t\t}\n\t\t\tasync.parallel({\n\t\t\t\tusers: async.apply(messaging.getUsersInRoom, req.params.roomid, 0, -1),\n\t\t\t\tcanReply: async.apply(messaging.canReply, req.params.roomid, req.uid),\n\t\t\t\troom: async.apply(messaging.getRoomData, req.params.roomid),\n\t\t\t\tmessages: async.apply(messaging.getMessages, {\n\t\t\t\t\tcallerUid: req.uid,\n\t\t\t\t\tuid: uid,\n\t\t\t\t\troomId: req.params.roomid,\n\t\t\t\t\tisNew: false\n\t\t\t\t})\n\t\t\t}, next);\n\t\t}\n\t], function (err, data) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\t\tvar room = data.room;\n\t\troom.messages = data.messages;\n\n\t\troom.isOwner = parseInt(room.owner, 10) === parseInt(req.uid, 10);\n\t\troom.users = data.users.filter(function (user) {\n\t\t\treturn user && parseInt(user.uid, 10) && parseInt(user.uid, 10) !== req.uid;\n\t\t});\n\n\t\troom.canReply = data.canReply;\n\t\troom.groupChat = room.hasOwnProperty('groupChat') ? room.groupChat : room.users.length > 2;\n\t\troom.rooms = recentChats.rooms;\n\t\troom.uid = uid;\n\t\troom.userslug = req.params.userslug;\n\t\troom.nextStart = recentChats.nextStart;\n\t\troom.usernames = messaging.generateUsernames(room.users, req.uid);\n\t\troom.title = room.roomName || room.usernames || '[[pages:chats]]';\n\t\troom.breadcrumbs = helpers.buildBreadcrumbs([\n\t\t\t{text: username, url: '/user/' + req.params.userslug},\n\t\t\t{text: '[[pages:chats]]', url: '/user/' + req.params.userslug + '/chats'},\n\t\t\t{text: room.roomName || room.usernames || '[[pages:chats]]'}\n\t\t]);\n\t\troom.maximumUsersInChatRoom = parseInt(meta.config.maximumUsersInChatRoom, 10) || 0;\n\t\troom.maximumChatMessageLength = parseInt(meta.config.maximumChatMessageLength, 10) || 1000;\n\t\troom.showUserInput = !room.maximumUsersInChatRoom || room.maximumUsersInChatRoom > 2;\n\n\t\tres.render('chats', room);\n\t});\n};\n\nchatsController.redirectToChat = function (req, res, next) {\n\tvar roomid = parseInt(req.params.roomid, 10);\n\tif (!req.uid) {\n\t\treturn next();\n\t}\n\tuser.getUserField(req.uid, 'userslug', function (err, userslug) {\n\t\tif (err || !userslug) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\thelpers.redirect(res, '/user/' + userslug + '/chats' + (roomid ? '/' + roomid : ''));\n\t});\n};\n\n\n\nmodule.exports = chatsController;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/accounts/edit.js":"'use strict';\n\nvar async = require('async');\nvar fs = require('fs');\nvar nconf = require('nconf');\nvar winston = require('winston');\n\nvar db = require('../../database');\nvar user = require('../../user');\nvar meta = require('../../meta');\nvar plugins = require('../../plugins');\nvar helpers = require('../helpers');\nvar groups = require('../../groups');\nvar accountHelpers = require('./helpers');\nvar privileges = require('../../privileges');\n\nvar editController = {};\n\neditController.get = function (req, res, callback) {\n\taccountHelpers.getUserDataByUserSlug(req.params.userslug, req.uid, function (err, userData) {\n\t\tif (err || !userData) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tuserData.maximumSignatureLength = parseInt(meta.config.maximumSignatureLength, 10) || 255;\n\t\tuserData.maximumAboutMeLength = parseInt(meta.config.maximumAboutMeLength, 10) || 1000;\n\t\tuserData.maximumProfileImageSize = parseInt(meta.config.maximumProfileImageSize, 10);\n\t\tuserData.allowProfileImageUploads = parseInt(meta.config.allowProfileImageUploads) === 1;\n\t\tuserData.allowAccountDelete = parseInt(meta.config.allowAccountDelete, 10) === 1;\n\n\t\tuserData.groups = userData.groups.filter(function (group) {\n\t\t\treturn group && group.userTitleEnabled && !groups.isPrivilegeGroup(group.name) && group.name !== 'registered-users';\n\t\t});\n\t\tuserData.groups.forEach(function (group) {\n\t\t\tgroup.selected = group.name === userData.groupTitle;\n\t\t});\n\n\t\tuserData.title = '[[pages:account/edit, ' + userData.username + ']]';\n\t\tuserData.breadcrumbs = helpers.buildBreadcrumbs([{text: userData.username, url: '/user/' + userData.userslug}, {text: '[[user:edit]]'}]);\n\t\tuserData.editButtons = [];\n\n\t\tplugins.fireHook('filter:user.account.edit', userData, function (err, userData) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tres.render('account/edit', userData);\n\t\t});\n\t});\n};\n\neditController.password = function (req, res, next) {\n\trenderRoute('password', req, res, next);\n};\n\neditController.username = function (req, res, next) {\n\trenderRoute('username', req, res, next);\n};\n\neditController.email = function (req, res, next) {\n\trenderRoute('email', req, res, next);\n};\n\nfunction renderRoute(name, req, res, next) {\n\tgetUserData(req, next, function (err, userData) {\n\t\tif (err || !userData) {\n\t\t\treturn next(err);\n\t\t}\n\t\tif ((name === 'username' && userData['username:disableEdit']) || (name === 'email' && userData['email:disableEdit'])) {\n\t\t\treturn next();\n\t\t}\n\n\t\tif (name === 'password') {\n\t\t\tuserData.minimumPasswordLength = parseInt(meta.config.minimumPasswordLength, 10);\n\t\t}\n\n\t\tuserData.title = '[[pages:account/edit/' + name + ', ' + userData.username + ']]';\n\t\tuserData.breadcrumbs = helpers.buildBreadcrumbs([\n\t\t\t{text: userData.username, url: '/user/' + userData.userslug},\n\t\t\t{text: '[[user:edit]]', url: '/user/' + userData.userslug + '/edit'},\n\t\t\t{text: '[[user:' + name + ']]'}\n\t\t]);\n\n\t\tres.render('account/edit/' + name, userData);\n\t});\n}\n\nfunction getUserData(req, next, callback) {\n\tvar userData;\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\taccountHelpers.getUserDataByUserSlug(req.params.userslug, req.uid, next);\n\t\t},\n\t\tfunction (data, next) {\n\t\t\tuserData = data;\n\t\t\tif (!userData) {\n\t\t\t\treturn callback();\n\t\t\t}\n\t\t\tdb.getObjectField('user:' + userData.uid, 'password', next);\n\t\t}\n\t], function (err, password) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tuserData.hasPassword = !!password;\n\t\tcallback(null, userData);\n\t});\n}\n\neditController.uploadPicture = function (req, res, next) {\n\tvar userPhoto = req.files.files[0];\n\n\tvar updateUid;\n\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tuser.getUidByUserslug(req.params.userslug, next);\n\t\t},\n\t\tfunction (uid, next) {\n\t\t\tupdateUid = uid;\n\n\t\t\tprivileges.users.canEdit(req.uid, uid, next);\n\t\t},\n\t\tfunction (isAllowed, next) {\n\t\t\tif (!isAllowed) {\n\t\t\t\treturn helpers.notAllowed(req, res);\n\t\t\t}\n\n\t\t\tuser.uploadPicture(updateUid, userPhoto, next);\n\t\t}\n\t], function (err, image) {\n\t\tfs.unlink(userPhoto.path, function (err) {\n\t\t\tif (err) {\n\t\t\t\twinston.warn('[user/picture] Unable to delete picture ' + userPhoto.path, err);\n\t\t\t}\n\t\t});\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tres.json([{name: userPhoto.name, url: image.url.startsWith('http') ? image.url : nconf.get('relative_path') + image.url}]);\n\t});\n};\n\neditController.uploadCoverPicture = function (req, res, next) {\n\tvar params = JSON.parse(req.body.params);\n\n\tuser.updateCoverPicture({\n\t\tfile: req.files.files[0],\n\t\tuid: params.uid\n\t}, function (err, image) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tres.json([{ url: image.url }]);\n\t});\n};\n\nmodule.exports = editController;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/accounts/follow.js":"'use strict';\n\nvar async = require('async');\n\nvar user = require('../../user');\nvar helpers = require('../helpers');\nvar accountHelpers = require('./helpers');\nvar pagination = require('../../pagination');\n\nvar followController = {};\n\nfollowController.getFollowing = function (req, res, next) {\n\tgetFollow('account/following', 'following', req, res, next);\n};\n\nfollowController.getFollowers = function (req, res, next) {\n\tgetFollow('account/followers', 'followers', req, res, next);\n};\n\nfunction getFollow(tpl, name, req, res, callback) {\n\tvar userData;\n\n\tvar page = parseInt(req.query.page, 10) || 1;\n\tvar resultsPerPage = 50;\n\tvar start = Math.max(0, page - 1) * resultsPerPage;\n\tvar stop = start + resultsPerPage - 1;\n\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\taccountHelpers.getUserDataByUserSlug(req.params.userslug, req.uid, next);\n\t\t},\n\t\tfunction (data, next) {\n\t\t\tuserData = data;\n\t\t\tif (!userData) {\n\t\t\t\treturn callback();\n\t\t\t}\n\t\t\tvar method = name === 'following' ? 'getFollowing' : 'getFollowers';\n\t\t\tuser[method](userData.uid, start, stop, next);\n\t\t}\n\t], function (err, users) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tuserData.users = users;\n\t\tuserData.title = '[[pages:' + tpl + ', ' + userData.username + ']]';\n\t\tvar count = name === 'following' ? userData.followingCount : userData.followerCount;\n\t\tvar pageCount = Math.ceil(count / resultsPerPage);\n\t\tuserData.pagination = pagination.create(page, pageCount);\n\t\tuserData.breadcrumbs = helpers.buildBreadcrumbs([{text: userData.username, url: '/user/' + userData.userslug}, {text: '[[user:' + name + ']]'}]);\n\n\t\tres.render(tpl, userData);\n\t});\n}\n\nmodule.exports = followController;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/accounts/groups.js":"'use strict';\n\n\nvar async = require('async');\n\nvar groups = require('../../groups');\nvar helpers = require('../helpers');\nvar accountHelpers = require('./helpers');\n\nvar groupsController = {};\n\n\ngroupsController.get = function (req, res, callback) {\n\tvar userData;\n\tvar groupsData;\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\taccountHelpers.getUserDataByUserSlug(req.params.userslug, req.uid, next);\n\t\t},\n\t\tfunction (_userData, next) {\n\t\t\tuserData = _userData;\n\t\t\tif (!userData) {\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tgroups.getUserGroups([userData.uid], next);\n\t\t},\n\t\tfunction (_groupsData, next) {\n\t\t\tgroupsData = _groupsData[0];\n\t\t\tvar groupNames = groupsData.filter(Boolean).map(function (group) {\n\t\t\t\treturn group.name;\n\t\t\t});\n\n\t\t\tgroups.getMemberUsers(groupNames, 0, 3, next);\n\t\t},\n\t\tfunction (members, next) {\n\t\t\tgroupsData.forEach(function (group, index) {\n\t\t\t\tgroup.members = members[index];\n\t\t\t});\n\t\t\tnext();\n\t\t}\n\t], function (err) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tuserData.groups = groupsData;\n\t\tuserData.title = '[[pages:account/groups, ' + userData.username + ']]';\n\t\tuserData.breadcrumbs = helpers.buildBreadcrumbs([{text: userData.username, url: '/user/' + userData.userslug}, {text: '[[global:header.groups]]'}]);\n\t\tres.render('account/groups', userData);\n\t});\n};\n\nmodule.exports = groupsController;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/accounts/info.js":"'use strict';\n\nvar async = require('async');\n\nvar user = require('../../user');\nvar helpers = require('../helpers');\nvar accountHelpers = require('./helpers');\n\nvar infoController = {};\n\ninfoController.get = function (req, res, callback) {\n\tvar userData;\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\taccountHelpers.getUserDataByUserSlug(req.params.userslug, req.uid, next);\n\t\t},\n\t\tfunction (_userData, next) {\n\t\t\tuserData = _userData;\n\t\t\tif (!userData) {\n\t\t\t\treturn callback();\n\t\t\t}\n\t\t\tasync.parallel({\n\t\t\t\thistory: async.apply(user.getModerationHistory, userData.uid),\n\t\t\t\tsessions: async.apply(user.auth.getSessions, userData.uid, req.sessionID),\n\t\t\t\tusernames: async.apply(user.getHistory, 'user:' + userData.uid + ':usernames'),\n\t\t\t\temails: async.apply(user.getHistory, 'user:' + userData.uid + ':emails')\n\t\t\t}, next);\n\t\t}\n\t], function (err, data) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tuserData.history = data.history;\n\t\tuserData.sessions = data.sessions;\n\t\tuserData.usernames = data.usernames;\n\t\tuserData.emails = data.emails;\n\t\tuserData.title = '[[pages:account/info]]';\n\t\tuserData.breadcrumbs = helpers.buildBreadcrumbs([{text: userData.username, url: '/user/' + userData.userslug}, {text: '[[user:account_info]]'}]);\n\n\t\tres.render('account/info', userData);\n\t});\n};\n\nmodule.exports = infoController;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/accounts/notifications.js":"'use strict';\n\nvar user = require('../../user'),\n\thelpers = require('../helpers');\n\n\nvar notificationsController = {};\n\nnotificationsController.get = function (req, res, next) {\n\tuser.notifications.getAll(req.uid, 0, 39, function (err, notifications) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\t\tres.render('notifications', {\n\t\t\tnotifications: notifications,\n\t\t\tnextStart: 40,\n\t\t\ttitle: '[[pages:notifications]]',\n\t\t\tbreadcrumbs: helpers.buildBreadcrumbs([{text: '[[pages:notifications]]'}])\n\t\t});\n\t});\n};\n\n\nmodule.exports = notificationsController;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/accounts/posts.js":"'use strict';\n\n\nvar async = require('async');\n\nvar db = require('../../database');\nvar user = require('../../user');\nvar posts = require('../../posts');\nvar topics = require('../../topics');\nvar pagination = require('../../pagination');\nvar helpers = require('../helpers');\nvar accountHelpers = require('./helpers');\n\nvar postsController = {};\n\npostsController.getBookmarks = function (req, res, next) {\n\tvar data = {\n\t\ttemplate: 'account/bookmarks',\n\t\tset: 'bookmarks',\n\t\ttype: 'posts',\n\t\tnoItemsFoundKey: '[[topic:bookmarks.has_no_bookmarks]]',\n\t\tmethod: posts.getPostSummariesFromSet,\n\t\tcrumb: '[[user:bookmarks]]'\n\t};\n\tgetFromUserSet(data, req, res, next);\n};\n\npostsController.getPosts = function (req, res, next) {\n\tvar data = {\n\t\ttemplate: 'account/posts',\n\t\tset: 'posts',\n\t\ttype: 'posts',\n\t\tnoItemsFoundKey: '[[user:has_no_posts]]',\n\t\tmethod: posts.getPostSummariesFromSet,\n\t\tcrumb: '[[global:posts]]'\n\t};\n\tgetFromUserSet(data, req, res, next);\n};\n\npostsController.getUpVotedPosts = function (req, res, next) {\n\tvar data = {\n\t\ttemplate: 'account/upvoted',\n\t\tset: 'upvote',\n\t\ttype: 'posts',\n\t\tnoItemsFoundKey: '[[user:has_no_upvoted_posts]]',\n\t\tmethod: posts.getPostSummariesFromSet,\n\t\tcrumb: '[[global:upvoted]]'\n\t};\n\tgetFromUserSet(data, req, res, next);\n};\n\npostsController.getDownVotedPosts = function (req, res, next) {\n\tvar data = {\n\t\ttemplate: 'account/downvoted',\n\t\tset: 'downvote',\n\t\ttype: 'posts',\n\t\tnoItemsFoundKey: '[[user:has_no_downvoted_posts]]',\n\t\tmethod: posts.getPostSummariesFromSet,\n\t\tcrumb: '[[global:downvoted]]'\n\t};\n\tgetFromUserSet(data, req, res, next);\n};\n\npostsController.getBestPosts = function (req, res, next) {\n\tvar data = {\n\t\ttemplate: 'account/best',\n\t\tset: 'posts:votes',\n\t\ttype: 'posts',\n\t\tnoItemsFoundKey: '[[user:has_no_voted_posts]]',\n\t\tmethod: posts.getPostSummariesFromSet,\n\t\tcrumb: '[[global:best]]'\n\t};\n\tgetFromUserSet(data, req, res, next);\n};\n\npostsController.getWatchedTopics = function (req, res, next) {\n\tvar data = {\n\t\ttemplate: 'account/watched',\n\t\tset: 'followed_tids',\n\t\ttype: 'topics',\n\t\tnoItemsFoundKey: '[[user:has_no_watched_topics]]',\n\t\tmethod: topics.getTopicsFromSet,\n\t\tcrumb: '[[user:watched]]'\n\t};\n\tgetFromUserSet(data, req, res, next);\n};\n\npostsController.getTopics = function (req, res, next) {\n\tvar data = {\n\t\ttemplate: 'account/topics',\n\t\tset: 'topics',\n\t\ttype: 'topics',\n\t\tnoItemsFoundKey: '[[user:has_no_topics]]',\n\t\tmethod: topics.getTopicsFromSet,\n\t\tcrumb: '[[global:topics]]'\n\t};\n\tgetFromUserSet(data, req, res, next);\n};\n\nfunction getFromUserSet(data, req, res, callback) {\n\tvar userData;\n\tvar itemsPerPage;\n\tvar page = Math.max(1, parseInt(req.query.page, 10) || 1);\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tasync.parallel({\n\t\t\t\tsettings: function (next) {\n\t\t\t\t\tuser.getSettings(req.uid, next);\n\t\t\t\t},\n\t\t\t\tuserData: function (next) {\n\t\t\t\t\taccountHelpers.getUserDataByUserSlug(req.params.userslug, req.uid, next);\n\t\t\t\t}\n\t\t\t}, next);\n\t\t},\n\t\tfunction (results, next) {\n\t\t\tif (!results.userData) {\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tuserData = results.userData;\n\n\t\t\tvar setName = 'uid:' + userData.uid + ':' + data.set;\n\n\t\t\titemsPerPage = (data.template === 'account/topics' || data.template === 'account/watched') ? results.settings.topicsPerPage : results.settings.postsPerPage;\n\n\t\t\tasync.parallel({\n\t\t\t\titemCount: function (next) {\n\t\t\t\t\tif (results.settings.usePagination) {\n\t\t\t\t\t\tdb.sortedSetCard(setName, next);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnext(null, 0);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdata: function (next) {\n\t\t\t\t\tvar start = (page - 1) * itemsPerPage;\n\t\t\t\t\tvar stop = start + itemsPerPage - 1;\n\t\t\t\t\tdata.method(setName, req.uid, start, stop, next);\n\t\t\t\t}\n\t\t\t}, next);\n\t\t}\n\t], function (err, results) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tuserData[data.type] = results.data[data.type];\n\t\tuserData.nextStart = results.data.nextStart;\n\n\t\tvar pageCount = Math.ceil(results.itemCount / itemsPerPage);\n\t\tuserData.pagination = pagination.create(page, pageCount);\n\n\t\tuserData.noItemsFoundKey = data.noItemsFoundKey;\n\t\tuserData.title = '[[pages:' + data.template + ', ' + userData.username + ']]';\n\t\tuserData.breadcrumbs = helpers.buildBreadcrumbs([{text: userData.username, url: '/user/' + userData.userslug}, {text: data.crumb}]);\n\n\t\tres.render(data.template, userData);\n\t});\n}\n\nmodule.exports = postsController;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/accounts/session.js":"'use strict';\n\nvar async = require('async');\n\nvar db = require('../../database');\nvar user = require('../../user');\n\nvar sessionController = {};\n\nsessionController.revoke = function (req, res, next) {\n\tif (!req.params.hasOwnProperty('uuid')) {\n\t\treturn next();\n\t}\n\n\tvar _id;\n\tvar uid;\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tuser.getUidByUserslug(req.params.userslug, next);\n\t\t},\n\t\tfunction (_uid, next) {\n\t\t\tuid = _uid;\n\t\t\tif (!uid) {\n\t\t\t\treturn next(new Error('[[error:no-session-found]]'));\n\t\t\t}\n\t\t\tdb.getSortedSetRange('uid:' + uid + ':sessions', 0, -1, next);\n\t\t},\n\t\tfunction (sids, done) {\n\t\t\tasync.eachSeries(sids, function (sid, next) {\n\t\t\t\tdb.sessionStore.get(sid, function (err, sessionObj) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\t\t\t\t\tif (sessionObj && sessionObj.meta && sessionObj.meta.uuid === req.params.uuid) {\n\t\t\t\t\t\t_id = sid;\n\t\t\t\t\t\tdone();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnext();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, next);\n\t\t},\n\t\tfunction (next) {\n\t\t\tif (!_id) {\n\t\t\t\treturn next(new Error('[[error:no-session-found]]'));\n\t\t\t}\n\n\t\t\tuser.auth.revokeSession(_id, uid, next);\n\t\t}\n\t], function (err) {\n\t\tif (err) {\n\t\t\treturn res.status(500).send(err.message);\n\t\t} else {\n\t\t\treturn res.sendStatus(200);\n\t\t}\n\t});\n};\n\nmodule.exports = sessionController;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/accounts/settings.js":"'use strict';\n\nvar async = require('async');\n\nvar user = require('../../user');\nvar languages = require('../../languages');\nvar meta = require('../../meta');\nvar plugins = require('../../plugins');\nvar privileges = require('../../privileges');\nvar categories = require('../../categories');\nvar db = require('../../database');\nvar helpers = require('../helpers');\nvar accountHelpers = require('./helpers');\n\n\nvar settingsController = {};\n\n\nsettingsController.get = function (req, res, callback) {\n\tvar userData;\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\taccountHelpers.getUserDataByUserSlug(req.params.userslug, req.uid, next);\n\t\t},\n\t\tfunction (_userData, next) {\n\t\t\tuserData = _userData;\n\t\t\tif (!userData) {\n\t\t\t\treturn callback();\n\t\t\t}\n\t\t\tasync.parallel({\n\t\t\t\tsettings: function (next) {\n\t\t\t\t\tuser.getSettings(userData.uid, next);\n\t\t\t\t},\n\t\t\t\tlanguages: function (next) {\n\t\t\t\t\tlanguages.list(next);\n\t\t\t\t},\n\t\t\t\thomePageRoutes: function (next) {\n\t\t\t\t\tgetHomePageRoutes(next);\n\t\t\t\t},\n\t\t\t\tsounds: function (next) {\n\t\t\t\t\tmeta.sounds.getFiles(next);\n\t\t\t\t},\n\t\t\t\tsoundsMapping: function (next) {\n\t\t\t\t\tmeta.sounds.getMapping(userData.uid, next);\n\t\t\t\t}\n\t\t\t}, next);\n\t\t},\n\t\tfunction (results, next) {\n\t\t\tuserData.settings = results.settings;\n\t\t\tuserData.languages = results.languages;\n\t\t\tuserData.homePageRoutes = results.homePageRoutes;\n\n\t\t\tvar soundSettings = {\n\t\t\t\t'notificationSound': 'notification',\n\t\t\t\t'incomingChatSound': 'chat-incoming',\n\t\t\t\t'outgoingChatSound': 'chat-outgoing'\n\t\t\t};\n\n\t\t\tObject.keys(soundSettings).forEach(function (setting) {\n\t\t\t\tuserData[setting] = Object.keys(results.sounds).map(function (name) {\n\t\t\t\t\treturn {name: name, selected: name === results.soundsMapping[soundSettings[setting]]};\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tplugins.fireHook('filter:user.customSettings', {settings: results.settings, customSettings: [], uid: req.uid}, next);\n\t\t},\n\t\tfunction (data, next) {\n\t\t\tuserData.customSettings = data.customSettings;\n\t\t\tuserData.disableEmailSubscriptions = parseInt(meta.config.disableEmailSubscriptions, 10) === 1;\n\t\t\tnext();\n\t\t}\n\t], function (err) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tuserData.dailyDigestFreqOptions = [\n\t\t\t{value: 'off', name: '[[user:digest_off]]', selected: 'off' === userData.settings.dailyDigestFreq},\n\t\t\t{value: 'day', name: '[[user:digest_daily]]', selected: 'day' === userData.settings.dailyDigestFreq},\n\t\t\t{value: 'week', name: '[[user:digest_weekly]]', selected: 'week' === userData.settings.dailyDigestFreq},\n\t\t\t{value: 'month', name: '[[user:digest_monthly]]', selected: 'month' === userData.settings.dailyDigestFreq}\n\t\t];\n\n\n\t\tuserData.bootswatchSkinOptions = [\n\t\t\t{ \"name\": \"Default\", \"value\": \"default\" },\n\t\t\t{ \"name\": \"Cerulean\", \"value\": \"cerulean\" },\n\t\t\t{ \"name\": \"Cosmo\", \"value\": \"cosmo\"\t},\n\t\t\t{ \"name\": \"Cyborg\", \"value\": \"cyborg\" },\n\t\t\t{ \"name\": \"Darkly\", \"value\": \"darkly\" },\n\t\t\t{ \"name\": \"Flatly\", \"value\": \"flatly\" },\n\t\t\t{ \"name\": \"Journal\", \"value\": \"journal\"\t},\n\t\t\t{ \"name\": \"Lumen\", \"value\": \"lumen\" },\n\t\t\t{ \"name\": \"Paper\", \"value\": \"paper\" },\n\t\t\t{ \"name\": \"Readable\", \"value\": \"readable\" },\n\t\t\t{ \"name\": \"Sandstone\", \"value\": \"sandstone\" },\n\t\t\t{ \"name\": \"Simplex\", \"value\": \"simplex\" },\n\t\t\t{ \"name\": \"Slate\", \"value\": \"slate\"\t},\n\t\t\t{ \"name\": \"Spacelab\", \"value\": \"spacelab\" },\n\t\t\t{ \"name\": \"Superhero\", \"value\": \"superhero\" },\n\t\t\t{ \"name\": \"United\", \"value\": \"united\" },\n\t\t\t{ \"name\": \"Yeti\", \"value\": \"yeti\" }\n\t\t];\n\n\t\tvar isCustom = true;\n\t\tuserData.homePageRoutes.forEach(function (route) {\n\t\t\troute.selected = route.route === userData.settings.homePageRoute;\n\t\t\tif (route.selected) {\n\t\t\t\tisCustom = false;\n\t\t\t}\n\t\t});\n\n\t\tif (isCustom && userData.settings.homePageRoute === 'none') {\n\t\t\tisCustom = false;\n\t\t}\n\n\t\tuserData.homePageRoutes.push({\n\t\t \troute: 'custom',\n\t\t \tname: 'Custom',\n\t\t \tselected: isCustom\n\t\t});\n\n\t\tuserData.bootswatchSkinOptions.forEach(function (skin) {\n\t\t\tskin.selected = skin.value === userData.settings.bootswatchSkin;\n\t\t});\n\n\t\tuserData.languages.forEach(function (language) {\n\t\t\tlanguage.selected = language.code === userData.settings.userLang;\n\t\t});\n\n\t\tuserData.disableCustomUserSkins = parseInt(meta.config.disableCustomUserSkins, 10) === 1;\n\n\t\tuserData.allowUserHomePage = parseInt(meta.config.allowUserHomePage, 10) === 1;\n\n\t\tuserData.inTopicSearchAvailable = plugins.hasListeners('filter:topic.search');\n\n\t\tuserData.title = '[[pages:account/settings]]';\n\t\tuserData.breadcrumbs = helpers.buildBreadcrumbs([{text: userData.username, url: '/user/' + userData.userslug}, {text: '[[user:settings]]'}]);\n\n\t\tres.render('account/settings', userData);\n\t});\n};\n\n\nfunction getHomePageRoutes(callback) {\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tdb.getSortedSetRange('cid:0:children', 0, -1, next);\n\t\t},\n\t\tfunction (cids, next) {\n\t\t\tprivileges.categories.filterCids('find', cids, 0, next);\n\t\t},\n\t\tfunction (cids, next) {\n\t\t\tcategories.getCategoriesFields(cids, ['name', 'slug'], next);\n\t\t},\n\t\tfunction (categoryData, next) {\n\t\t\tcategoryData = categoryData.map(function (category) {\n\t\t\t\treturn {\n\t\t\t\t\troute: 'category/' + category.slug,\n\t\t\t\t\tname: 'Category: ' + category.name\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tcategoryData = categoryData || [];\n\n\t\t\tplugins.fireHook('filter:homepage.get', {routes: [\n\t\t\t\t{\n\t\t\t\t\troute: 'categories',\n\t\t\t\t\tname: 'Categories'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\troute: 'unread',\n\t\t\t\t\tname: 'Unread'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\troute: 'recent',\n\t\t\t\t\tname: 'Recent'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\troute: 'popular',\n\t\t\t\t\tname: 'Popular'\n\t\t\t\t}\n\t\t\t].concat(categoryData)}, next);\n\t\t},\n\t\tfunction (data, next) {\n\t\t\tnext(null, data.routes);\n\t\t}\n\t], callback);\n}\n\n\nmodule.exports = settingsController;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/admin/appearance.js":"\"use strict\";\n\nvar appearanceController = {};\n\nappearanceController.get = function (req, res, next) {\n\tvar term = req.params.term ? req.params.term : 'themes';\n\n\tres.render('admin/appearance/' + term, {});\n};\n\n\nmodule.exports = appearanceController;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/admin/blacklist.js":"\"use strict\";\n\nvar meta = require('../../meta');\n\nvar blacklistController = {};\n\nblacklistController.get = function (req, res, next) {\n\tmeta.blacklist.get(function (err, rules) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\t\tres.render('admin/manage/ip-blacklist', {rules: rules, title: 'IP Blacklist'});\n\t});\n};\n\nmodule.exports = blacklistController;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/admin/cache.js":"'use strict';\n\nvar cacheController = {};\n\ncacheController.get = function (req, res, next) {\n\tvar postCache = require('../../posts/cache');\n\tvar groupCache = require('../../groups').cache;\n\n\tvar avgPostSize = 0;\n\tvar percentFull = 0;\n\tif (postCache.itemCount > 0) {\n\t\tavgPostSize = parseInt((postCache.length / postCache.itemCount), 10);\n\t\tpercentFull = ((postCache.length / postCache.max) * 100).toFixed(2);\n\t}\n\n\tres.render('admin/advanced/cache', {\n\t\tpostCache: {\n\t\t\tlength: postCache.length,\n\t\t\tmax: postCache.max,\n\t\t\titemCount: postCache.itemCount,\n\t\t\tpercentFull: percentFull,\n\t\t\tavgPostSize: avgPostSize\n\t\t},\n\t\tgroupCache: {\n\t\t\tlength: groupCache.length,\n\t\t\tmax: groupCache.max,\n\t\t\titemCount: groupCache.itemCount,\n\t\t\tpercentFull: ((groupCache.length / groupCache.max) * 100).toFixed(2),\n\t\t\tdump: req.query.debug ? JSON.stringify(groupCache.dump(), null, 4) : false\n\t\t}\n\t});\n};\n\n\nmodule.exports = cacheController;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/admin/categories.js":"\"use strict\";\n\nvar async = require('async');\n\nvar categories = require('../../categories');\nvar privileges = require('../../privileges');\nvar analytics = require('../../analytics');\nvar plugins = require('../../plugins');\nvar translator = require('../../../public/src/modules/translator');\n\n\nvar categoriesController = {};\n\ncategoriesController.get = function (req, res, next) {\n\tasync.parallel({\n\t\tcategory: async.apply(categories.getCategories, [req.params.category_id], req.user.uid),\n\t\tprivileges: async.apply(privileges.categories.list, req.params.category_id)\n\t}, function (err, data) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\t\tvar category = data.category[0];\n\n\t\tif (!category) {\n\t\t\treturn next();\n\t\t}\n\n\t\tplugins.fireHook('filter:admin.category.get', { req: req, res: res, category: category, privileges: data.privileges }, function (err, data) {\n\t\t\tif (err) {\n\t\t\t\treturn next(err);\n\t\t\t}\n\t\t\tdata.category.name = translator.escape(String(data.category.name));\n\t\t\tres.render('admin/manage/category', {\n\t\t\t\tcategory: data.category,\n\t\t\t\tprivileges: data.privileges\n\t\t\t});\n\t\t});\n\t});\n};\n\ncategoriesController.getAll = function (req, res, next) {\n\t// Categories list will be rendered on client side with recursion, etc.\n\tres.render('admin/manage/categories', {});\n};\n\ncategoriesController.getAnalytics = function (req, res, next) {\n\tasync.parallel({\n\t\tname: async.apply(categories.getCategoryField, req.params.category_id, 'name'),\n\t\tanalytics: async.apply(analytics.getCategoryAnalytics, req.params.category_id)\n\t}, function (err, data) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tres.render('admin/manage/category-analytics', data);\n\t});\n};\n\n\nmodule.exports = categoriesController;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/admin/database.js":"'use strict';\n\nvar async = require('async');\nvar nconf = require('nconf');\n\nvar databaseController = {};\n\n\n\ndatabaseController.get = function (req, res, next) {\n\tasync.parallel({\n\t\tredis: function (next) {\n\t\t\tif (nconf.get('redis')) {\n\t\t\t\tvar rdb = require('../../database/redis');\n\t\t\t\trdb.info(rdb.client, next);\n\t\t\t} else {\n\t\t\t\tnext();\n\t\t\t}\n\t\t},\n\t\tmongo: function (next) {\n\t\t\tif (nconf.get('mongo')) {\n\t\t\t\tvar mdb = require('../../database/mongo');\n\t\t\t\tmdb.info(mdb.client, next);\n\t\t\t} else {\n\t\t\t\tnext();\n\t\t\t}\n\t\t}\n\t}, function (err, results) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\t\tres.render('admin/advanced/database', results);\n\t});\n};\n\nmodule.exports = databaseController;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/admin/errors.js":"'use strict';\n\nvar async = require('async');\nvar json2csv = require('json-2-csv').json2csv;\n\nvar meta = require('../../meta');\nvar analytics = require('../../analytics');\n\nvar errorsController = {};\n\nerrorsController.get = function (req, res, next) {\n\tasync.parallel({\n\t\t'not-found': async.apply(meta.errors.get, true),\n\t\tanalytics: async.apply(analytics.getErrorAnalytics)\n\t}, function (err, data) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tres.render('admin/advanced/errors', data);\n\t});\n};\n\nerrorsController.export = function (req, res, next) {\n\tasync.waterfall([\n\t\tasync.apply(meta.errors.get, false),\n\t\tasync.apply(json2csv)\n\t], function (err, csv) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tres.set('Content-Type', 'text/csv').set('Content-Disposition', 'attachment; filename=\"404.csv\"').send(csv);\n\t});\n};\n\n\nmodule.exports = errorsController;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/admin/events.js":"'use strict';\n\nvar async = require('async');\n\nvar db = require('../../database');\nvar events = require('../../events');\nvar pagination = require('../../pagination');\n\nvar eventsController = {};\n\n\neventsController.get = function (req, res, next) {\n\n\tvar page = parseInt(req.query.page, 10) || 1;\n\tvar itemsPerPage = 20;\n\tvar start = (page - 1) * itemsPerPage;\n\tvar stop = start + itemsPerPage - 1;\n\n\tasync.parallel({\n\t\teventCount: function (next) {\n\t\t\tdb.sortedSetCard('events:time', next);\n\t\t},\n\t\tevents: function (next) {\n\t\t\tevents.getEvents(start, stop, next);\n\t\t}\n\t}, function (err, results) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tvar pageCount = Math.max(1, Math.ceil(results.eventCount / itemsPerPage));\n\n\t\tres.render('admin/advanced/events', {\n\t\t\tevents: results.events,\n\t\t\tpagination: pagination.create(page, pageCount),\n\t\t\tnext: 20\n\t\t});\n\t});\n};\n\n\nmodule.exports = eventsController;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/admin/flags.js":"\"use strict\";\n\nvar async = require('async');\nvar validator = require('validator');\n\nvar posts = require('../../posts');\nvar user = require('../../user');\nvar categories = require('../../categories');\nvar analytics = require('../../analytics');\nvar pagination = require('../../pagination');\n\nvar flagsController = {};\n\nvar itemsPerPage = 20;\n\nflagsController.get = function (req, res, next) {\n\tvar byUsername = req.query.byUsername || '';\n\tvar cid = req.query.cid || 0;\n\tvar sortBy = req.query.sortBy || 'count';\n\tvar page = parseInt(req.query.page, 10) || 1;\n\n\tasync.parallel({\n\t\tcategories: function (next) {\n\t\t\tcategories.buildForSelect(req.uid, next);\n\t\t},\n\t\tflagData: function (next) {\n\t\t\tgetFlagData(req, res, next);\n\t\t},\n\t\tanalytics: function (next) {\n\t\t\tanalytics.getDailyStatsForSet('analytics:flags', Date.now(), 30, next);\n\t\t},\n\t\tassignees: async.apply(user.getAdminsandGlobalModsandModerators)\n\t}, function (err, results) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\t// Minimise data set for assignees so tjs does less work\n\t\tresults.assignees = results.assignees.map(function (userObj) {\n\t\t\treturn {\n\t\t\t\tuid: userObj.uid,\n\t\t\t\tusername: userObj.username\n\t\t\t};\n\t\t});\n\n\t\t// If res.locals.cids is populated, then slim down the categories list\n\t\tif (res.locals.cids) {\n\t\t\tresults.categories = results.categories.filter(function (category) {\n\t\t\t\treturn res.locals.cids.indexOf(String(category.cid)) !== -1;\n\t\t\t});\n\t\t}\n\n\t\tvar pageCount = Math.max(1, Math.ceil(results.flagData.count / itemsPerPage));\n\n\t\tresults.categories.forEach(function (category) {\n\t\t\tcategory.selected = parseInt(category.cid, 10) === parseInt(cid, 10);\n\t\t});\n\n\t\tvar data = {\n\t\t\tposts: results.flagData.posts,\n\t\t\tassignees: results.assignees,\n\t\t\tanalytics: results.analytics,\n\t\t\tcategories: results.categories,\n\t\t\tbyUsername: validator.escape(String(byUsername)),\n\t\t\tsortByCount: sortBy === 'count',\n\t\t\tsortByTime: sortBy === 'time',\n\t\t\tpagination: pagination.create(page, pageCount, req.query),\n\t\t\ttitle: '[[pages:flagged-posts]]'\n\t\t};\n\t\tres.render('admin/manage/flags', data);\n\t});\n};\n\nfunction getFlagData(req, res, callback) {\n\tvar sortBy = req.query.sortBy || 'count';\n\tvar byUsername = req.query.byUsername || '';\n\tvar cid = req.query.cid || res.locals.cids || 0;\n\tvar page = parseInt(req.query.page, 10) || 1;\n\tvar start = (page - 1) * itemsPerPage;\n\tvar stop = start + itemsPerPage - 1;\n\n\tvar sets = [sortBy === 'count' ? 'posts:flags:count' : 'posts:flagged'];\n\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tif (byUsername) {\n\t\t\t\tuser.getUidByUsername(byUsername, next);\n\t\t\t} else {\n\t\t\t\tprocess.nextTick(next, null, 0);\n\t\t\t}\n\t\t},\n\t\tfunction (uid, next) {\n\t\t\tif (uid) {\n\t\t\t\tsets.push('uid:' + uid + ':flag:pids');\n\t\t\t}\n\n\t\t\tposts.getFlags(sets, cid, req.uid, start, stop, next);\n\t\t}\n\t], callback);\n}\n\n\nmodule.exports = flagsController;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/admin/groups.js":"\"use strict\";\n\nvar async = require('async');\n\nvar db = require('../../database');\nvar groups = require('../../groups');\nvar meta = require('../../meta');\nvar pagination = require('../../pagination');\nvar helpers = require('../helpers');\n\n\nvar groupsController = {};\n\n\ngroupsController.list = function (req, res, next) {\n\tvar page = parseInt(req.query.page, 10) || 1;\n\tvar groupsPerPage = 20;\n\tvar pageCount = 0;\n\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tdb.getSortedSetRevRange('groups:createtime', 0, -1, next);\n\t\t},\n\t\tfunction (groupNames, next) {\n\t\t\tgroupNames = groupNames.filter(function (name) {\n\t\t\t\treturn name.indexOf(':privileges:') === -1 && name !== 'registered-users';\n\t\t\t});\n\t\t\tpageCount = Math.ceil(groupNames.length / groupsPerPage);\n\n\t\t\tvar start = (page - 1) * groupsPerPage;\n\t\t\tvar stop =  start + groupsPerPage - 1;\n\n\t\t\tgroupNames = groupNames.slice(start, stop + 1);\n\t\t\tgroups.getGroupsData(groupNames, next);\n\t\t},\n\t\tfunction (groupData, next) {\n\t\t\tnext(null, {groups: groupData, pagination: pagination.create(page, pageCount)});\n\t\t}\n\t], function (err, data) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tres.render('admin/manage/groups', {\n\t\t\tgroups: data.groups,\n\t\t\tpagination: data.pagination,\n\t\t\tyourid: req.uid\n\t\t});\n\t});\n};\n\ngroupsController.get = function (req, res, callback) {\n\tvar groupName = req.params.name;\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tgroups.exists(groupName, next);\n\t\t},\n\t\tfunction (exists, next) {\n\t\t\tif (!exists) {\n\t\t\t\treturn callback();\n\t\t\t}\n\t\t\tgroups.get(groupName, {uid: req.uid, truncateUserList: true, userListCount: 20}, next);\n\t\t}\n\t], function (err, group) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\t\tgroup.isOwner = true;\n\t\tres.render('admin/manage/group', {group: group, allowPrivateGroups: parseInt(meta.config.allowPrivateGroups, 10) === 1});\n\t});\n};\n\nmodule.exports = groupsController;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/admin/homepage.js":"'use strict';\n\nvar async = require('async');\n\nvar db = require('../../database');\nvar categories = require('../../categories');\nvar privileges = require('../../privileges');\nvar plugins = require('../../plugins');\n\nvar homePageController = {};\n\n\nhomePageController.get = function (req, res, next) {\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tdb.getSortedSetRange('categories:cid', 0, -1, next);\n\t\t},\n\t\tfunction (cids, next) {\n\t\t\tprivileges.categories.filterCids('find', cids, 0, next);\n\t\t},\n\t\tfunction (cids, next) {\n\t\t\tcategories.getCategoriesFields(cids, ['name', 'slug'], next);\n\t\t},\n\t\tfunction (categoryData, next) {\n\t\t\tcategoryData = categoryData.map(function (category) {\n\t\t\t\treturn {\n\t\t\t\t\troute: 'category/' + category.slug,\n\t\t\t\t\tname: 'Category: ' + category.name\n\t\t\t\t};\n\t\t\t});\n\t\t\tnext(null, categoryData);\n\t\t}\n\t], function (err, categoryData) {\n\t\tif (err || !categoryData) {\n\t\t\tcategoryData = [];\n\t\t}\n\n\t\tplugins.fireHook('filter:homepage.get', {routes: [\n\t\t\t{\n\t\t\t\troute: 'categories',\n\t\t\t\tname: 'Categories'\n\t\t\t},\n\t\t\t{\n\t\t\t\troute: 'recent',\n\t\t\t\tname: 'Recent'\n\t\t\t},\n\t\t\t{\n\t\t\t\troute: 'popular',\n\t\t\t\tname: 'Popular'\n\t\t\t}\n\t\t].concat(categoryData)}, function (err, data) {\n\t\t\tif (err) {\n\t\t\t\treturn next(err);\n\t\t\t}\n\n\t\t\tdata.routes.push({\n\t\t\t\troute: '',\n\t\t\t\tname: 'Custom'\n\t\t\t});\n\n\t\t\tres.render('admin/general/homepage', data);\n\t\t});\n\t});\n};\n\nmodule.exports = homePageController;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/admin/info.js":"'use strict';\n\nvar async = require('async');\nvar os = require('os');\nvar winston = require('winston');\nvar nconf = require('nconf');\nvar exec = require('child_process').exec;\n\nvar pubsub = require('../../pubsub');\nvar rooms = require('../../socket.io/admin/rooms');\n\nvar infoController = {};\n\nvar info = {};\n\ninfoController.get = function (req, res, next) {\n\tinfo = {};\n\tpubsub.publish('sync:node:info:start');\n\tsetTimeout(function () {\n\t\tvar data = [];\n\t\tObject.keys(info).forEach(function (key) {\n\t\t\tdata.push(info[key]);\n\t\t});\n\t\tdata.sort(function (a, b) {\n\t\t\treturn (a.os.hostname < b.os.hostname) ? -1 : (a.os.hostname > b.os.hostname) ? 1 : 0;\n\t\t});\n\t\tres.render('admin/development/info', {info: data, infoJSON: JSON.stringify(data, null, 4), host: os.hostname(), port: nconf.get('port')});\n\t}, 500);\n};\n\npubsub.on('sync:node:info:start', function () {\n\tgetNodeInfo(function (err, data) {\n\t\tif (err) {\n\t\t\treturn winston.error(err);\n\t\t}\n\t\tpubsub.publish('sync:node:info:end', {data: data, id: os.hostname() + ':' + nconf.get('port')});\n\t});\n});\n\npubsub.on('sync:node:info:end', function (data) {\n\tinfo[data.id] = data.data;\n});\n\nfunction getNodeInfo(callback) {\n\tvar data = {\n\t\tprocess: {\n\t\t\tport: nconf.get('port'),\n\t\t\tpid: process.pid,\n\t\t\ttitle: process.title,\n\t\t\tversion: process.version,\n\t\t\tmemoryUsage: process.memoryUsage(),\n\t\t\tuptime: process.uptime()\n\t\t},\n\t\tos: {\n\t\t\thostname: os.hostname(),\n\t\t\ttype: os.type(),\n\t\t\tplatform: os.platform(),\n\t\t\tarch: os.arch(),\n\t\t\trelease: os.release(),\n\t\t\tload: os.loadavg().map(function (load) { return load.toFixed(2); }).join(', ')\n\t\t}\n\t};\n\n\tasync.parallel({\n\t\tstats: function (next) {\n\t\t\trooms.getLocalStats(next);\n\t\t},\n\t\tgitInfo: function (next) {\n\t\t\tgetGitInfo(next);\n\t\t}\n\t}, function (err, results) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\t\tdata.git = results.gitInfo;\n\t\tdata.stats = results.stats;\n\t\tcallback(null, data);\n\t});\n}\n\nfunction getGitInfo(callback) {\n\tfunction get(cmd,  callback) {\n\t\texec(cmd, function (err, stdout) {\n\t\t\tif (err) {\n\t\t\t\twinston.error(err);\n\t\t\t}\n\t\t\tcallback(null, stdout ? stdout.replace(/\\n$/, '') : 'no-git-info');\n\t\t});\n\t}\n\tasync.parallel({\n\t\thash: function (next) {\n\t\t\tget('git rev-parse HEAD', next);\n\t\t},\n\t\tbranch: function (next) {\n\t\t\tget('git rev-parse --abbrev-ref HEAD', next);\n\t\t}\n\t}, callback);\n}\n\nmodule.exports = infoController;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/socket.io/admin/rooms.js":"'use strict';\n\n\nvar os = require('os');\nvar nconf = require('nconf');\nvar winston = require('winston');\nvar validator = require('validator');\nvar topics = require('../../topics');\nvar pubsub = require('../../pubsub');\n\nvar stats = {};\nvar totals = {};\nvar SocketRooms = {\n\tstats: stats,\n\ttotals: totals\n};\n\n\npubsub.on('sync:stats:start', function () {\n\tSocketRooms.getLocalStats(function (err, stats) {\n\t\tif (err) {\n\t\t\treturn winston.error(err);\n\t\t}\n\t\tpubsub.publish('sync:stats:end', {stats: stats, id: os.hostname() + ':' + nconf.get('port')});\n\t});\n});\n\npubsub.on('sync:stats:end', function (data) {\n\tstats[data.id] = data.stats;\n});\n\npubsub.on('sync:stats:guests', function () {\n\tvar io = require('../index').server;\n\n\tvar roomClients = io.sockets.adapter.rooms;\n\tvar guestCount = roomClients.online_guests ? roomClients.online_guests.length : 0;\n\tpubsub.publish('sync:stats:guests:end', guestCount);\n});\n\nSocketRooms.getTotalGuestCount = function (callback) {\n\tvar count = 0;\n\n\tpubsub.on('sync:stats:guests:end', function (guestCount) {\n\t\tcount += guestCount;\n\t});\n\n\tpubsub.publish('sync:stats:guests');\n\n\tsetTimeout(function () {\n\t\tpubsub.removeAllListeners('sync:stats:guests:end');\n\t\tcallback(null, count);\n\t}, 100);\n};\n\n\nSocketRooms.getAll = function (socket, data, callback) {\n\tpubsub.publish('sync:stats:start');\n\n\ttotals.onlineGuestCount = 0;\n\ttotals.onlineRegisteredCount = 0;\n\ttotals.socketCount = 0;\n\ttotals.topics = {};\n\ttotals.users = {\n\t\tcategories: 0,\n\t\trecent: 0,\n\t\tunread: 0,\n\t\ttopics: 0,\n\t\tcategory: 0\n\t};\n\n\tfor(var instance in stats) {\n\t\tif (stats.hasOwnProperty(instance)) {\n\t\t\ttotals.onlineGuestCount += stats[instance].onlineGuestCount;\n\t\t\ttotals.onlineRegisteredCount += stats[instance].onlineRegisteredCount;\n\t\t\ttotals.socketCount += stats[instance].socketCount;\n\t\t\ttotals.users.categories += stats[instance].users.categories;\n\t\t\ttotals.users.recent += stats[instance].users.recent;\n\t\t\ttotals.users.unread += stats[instance].users.unread;\n\t\t\ttotals.users.topics += stats[instance].users.topics;\n\t\t\ttotals.users.category += stats[instance].users.category;\n\n\t\t\tstats[instance].topics.forEach(function (topic) {\n\t\t\t\ttotals.topics[topic.tid] = totals.topics[topic.tid] || {count: 0, tid: topic.tid};\n\t\t\t\ttotals.topics[topic.tid].count += topic.count;\n\t\t\t});\n\t\t}\n\t}\n\n\tvar topTenTopics = [];\n\tObject.keys(totals.topics).forEach(function (tid) {\n\t\ttopTenTopics.push({tid: tid, count: totals.topics[tid].count});\n\t});\n\n\ttopTenTopics = topTenTopics.sort(function (a, b) {\n\t\treturn b.count - a.count;\n\t}).slice(0, 10);\n\n\tvar topTenTids = topTenTopics.map(function (topic) {\n\t\treturn topic.tid;\n\t});\n\n\ttopics.getTopicsFields(topTenTids, ['title'], function (err, titles) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\t\ttotals.topics = {};\n\t\ttopTenTopics.forEach(function (topic, index) {\n\t\t\ttotals.topics[topic.tid] = {\n\t\t\t\tvalue: topic.count || 0,\n\t\t\t\ttitle: validator.escape(String(titles[index].title))\n\t\t\t};\n\t\t});\n\n\t\tcallback(null, totals);\n\t});\n};\n\nSocketRooms.getOnlineUserCount = function (io) {\n\tif (!io) {\n\t\treturn 0;\n\t}\n\tvar count = 0;\n\tfor (var key in io.sockets.adapter.rooms) {\n\t\tif (io.sockets.adapter.rooms.hasOwnProperty(key) && key.startsWith('uid_')) {\n\t\t\t++ count;\n\t\t}\n\t}\n\n\treturn count;\n};\n\nSocketRooms.getLocalStats = function (callback) {\n\tvar io = require('../index').server;\n\n\tif (!io) {\n\t\treturn callback();\n\t}\n\n\tvar roomClients = io.sockets.adapter.rooms;\n\tvar socketData = {\n\t\tonlineGuestCount: roomClients.online_guests ? roomClients.online_guests.length : 0,\n\t\tonlineRegisteredCount: SocketRooms.getOnlineUserCount(io),\n\t\tsocketCount: Object.keys(io.sockets.sockets).length,\n\t\tusers: {\n\t\t\tcategories: roomClients.categories ? roomClients.categories.length : 0,\n\t\t\trecent: roomClients.recent_topics ? roomClients.recent_topics.length : 0,\n\t\t\tunread: roomClients.unread_topics ? roomClients.unread_topics.length : 0,\n\t\t\ttopics: 0,\n\t\t\tcategory: 0\n\t\t},\n\t\ttopics: {}\n\t};\n\n\tvar\ttopTenTopics = [];\n\tvar tid;\n\n\tfor (var room in roomClients) {\n\t\tif (roomClients.hasOwnProperty(room)) {\n\t\t\ttid = room.match(/^topic_(\\d+)/);\n\t\t\tif (tid) {\n\t\t\t\tsocketData.users.topics += roomClients[room].length;\n\t\t\t\ttopTenTopics.push({tid: tid[1], count: roomClients[room].length});\n\t\t\t} else if (room.match(/^category/)) {\n\t\t\t\tsocketData.users.category += roomClients[room].length;\n\t\t\t}\n\t\t}\n\t}\n\n\ttopTenTopics = topTenTopics.sort(function (a, b) {\n\t\treturn b.count - a.count;\n\t}).slice(0, 10);\n\n\tsocketData.topics = topTenTopics;\n\tcallback(null, socketData);\n};\n\n\nmodule.exports = SocketRooms;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/admin/languages.js":"'use strict';\n\nvar languages = require('../../languages');\nvar meta = require('../../meta');\n\nvar languagesController = {};\n\n\nlanguagesController.get = function (req, res, next) {\n\tlanguages.list(function (err, languages) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tlanguages.forEach(function (language) {\n\t\t\tlanguage.selected = language.code === (meta.config.defaultLang || 'en-GB');\n\t\t});\n\n\t\tres.render('admin/general/languages', {\n\t\t\tlanguages: languages\n\t\t});\n\t});\n};\n\nmodule.exports = languagesController;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/admin/logger.js":"'use strict';\n\nvar loggerController = {};\n\nloggerController.get = function (req, res) {\n\tres.render('admin/development/logger', {});\n};\n\nmodule.exports = loggerController;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/admin/navigation.js":"'use strict';\n\nvar navigationController = {};\n\nnavigationController.get = function (req, res, next) {\n\trequire('../../navigation/admin').getAdmin(function (err, data) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\n\t\tdata.enabled.forEach(function (enabled, index) {\n\t\t\tenabled.index = index;\n\t\t\tenabled.selected = index === 0;\n\t\t});\n\n\t\tdata.navigation = data.enabled.slice();\n\n\t\tres.render('admin/general/navigation', data);\n\t});\n};\n\nmodule.exports = navigationController;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/admin/rewards.js":"'use strict';\n\nvar rewardsController = {};\n\nrewardsController.get = function (req, res, next) {\n\trequire('../../rewards/admin').get(function (err, data) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tres.render('admin/extend/rewards', data);\n\t});\n};\n\n\n\nmodule.exports = rewardsController;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/admin/settings.js":"'use strict';\n\n\nvar async = require('async');\nvar meta = require('../../meta');\n\nvar settingsController = module.exports;\n\nsettingsController.get = function (req, res, next) {\n\tvar term = req.params.term ? req.params.term : 'general';\n\n\tswitch (req.params.term) {\n\t\tcase 'email':\n\t\t\trenderEmail(req, res, next);\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tres.render('admin/settings/' + term);\n\t}\n};\n\n\nfunction renderEmail(req, res, next) {\n\tvar fs = require('fs');\n\tvar path = require('path');\n\tvar utils = require('../../../public/src/utils');\n\n\tvar emailsPath = path.join(__dirname, '../../../public/templates/emails');\n\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tutils.walk(emailsPath, next);\n\t\t},\n\t\tfunction (emails, next) {\n\t\t\tasync.map(emails, function (email, next) {\n\t\t\t\tvar path = email.replace(emailsPath, '').substr(1).replace('.tpl', '');\n\n\t\t\t\tfs.readFile(email, function (err, original) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar text = meta.config['email:custom:' + path] ? meta.config['email:custom:' + path] : original.toString();\n\n\t\t\t\t\tnext(null, {\n\t\t\t\t\t\tpath: path,\n\t\t\t\t\t\tfullpath: email,\n\t\t\t\t\t\ttext: text,\n\t\t\t\t\t\toriginal: original.toString()\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}, next);\n\t\t}\n\t], function (err, emails) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tres.render('admin/settings/email', {\n\t\t\temails: emails,\n\t\t\tsendable: emails.filter(function (email) {\n\t\t\t\treturn email.path.indexOf('_plaintext') === -1 && email.path.indexOf('partials') === -1;\n\t\t\t})\n\t\t});\n\t});\n}\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/admin/social.js":"'use strict';\n\nvar social = require('../../social');\n\nvar socialController = {};\n\n\nsocialController.get = function (req, res, next) {\n\tsocial.getPostSharing(function (err, posts) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tres.render('admin/general/social', {\n\t\t\tposts: posts\n\t\t});\n\t});\n};\n\nmodule.exports = socialController;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/admin/sounds.js":"'use strict';\n\nvar meta = require('../../meta');\n\nvar soundsController = {};\n\nsoundsController.get = function (req, res, next) {\n\tmeta.sounds.getFiles(function (err, sounds) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tsounds = Object.keys(sounds).map(function (name) {\n\t\t\treturn {\n\t\t\t\tname: name\n\t\t\t};\n\t\t});\n\n\t\tres.render('admin/general/sounds', {\n\t\t\tsounds: sounds\n\t\t});\n\t});\n};\n\nmodule.exports = soundsController;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/admin/tags.js":"\"use strict\";\n\nvar topics = require('../../topics');\n\nvar tagsController = {};\n\ntagsController.get = function (req, res, next) {\n\ttopics.getTags(0, 199, function (err, tags) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tres.render('admin/manage/tags', {tags: tags});\n\t});\n};\n\n\nmodule.exports = tagsController;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/admin/themes.js":"'use strict';\n\nvar path = require('path');\nvar file = require('../../file');\n\nvar themesController = {};\n\nthemesController.get = function (req, res, next) {\n\tvar themeDir = path.join(__dirname, '../../../node_modules/' + req.params.theme);\n\tfile.exists(themeDir, function (exists) {\n\t\tif (!exists) {\n\t\t\treturn next();\n\t\t}\n\n\t\tvar themeConfig = require(path.join(themeDir, 'theme.json')),\n\t\t\tscreenshotPath = path.join(themeDir, themeConfig.screenshot);\n\t\tif (themeConfig.screenshot && file.existsSync(screenshotPath)) {\n\t\t\tres.sendFile(screenshotPath);\n\t\t} else {\n\t\t\tres.sendFile(path.join(__dirname, '../../../public/images/themes/default.png'));\n\t\t}\n\t});\n};\n\nmodule.exports = themesController;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/admin/uploads.js":"\"use strict\";\n\nvar fs = require('fs');\nvar path = require('path');\nvar async = require('async');\nvar nconf = require('nconf');\nvar winston = require('winston');\nvar file = require('../../file');\nvar image = require('../../image');\nvar plugins = require('../../plugins');\n\nvar allowedImageTypes = ['image/png', 'image/jpeg', 'image/pjpeg', 'image/jpg', 'image/gif', 'image/svg+xml'];\n\nvar uploadsController = {};\n\nuploadsController.uploadCategoryPicture = function (req, res, next) {\n\tvar uploadedFile = req.files.files[0];\n\tvar params = null;\n\n\ttry {\n\t\tparams = JSON.parse(req.body.params);\n\t} catch (e) {\n\t\tfs.unlink(uploadedFile.path, function (err) {\n\t\t\tif (err) {\n\t\t\t\twinston.error(err);\n\t\t\t}\n\t\t});\n\t\treturn next(e);\n\t}\n\n\tif (validateUpload(req, res, next, uploadedFile, allowedImageTypes)) {\n\t\tvar filename =  'category-' + params.cid + path.extname(uploadedFile.name);\n\t\tuploadImage(filename, 'category', uploadedFile, req, res, next);\n\t}\n};\n\nuploadsController.uploadFavicon = function (req, res, next) {\n\tvar uploadedFile = req.files.files[0];\n\tvar allowedTypes = ['image/x-icon', 'image/vnd.microsoft.icon'];\n\n\tif (validateUpload(req, res, next, uploadedFile, allowedTypes)) {\n\t\tfile.saveFileToLocal('favicon.ico', 'system', uploadedFile.path, function (err, image) {\n\t\t\tfs.unlink(uploadedFile.path, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\twinston.error(err);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (err) {\n\t\t\t\treturn next(err);\n\t\t\t}\n\n\t\t\tres.json([{name: uploadedFile.name, url: image.url}]);\n\t\t});\n\t}\n};\n\nuploadsController.uploadTouchIcon = function (req, res, next) {\n\tvar uploadedFile = req.files.files[0],\n\t\tallowedTypes = ['image/png'],\n\t\tsizes = [36, 48, 72, 96, 144, 192];\n\n\tif (validateUpload(req, res, next, uploadedFile, allowedTypes)) {\n\t\tfile.saveFileToLocal('touchicon-orig.png', 'system', uploadedFile.path, function (err, imageObj) {\n\t\t\tif (err) {\n\t\t\t\treturn next(err);\n\t\t\t}\n\n\t\t\t// Resize the image into squares for use as touch icons at various DPIs\n\t\t\tasync.each(sizes, function (size, next) {\n\t\t\t\tasync.series([\n\t\t\t\t\tasync.apply(file.saveFileToLocal, 'touchicon-' + size + '.png', 'system', uploadedFile.path),\n\t\t\t\t\tasync.apply(image.resizeImage, {\n\t\t\t\t\t\tpath: path.join(nconf.get('base_dir'), nconf.get('upload_path'), 'system', 'touchicon-' + size + '.png'),\n\t\t\t\t\t\textension: 'png',\n\t\t\t\t\t\twidth: size,\n\t\t\t\t\t\theight: size\n\t\t\t\t\t})\n\t\t\t\t], next);\n\t\t\t}, function (err) {\n\t\t\t\tfs.unlink(uploadedFile.path, function (err) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\twinston.error(err);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (err) {\n\t\t\t\t\treturn next(err);\n\t\t\t\t}\n\n\t\t\t\tres.json([{name: uploadedFile.name, url: imageObj.url}]);\n\t\t\t});\n\t\t});\n\t}\n};\n\nuploadsController.uploadLogo = function (req, res, next) {\n\tupload('site-logo', req, res, next);\n};\n\nuploadsController.uploadSound = function (req, res, next) {\n\tvar uploadedFile = req.files.files[0];\n\n\tfile.saveFileToLocal(uploadedFile.name, 'sounds', uploadedFile.path, function (err) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tvar\tsoundsPath = path.join(__dirname, '../../../public/sounds'),\n\t\t\tfilePath = path.join(__dirname, '../../../public/uploads/sounds', uploadedFile.name);\n\n\t\tif (process.platform === 'win32') {\n\t\t\tfs.link(filePath, path.join(soundsPath, path.basename(filePath)));\n\t\t} else {\n\t\t\tfs.symlink(filePath, path.join(soundsPath, path.basename(filePath)), 'file');\n\t\t}\n\n\t\tfs.unlink(uploadedFile.path, function (err) {\n\t\t\tif (err) {\n\t\t\t\treturn next(err);\n\t\t\t}\n\n\t\t\tres.json([{}]);\n\t\t});\n\t});\n};\n\nuploadsController.uploadDefaultAvatar = function (req, res, next) {\n\tupload('avatar-default', req, res, next);\n};\n\nuploadsController.uploadOgImage = function (req, res, next) {\n\tupload('og:image', req, res, next);\n};\n\nfunction upload(name, req, res, next) {\n\tvar uploadedFile = req.files.files[0];\n\n\tif (validateUpload(req, res, next, uploadedFile, allowedImageTypes)) {\n\t\tvar filename = name + path.extname(uploadedFile.name);\n\t\tuploadImage(filename, 'system', uploadedFile, req, res, next);\n\t}\n}\n\nfunction validateUpload(req, res, next, uploadedFile, allowedTypes) {\n\tif (allowedTypes.indexOf(uploadedFile.type) === -1) {\n\t\tfs.unlink(uploadedFile.path, function (err) {\n\t\t\tif (err) {\n\t\t\t\twinston.error(err);\n\t\t\t}\n\t\t});\n\n\t\tres.json({error: '[[error:invalid-image-type, ' + allowedTypes.join('&#44; ') + ']]'});\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nfunction uploadImage(filename, folder, uploadedFile, req, res, next) {\n\tfunction done(err, image) {\n\t\tfs.unlink(uploadedFile.path, function (err) {\n\t\t\tif (err) {\n\t\t\t\twinston.error(err);\n\t\t\t}\n\t\t});\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tres.json([{name: uploadedFile.name, url: image.url.startsWith('http') ? image.url : nconf.get('relative_path') + image.url}]);\n\t}\n\n\tif (plugins.hasListeners('filter:uploadImage')) {\n\t\tplugins.fireHook('filter:uploadImage', {image: uploadedFile, uid: req.user.uid}, done);\n\t} else {\n\t\tfile.saveFileToLocal(filename, folder, uploadedFile.path, done);\n\t}\n}\n\nmodule.exports = uploadsController;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/admin/users.js":"\"use strict\";\n\nvar async = require('async');\nvar validator = require('validator');\n\nvar user = require('../../user');\nvar meta = require('../../meta');\nvar db = require('../../database');\nvar pagination = require('../../pagination');\nvar events = require('../../events');\nvar plugins = require('../../plugins');\n\nvar usersController = {};\n\nvar userFields = ['uid', 'username', 'userslug', 'email', 'postcount', 'joindate', 'banned',\n\t'reputation', 'picture', 'flags', 'lastonline', 'email:confirmed'];\n\nusersController.search = function (req, res, next) {\n\tres.render('admin/manage/users', {\n\t\tsearch_display: '',\n\t\tusers: []\n\t});\n};\n\nusersController.sortByJoinDate = function (req, res, next) {\n\tgetUsers('users:joindate', 'latest', undefined, undefined, req, res, next);\n};\n\nusersController.notValidated = function (req, res, next) {\n\tgetUsers('users:notvalidated', 'notvalidated', undefined, undefined, req, res, next);\n};\n\nusersController.noPosts = function (req, res, next) {\n\tgetUsers('users:postcount', 'noposts', '-inf', 0, req, res, next);\n};\n\nusersController.topPosters = function (req, res, next) {\n\tgetUsers('users:postcount', 'topposts', 0, '+inf', req, res, next);\n};\n\nusersController.mostReputaion = function (req, res, next) {\n\tgetUsers('users:reputation', 'mostreputation', 0, '+inf', req, res, next);\n};\n\nusersController.flagged = function (req, res, next) {\n\tgetUsers('users:flags', 'mostflags', 1, '+inf', req, res, next);\n};\n\nusersController.inactive = function (req, res, next) {\n\tvar timeRange = 1000 * 60 * 60 * 24 * 30 * (parseInt(req.query.months, 10) || 3);\n\tvar cutoff = Date.now() - timeRange;\n\tgetUsers('users:online', 'inactive', '-inf', cutoff, req, res, next);\n};\n\nusersController.banned = function (req, res, next) {\n\tgetUsers('users:banned', 'banned', undefined, undefined, req, res, next);\n};\n\nusersController.registrationQueue = function (req, res, next) {\n\tvar page = parseInt(req.query.page, 10) || 1;\n\tvar itemsPerPage = 20;\n\tvar start = (page - 1) * 20;\n\tvar stop = start + itemsPerPage - 1;\n\tvar invitations;\n\n\tasync.parallel({\n\t\tregistrationQueueCount: function (next) {\n\t\t\tdb.sortedSetCard('registration:queue', next);\n\t\t},\n\t\tusers: function (next) {\n\t\t\tuser.getRegistrationQueue(start, stop, next);\n\t\t},\n\t\tcustomHeaders: function (next) {\n\t\t\tplugins.fireHook('filter:admin.registrationQueue.customHeaders', {headers: []}, next);\n\t\t},\n\t\tinvites: function (next) {\n\t\t\tasync.waterfall([\n\t\t\t\tfunction (next) {\n\t\t\t\t\tuser.getAllInvites(next);\n\t\t\t\t},\n\t\t\t\tfunction (_invitations, next) {\n\t\t\t\t\tinvitations = _invitations;\n\t\t\t\t\tasync.map(invitations, function (invites, next) {\n\t\t\t\t\t\tuser.getUserField(invites.uid, 'username', next);\n\t\t\t\t\t}, next);\n\t\t\t\t},\n\t\t\t\tfunction (usernames, next) {\n\t\t\t\t\tinvitations.forEach(function (invites, index) {\n\t\t\t\t\t\tinvites.username = usernames[index];\n\t\t\t\t\t});\n\t\t\t\t\tasync.map(invitations, function (invites, next) {\n\t\t\t\t\t\tasync.map(invites.invitations, user.getUsernameByEmail, next);\n\t\t\t\t\t}, next);\n\t\t\t\t},\n\t\t\t\tfunction (usernames, next) {\n\t\t\t\t\tinvitations.forEach(function (invites, index) {\n\t\t\t\t\t\tinvites.invitations = invites.invitations.map(function (email, i) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\temail: email,\n\t\t\t\t\t\t\t\tusername: usernames[index][i] === '[[global:guest]]' ? '' : usernames[index][i]\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\tnext(null, invitations);\n\t\t\t\t}\n\t\t\t], next);\n\t\t}\n\t}, function (err, data) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\t\tvar pageCount = Math.max(1, Math.ceil(data.registrationQueueCount / itemsPerPage));\n\t\tdata.pagination = pagination.create(page, pageCount);\n\t\tdata.customHeaders = data.customHeaders.headers;\n\t\tres.render('admin/manage/registration', data);\n\t});\n};\n\nfunction getUsers(set, section, min, max, req, res, next) {\n\tvar page = parseInt(req.query.page, 10) || 1;\n\tvar resultsPerPage = 50;\n\tvar start = Math.max(0, page - 1) * resultsPerPage;\n\tvar stop = start + resultsPerPage - 1;\n\tvar byScore = min !== undefined && max !== undefined;\n\n\tasync.parallel({\n\t\tcount: function (next) {\n\t\t\tif (byScore) {\n\t\t\t\tdb.sortedSetCount(set, min, max, next);\n\t\t\t} else {\n\t\t\t\tdb.sortedSetCard(set, next);\n\t\t\t}\n\t\t},\n\t\tusers: function (next) {\n\t\t\tasync.waterfall([\n\t\t\t\tfunction (next) {\n\t\t\t\t\tif (byScore) {\n\t\t\t\t\t\tdb.getSortedSetRevRangeByScore(set, start, resultsPerPage, max, min, next);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tuser.getUidsFromSet(set, start, stop, next);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction (uids, next) {\n\t\t\t\t\tuser.getUsersWithFields(uids, userFields, req.uid, next);\n\t\t\t\t}\n\t\t\t], next);\n\t\t}\n\t}, function (err, results) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tresults.users = results.users.filter(function (user) {\n\t\t\tuser.email = validator.escape(String(user.email || ''));\n\t\t\treturn user && parseInt(user.uid, 10);\n\t\t});\n\t\tvar data = {\n\t\t\tusers: results.users,\n\t\t\tpage: page,\n\t\t\tpageCount: Math.max(1, Math.ceil(results.count / resultsPerPage))\n\t\t};\n\t\tdata[section] = true;\n\t\trender(req, res, data);\n\t});\n}\n\nfunction render(req, res, data) {\n\tdata.search_display = 'hidden';\n\tdata.pagination = pagination.create(data.page, data.pageCount, req.query);\n\tdata.requireEmailConfirmation = parseInt(meta.config.requireEmailConfirmation, 10) === 1;\n\n\tvar registrationType = meta.config.registrationType;\n\n\tdata.inviteOnly = registrationType === 'invite-only' || registrationType === 'admin-invite-only';\n\tdata.adminInviteOnly = registrationType === 'admin-invite-only';\n\n\tres.render('admin/manage/users', data);\n}\n\nusersController.getCSV = function (req, res, next) {\n\tevents.log({\n\t\ttype: 'getUsersCSV',\n\t\tuid: req.user.uid,\n\t\tip: req.ip\n\t});\n\n\tuser.getUsersCSV(function (err, data) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\t\tres.attachment('users.csv');\n\t\tres.setHeader('Content-Type', 'text/csv');\n\t\tres.end(data);\n\t});\n};\n\nmodule.exports = usersController;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/controllers/admin/widgets.js":"'use strict';\n\nvar widgetsController = {};\n\nwidgetsController.get = function (req, res, next) {\n\trequire('../../widgets/admin').get(function (err, data) {\n\t\tif (err) {\n\t\t\treturn next(err);\n\t\t}\n\n\t\tres.render('admin/extend/widgets', data);\n\t});\n};\n\n\nmodule.exports = widgetsController;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/database/mongo/hash.js":"\"use strict\";\n\nmodule.exports = function (db, module) {\n\tvar helpers = module.helpers.mongo;\n\n\tmodule.setObject = function (key, data, callback) {\n\t\tcallback = callback || helpers.noop;\n\t\tif (!key || !data) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tdb.collection('objects').update({_key: key}, {$set: data}, {upsert: true, w: 1}, function (err) {\n\t\t\tcallback(err);\n\t\t});\n\t};\n\n\tmodule.setObjectField = function (key, field, value, callback) {\n\t\tcallback = callback || helpers.noop;\n\t\tif (!field) {\n\t\t\treturn callback();\n\t\t}\n\t\tvar data = {};\n\t\tfield = helpers.fieldToString(field);\n\t\tdata[field] = value;\n\t\tmodule.setObject(key, data, callback);\n\t};\n\n\tmodule.getObject = function (key, callback) {\n\t\tif (!key) {\n\t\t\treturn callback();\n\t\t}\n\t\tdb.collection('objects').findOne({_key: key}, {_id: 0, _key: 0}, callback);\n\t};\n\n\tmodule.getObjects = function (keys, callback) {\n\t\tif (!Array.isArray(keys) || !keys.length) {\n\t\t\treturn callback(null, []);\n\t\t}\n\t\tdb.collection('objects').find({_key: {$in: keys}}, {_id: 0}).toArray(function (err, data) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar map = helpers.toMap(data);\n\t\t\tvar returnData = [];\n\n\t\t\tfor (var i = 0; i < keys.length; ++i) {\n\t\t\t\treturnData.push(map[keys[i]]);\n\t\t\t}\n\n\t\t\tcallback(null, returnData);\n\t\t});\n\t};\n\n\tmodule.getObjectField = function (key, field, callback) {\n\t\tif (!key) {\n\t\t\treturn callback();\n\t\t}\n\t\tfield = helpers.fieldToString(field);\n\t\tvar _fields = {\n\t\t\t_id: 0\n\t\t};\n\t\t_fields[field] = 1;\n\t\tdb.collection('objects').findOne({_key: key}, {fields: _fields}, function (err, item) {\n\t\t\tif (err || !item) {\n\t\t\t\treturn callback(err, null);\n\t\t\t}\n\n\t\t\tcallback(null, item.hasOwnProperty(field) ? item[field] : null);\n\t\t});\n\t};\n\n\tmodule.getObjectFields = function (key, fields, callback) {\n\t\tif (!key) {\n\t\t\treturn callback();\n\t\t}\n\t\tvar _fields = {\n\t\t\t_id: 0\n\t\t};\n\n\t\tfor(var i = 0; i < fields.length; ++i) {\n\t\t\tfields[i] = helpers.fieldToString(fields[i]);\n\t\t\t_fields[fields[i]] = 1;\n\t\t}\n\t\tdb.collection('objects').findOne({_key: key}, {fields: _fields}, function (err, item) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\titem = item || {};\n\t\t\tvar result = {};\n\t\t\tfor(i = 0; i < fields.length; ++i) {\n\t\t\t\tresult[fields[i]] = item[fields[i]] !== undefined ? item[fields[i]] : null;\n\t\t\t}\n\t\t\tcallback(null, result);\n\t\t});\n\t};\n\n\tmodule.getObjectsFields = function (keys, fields, callback) {\n\t\tif (!Array.isArray(keys) || !keys.length) {\n\t\t\treturn callback(null, []);\n\t\t}\n\t\tvar _fields = {\n\t\t\t_id: 0,\n\t\t\t_key: 1\n\t\t};\n\n\t\tfor(var i = 0; i < fields.length; ++i) {\n\t\t\tfields[i] = helpers.fieldToString(fields[i]);\n\t\t\t_fields[fields[i]] = 1;\n\t\t}\n\n\t\tdb.collection('objects').find({_key: {$in: keys}}, {fields: _fields}).toArray(function (err, items) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tif (items === null) {\n\t\t\t\titems = [];\n\t\t\t}\n\n\t\t\tvar map = helpers.toMap(items);\n\t\t\tvar returnData = [];\n\t\t\tvar item;\n\n\t\t\tfor (var i = 0; i < keys.length; ++i) {\n\t\t\t\titem = map[keys[i]] || {};\n\n\t\t\t\tfor (var k = 0; k < fields.length; ++k) {\n\t\t\t\t\tif (item[fields[k]] === undefined) {\n\t\t\t\t\t\titem[fields[k]] = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturnData.push(item);\n\t\t\t}\n\n\t\t\tcallback(null, returnData);\n\t\t});\n\t};\n\n\tmodule.getObjectKeys = function (key, callback) {\n\t\tmodule.getObject(key, function (err, data) {\n\t\t\tcallback(err, data ? Object.keys(data) : []);\n\t\t});\n\t};\n\n\tmodule.getObjectValues = function (key, callback) {\n\t\tmodule.getObject(key, function (err, data) {\n\t\t\tif(err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar values = [];\n\t\t\tfor(var key in data) {\n\t\t\t\tif (data && data.hasOwnProperty(key)) {\n\t\t\t\t\tvalues.push(data[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcallback(null, values);\n\t\t});\n\t};\n\n\tmodule.isObjectField = function (key, field, callback) {\n\t\tif (!key) {\n\t\t\treturn callback();\n\t\t}\n\t\tvar data = {};\n\t\tfield = helpers.fieldToString(field);\n\t\tdata[field] = '';\n\t\tdb.collection('objects').findOne({_key: key}, {fields: data}, function (err, item) {\n\t\t\tcallback(err, !!item && item[field] !== undefined && item[field] !== null);\n\t\t});\n\t};\n\n\tmodule.isObjectFields = function (key, fields, callback) {\n\t\tif (!key) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tvar data = {};\n\t\tfields.forEach(function (field) {\n\t\t\tfield = helpers.fieldToString(field);\n\t\t\tdata[field] = '';\n\t\t});\n\n\t\tdb.collection('objects').findOne({_key: key}, {fields: data}, function (err, item) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tvar results = [];\n\n\t\t\tfields.forEach(function (field, index) {\n\t\t\t\tresults[index] = !!item && item[field] !== undefined && item[field] !== null;\n\t\t\t});\n\n\t\t\tcallback(null, results);\n\t\t});\n\t};\n\n\tmodule.deleteObjectField = function (key, field, callback) {\n\t\tmodule.deleteObjectFields(key, [field], callback);\n\t};\n\n\tmodule.deleteObjectFields = function (key, fields, callback) {\n\t\tcallback = callback || helpers.noop;\n\t\tif (!key || !Array.isArray(fields) || !fields.length) {\n\t\t\treturn callback();\n\t\t}\n\t\tfields = fields.filter(Boolean);\n\t\tif (!fields.length) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tvar data = {};\n\t\tfields.forEach(function (field) {\n\t\t\tfield = helpers.fieldToString(field);\n\t\t\tdata[field] = '';\n\t\t});\n\n\t\tdb.collection('objects').update({_key: key}, {$unset : data}, function (err) {\n\t\t\tcallback(err);\n\t\t});\n\t};\n\n\tmodule.incrObjectField = function (key, field, callback) {\n\t\tmodule.incrObjectFieldBy(key, field, 1, callback);\n\t};\n\n\tmodule.decrObjectField = function (key, field, callback) {\n\t\tmodule.incrObjectFieldBy(key, field, -1, callback);\n\t};\n\n\tmodule.incrObjectFieldBy = function (key, field, value, callback) {\n\t\tcallback = callback || helpers.noop;\n\t\tvalue = parseInt(value, 10);\n\t\tif (!key || isNaN(value)) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tvar data = {};\n\t\tfield = helpers.fieldToString(field);\n\t\tdata[field] = value;\n\n\t\tdb.collection('objects').findAndModify({_key: key}, {}, {$inc: data}, {new: true, upsert: true}, function (err, result) {\n\t\t\tcallback(err, result && result.value ? result.value[field] : null);\n\t\t});\n\t};\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/database/mongo/list.js":"\"use strict\";\n\nmodule.exports = function (db, module) {\n\tvar helpers = module.helpers.mongo;\n\n\tmodule.listPrepend = function (key, value, callback) {\n\t\tcallback = callback || helpers.noop;\n\n\t\tif (!key) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tvalue = helpers.valueToString(value);\n\n\t\tmodule.isObjectField(key, 'array', function (err, exists) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tif (exists) {\n\t\t\t\tdb.collection('objects').update({_key:key}, {$push: {array: {$each: [value], $position: 0}}}, {upsert:true, w:1 }, function (err, res) {\n\t\t\t\t\tcallback(err);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tmodule.listAppend(key, value, callback);\n\t\t\t}\n\t\t});\n\t};\n\n\tmodule.listAppend = function (key, value, callback) {\n\t\tcallback = callback || helpers.noop;\n\t\tif (!key) {\n\t\t\treturn callback();\n\t\t}\n\t\tvalue = helpers.valueToString(value);\n\t\tdb.collection('objects').update({ _key: key }, { $push: { array: value } }, {upsert:true, w:1}, function (err, res) {\n\t\t\tcallback(err);\n\t\t});\n\t};\n\n\tmodule.listRemoveLast = function (key, callback) {\n\t\tcallback = callback || helpers.noop;\n\t\tif (!key) {\n\t\t\treturn callback();\n\t\t}\n\t\tmodule.getListRange(key, -1, -1, function (err, value) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tdb.collection('objects').update({_key: key }, { $pop: { array: 1 } }, function (err, result) {\n\t\t\t\tcallback(err, (value && value.length) ? value[0] : null);\n\t\t\t});\n\t\t});\n\t};\n\n\tmodule.listRemoveAll = function (key, value, callback) {\n\t\tcallback =  callback || helpers.noop;\n\t\tif (!key) {\n\t\t\treturn callback();\n\t\t}\n\t\tvalue = helpers.valueToString(value);\n\n\t\tdb.collection('objects').update({_key: key }, { $pull: { array: value } }, function (err, res) {\n\t\t\tcallback(err);\n\t\t});\n\t};\n\n\tmodule.listTrim = function (key, start, stop, callback) {\n\t\tcallback = callback || helpers.noop;\n\t\tif (!key) {\n\t\t\treturn callback();\n\t\t}\n\t\tmodule.getListRange(key, start, stop, function (err, value) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tdb.collection('objects').update({_key: key}, {$set: {array: value}}, function (err, res) {\n\t\t\t\tcallback(err);\n\t\t\t});\n\t\t});\n\t};\n\n\tmodule.getListRange = function (key, start, stop, callback) {\n\t\tif (!key) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tdb.collection('objects').findOne({_key:key}, { array: 1}, function (err, data) {\n\t\t\tif(err || !(data && data.array)) {\n\t\t\t\treturn callback(err, []);\n\t\t\t}\n\n\t\t\tif (stop === -1) {\n\t\t\t\tdata.array = data.array.slice(start);\n\t\t\t} else {\n\t\t\t\tdata.array = data.array.slice(start, stop + 1);\n\t\t\t}\n\t\t\tcallback(null, data.array);\n\t\t});\n\t};\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/database/mongo/main.js":"\"use strict\";\n\nvar winston = require('winston');\n\nmodule.exports = function (db, module) {\n\tvar helpers = module.helpers.mongo;\n\n\tmodule.flushdb = function (callback) {\n\t\tcallback = callback || helpers.noop;\n\t\tdb.dropDatabase(function (err) {\n\t\t\tcallback(err);\n\t\t});\n\t};\n\n\tmodule.emptydb = function (callback) {\n\t\tcallback = callback || helpers.noop;\n\t\tdb.collection('objects').remove({}, function (err) {\n\t\t\tcallback(err);\n\t\t});\n\t};\n\n\tmodule.exists = function (key, callback) {\n\t\tif (!key) {\n\t\t\treturn callback();\n\t\t}\n\t\tdb.collection('objects').findOne({_key: key}, function (err, item) {\n\t\t\tcallback(err, item !== undefined && item !== null);\n\t\t});\n\t};\n\n\tmodule.delete = function (key, callback) {\n\t\tcallback = callback || helpers.noop;\n\t\tif (!key) {\n\t\t\treturn callback();\n\t\t}\n\t\tdb.collection('objects').remove({_key: key}, function (err, res) {\n\t\t\tcallback(err);\n\t\t});\n\t};\n\n\tmodule.deleteAll = function (keys, callback) {\n\t\tcallback = callback || helpers.noop;\n\t\tif (!Array.isArray(keys) || !keys.length) {\n\t\t\treturn callback();\n\t\t}\n\t\tdb.collection('objects').remove({_key: {$in: keys}}, function (err, res) {\n\t\t\tcallback(err);\n\t\t});\n\t};\n\n\tmodule.get = function (key, callback) {\n\t\tif (!key) {\n\t\t\treturn callback();\n\t\t}\n\t\tmodule.getObjectField(key, 'value', callback);\n\t};\n\n\tmodule.set = function (key, value, callback) {\n\t\tcallback = callback || helpers.noop;\n\t\tif (!key) {\n\t\t\treturn callback();\n\t\t}\n\t\tvar data = {value: value};\n\t\tmodule.setObject(key, data, callback);\n\t};\n\n\tmodule.increment = function (key, callback) {\n\t\tcallback = callback || helpers.noop;\n\t\tif (!key) {\n\t\t\treturn callback();\n\t\t}\n\t\tdb.collection('objects').findAndModify({_key: key}, {}, {$inc: {value: 1}}, {new: true, upsert: true}, function (err, result) {\n\t\t\tcallback(err, result && result.value ? result.value.value : null);\n\t\t});\n\t};\n\n\tmodule.rename = function (oldKey, newKey, callback) {\n\t\tcallback = callback || helpers.noop;\n\t\tdb.collection('objects').update({_key: oldKey}, {$set:{_key: newKey}}, {multi: true}, function (err, res) {\n\t\t\tcallback(err);\n\t\t});\n\t};\n\n\tmodule.expire = function (key, seconds, callback) {\n\t\tmodule.expireAt(key, Math.round(Date.now() / 1000) + seconds, callback);\n\t};\n\n\tmodule.expireAt = function (key, timestamp, callback) {\n\t\tmodule.setObjectField(key, 'expireAt', new Date(timestamp * 1000), callback);\n\t};\n\n\tmodule.pexpire = function (key, ms, callback) {\n\t\tmodule.pexpireAt(key, Date.now() + parseInt(ms, 10), callback);\n\t};\n\n\tmodule.pexpireAt = function (key, timestamp, callback) {\n\t\tmodule.setObjectField(key, 'expireAt', new Date(timestamp), callback);\n\t};\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/database/mongo/sets.js":"\"use strict\";\n\nmodule.exports = function (db, module) {\n\tvar helpers = module.helpers.mongo;\n\n\tmodule.setAdd = function (key, value, callback) {\n\t\tcallback = callback || helpers.noop;\n\t\tif(!Array.isArray(value)) {\n\t\t\tvalue = [value];\n\t\t}\n\n\t\tvalue.forEach(function (element, index, array) {\n\t\t\tarray[index] = helpers.valueToString(element);\n\t\t});\n\n\t\tdb.collection('objects').update({\n\t\t\t_key: key\n\t\t}, {\n\t\t\t$addToSet: {\n\t\t\t\tmembers: {\n\t\t\t\t\t$each: value\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tupsert: true,\n\t\t\tw: 1\n\t\t}, function (err, res) {\n\t\t\tcallback(err);\n\t\t});\n\t};\n\n\tmodule.setsAdd = function (keys, value, callback) {\n\t\tcallback = callback || helpers.noop;\n\n\t\tif (!Array.isArray(keys) || !keys.length) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tif(!Array.isArray(value)) {\n\t\t\tvalue = [value];\n\t\t}\n\n\t\tvalue.forEach(function (element, index, array) {\n\t\t\tarray[index] = helpers.valueToString(element);\n\t\t});\n\n\t\tvar bulk = db.collection('objects').initializeUnorderedBulkOp();\n\n\t\tfor(var i = 0; i < keys.length; ++i) {\n\t\t\tbulk.find({_key: keys[i]}).upsert().updateOne({\t$addToSet: {\n\t\t\t\tmembers: {\n\t\t\t\t\t$each: value\n\t\t\t\t}\n\t\t\t}});\n\t\t}\n\n\t\tbulk.execute(function (err, res) {\n\t\t\tcallback(err);\n\t\t});\n\t};\n\n\tmodule.setRemove = function (key, value, callback) {\n\t\tcallback = callback || helpers.noop;\n\t\tif(!Array.isArray(value)) {\n\t\t\tvalue = [value];\n\t\t}\n\n\t\tvalue.forEach(function (element, index, array) {\n\t\t\tarray[index] = helpers.valueToString(element);\n\t\t});\n\n\t\tdb.collection('objects').update({_key: key}, {$pullAll: {members: value}}, function (err, res) {\n\t\t\tcallback(err);\n\t\t});\n\t};\n\n\tmodule.setsRemove = function (keys, value, callback) {\n\t\tcallback = callback || helpers.noop;\n\t\tif (!Array.isArray(keys) || !keys.length) {\n\t\t\treturn callback();\n\t\t}\n\t\tvalue = helpers.valueToString(value);\n\n\t\tvar bulk = db.collection('objects').initializeUnorderedBulkOp();\n\n\t\tfor(var i = 0; i < keys.length; ++i) {\n\t\t\tbulk.find({_key: keys[i]}).updateOne({$pull: {\n\t\t\t\tmembers: value\n\t\t\t}});\n\t\t}\n\n\t\tbulk.execute(function (err, res) {\n\t\t\tcallback(err);\n\t\t});\n\t};\n\n\tmodule.isSetMember = function (key, value, callback) {\n\t\tif (!key) {\n\t\t\treturn callback(null, false);\n\t\t}\n\t\tvalue = helpers.valueToString(value);\n\n\t\tdb.collection('objects').findOne({_key: key, members: value}, {_id: 0, members: 0},function (err, item) {\n\t\t\tcallback(err, item !== null && item !== undefined);\n\t\t});\n\t};\n\n\tmodule.isSetMembers = function (key, values, callback) {\n\t\tif (!key || !Array.isArray(values) || !values.length) {\n\t\t\treturn callback(null, []);\n\t\t}\n\n\t\tfor (var i = 0; i < values.length; ++i) {\n\t\t\tvalues[i] = helpers.valueToString(values[i]);\n\t\t}\n\n\t\tdb.collection('objects').findOne({_key: key}, {_id: 0, _key: 0}, function (err, items) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvalues = values.map(function (value) {\n\t\t\t\treturn !!(items && Array.isArray(items.members) && items.members.indexOf(value) !== -1);\n\t\t\t});\n\n\t\t\tcallback(null, values);\n\t\t});\n\t};\n\n\tmodule.isMemberOfSets = function (sets, value, callback) {\n\t\tif (!Array.isArray(sets) || !sets.length) {\n\t\t\treturn callback(null, []);\n\t\t}\n\t\tvalue = helpers.valueToString(value);\n\n\t\tdb.collection('objects').find({_key: {$in : sets}, members: value}, {_id:0, members: 0}).toArray(function (err, result) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tresult = result.map(function (item) {\n\t\t\t\treturn item._key;\n\t\t\t});\n\n\t\t\tresult = sets.map(function (set) {\n\t\t\t\treturn result.indexOf(set) !== -1;\n\t\t\t});\n\n\t\t\tcallback(null, result);\n\t\t});\n\t};\n\n\tmodule.getSetMembers = function (key, callback) {\n\t\tif (!key) {\n\t\t\treturn callback(null, []);\n\t\t}\n\t\tdb.collection('objects').findOne({_key: key}, {members: 1}, {_id: 0, _key: 0}, function (err, data) {\n\t\t\tcallback(err, data ? data.members : []);\n\t\t});\n\t};\n\n\tmodule.getSetsMembers = function (keys, callback) {\n\t\tif (!Array.isArray(keys) || !keys.length) {\n\t\t\treturn callback(null, []);\n\t\t}\n\t\tdb.collection('objects').find({_key: {$in: keys}}, {_id: 0, _key: 1, members: 1}).toArray(function (err, data) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar sets = {};\n\t\t\tdata.forEach(function (set) {\n\t\t\t\tsets[set._key] = set.members || [];\n\t\t\t});\n\n\t\t\tvar returnData = new Array(keys.length);\n\t\t\tfor(var i = 0; i < keys.length; ++i) {\n\t\t\t\treturnData[i] = sets[keys[i]] || [];\n\t\t\t}\n\t\t\tcallback(null, returnData);\n\t\t});\n\t};\n\n\tmodule.setCount = function (key, callback) {\n\t\tif (!key) {\n\t\t\treturn callback(null, 0);\n\t\t}\n\t\tdb.collection('objects').findOne({_key: key}, {_id: 0}, function (err, data) {\n\t\t\tcallback(err, data ? data.members.length : 0);\n\t\t});\n\t};\n\n\tmodule.setsCount = function (keys, callback) {\n\t\tmodule.getSetsMembers(keys, function (err, setsMembers) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar counts = setsMembers.map(function (members) {\n\t\t\t\treturn (members && members.length) || 0;\n\t\t\t});\n\t\t\tcallback(null, counts);\n\t\t});\n\t};\n\n\tmodule.setRemoveRandom = function (key, callback) {\n\t\tcallback = callback || function () {};\n\t\tdb.collection('objects').findOne({_key:key}, function (err, data) {\n\t\t\tif(err || !data) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar randomIndex = Math.floor(Math.random() * data.members.length);\n\t\t\tvar value = data.members[randomIndex];\n\t\t\tmodule.setRemove(data._key, value, function (err) {\n\t\t\t\tcallback(err, value);\n\t\t\t});\n\t\t});\n\t};\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/database/mongo/sorted.js":"\"use strict\";\n\nvar async = require('async');\nvar utils = require('../../../public/src/utils');\n\nmodule.exports = function (db, module) {\n\tvar helpers = module.helpers.mongo;\n\n\tmodule.sortedSetAdd = function (key, score, value, callback) {\n\t\tcallback = callback || helpers.noop;\n\t\tif (!key) {\n\t\t\treturn callback();\n\t\t}\n\t\tif (Array.isArray(score) && Array.isArray(value)) {\n\t\t\treturn sortedSetAddBulk(key, score, value, callback);\n\t\t}\n\n\t\tvalue = helpers.valueToString(value);\n\n\t\tdb.collection('objects').update({_key: key, value: value}, {$set: {score: parseInt(score, 10)}}, {upsert:true, w: 1}, function (err) {\n\t\t\tif (err && err.message.startsWith('E11000 duplicate key error')) {\n\t\t\t\treturn process.nextTick(module.sortedSetAdd, key, score, value, callback);\n\t\t\t}\n\t\t\tcallback(err);\n\t\t});\n\t};\n\n\tfunction sortedSetAddBulk(key, scores, values, callback) {\n\t\tif (!scores.length || !values.length) {\n\t\t\treturn callback();\n\t\t}\n\t\tif (scores.length !== values.length) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\n\t\tvalues = values.map(helpers.valueToString);\n\n\t\tvar bulk = db.collection('objects').initializeUnorderedBulkOp();\n\n\t\tfor(var i = 0; i < scores.length; ++i) {\n\t\t\tbulk.find({_key: key, value: values[i]}).upsert().updateOne({$set: {score: parseInt(scores[i], 10)}});\n\t\t}\n\n\t\tbulk.execute(function (err) {\n\t\t\tcallback(err);\n\t\t});\n\t}\n\n\tmodule.sortedSetsAdd = function (keys, score, value, callback) {\n\t\tcallback = callback || helpers.noop;\n\t\tif (!Array.isArray(keys) || !keys.length) {\n\t\t\treturn callback();\n\t\t}\n\t\tvalue = helpers.valueToString(value);\n\n\t\tvar bulk = db.collection('objects').initializeUnorderedBulkOp();\n\n\t\tfor(var i = 0; i < keys.length; ++i) {\n\t\t\tbulk.find({_key: keys[i], value: value}).upsert().updateOne({$set: {score: parseInt(score, 10)}});\n\t\t}\n\n\t\tbulk.execute(function (err) {\n\t\t\tcallback(err);\n\t\t});\n\t};\n\n\tmodule.sortedSetRemove = function (key, value, callback) {\n\t\tfunction done(err) {\n\t\t\tcallback(err);\n\t\t}\n\t\tcallback = callback || helpers.noop;\n\t\tif (!key) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue = value.map(helpers.valueToString);\n\t\t\tdb.collection('objects').remove({_key: key, value: {$in: value}}, done);\n\t\t} else {\n\t\t\tvalue = helpers.valueToString(value);\n\t\t\tdb.collection('objects').remove({_key: key, value: value}, done);\n\t\t}\n\t};\n\n\tmodule.sortedSetsRemove = function (keys, value, callback) {\n\t\tcallback = callback || helpers.noop;\n\t\tif (!Array.isArray(keys) || !keys.length) {\n\t\t\treturn callback();\n\t\t}\n\t\tvalue = helpers.valueToString(value);\n\n\t\tdb.collection('objects').remove({_key: {$in: keys}, value: value}, function (err) {\n\t\t\tcallback(err);\n\t\t});\n\t};\n\n\tmodule.sortedSetsRemoveRangeByScore = function (keys, min, max, callback) {\n\t\tcallback = callback || helpers.noop;\n\t\tif (!Array.isArray(keys) || !keys.length) {\n\t\t\treturn callback();\n\t\t}\n\t\tvar query = {_key: {$in: keys}};\n\n\t\tif (min !== '-inf') {\n\t\t\tquery.score = {$gte: min};\n\t\t}\n\t\tif (max !== '+inf') {\n\t\t\tquery.score = query.score || {};\n\t\t\tquery.score.$lte = max;\n\t\t}\n\n\t\tdb.collection('objects').remove(query, function (err) {\n\t\t\tcallback(err);\n\t\t});\n\t};\n\n\tmodule.getSortedSetRange = function (key, start, stop, callback) {\n\t\tgetSortedSetRange(key, start, stop, 1, false, callback);\n\t};\n\n\tmodule.getSortedSetRevRange = function (key, start, stop, callback) {\n\t\tgetSortedSetRange(key, start, stop, -1, false, callback);\n\t};\n\n\tmodule.getSortedSetRangeWithScores = function (key, start, stop, callback) {\n\t\tgetSortedSetRange(key, start, stop, 1, true, callback);\n\t};\n\n\tmodule.getSortedSetRevRangeWithScores = function (key, start, stop, callback) {\n\t\tgetSortedSetRange(key, start, stop, -1, true, callback);\n\t};\n\n\tfunction getSortedSetRange(key, start, stop, sort, withScores, callback) {\n\t\tif (!key) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tvar fields = {_id: 0, value: 1};\n\t\tif (withScores) {\n\t\t\tfields.score = 1;\n\t\t}\n\n\t\tif (Array.isArray(key)) {\n\t\t\tkey = {$in: key};\n\t\t}\n\n\t\tvar limit = stop - start + 1;\n\t\tif (limit <= 0) {\n\t\t\tlimit = 0;\n\t\t}\n\n\t\tdb.collection('objects').find({_key: key}, {fields: fields})\n\t\t\t.limit(limit)\n\t\t\t.skip(start)\n\t\t\t.sort({score: sort})\n\t\t\t.toArray(function (err, data) {\n\t\t\t\tif (err || !data) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\tif (!withScores) {\n\t\t\t\t\tdata = data.map(function (item) {\n\t\t\t\t\t\treturn item.value;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tcallback(null, data);\n\t\t\t});\n\t}\n\n\tmodule.getSortedSetRangeByScore = function (key, start, count, min, max, callback) {\n\t\tgetSortedSetRangeByScore(key, start, count, min, max, 1, false, callback);\n\t};\n\n\tmodule.getSortedSetRevRangeByScore = function (key, start, count, max, min, callback) {\n\t\tgetSortedSetRangeByScore(key, start, count, min, max, -1, false, callback);\n\t};\n\n\tmodule.getSortedSetRangeByScoreWithScores = function (key, start, count, min, max, callback) {\n\t\tgetSortedSetRangeByScore(key, start, count, min, max, 1, true, callback);\n\t};\n\n\tmodule.getSortedSetRevRangeByScoreWithScores = function (key, start, count, max, min, callback) {\n\t\tgetSortedSetRangeByScore(key, start, count, min, max, -1, true, callback);\n\t};\n\n\tfunction getSortedSetRangeByScore(key, start, count, min, max, sort, withScores, callback) {\n\t\tif (!key) {\n\t\t\treturn callback();\n\t\t}\n\t\tif(parseInt(count, 10) === -1) {\n\t\t\tcount = 0;\n\t\t}\n\n\t\tvar query = {_key: key};\n\n\t\tif (min !== '-inf') {\n\t\t\tquery.score = {$gte: min};\n\t\t}\n\t\tif (max !== '+inf') {\n\t\t\tquery.score = query.score || {};\n\t\t\tquery.score.$lte = max;\n\t\t}\n\n\t\tvar fields = {_id: 0, value: 1};\n\t\tif (withScores) {\n\t\t\tfields.score = 1;\n\t\t}\n\n\t\tdb.collection('objects').find(query, {fields: fields})\n\t\t\t.limit(count)\n\t\t\t.skip(start)\n\t\t\t.sort({score: sort})\n\t\t\t.toArray(function (err, data) {\n\t\t\t\tif(err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\tif (!withScores) {\n\t\t\t\t\tdata = data.map(function (item) {\n\t\t\t\t\t\treturn item.value;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tcallback(err, data);\n\t\t\t});\n\t}\n\n\tmodule.sortedSetCount = function (key, min, max, callback) {\n\t\tif (!key) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tvar query = {_key: key};\n\t\tif (min !== '-inf') {\n\t\t\tquery.score = {$gte: min};\n\t\t}\n\t\tif (max !== '+inf') {\n\t\t\tquery.score = query.score || {};\n\t\t\tquery.score.$lte = max;\n\t\t}\n\n\t\tdb.collection('objects').count(query, function (err, count) {\n\t\t\tcallback(err, count ? count : 0);\n\t\t});\n\t};\n\n\tmodule.sortedSetCard = function (key, callback) {\n\t\tif (!key) {\n\t\t\treturn callback(null, 0);\n\t\t}\n\t\tdb.collection('objects').count({_key: key}, function (err, count) {\n\t\t\tcount = parseInt(count, 10);\n\t\t\tcallback(err, count ? count : 0);\n\t\t});\n\t};\n\n\tmodule.sortedSetsCard = function (keys, callback) {\n\t\tif (!Array.isArray(keys) || !keys.length) {\n\t\t\treturn callback();\n\t\t}\n\t\tvar pipeline = [\n\t\t\t{ $match : { _key : { $in: keys } } } ,\n\t\t\t{ $group: { _id: {_key: '$_key'}, count: { $sum: 1 } } },\n\t\t\t{ $project: { _id: 1, count: '$count' } }\n\t\t];\n\t\tdb.collection('objects').aggregate(pipeline, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tif (!Array.isArray(results)) {\n\t\t\t\tresults = [];\n\t\t\t}\n\n\t\t\tvar map = {};\n\t\t\tresults.forEach(function (item) {\n\t\t\t\tif (item && item._id._key) {\n\t\t\t\t\tmap[item._id._key] = item.count;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tresults = keys.map(function (key) {\n\t\t\t\treturn map[key] || 0;\n\t\t\t});\n\t\t\tcallback(null, results);\n\t\t});\n\t};\n\n\tmodule.sortedSetRank = function (key, value, callback) {\n\t\tgetSortedSetRank(module.getSortedSetRange, key, value, callback);\n\t};\n\n\tmodule.sortedSetRevRank = function (key, value, callback) {\n\t\tgetSortedSetRank(module.getSortedSetRevRange, key, value, callback);\n\t};\n\n\tfunction getSortedSetRank(method, key, value, callback) {\n\t\tif (!key) {\n\t\t\treturn callback();\n\t\t}\n\t\tvalue = helpers.valueToString(value);\n\t\tmethod(key, 0, -1, function (err, result) {\n\t\t\tif(err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar rank = result.indexOf(value);\n\t\t\tcallback(null, rank !== -1 ? rank : null);\n\t\t});\n\t}\n\n\tmodule.sortedSetsRanks = function (keys, values, callback) {\n\t\tif (!Array.isArray(keys) || !keys.length) {\n\t\t\treturn callback(null, []);\n\t\t}\n\t\tvar data = new Array(values.length);\n\t\tfor (var i = 0; i < values.length; ++i) {\n\t\t\tdata[i] = {key: keys[i], value: values[i]};\n\t\t}\n\n\t\tasync.map(data, function (item, next) {\n\t\t\tgetSortedSetRank(module.getSortedSetRange, item.key, item.value, next);\n\t\t}, callback);\n\t};\n\n\tmodule.sortedSetRanks = function (key, values, callback) {\n\t\tmodule.getSortedSetRange(key, 0, -1, function (err, sortedSet) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar result = values.map(function (value) {\n\t\t\t\tif (!value) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tvar index = sortedSet.indexOf(value.toString());\n\t\t\t\treturn index !== -1 ? index : null;\n\t\t\t});\n\n\t\t\tcallback(null, result);\n\t\t});\n\t};\n\n\tmodule.sortedSetScore = function (key, value, callback) {\n\t\tif (!key) {\n\t\t\treturn callback();\n\t\t}\n\t\tvalue = helpers.valueToString(value);\n\t\tdb.collection('objects').findOne({_key: key, value: value}, {fields:{_id: 0, score: 1}}, function (err, result) {\n\t\t\tcallback(err, result ? result.score : null);\n\t\t});\n\t};\n\n\tmodule.sortedSetsScore = function (keys, value, callback) {\n\t\tif (!Array.isArray(keys) || !keys.length) {\n\t\t\treturn callback();\n\t\t}\n\t\tvalue = helpers.valueToString(value);\n\t\tdb.collection('objects').find({_key:{$in:keys}, value: value}, {_id:0, _key:1, score: 1}).toArray(function (err, result) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar map = helpers.toMap(result),\n\t\t\t\treturnData = [],\n\t\t\t\titem;\n\n\t\t\tfor(var i = 0; i < keys.length; ++i) {\n\t\t\t\titem = map[keys[i]];\n\t\t\t\treturnData.push(item ? item.score : null);\n\t\t\t}\n\n\t\t\tcallback(null, returnData);\n\t\t});\n\t};\n\n\tmodule.sortedSetScores = function (key, values, callback) {\n\t\tif (!key) {\n\t\t\treturn callback();\n\t\t}\n\t\tvalues = values.map(helpers.valueToString);\n\t\tdb.collection('objects').find({_key: key, value: {$in: values}}, {_id: 0, value: 1, score: 1}).toArray(function (err, result) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar map = {};\n\t\t\tresult.forEach(function (item) {\n\t\t\t\tmap[item.value] = item.score;\n\t\t\t});\n\n\t\t\tvar returnData = new Array(values.length);\n\t\t\tvar score;\n\n\t\t\tfor(var i = 0; i < values.length; ++i) {\n\t\t\t\tscore = map[values[i]];\n\t\t\t\treturnData[i] = utils.isNumber(score) ? score : null;\n\t\t\t}\n\n\t\t\tcallback(null, returnData);\n\t\t});\n\t};\n\n\tmodule.isSortedSetMember = function (key, value, callback) {\n\t\tif (!key) {\n\t\t\treturn callback();\n\t\t}\n\t\tvalue = helpers.valueToString(value);\n\t\tdb.collection('objects').findOne({_key: key, value: value}, {_id: 0, value: 1}, function (err, result) {\n\t\t\tcallback(err, !!result);\n\t\t});\n\t};\n\n\tmodule.isSortedSetMembers = function (key, values, callback) {\n\t\tif (!key) {\n\t\t\treturn callback();\n\t\t}\n\t\tvalues = values.map(helpers.valueToString);\n\t\tdb.collection('objects').find({_key: key, value: {$in: values}}, {fields: {_id: 0, value: 1}}).toArray(function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tresults = results.map(function (item) {\n\t\t\t\treturn item.value;\n\t\t\t});\n\n\t\t\tvalues = values.map(function (value) {\n\t\t\t\treturn results.indexOf(value) !== -1;\n\t\t\t});\n\t\t\tcallback(null, values);\n\t\t});\n\t};\n\n\tmodule.isMemberOfSortedSets = function (keys, value, callback) {\n\t\tif (!Array.isArray(keys)) {\n\t\t\treturn callback();\n\t\t}\n\t\tvalue = helpers.valueToString(value);\n\t\tdb.collection('objects').find({_key: {$in: keys}, value: value}, {fields: {_id: 0, _key: 1, value: 1}}).toArray(function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tresults = results.map(function (item) {\n\t\t\t\treturn item._key;\n\t\t\t});\n\n\t\t\tresults = keys.map(function (key) {\n\t\t\t\treturn results.indexOf(key) !== -1;\n\t\t\t});\n\t\t\tcallback(null, results);\n\t\t});\n\t};\n\n\tmodule.getSortedSetsMembers = function (keys, callback) {\n\t\tif (!Array.isArray(keys) || !keys.length) {\n\t\t\treturn callback(null, []);\n\t\t}\n\t\tdb.collection('objects').find({_key: {$in: keys}}, {_id: 0, _key: 1, value: 1}).toArray(function (err, data) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tvar sets = {};\n\t\t\tdata.forEach(function (set) {\n\t\t\t \tsets[set._key] = sets[set._key] || [];\n\t\t\t \tsets[set._key].push(set.value);\n\t\t\t});\n\n\t\t\tvar returnData = new Array(keys.length);\n\t\t\tfor(var i = 0; i < keys.length; ++i) {\n\t\t\t \treturnData[i] = sets[keys[i]] || [];\n\t\t\t}\n\t\t\tcallback(null, returnData);\n\t\t});\n\t};\n\n\tmodule.sortedSetUnionCard = function (keys, callback) {\n\t\tif (!Array.isArray(keys) || !keys.length) {\n\t\t\treturn callback(null, 0);\n\t\t}\n\n\t\tvar pipeline = [\n\t\t\t{ $match: { _key: {$in: keys} } },\n\t\t\t{ $group: { _id: {value: '$value' } } },\n\t\t\t{ $group: { _id: null,  count: { $sum: 1 } } }\n\t\t];\n\n\t\tvar project = { _id: 0, count: '$count' };\n\t\tpipeline.push({\t$project: project });\n\n\t\tdb.collection('objects').aggregate(pipeline, function (err, data) {\n\t\t\tcallback(err, Array.isArray(data) && data.length ? data[0].count : 0);\n\t\t});\n\t};\n\n\tmodule.getSortedSetUnion = function (params, callback) {\n\t\tparams.sort = 1;\n\t\tgetSortedSetUnion(params, callback);\n\t};\n\n\tmodule.getSortedSetRevUnion = function (params, callback) {\n\t\tparams.sort = -1;\n\t\tgetSortedSetUnion(params, callback);\n\t};\n\n\tfunction getSortedSetUnion(params, callback) {\n\t\tif (!Array.isArray(params.sets) || !params.sets.length) {\n\t\t\treturn callback();\n\t\t}\n\t\tvar limit = params.stop - params.start + 1;\n\t\tif (limit <= 0) {\n\t\t\tlimit = 0;\n\t\t}\n\n\t\tvar aggregate = {};\n\t\tif (params.aggregate) {\n\t\t\taggregate['$' + params.aggregate.toLowerCase()] = '$score';\n\t\t} else {\n\t\t\taggregate.$sum = '$score';\n\t\t}\n\n\t\tvar pipeline = [\n\t\t\t{ $match: { _key: {$in: params.sets}} },\n\t\t\t{ $group: { _id: {value: '$value'}, totalScore: aggregate} },\n\t\t\t{ $sort: { totalScore: params.sort} }\n\t\t];\n\n\t\tif (params.start) {\n\t\t\tpipeline.push({ $skip: params.start });\n\t\t}\n\n\t\tif (limit > 0) {\n\t\t\tpipeline.push({ $limit: limit });\n\t\t}\n\n\t\tvar project = { _id: 0, value: '$_id.value' };\n\t\tif (params.withScores) {\n\t\t\tproject.score = '$totalScore';\n\t\t}\n\t\tpipeline.push({\t$project: project });\n\n\t\tdb.collection('objects').aggregate(pipeline, function (err, data) {\n\t\t\tif (err || !data) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tif (!params.withScores) {\n\t\t\t\tdata = data.map(function (item) {\n\t\t\t\t\treturn item.value;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tcallback(null, data);\n\t\t});\n\t}\n\n\tmodule.sortedSetIncrBy = function (key, increment, value, callback) {\n\t\tcallback = callback || helpers.noop;\n\t\tif (!key) {\n\t\t\treturn callback();\n\t\t}\n\t\tvar data = {};\n\t\tvalue = helpers.valueToString(value);\n\t\tdata.score = parseInt(increment, 10);\n\n\t\tdb.collection('objects').findAndModify({_key: key, value: value}, {}, {$inc: data}, {new: true, upsert: true}, function (err, result) {\n\t\t\t// if there is duplicate key error retry the upsert\n\t\t\t// https://github.com/NodeBB/NodeBB/issues/4467\n\t\t\t// https://jira.mongodb.org/browse/SERVER-14322\n\t\t\t// https://docs.mongodb.org/manual/reference/command/findAndModify/#upsert-and-unique-index\n\t\t\tif (err && err.message.startsWith('E11000 duplicate key error')) {\n\t\t\t\treturn process.nextTick(module.sortedSetIncrBy, key, increment, value, callback);\n\t\t\t}\n\t\t\tcallback(err, result && result.value ? result.value.score : null);\n\t\t});\n\t};\n\n\tmodule.getSortedSetRangeByLex = function (key, min, max, start, count, callback) {\n\t\tsortedSetLex(key, min, max, 1, start, count, callback);\n\t};\n\n\tmodule.getSortedSetRevRangeByLex = function (key, max, min, start, count, callback) {\n\t\tsortedSetLex(key, min, max, -1, start, count, callback);\n\t};\n\n\tmodule.sortedSetLexCount = function (key, min, max, callback) {\n\t\tsortedSetLex(key, min, max, 1, 0, 0, function (err, data) {\n\t\t\tcallback(err, data ? data.length : null);\n\t\t});\n\t};\n\n\tfunction sortedSetLex(key, min, max, sort, start, count, callback) {\n\t\tif (!callback) {\n\t\t\tcallback = start;\n\t\t\tstart = 0;\n\t\t\tcount = 0;\n\t\t}\n\n\t\tvar query = {_key: key};\n\n\t\tif (min !== '-') {\n\t\t\tif (min.match(/^\\(/)) {\n\t\t\t\tquery.value = {$gt: min.slice(1)};\n\t\t\t} else if (min.match(/^\\[/)) {\n\t\t\t\tquery.value = {$gte: min.slice(1)};\n\t\t\t} else {\n\t\t\t\tquery.value = {$gte: min};\n\t\t\t}\n\t\t}\n\t\tif (max !== '+') {\n\t\t\tquery.value = query.value || {};\n\t\t\tif (max.match(/^\\(/)) {\n\t\t\t\tquery.value.$lt = max.slice(1);\n\t\t\t} else if (max.match(/^\\[/)) {\n\t\t\t\tquery.value.$lte = max.slice(1);\n\t\t\t} else {\n\t\t\t\tquery.value.$lte = max;\n\t\t\t}\n\t\t}\n\n\t\tdb.collection('objects').find(query, {_id: 0, value: 1})\n\t\t\t.sort({value: sort})\n\t\t\t.skip(start)\n\t\t\t.limit(count === -1 ? 0 : count)\n\t\t\t.toArray(function (err, data) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\t\t\t\tdata = data.map(function (item) {\n\t\t\t\t\treturn item && item.value;\n\t\t\t\t});\n\t\t\t\tcallback(err, data);\n\t\t});\n\t}\n\n\tmodule.sortedSetRemoveRangeByLex = function (key, min, max, callback) {\n\t\tcallback = callback || helpers.noop;\n\n\t\tvar query = {_key: key};\n\n\t\tif (min !== '-') {\n\t\t\tif (min.match(/^\\(/)) {\n\t\t\t\tquery.value = {$gt: min.slice(1)};\n\t\t\t} else if (min.match(/^\\[/)) {\n\t\t\t\tquery.value = {$gte: min.slice(1)};\n\t\t\t} else {\n\t\t\t\tquery.value = {$gte: min};\n\t\t\t}\n\t\t}\n\t\tif (max !== '+') {\n\t\t\tquery.value = query.value || {};\n\t\t\tif (max.match(/^\\(/)) {\n\t\t\t\tquery.value.$lt = max.slice(1);\n\t\t\t} else if (max.match(/^\\[/)) {\n\t\t\t\tquery.value.$lte = max.slice(1);\n\t\t\t} else {\n\t\t\t\tquery.value.$lte = max;\n\t\t\t}\n\t\t}\n\n\t\tdb.collection('objects').remove(query, function (err) {\n\t\t\tcallback(err);\n\t\t});\n\t};\n\n\tmodule.processSortedSet = function (setKey, process, batch, callback) {\n\t\tvar done = false;\n\t\tvar ids = [];\n\t\tvar cursor = db.collection('objects').find({_key: setKey})\n\t\t\t.sort({score: 1})\n\t\t\t.project({_id: 0, value: 1})\n\t\t\t.batchSize(batch);\n\n\t\tasync.whilst(\n\t\t\tfunction () {\n\t\t\t\treturn !done;\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tcursor.next(function (err, item) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\t\t\t\t\tif (item === null) {\n\t\t\t\t\t\tdone = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tids.push(item.value);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (ids.length < batch && (!done || ids.length === 0)) {\n\t\t\t\t\t\treturn next(null);\n\t\t\t\t\t}\n\n\t\t\t\t\tprocess(ids, function (err) {\n\t\t\t\t\t\tids = [];\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t\tcallback\n\t\t);\n\t};\n\n\tmodule.sortedSetIntersectCard = function (keys, callback) {\n\t\tif (!Array.isArray(keys) || !keys.length) {\n\t\t\treturn callback(null, 0);\n\t\t}\n\n\t\tvar pipeline = [\n\t\t\t{ $match: { _key: {$in: keys}} },\n\t\t\t{ $group: { _id: {value: '$value'}, count: {$sum: 1}} },\n\t\t\t{ $match: { count: keys.length} },\n\t\t\t{ $group: { _id: null,  count: { $sum: 1 } } }\n\t\t];\n\n\t\tdb.collection('objects').aggregate(pipeline, function (err, data) {\n\t\t\tcallback(err, Array.isArray(data) && data.length ? data[0].count : 0);\n\t\t});\n\t};\n\n\tmodule.getSortedSetIntersect = function (params, callback) {\n\t\tparams.sort = 1;\n\t\tgetSortedSetRevIntersect(params, callback);\n\t};\n\n\tmodule.getSortedSetRevIntersect = function (params, callback) {\n\t\tparams.sort = -1;\n\t\tgetSortedSetRevIntersect(params, callback);\n\t};\n\n\tfunction getSortedSetRevIntersect(params, callback) {\n\t\tvar sets = params.sets;\n\t\tvar start = params.hasOwnProperty('start') ? params.start : 0;\n\t\tvar stop = params.hasOwnProperty('stop') ? params.stop : -1;\n\t\tvar weights = params.weights || [];\n\t\tvar aggregate = {};\n\n\t\tif (params.aggregate) {\n\t\t\taggregate['$' + params.aggregate.toLowerCase()] = '$score';\n\t\t} else {\n\t\t\taggregate.$sum = '$score';\n\t\t}\n\n\t\tvar limit = stop - start + 1;\n\t\tif (limit <= 0) {\n\t\t\tlimit = 0;\n\t\t}\n\n\t\tvar pipeline = [{ $match: { _key: {$in: sets}} }];\n\n\t\tweights.forEach(function (weight, index) {\n\t\t\tif (weight !== 1) {\n\t\t\t\tpipeline.push({\n\t\t\t\t\t$project: {\n\t\t\t\t\t\tvalue: 1,\n\t\t\t\t\t\tscore: {\n\t\t\t\t\t\t\t$cond: { if: { $eq: [ \"$_key\", sets[index] ] }, then: { $multiply: [ '$score', weight ] }, else: '$score' }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tpipeline.push({ $group: { _id: {value: '$value'}, totalScore: aggregate, count: {$sum: 1}} });\n\t\tpipeline.push({ $match: { count: sets.length} });\n\t\tpipeline.push({ $sort: { totalScore: params.sort} });\n\n\t\tif (start) {\n\t\t\tpipeline.push({ $skip: start });\n\t\t}\n\n\t\tif (limit > 0) {\n\t\t\tpipeline.push({ $limit: limit });\n\t\t}\n\n\t\tvar project = { _id: 0, value: '$_id.value'};\n\t\tif (params.withScores) {\n\t\t\tproject.score = '$totalScore';\n\t\t}\n\t\tpipeline.push({ $project: project });\n\n\t\tdb.collection('objects').aggregate(pipeline, function (err, data) {\n\t\t\tif (err || !data) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tif (!params.withScores) {\n\t\t\t\tdata = data.map(function (item) {\n\t\t\t\t\treturn item.value;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tcallback(null, data);\n\t\t});\n\t}\n\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/socket.io/admin/categories.js":"\"use strict\";\n\nvar async = require('async');\n\nvar db = require('../../database');\nvar groups = require('../../groups');\nvar categories = require('../../categories');\nvar privileges = require('../../privileges');\nvar plugins = require('../../plugins');\nvar Categories = {};\n\nCategories.create = function (socket, data, callback) {\n\tif (!data) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\tcategories.create(data, callback);\n};\n\nCategories.getAll = function (socket, data, callback) {\n\tasync.waterfall([\n\t\tasync.apply(db.getSortedSetRange, 'categories:cid', 0, -1),\n\t\tasync.apply(categories.getCategoriesData),\n\t\tfunction (categories, next) {\n\t\t\t//Hook changes, there is no req, and res\n\t\t\tplugins.fireHook('filter:admin.categories.get', {categories: categories}, next);\n\t\t},\n\t\tfunction (result, next) {\n\t\t\tnext(null, categories.getTree(result.categories, 0));\n\t\t}\n\t], function (err, categoriesTree) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tcallback(null, categoriesTree);\n\t});\n};\n\nCategories.getNames = function (socket, data, callback) {\n\tcategories.getAllCategoryFields(['cid', 'name'], callback);\n};\n\nCategories.purge = function (socket, cid, callback) {\n\tcategories.purge(cid, socket.uid, callback);\n};\n\nCategories.update = function (socket, data, callback) {\n\tif (!data) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\tcategories.update(data, callback);\n};\n\nCategories.setPrivilege = function (socket, data, callback) {\n\tif (!data) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\tif (Array.isArray(data.privilege)) {\n\t\tasync.each(data.privilege, function (privilege, next) {\n\t\t\tgroups[data.set ? 'join' : 'leave']('cid:' + data.cid + ':privileges:' + privilege, data.member, next);\n\t\t}, callback);\n\t} else {\n\t\tgroups[data.set ? 'join' : 'leave']('cid:' + data.cid + ':privileges:' + data.privilege, data.member, callback);\n\t}\n};\n\nCategories.getPrivilegeSettings = function (socket, cid, callback) {\n\tprivileges.categories.list(cid, callback);\n};\n\nCategories.copyPrivilegesToChildren = function (socket, cid, callback) {\n\tcategories.getCategories([cid], socket.uid, function (err, categories) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\t\tvar category = categories[0];\n\n\t\tasync.eachSeries(category.children, function (child, next) {\n\t\t\tcopyPrivilegesToChildrenRecursive(cid, child, next);\n\t\t}, callback);\n\t});\n};\n\nfunction copyPrivilegesToChildrenRecursive(parentCid, category, callback) {\n\tcategories.copyPrivilegesFrom(parentCid, category.cid, function (err) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\t\tasync.eachSeries(category.children, function (child, next) {\n\t\t\tcopyPrivilegesToChildrenRecursive(parentCid, child, next);\n\t\t}, callback);\n\t});\n}\n\nCategories.copySettingsFrom = function (socket, data, callback) {\n\tcategories.copySettingsFrom(data.fromCid, data.toCid, true, callback);\n};\n\nCategories.copyPrivilegesFrom = function (socket, data, callback) {\n\tcategories.copyPrivilegesFrom(data.fromCid, data.toCid, callback);\n};\n\nmodule.exports = Categories;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/socket.io/admin/groups.js":"\"use strict\";\n\nvar async = require('async');\nvar groups = require('../../groups');\n\nvar Groups = {};\n\nGroups.create = function (socket, data, callback) {\n\tif (!data) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t} else if (groups.isPrivilegeGroup(data.name)) {\n\t\treturn callback(new Error('[[error:invalid-group-name]]'));\n\t}\n\n\tgroups.create({\n\t\tname: data.name,\n\t\tdescription: data.description,\n\t\townerUid: socket.uid\n\t}, callback);\n};\n\nGroups.join = function (socket, data, callback) {\n\tif (!data) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tgroups.isMember(data.uid, data.groupName, next);\n\t\t},\n\t\tfunction (isMember, next) {\n\t\t\tif (isMember) {\n\t\t\t\treturn next(new Error('[[error:group-already-member]]'));\n\t\t\t}\n\t\t\tgroups.join(data.groupName, data.uid, next);\n\t\t}\n\t], callback);\n};\n\nGroups.leave = function (socket, data, callback) {\n\tif (!data) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\tif (socket.uid === parseInt(data.uid, 10) && data.groupName === 'administrators') {\n\t\treturn callback(new Error('[[error:cant-remove-self-as-admin]]'));\n\t}\n\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tgroups.isMember(data.uid, data.groupName, next);\n\t\t},\n\t\tfunction (isMember, next) {\n\t\t\tif (!isMember) {\n\t\t\t\treturn next(new Error('[[error:group-not-member]]'));\n\t\t\t}\n\t\t\tgroups.leave(data.groupName, data.uid, next);\n\t\t}\n\t], callback);\n};\n\nGroups.update = function (socket, data, callback) {\n\tif (!data) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\tgroups.update(data.groupName, data.values, callback);\n};\n\nmodule.exports = Groups;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/socket.io/admin/social.js":"\"use strict\";\n\nvar social = require('../../social'),\n\tSocketSocial = {};\n\nSocketSocial.savePostSharingNetworks = function (socket, data, callback) {\n\tsocial.setActivePostSharingNetworks(data, callback);\n};\n\nmodule.exports = SocketSocial;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/socket.io/admin/tags.js":"\"use strict\";\n\nvar topics = require('../../topics');\nvar Tags = {};\n\nTags.create = function (socket, data, callback) {\n\tif (!data) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\ttopics.createEmptyTag(data.tag, callback);\n};\n\nTags.update = function (socket, data, callback) {\n\tif (!data) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\ttopics.updateTag(data.tag, data, callback);\n};\n\nTags.deleteTags = function (socket, data, callback) {\n\ttopics.deleteTags(data.tags, callback);\n};\n\n\nmodule.exports = Tags;","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/socket.io/admin/user.js":"\"use strict\";\n\nvar async = require('async');\nvar validator = require('validator');\n\nvar db = require('../../database');\nvar groups = require('../../groups');\nvar user = require('../../user');\nvar events = require('../../events');\nvar meta = require('../../meta');\n\nvar User = {};\n\nUser.makeAdmins = function (socket, uids, callback) {\n\tif(!Array.isArray(uids)) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\tuser.getUsersFields(uids, ['banned'], function (err, userData) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tfor(var i = 0; i < userData.length; i++) {\n\t\t\tif (userData[i] && parseInt(userData[i].banned, 10) === 1) {\n\t\t\t\treturn callback(new Error('[[error:cant-make-banned-users-admin]]'));\n\t\t\t}\n\t\t}\n\n\t\tasync.each(uids, function (uid, next) {\n\t\t\tgroups.join('administrators', uid, next);\n\t\t}, callback);\n\t});\n};\n\nUser.removeAdmins = function (socket, uids, callback) {\n\tif(!Array.isArray(uids)) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\tasync.eachSeries(uids, function (uid, next) {\n\t\tgroups.getMemberCount('administrators', function (err, count) {\n\t\t\tif (err) {\n\t\t\t\treturn next(err);\n\t\t\t}\n\n\t\t\tif (count === 1) {\n\t\t\t\treturn next(new Error('[[error:cant-remove-last-admin]]'));\n\t\t\t}\n\n\t\t\tgroups.leave('administrators', uid, next);\n\t\t});\n\t}, callback);\n};\n\nUser.createUser = function (socket, userData, callback) {\n\tif (!userData) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\tuser.create(userData, callback);\n};\n\nUser.resetLockouts = function (socket, uids, callback) {\n\tif (!Array.isArray(uids)) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\tasync.each(uids, user.auth.resetLockout, callback);\n};\n\nUser.resetFlags = function (socket, uids, callback) {\n\tif (!Array.isArray(uids)) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\tuser.resetFlags(uids, callback);\n};\n\nUser.validateEmail = function (socket, uids, callback) {\n\tif (!Array.isArray(uids)) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\tuids = uids.filter(function (uid) {\n\t\treturn parseInt(uid, 10);\n\t});\n\n\tasync.each(uids, function (uid, next) {\n\t\tuser.setUserField(uid, 'email:confirmed', 1, next);\n\t}, function (err) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\t\tdb.sortedSetRemove('users:notvalidated', uids, callback);\n\t});\n};\n\nUser.sendValidationEmail = function (socket, uids, callback) {\n\tif (!Array.isArray(uids)) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\tif (parseInt(meta.config.requireEmailConfirmation, 10) !== 1) {\n\t\treturn callback(new Error('[[error:email-confirmations-are-disabled]]'));\n\t}\n\n\tuser.getUsersFields(uids, ['uid', 'email'], function (err, usersData) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tasync.eachLimit(usersData, 50, function (userData, next) {\n\t\t\tif (userData.email && userData.uid) {\n\t\t\t\tuser.email.sendValidationEmail(userData.uid, userData.email, next);\n\t\t\t} else {\n\t\t\t\tnext();\n\t\t\t}\n\t\t}, callback);\n\t});\n};\n\nUser.sendPasswordResetEmail = function (socket, uids, callback) {\n\tif (!Array.isArray(uids)) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\tuids = uids.filter(function (uid) {\n\t\treturn parseInt(uid, 10);\n\t});\n\n\tasync.each(uids, function (uid, next) {\n\t\tuser.getUserFields(uid, ['email', 'username'], function (err, userData) {\n\t\t\tif (err) {\n\t\t\t\treturn next(err);\n\t\t\t}\n\t\t\tif (!userData.email) {\n\t\t\t\treturn next(new Error('[[error:user-doesnt-have-email, ' + userData.username + ']]'));\n\t\t\t}\n\t\t\tuser.reset.send(userData.email, next);\n\t\t});\n\t}, callback);\n};\n\nUser.deleteUsers = function (socket, uids, callback) {\n\tdeleteUsers(socket, uids, function (uid, next) {\n\t\tuser.deleteAccount(uid, next);\n\t}, callback);\n};\n\nUser.deleteUsersAndContent = function (socket, uids, callback) {\n\tdeleteUsers(socket, uids, function (uid, next) {\n\t\tuser.delete(socket.uid, uid, next);\n\t}, callback);\n};\n\nfunction deleteUsers(socket, uids, method, callback) {\n\tif (!Array.isArray(uids)) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\tasync.each(uids, function (uid, next) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tuser.isAdministrator(uid, next);\n\t\t\t},\n\t\t\tfunction (isAdmin, next) {\n\t\t\t\tif (isAdmin) {\n\t\t\t\t\treturn next(new Error('[[error:cant-delete-other-admins]]'));\n\t\t\t\t}\n\n\t\t\t\tmethod(uid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tevents.log({\n\t\t\t\t\ttype: 'user-delete',\n\t\t\t\t\tuid: socket.uid,\n\t\t\t\t\ttargetUid: uid,\n\t\t\t\t\tip: socket.ip\n\t\t\t\t});\n\t\t\t\tnext();\n\t\t\t}\n\t\t], next);\n\t}, callback);\n}\n\nUser.search = function (socket, data, callback) {\n\tvar searchData;\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tuser.search({query: data.query, searchBy: data.searchBy, uid: socket.uid}, next);\n\t\t},\n\t\tfunction (_searchData, next) {\n\t\t\tsearchData = _searchData;\n\t\t\tif (!searchData.users.length) {\n\t\t\t\treturn callback(null, searchData);\n\t\t\t}\n\n\t\t\tvar uids = searchData.users.map(function (user) {\n\t\t\t\treturn user && user.uid;\n\t\t\t});\n\n\t\t\tuser.getUsersFields(uids, ['email', 'flags', 'lastonline', 'joindate'], next);\n\t\t},\n\t\tfunction (userInfo, next) {\n\t\t\tsearchData.users.forEach(function (user, index) {\n\t\t\t\tif (user && userInfo[index]) {\n\t\t\t\t\tuser.email = validator.escape(String(userInfo[index].email || ''));\n\t\t\t\t\tuser.flags = userInfo[index].flags || 0;\n\t\t\t\t\tuser.lastonlineISO = userInfo[index].lastonlineISO;\n\t\t\t\t\tuser.joindateISO = userInfo[index].joindateISO;\n\t\t\t\t}\n\t\t\t});\n\t\t\tnext(null, searchData);\n\t\t}\n\t], callback);\n};\n\nUser.deleteInvitation = function (socket, data, callback) {\n\tuser.deleteInvitation(data.invitedBy, data.email, callback);\n};\n\nUser.acceptRegistration = function (socket, data, callback) {\n\tuser.acceptRegistration(data.username, function (err, uid) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\t\tevents.log({\n\t\t\ttype: 'registration-approved',\n\t\t\tuid: socket.uid,\n\t\t\tip: socket.ip,\n\t\t\ttargetUid: uid,\n\t\t});\n\t\tcallback();\n\t});\n};\n\nUser.rejectRegistration = function (socket, data, callback) {\n\tuser.rejectRegistration(data.username, function (err) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\t\tevents.log({\n\t\t\ttype: 'registration-rejected',\n\t\t\tuid: socket.uid,\n\t\t\tip: socket.ip,\n\t\t\tusername: data.username,\n\t\t});\n\t\tcallback();\n\t});\n};\n\nUser.restartJobs = function (socket, data, callback) {\n\tuser.startJobs(callback);\n};\n\nmodule.exports = User;\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/socket.io/posts/bookmarks.js":"'use strict';\n\n\nvar helpers = require('./helpers');\n\nmodule.exports = function (SocketPosts) {\n\n\tSocketPosts.bookmark = function (socket, data, callback) {\n\t\thelpers.postCommand(socket, 'bookmark', 'bookmarked', '', data, callback);\n\t};\n\n\tSocketPosts.unbookmark = function (socket, data, callback) {\n\t\thelpers.postCommand(socket, 'unbookmark', 'bookmarked', '', data, callback);\n\t};\n\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/socket.io/posts/helpers.js":"'use strict';\n\n\nvar async = require('async');\nvar posts = require('../../posts');\nvar plugins = require('../../plugins');\nvar websockets = require('../index');\nvar socketHelpers = require('../helpers');\n\nvar helpers = module.exports;\n\nhelpers.postCommand = function (socket, command, eventName, notification, data, callback) {\n\tif (!socket.uid) {\n\t\treturn callback(new Error('[[error:not-logged-in]]'));\n\t}\n\n\tif (!data || !data.pid || !data.room_id) {\n\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t}\n\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tasync.parallel({\n\t\t\t\texists: function (next) {\n\t\t\t\t\tposts.exists(data.pid, next);\n\t\t\t\t},\n\t\t\t\tdeleted: function (next) {\n\t\t\t\t\tposts.getPostField(data.pid, 'deleted', next);\n\t\t\t\t}\n\t\t\t}, next);\n\t\t},\n\t\tfunction (results, next) {\n\t\t\tif (!results.exists) {\n\t\t\t\treturn next(new Error('[[error:invalid-pid]]'));\n\t\t\t}\n\n\t\t\tif (parseInt(results.deleted, 10) === 1) {\n\t\t\t\treturn next(new Error('[[error:post-deleted]]'));\n\t\t\t}\n\n\t\t\t/*\n\t\t\thooks:\n\t\t\t\tfilter:post.upvote\n\t\t\t\tfilter:post.downvote\n\t\t\t\tfilter:post.unvote\n\t\t\t\tfilter:post.bookmark\n\t\t\t\tfilter:post.unbookmark\n\t\t\t */\n\t\t\tplugins.fireHook('filter:post.' + command, {data: data, uid: socket.uid}, next);\n\t\t},\n\t\tfunction (filteredData, next) {\n\t\t\texecuteCommand(socket, command, eventName, notification, filteredData.data, next);\n\t\t}\n\t], callback);\n};\n\nfunction executeCommand(socket, command, eventName, notification, data, callback) {\n\tasync.waterfall([\n\t\tfunction (next) {\n\t\t\tposts[command](data.pid, socket.uid, next);\n\t\t},\n\t\tfunction (result, next) {\n\t\t\tif (result && eventName) {\n\t\t\t\twebsockets.in('uid_' + socket.uid).emit('posts.' + command, result);\n\t\t\t\twebsockets.in(data.room_id).emit('event:' + eventName, result);\n\t\t\t}\n\n\t\t\tif (result && notification) {\n\t\t\t\tsocketHelpers.sendNotificationToPostOwner(data.pid, socket.uid, command, notification);\n\t\t\t} else if (result && command === 'unvote') {\n\t\t\t\tsocketHelpers.rescindUpvoteNotification(data.pid, socket.uid);\n\t\t\t}\n\t\t\tnext(null, result);\n\t\t}\n\t], callback);\n}","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/socket.io/posts/edit.js":"'use strict';\n\nvar async = require('async');\nvar validator = require('validator');\nvar _ = require('underscore');\n\nvar posts = require('../../posts');\nvar groups = require('../../groups');\nvar events = require('../../events');\nvar meta = require('../../meta');\nvar websockets = require('../index');\n\nmodule.exports = function (SocketPosts) {\n\n\tSocketPosts.edit = function (socket, data, callback) {\n\t\tif (!socket.uid) {\n\t\t\treturn callback(new Error('[[error:not-logged-in]]'));\n\t\t} else if (!data || !data.pid || !data.content) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t} else if (data.title && data.title.length < parseInt(meta.config.minimumTitleLength, 10)) {\n\t\t\treturn callback(new Error('[[error:title-too-short, ' + meta.config.minimumTitleLength + ']]'));\n\t\t} else if (data.title && data.title.length > parseInt(meta.config.maximumTitleLength, 10)) {\n\t\t\treturn callback(new Error('[[error:title-too-long, ' + meta.config.maximumTitleLength + ']]'));\n\t\t} else if (data.tags && data.tags.length < parseInt(meta.config.minimumTagsPerTopic, 10)) {\n\t\t\treturn callback(new Error('[[error:not-enough-tags, ' + meta.config.minimumTagsPerTopic + ']]'));\n\t\t} else if (data.tags && data.tags.length > parseInt(meta.config.maximumTagsPerTopic, 10)) {\n\t\t\treturn callback(new Error('[[error:too-many-tags, ' + meta.config.maximumTagsPerTopic + ']]'));\n\t\t} else if (!data.content || data.content.length < parseInt(meta.config.minimumPostLength, 10)) {\n\t\t\treturn callback(new Error('[[error:content-too-short, ' + meta.config.minimumPostLength + ']]'));\n\t\t} else if (data.content.length > parseInt(meta.config.maximumPostLength, 10)) {\n\t\t\treturn callback(new Error('[[error:content-too-long, ' + meta.config.maximumPostLength + ']]'));\n\t\t}\n\n\t\tdata.uid = socket.uid;\n\t\tdata.req = websockets.reqFromSocket(socket);\n\n\t\tvar editResult;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tposts.edit(data, next);\n\t\t\t},\n\t\t\tfunction (result, next) {\n\t\t\t\teditResult = result;\n\t\t\t\tif (result.topic.renamed) {\n\t\t\t\t\tevents.log({\n\t\t\t\t\t\ttype: 'topic-rename',\n\t\t\t\t\t\tuid: socket.uid,\n\t\t\t\t\t\tip: socket.ip,\n\t\t\t\t\t\toldTitle: validator.escape(String(result.topic.oldTitle)),\n\t\t\t\t\t\tnewTitle: validator.escape(String(result.topic.title))\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (parseInt(result.post.deleted) !== 1) {\n\t\t\t\t\twebsockets.in('topic_' + result.topic.tid).emit('event:post_edited', result);\n\t\t\t\t\treturn callback(null, result.post);\n\t\t\t\t}\n\n\t\t\t\tgroups.getMembersOfGroups([\n\t\t\t\t\t'administrators',\n\t\t\t\t\t'Global Moderators',\n\t\t\t\t\t'cid:' + result.topic.cid + ':privileges:mods',\n\t\t\t\t\t'cid:' + result.topic.cid + ':privileges:groups:moderate'\n\t\t\t\t], next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tvar uids = _.unique(_.flatten(results).concat(socket.uid.toString()));\n\t\t\t\tuids.forEach(function (uid) {\n\t\t\t\t\twebsockets.in('uid_' + uid).emit('event:post_edited', editResult);\n\t\t\t\t});\n\t\t\t\tnext(null, editResult.post);\n\t\t\t}\n\t\t], callback);\n\t};\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/socket.io/posts/flag.js":"'use strict';\n\nvar async = require('async');\nvar S = require('string');\n\nvar user = require('../../user');\nvar groups = require('../../groups');\nvar posts = require('../../posts');\nvar topics = require('../../topics');\nvar privileges = require('../../privileges');\nvar notifications = require('../../notifications');\nvar plugins = require('../../plugins');\nvar meta = require('../../meta');\nvar utils = require('../../../public/src/utils');\n\nmodule.exports = function (SocketPosts) {\n\n\tSocketPosts.flag = function (socket, data, callback) {\n\t\tif (!socket.uid) {\n\t\t\treturn callback(new Error('[[error:not-logged-in]]'));\n\t\t}\n\n\t\tif (!data || !data.pid || !data.reason) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\n\t\tvar flaggingUser = {};\n\t\tvar post;\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tposts.getPostFields(data.pid, ['pid', 'tid', 'uid', 'content', 'deleted'], next);\n\t\t\t},\n\t\t\tfunction (postData, next) {\n\t\t\t\tif (parseInt(postData.deleted, 10) === 1) {\n\t\t\t\t\treturn next(new Error('[[error:post-deleted]]'));\n\t\t\t\t}\n\n\t\t\t\tpost = postData;\n\t\t\t\ttopics.getTopicFields(post.tid, ['title', 'cid'], next);\n\t\t\t},\n\t\t\tfunction (topicData, next) {\n\t\t\t\tpost.topic = topicData;\n\n\t\t\t\tasync.parallel({\n\t\t\t\t\tisAdminOrMod: function (next) {\n\t\t\t\t\t\tprivileges.categories.isAdminOrMod(post.topic.cid, socket.uid, next);\n\t\t\t\t\t},\n\t\t\t\t\tuserData: function (next) {\n\t\t\t\t\t\tuser.getUserFields(socket.uid, ['username', 'reputation', 'banned'], next);\n\t\t\t\t\t}\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (user, next) {\n\t\t\t\tvar minimumReputation = utils.isNumber(meta.config['privileges:flag']) ? parseInt(meta.config['privileges:flag'], 10) : 1;\n\t\t\t\tif (!user.isAdminOrMod && parseInt(user.userData.reputation, 10) < minimumReputation) {\n\t\t\t\t\treturn next(new Error('[[error:not-enough-reputation-to-flag]]'));\n\t\t\t\t}\n\n\t\t\t\tif (parseInt(user.banned, 10) === 1) {\n\t\t\t\t\treturn next(new Error('[[error:user-banned]]'));\n\t\t\t\t}\n\n\t\t\t\tflaggingUser = user.userData;\n\t\t\t\tflaggingUser.uid = socket.uid;\n\n\t\t\t\tposts.flag(post, socket.uid, data.reason, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\tpost: function (next) {\n\t\t\t\t\t\tposts.parsePost(post, next);\n\t\t\t\t\t},\n\t\t\t\t\tadmins: function (next) {\n\t\t\t\t\t\tgroups.getMembers('administrators', 0, -1, next);\n\t\t\t\t\t},\n\t\t\t\t\tglobalMods: function (next) {\n\t\t\t\t\t\tgroups.getMembers('Global Moderators', 0, -1, next);\n\t\t\t\t\t},\n\t\t\t\t\tmoderators: function (next) {\n\t\t\t\t\t\tgroups.getMembers('cid:' + post.topic.cid + ':privileges:mods', 0, -1, next);\n\t\t\t\t\t}\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tvar title = S(post.topic.title).decodeHTMLEntities().s;\n\t\t\t\tvar titleEscaped = title.replace(/%/g, '&#37;').replace(/,/g, '&#44;');\n\n\t\t\t\tnotifications.create({\n\t\t\t\t\tbodyShort: '[[notifications:user_flagged_post_in, ' + flaggingUser.username + ', ' + titleEscaped + ']]',\n\t\t\t\t\tbodyLong: post.content,\n\t\t\t\t\tpid: data.pid,\n\t\t\t\t\tpath: '/post/' + data.pid,\n\t\t\t\t\tnid: 'post_flag:' + data.pid + ':uid:' + socket.uid,\n\t\t\t\t\tfrom: socket.uid,\n\t\t\t\t\tmergeId: 'notifications:user_flagged_post_in|' + data.pid,\n\t\t\t\t\ttopicTitle: post.topic.title\n\t\t\t\t}, function (err, notification) {\n\t\t\t\t\tif (err || !notification) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tplugins.fireHook('action:post.flag', {post: post, reason: data.reason, flaggingUser: flaggingUser});\n\t\t\t\t\tnotifications.push(notification, results.admins.concat(results.moderators).concat(results.globalMods), next);\n\t\t\t\t});\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tSocketPosts.dismissFlag = function (socket, pid, callback) {\n\t\tif (!pid || !socket.uid) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tuser.isAdminOrGlobalMod(socket.uid, next);\n\t\t\t},\n\t\t\tfunction (isAdminOrGlobalModerator, next) {\n\t\t\t\tif (!isAdminOrGlobalModerator) {\n\t\t\t\t\treturn next(new Error('[[no-privileges]]'));\n\t\t\t\t}\n\t\t\t\tposts.dismissFlag(pid, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tSocketPosts.dismissAllFlags = function (socket, data, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tuser.isAdminOrGlobalMod(socket.uid, next);\n\t\t\t},\n\t\t\tfunction (isAdminOrGlobalModerator, next) {\n\t\t\t\tif (!isAdminOrGlobalModerator) {\n\t\t\t\t\treturn next(new Error('[[no-privileges]]'));\n\t\t\t\t}\n\t\t\t\tposts.dismissAllFlags(next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tSocketPosts.updateFlag = function (socket, data, callback) {\n\t\tif (!data || !(data.pid && data.data)) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\n\t\tvar payload = {};\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tasync.parallel([\n\t\t\t\t\tasync.apply(user.isAdminOrGlobalMod, socket.uid),\n\t\t\t\t\tasync.apply(user.isModeratorOfAnyCategory, socket.uid)\n\t\t\t\t], function (err, results) {\n\t\t\t\t\tnext(err, results[0] || results[1]);\n\t\t\t\t});\n\t\t\t},\n\t\t\tfunction (allowed, next) {\n\t\t\t\tif (!allowed) {\n\t\t\t\t\treturn next(new Error('[[no-privileges]]'));\n\t\t\t\t}\n\n\t\t\t\t// Translate form data into object\n\t\t\t\tpayload = data.data.reduce(function (memo, cur) {\n\t\t\t\t\tmemo[cur.name] = cur.value;\n\t\t\t\t\treturn memo;\n\t\t\t\t}, payload);\n\n\t\t\t\tposts.updateFlagData(socket.uid, data.pid, payload, next);\n\t\t\t}\n\t\t], callback);\n\t};\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/socket.io/posts/move.js":"'use strict';\n\nvar async = require('async');\nvar privileges = require('../../privileges');\nvar topics = require('../../topics');\nvar socketHelpers = require('../helpers');\n\nmodule.exports = function (SocketPosts) {\n\n\tSocketPosts.movePost = function (socket, data, callback) {\n\t\tif (!socket.uid) {\n\t\t\treturn callback(new Error('[[error:not-logged-in]]'));\n\t\t}\n\n\t\tif (!data || !data.pid || !data.tid) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tprivileges.posts.canMove(data.pid, socket.uid, next);\n\t\t\t},\n\t\t\tfunction (canMove, next) {\n\t\t\t\tif (!canMove) {\n\t\t\t\t\treturn next(new Error('[[error:no-privileges]]'));\n\t\t\t\t}\n\n\t\t\t\ttopics.movePostToTopic(data.pid, data.tid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tsocketHelpers.sendNotificationToPostOwner(data.pid, socket.uid, 'move', 'notifications:moved_your_post');\n\t\t\t\tnext();\n\t\t\t}\n\t\t], callback);\n\t};\n\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/socket.io/posts/tools.js":"'use strict';\n\nvar async = require('async');\nvar validator = require('validator');\n\nvar posts = require('../../posts');\nvar topics = require('../../topics');\nvar events = require('../../events');\nvar websockets = require('../index');\nvar socketTopics = require('../topics');\nvar privileges = require('../../privileges');\nvar plugins = require('../../plugins');\nvar social = require('../../social');\n\nmodule.exports = function (SocketPosts) {\n\n\tSocketPosts.loadPostTools = function (socket, data, callback) {\n\t\tif (!data) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\n\t\tasync.parallel({\n\t\t\tposts: function (next) {\n\t\t\t\tposts.getPostFields(data.pid, ['deleted', 'bookmarks', 'uid'], next);\n\t\t\t},\n\t\t\tisAdminOrMod: function (next) {\n\t\t\t\tprivileges.categories.isAdminOrMod(data.cid, socket.uid, next);\n\t\t\t},\n\t\t\tcanEdit: function (next) {\n\t\t\t\tprivileges.posts.canEdit(data.pid, socket.uid, next);\n\t\t\t},\n\t\t\tcanDelete: function (next) {\n\t\t\t\tprivileges.posts.canDelete(data.pid, socket.uid, next);\n\t\t\t},\n\t\t\tbookmarked: function (next) {\n\t\t\t\tposts.hasBookmarked(data.pid, socket.uid, next);\n\t\t\t},\n\t\t\ttools: function (next) {\n\t\t\t\tplugins.fireHook('filter:post.tools', {pid: data.pid, uid: socket.uid, tools: []}, next);\n\t\t\t},\n\t\t\tpostSharing: function (next) {\n\t\t\t\tsocial.getActivePostSharing(next);\n\t\t\t}\n\t\t}, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tresults.posts.tools = results.tools.tools;\n\t\t\tresults.posts.deleted = parseInt(results.posts.deleted, 10) === 1;\n\t\t\tresults.posts.bookmarked = results.bookmarked;\n\t\t\tresults.posts.selfPost = socket.uid && socket.uid === parseInt(results.posts.uid, 10);\n\t\t\tresults.posts.display_edit_tools = results.canEdit.flag;\n\t\t\tresults.posts.display_delete_tools = results.canDelete.flag;\n\t\t\tresults.posts.display_moderator_tools = results.posts.display_edit_tools || results.posts.display_delete_tools;\n\t\t\tresults.posts.display_move_tools = results.isAdminOrMod;\n\t\t\tcallback(null, results);\n\t\t});\n\t};\n\n\tSocketPosts.delete = function (socket, data, callback) {\n\t\tif (!data || !data.pid) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\t\tvar postData;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tposts.tools.delete(socket.uid, data.pid, next);\n\t\t\t},\n\t\t\tfunction (_postData, next) {\n\t\t\t\tpostData = _postData;\n\t\t\t\tisMainAndLastPost(data.pid, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tif (results.isMain && results.isLast) {\n\t\t\t\t\tdeleteTopicOf(data.pid, socket, next);\n\t\t\t\t} else {\n\t\t\t\t\tnext();\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\twebsockets.in('topic_' + data.tid).emit('event:post_deleted', postData);\n\n\t\t\t\tevents.log({\n\t\t\t\t\ttype: 'post-delete',\n\t\t\t\t\tuid: socket.uid,\n\t\t\t\t\tpid: data.pid,\n\t\t\t\t\tip: socket.ip\n\t\t\t\t});\n\n\t\t\t\tnext();\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tSocketPosts.restore = function (socket, data, callback) {\n\t\tif (!data || !data.pid) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\n\t\tposts.tools.restore(socket.uid, data.pid, function (err, postData) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\twebsockets.in('topic_' + data.tid).emit('event:post_restored', postData);\n\n\t\t\tevents.log({\n\t\t\t\ttype: 'post-restore',\n\t\t\t\tuid: socket.uid,\n\t\t\t\tpid: data.pid,\n\t\t\t\tip: socket.ip\n\t\t\t});\n\n\t\t\tcallback();\n\t\t});\n\t};\n\n\tSocketPosts.deletePosts = function (socket, data, callback) {\n\t\tif (!data || !Array.isArray(data.pids)) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\t\tasync.each(data.pids, function (pid, next) {\n\t\t\tSocketPosts.delete(socket, {pid: pid, tid: data.tid}, next);\n\t\t}, callback);\n\t};\n\n\tSocketPosts.purgePosts = function (socket, data, callback) {\n\t\tif (!data || !Array.isArray(data.pids)) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\t\tasync.each(data.pids, function (pid, next) {\n\t\t\tSocketPosts.purge(socket, {pid: pid, tid: data.tid}, next);\n\t\t}, callback);\n\t};\n\n\tSocketPosts.purge = function (socket, data, callback) {\n\t\tfunction purgePost() {\n\t\t\tvar postData;\n\t\t\tasync.waterfall([\n\t\t\t\tfunction (next) {\n\t\t\t\t\tposts.getPostField(data.pid, 'toPid', next);\n\t\t\t\t},\n\t\t\t\tfunction (toPid, next) {\n\t\t\t\t\tpostData = {pid: data.pid, toPid: toPid};\n\t\t\t\t\tposts.tools.purge(socket.uid, data.pid, next);\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\twebsockets.in('topic_' + data.tid).emit('event:post_purged', postData);\n\t\t\t\t\ttopics.getTopicField(data.tid, 'title', next);\n\t\t\t\t},\n\t\t\t\tfunction (title, next) {\n\t\t\t\t\tevents.log({\n\t\t\t\t\t\ttype: 'post-purge',\n\t\t\t\t\t\tuid: socket.uid,\n\t\t\t\t\t\tpid: data.pid,\n\t\t\t\t\t\tip: socket.ip,\n\t\t\t\t\t\ttitle: validator.escape(String(title))\n\t\t\t\t\t}, next);\n\t\t\t\t}\n\t\t\t], callback);\n\t\t}\n\n\t\tif (!data || !parseInt(data.pid, 10)) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\n\t\tisMainAndLastPost(data.pid, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tif (!results.isMain) {\n\t\t\t\treturn purgePost();\n\t\t\t}\n\n\t\t\tif (!results.isLast) {\n\t\t\t\treturn callback(new Error('[[error:cant-purge-main-post]]'));\n\t\t\t}\n\n\t\t\tdeleteTopicOf(data.pid, socket, callback);\n\t\t});\n\t};\n\n\tfunction deleteTopicOf(pid, socket, callback) {\n\t\tposts.getTopicFields(pid, ['tid', 'cid'], function (err, topic) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tsocketTopics.doTopicAction('delete', 'event:topic_deleted', socket, {tids: [topic.tid], cid: topic.cid}, callback);\n\t\t});\n\t}\n\n\tfunction isMainAndLastPost(pid, callback) {\n\t\tasync.parallel({\n\t\t\tisMain: function (next) {\n\t\t\t\tposts.isMain(pid, next);\n\t\t\t},\n\t\t\tisLast: function (next) {\n\t\t\t\tposts.getTopicFields(pid, ['postcount'], function (err, topic) {\n\t\t\t\t\tnext(err, topic ? parseInt(topic.postcount, 10) === 1 : false);\n\t\t\t\t});\n\t\t\t}\n\t\t}, callback);\n\t}\n\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/socket.io/posts/votes.js":"'use strict';\n\nvar async = require('async');\n\nvar db = require('../../database');\nvar user = require('../../user');\nvar posts = require('../../posts');\nvar privileges = require('../../privileges');\nvar helpers = require('./helpers');\n\nmodule.exports = function (SocketPosts) {\n\n\tSocketPosts.getVoters = function (socket, data, callback) {\n\t\tif (!data || !data.pid || !data.cid) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tprivileges.categories.isAdminOrMod(data.cid, socket.uid, next);\n\t\t\t},\n\t\t\tfunction (isAdminOrMod, next) {\n\t\t\t\tif (!isAdminOrMod) {\n\t\t\t\t\treturn next(new Error('[[error:no-privileges]]'));\n\t\t\t\t}\n\n\t\t\t\tasync.parallel({\n\t\t\t\t\tupvoteUids: function (next) {\n\t\t\t\t\t\tdb.getSetMembers('pid:' + data.pid + ':upvote', next);\n\t\t\t\t\t},\n\t\t\t\t\tdownvoteUids: function (next) {\n\t\t\t\t\t\tdb.getSetMembers('pid:' + data.pid + ':downvote', next);\n\t\t\t\t\t}\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\tupvoters: function (next) {\n\t\t\t\t\t\tuser.getUsersFields(results.upvoteUids, ['username', 'userslug', 'picture'], next);\n\t\t\t\t\t},\n\t\t\t\t\tupvoteCount: function (next) {\n\t\t\t\t\t\tnext(null, results.upvoteUids.length);\n\t\t\t\t\t},\n\t\t\t\t\tdownvoters: function (next) {\n\t\t\t\t\t\tuser.getUsersFields(results.downvoteUids, ['username', 'userslug', 'picture'], next);\n\t\t\t\t\t},\n\t\t\t\t\tdownvoteCount: function (next) {\n\t\t\t\t\t\tnext(null, results.downvoteUids.length);\n\t\t\t\t\t}\n\t\t\t\t}, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tSocketPosts.getUpvoters = function (socket, pids, callback) {\n\t\tif (!Array.isArray(pids)) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\n\t\tposts.getUpvotedUidsByPids(pids, function (err, data) {\n\t\t\tif (err || !Array.isArray(data) || !data.length) {\n\t\t\t\treturn callback(err, []);\n\t\t\t}\n\n\t\t\tasync.map(data, function (uids, next)  {\n\t\t\t\tvar otherCount = 0;\n\t\t\t\tif (uids.length > 6) {\n\t\t\t\t\totherCount = uids.length - 5;\n\t\t\t\t\tuids = uids.slice(0, 5);\n\t\t\t\t}\n\t\t\t\tuser.getUsernamesByUids(uids, function (err, usernames) {\n\t\t\t\t\tnext(err, {\n\t\t\t\t\t\totherCount: otherCount,\n\t\t\t\t\t\tusernames: usernames\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}, callback);\n\t\t});\n\t};\n\n\tSocketPosts.upvote = function (socket, data, callback) {\n\t\thelpers.postCommand(socket, 'upvote', 'voted', 'notifications:upvoted_your_post_in', data, callback);\n\t};\n\n\tSocketPosts.downvote = function (socket, data, callback) {\n\t\thelpers.postCommand(socket, 'downvote', 'voted', '', data, callback);\n\t};\n\n\tSocketPosts.unvote = function (socket, data, callback) {\n\t\thelpers.postCommand(socket, 'unvote', 'voted', '', data, callback);\n\t};\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/socket.io/topics/infinitescroll.js":"'use strict';\n\nvar async = require('async');\n\nvar topics = require('../../topics');\nvar privileges = require('../../privileges');\nvar meta = require('../../meta');\nvar utils = require('../../../public/src/utils');\nvar social = require('../../social');\n\nmodule.exports = function (SocketTopics) {\n\n\tSocketTopics.loadMore = function (socket, data, callback) {\n\t\tif (!data || !data.tid || !utils.isNumber(data.after) || parseInt(data.after, 10) < 0)  {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\t\tvar userPrivileges;\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\tprivileges: function (next) {\n\t\t\t\t\t\tprivileges.topics.get(data.tid, socket.uid, next);\n\t\t\t\t\t},\n\t\t\t\t\ttopic: function (next) {\n\t\t\t\t\t\ttopics.getTopicFields(data.tid, ['postcount', 'deleted'], next);\n\t\t\t\t\t}\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tif (!results.privileges.read || (parseInt(results.topic.deleted, 10) && !results.privileges.view_deleted)) {\n\t\t\t\t\treturn callback(new Error('[[error:no-privileges]]'));\n\t\t\t\t}\n\n\t\t\t\tuserPrivileges = results.privileges;\n\n\t\t\t\tvar set = 'tid:' + data.tid + ':posts';\n\t\t\t\tif (data.topicPostSort === 'most_votes') {\n\t\t\t\t\tset = 'tid:' + data.tid + ':posts:votes';\n\t\t\t\t}\n\t\t\t\tvar reverse = data.topicPostSort === 'newest_to_oldest' || data.topicPostSort === 'most_votes';\n\t\t\t\tvar start = Math.max(0, parseInt(data.after, 10));\n\n\t\t\t\tvar infScrollPostsPerPage = 10;\n\n\t\t\t\tif (data.direction > 0) {\n\t\t\t\t\tif (reverse) {\n\t\t\t\t\t\tstart = results.topic.postcount - start;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (reverse) {\n\t\t\t\t\t\tstart = results.topic.postcount - start - infScrollPostsPerPage - 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstart = start - infScrollPostsPerPage - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar stop = start + (infScrollPostsPerPage - 1);\n\n\t\t\t\tstart = Math.max(0, start);\n\t\t\t\tstop = Math.max(0, stop);\n\n\t\t\t\tasync.parallel({\n\t\t\t\t\tmainPost: function (next) {\n\t\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\t\treturn next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttopics.getMainPost(data.tid, socket.uid, next);\n\t\t\t\t\t},\n\t\t\t\t\tposts: function (next) {\n\t\t\t\t\t\ttopics.getTopicPosts(data.tid, set, start, stop, socket.uid, reverse, next);\n\t\t\t\t\t},\n\t\t\t\t\tpostSharing: function (next) {\n\t\t\t\t\t\tsocial.getActivePostSharing(next);\n\t\t\t\t\t}\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (topicData, next) {\n\t\t\t\tif (topicData.mainPost) {\n\t\t\t\t\ttopicData.posts = [topicData.mainPost].concat(topicData.posts);\n\t\t\t\t}\n\n\t\t\t\ttopicData.privileges = userPrivileges;\n\t\t\t\ttopicData['reputation:disabled'] = parseInt(meta.config['reputation:disabled'], 10) === 1;\n\t\t\t\ttopicData['downvote:disabled'] = parseInt(meta.config['downvote:disabled'], 10) === 1;\n\n\t\t\t\ttopics.modifyPostsByPrivilege(topicData, userPrivileges);\n\t\t\t\tnext(null, topicData);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tSocketTopics.loadMoreUnreadTopics = function (socket, data, callback) {\n\t\tif (!data || !utils.isNumber(data.after) || parseInt(data.after, 10) < 0) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\n\t\tvar start = parseInt(data.after, 10);\n\t\tvar stop = start + 9;\n\n\t\ttopics.getUnreadTopics(data.cid, socket.uid, start, stop, data.filter, callback);\n\t};\n\n\tSocketTopics.loadMoreRecentTopics = function (socket, data, callback) {\n\t\tif (!data || !utils.isNumber(data.after) || parseInt(data.after, 10) < 0) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\n\t\tvar start = parseInt(data.after, 10);\n\t\tvar stop = start + 9;\n\n\t\ttopics.getRecentTopics(data.cid, socket.uid, start, stop, data.filter, callback);\n\t};\n\n\tSocketTopics.loadMoreFromSet = function (socket, data, callback) {\n\t\tif (!data || !utils.isNumber(data.after) || parseInt(data.after, 10) < 0 || !data.set) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\n\t\tvar start = parseInt(data.after, 10);\n\t\tvar stop = start + 9;\n\n\t\ttopics.getTopicsFromSet(data.set, socket.uid, start, stop, callback);\n\t};\n\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/socket.io/topics/move.js":"'use strict';\n\nvar async = require('async');\nvar topics = require('../../topics');\nvar categories = require('../../categories');\nvar privileges = require('../../privileges');\nvar socketHelpers = require('../helpers');\n\nmodule.exports = function (SocketTopics) {\n\n\tSocketTopics.move = function (socket, data, callback) {\n\t\tif (!data || !Array.isArray(data.tids) || !data.cid) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\n\t\tasync.eachLimit(data.tids, 10, function (tid, next) {\n\t\t\tvar topicData;\n\t\t\tasync.waterfall([\n\t\t\t\tfunction (next) {\n\t\t\t\t\tprivileges.topics.isAdminOrMod(tid, socket.uid, next);\n\t\t\t\t},\n\t\t\t\tfunction (canMove, next) {\n\t\t\t\t\tif (!canMove) {\n\t\t\t\t\t\treturn next(new Error('[[error:no-privileges]]'));\n\t\t\t\t\t}\n\t\t\t\t\tnext();\n\t\t\t\t},\n\t\t\t\tfunction (next) {\n\t\t\t\t\ttopics.getTopicFields(tid, ['cid', 'slug'], next);\n\t\t\t\t},\n\t\t\t\tfunction (_topicData, next) {\n\t\t\t\t\ttopicData = _topicData;\n\t\t\t\t\ttopicData.tid = tid;\n\t\t\t\t\ttopics.tools.move(tid, data.cid, socket.uid, next);\n\t\t\t\t}\n\t\t\t], function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn next(err);\n\t\t\t\t}\n\n\t\t\t\tsocketHelpers.emitToTopicAndCategory('event:topic_moved', topicData);\n\n\t\t\t\tsocketHelpers.sendNotificationToTopicOwner(tid, socket.uid, 'move', 'notifications:moved_your_topic');\n\n\t\t\t\tnext();\n\t\t\t});\n\t\t}, callback);\n\t};\n\n\n\tSocketTopics.moveAll = function (socket, data, callback) {\n\t\tif (!data || !data.cid || !data.currentCid) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tprivileges.categories.canMoveAllTopics(data.currentCid, data.cid, socket.uid, next);\n\t\t\t},\n\t\t\tfunction (canMove, next) {\n\t\t\t\tif (!canMove) {\n\t\t\t\t\treturn callback(new Error('[[error:no-privileges]]'));\n\t\t\t\t}\n\n\t\t\t\tcategories.getAllTopicIds(data.currentCid, 0, -1, next);\n\t\t\t},\n\t\t\tfunction (tids, next) {\n\t\t\t\tasync.eachLimit(tids, 50, function (tid, next) {\n\t\t\t\t\ttopics.tools.move(tid, data.cid, socket.uid, next);\n\t\t\t\t}, next);\n\t\t\t}\n\t\t], callback);\n\t};\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/socket.io/topics/tags.js":"'use strict';\n\nvar topics = require('../../topics');\nvar utils = require('../../../public/src/utils');\n\nmodule.exports = function (SocketTopics) {\n\tSocketTopics.autocompleteTags = function (socket, data, callback) {\n\t\ttopics.autocompleteTags(data, callback);\n\t};\n\n\tSocketTopics.searchTags = function (socket, data, callback) {\n\t\ttopics.searchTags(data, callback);\n\t};\n\n\tSocketTopics.searchAndLoadTags = function (socket, data, callback) {\n\t\tif (!data) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\t\ttopics.searchAndLoadTags(data, callback);\n\t};\n\n\tSocketTopics.loadMoreTags = function (socket, data, callback) {\n\t\tif (!data || !utils.isNumber(data.after)) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\n\t\tvar start = parseInt(data.after, 10);\n\t\tvar stop = start + 99;\n\n\t\ttopics.getTags(start, stop, function (err, tags) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\ttags = tags.filter(Boolean);\n\t\t\tcallback(null, {tags: tags, nextStart: stop + 1});\n\t\t});\n\t};\n};\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/socket.io/topics/tools.js":"'use strict';\n\nvar async = require('async');\nvar winston = require('winston');\nvar validator = require('validator');\n\nvar topics = require('../../topics');\nvar events = require('../../events');\nvar privileges = require('../../privileges');\nvar plugins = require('../../plugins');\nvar socketHelpers = require('../helpers');\n\nmodule.exports = function (SocketTopics) {\n\n\tSocketTopics.loadTopicTools = function (socket, data, callback) {\n\t\tif (!socket.uid) {\n\t\t\treturn callback(new Error('[[error:no-privileges]]'));\n\t\t}\n\t\tif (!data) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\t\tvar topic;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tasync.parallel({\n\t\t\t\t\ttopic: function (next) {\n\t\t\t\t\t\ttopics.getTopicData(data.tid, next);\n\t\t\t\t\t},\n\t\t\t\t\tprivileges: function (next) {\n\t\t\t\t\t\tprivileges.topics.get(data.tid, socket.uid, next);\n\t\t\t\t\t}\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\ttopic = results.topic;\n\t\t\t\ttopic.privileges = results.privileges;\n\t\t\t\tplugins.fireHook('filter:topic.thread_tools', {topic: results.topic, uid: socket.uid, tools: []}, next);\n\t\t\t},\n\t\t\tfunction (data, next) {\n\t\t\t\ttopic.deleted = parseInt(topic.deleted, 10) === 1;\n\t\t\t\ttopic.locked = parseInt(topic.locked, 10) === 1;\n\t\t\t\ttopic.pinned = parseInt(topic.pinned, 10) === 1;\n\t\t\t\ttopic.thread_tools = data.tools;\n\t\t\t\tnext(null, topic);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tSocketTopics.delete = function (socket, data, callback) {\n\t\tSocketTopics.doTopicAction('delete', 'event:topic_deleted', socket, data, callback);\n\t};\n\n\tSocketTopics.restore = function (socket, data, callback) {\n\t\tSocketTopics.doTopicAction('restore', 'event:topic_restored', socket, data, callback);\n\t};\n\n\tSocketTopics.purge = function (socket, data, callback) {\n\t\tSocketTopics.doTopicAction('purge', 'event:topic_purged', socket, data, callback);\n\t};\n\n\tSocketTopics.lock = function (socket, data, callback) {\n\t\tSocketTopics.doTopicAction('lock', 'event:topic_locked', socket, data, callback);\n\t};\n\n\tSocketTopics.unlock = function (socket, data, callback) {\n\t\tSocketTopics.doTopicAction('unlock', 'event:topic_unlocked', socket, data, callback);\n\t};\n\n\tSocketTopics.pin = function (socket, data, callback) {\n\t\tSocketTopics.doTopicAction('pin', 'event:topic_pinned', socket, data, callback);\n\t};\n\n\tSocketTopics.unpin = function (socket, data, callback) {\n\t\tSocketTopics.doTopicAction('unpin', 'event:topic_unpinned', socket, data, callback);\n\t};\n\n\tSocketTopics.doTopicAction = function (action, event, socket, data, callback) {\n\t\tcallback = callback || function () {};\n\t\tif (!socket.uid) {\n\t\t\treturn callback(new Error('[[error:no-privileges]]'));\n\t\t}\n\n\t\tif (!data || !Array.isArray(data.tids) || !data.cid) {\n\t\t\treturn callback(new Error('[[error:invalid-tid]]'));\n\t\t}\n\n\t\tif (typeof topics.tools[action] !== 'function') {\n\t\t\treturn callback();\n\t\t}\n\n\t\tasync.each(data.tids, function (tid, next) {\n\t\t\ttopics.tools[action](tid, socket.uid, function (err, data) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn next(err);\n\t\t\t\t}\n\n\t\t\t\tsocketHelpers.emitToTopicAndCategory(event, data);\n\n\t\t\t\tif (action === 'delete' || action === 'restore' || action === 'purge') {\n\t\t\t\t\ttopics.getTopicField(tid, 'title', function (err, title) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn winston.error(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tevents.log({\n\t\t\t\t\t\t\ttype: 'topic-' + action,\n\t\t\t\t\t\t\tuid: socket.uid,\n\t\t\t\t\t\t\tip: socket.ip,\n\t\t\t\t\t\t\ttid: tid,\n\t\t\t\t\t\t\ttitle: validator.escape(String(title))\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tnext();\n\t\t\t});\n\t\t}, callback);\n\t};\n\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/socket.io/topics/unread.js":"'use strict';\n\nvar async = require('async');\n\nvar user = require('../../user');\nvar topics = require('../../topics');\n\nmodule.exports = function (SocketTopics) {\n\n\tSocketTopics.markAsRead = function (socket, tids, callback) {\n\t\tif (!Array.isArray(tids) || !socket.uid) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\ttopics.markAsRead(tids, socket.uid, next);\n\t\t\t},\n\t\t\tfunction (hasMarked, next) {\n\t\t\t\tif (hasMarked) {\n\t\t\t\t\ttopics.pushUnreadCount(socket.uid);\n\n\t\t\t\t\ttopics.markTopicNotificationsRead(tids, socket.uid);\n\t\t\t\t}\n\t\t\t\tnext();\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tSocketTopics.markTopicNotificationsRead = function (socket, tids, callback) {\n\t\tif (!Array.isArray(tids) || !socket.uid) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\t\ttopics.markTopicNotificationsRead(tids, socket.uid, callback);\n\t};\n\n\tSocketTopics.markAllRead = function (socket, data, callback) {\n\t\tif (!socket.uid) {\n\t\t\treturn callback(new Error('[[error:invalid-uid]]'));\n\t\t}\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\ttopics.markAllRead(socket.uid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\ttopics.pushUnreadCount(socket.uid);\n\t\t\t\tnext();\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tSocketTopics.markCategoryTopicsRead = function (socket, cid, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\ttopics.getUnreadTids(cid, socket.uid, '', next);\n\t\t\t},\n\t\t\tfunction (tids, next) {\n\t\t\t\tSocketTopics.markAsRead(socket, tids, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tSocketTopics.markUnread = function (socket, tid, callback) {\n\t\tif (!tid || !socket.uid) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\ttopics.markUnread(tid, socket.uid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\ttopics.pushUnreadCount(socket.uid);\n\t\t\t\tnext();\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tSocketTopics.markAsUnreadForAll = function (socket, tids, callback) {\n\t\tif (!Array.isArray(tids)) {\n\t\t\treturn callback(new Error('[[error:invalid-tid]]'));\n\t\t}\n\n\t\tif (!socket.uid) {\n\t\t\treturn callback(new Error('[[error:no-privileges]]'));\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tuser.isAdministrator(socket.uid, next);\n\t\t\t},\n\t\t\tfunction (isAdmin, next) {\n\t\t\t\tasync.each(tids, function (tid, next) {\n\t\t\t\t\tasync.waterfall([\n\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\ttopics.exists(tid, next);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction (exists, next) {\n\t\t\t\t\t\t\tif (!exists) {\n\t\t\t\t\t\t\t\treturn next(new Error('[[error:no-topic]]'));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttopics.getTopicField(tid, 'cid', next);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction (cid, next) {\n\t\t\t\t\t\t\tuser.isModerator(socket.uid, cid, next);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction (isMod, next) {\n\t\t\t\t\t\t\tif (!isAdmin && !isMod) {\n\t\t\t\t\t\t\t\treturn next(new Error('[[error:no-privileges]]'));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttopics.markAsUnreadForAll(tid, next);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction (next) {\n\t\t\t\t\t\t\ttopics.updateRecent(tid, Date.now(), next);\n\t\t\t\t\t\t}\n\t\t\t\t\t], next);\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\ttopics.pushUnreadCount(socket.uid);\n\t\t\t\tnext();\n\t\t\t}\n\t\t], callback);\n\t};\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/socket.io/user/ban.js":"'use strict';\n\nvar async = require('async');\nvar user = require('../../user');\nvar websockets = require('../index');\nvar events = require('../../events');\n\nmodule.exports = function (SocketUser) {\n\n\tSocketUser.banUsers = function (socket, data, callback) {\n\t\t// Backwards compatibility\n\t\tif (Array.isArray(data)) {\n\t\t\tdata = {\n\t\t\t\tuids: data,\n\t\t\t\tuntil: 0,\n\t\t\t\treason: ''\n\t\t\t};\n\t\t}\n\n\t\ttoggleBan(socket.uid, data.uids, function (uid, next) {\n\t\t\tbanUser(uid, data.until || 0, data.reason || '', next);\n\t\t}, function (err) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tasync.each(data.uids, function (uid, next) {\n\t\t\t\tevents.log({\n\t\t\t\t\ttype: 'user-ban',\n\t\t\t\t\tuid: socket.uid,\n\t\t\t\t\ttargetUid: uid,\n\t\t\t\t\tip: socket.ip\n\t\t\t\t}, next);\n\t\t\t}, callback);\n\t\t});\n\t};\n\n\tSocketUser.unbanUsers = function (socket, uids, callback) {\n\t\ttoggleBan(socket.uid, uids, user.unban, function (err) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tasync.each(uids, function (uid, next) {\n\t\t\t\tevents.log({\n\t\t\t\t\ttype: 'user-unban',\n\t\t\t\t\tuid: socket.uid,\n\t\t\t\t\ttargetUid: uid,\n\t\t\t\t\tip: socket.ip\n\t\t\t\t}, next);\n\t\t\t}, callback);\n\t\t});\n\t};\n\n\tfunction toggleBan(uid, uids, method, callback) {\n\t\tif (!Array.isArray(uids)) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tuser.isAdminOrGlobalMod(uid, next);\n\t\t\t},\n\t\t\tfunction (isAdminOrGlobalMod, next) {\n\t\t\t\tif (!isAdminOrGlobalMod) {\n\t\t\t\t\treturn next(new Error('[[error:no-privileges]]'));\n\t\t\t\t}\n\t\t\t\tasync.each(uids, method, next);\n\t\t\t}\n\t\t], callback);\n\t}\n\n\tfunction banUser(uid, until, reason, callback) {\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tuser.isAdministrator(uid, next);\n\t\t\t},\n\t\t\tfunction (isAdmin, next) {\n\t\t\t\tif (isAdmin) {\n\t\t\t\t\treturn next(new Error('[[error:cant-ban-other-admins]]'));\n\t\t\t\t}\n\t\t\t\tuser.ban(uid, until, reason, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\twebsockets.in('uid_' + uid).emit('event:banned');\n\t\t\t\tnext();\n\t\t\t}\n\t\t], callback);\n\t}\n};\n\n","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/socket.io/user/picture.js":"'use strict';\n\nvar async = require('async');\nvar winston = require('winston');\nvar path = require('path');\n\nvar user = require('../../user');\nvar plugins = require('../../plugins');\n\nmodule.exports = function (SocketUser) {\n\n\tSocketUser.changePicture = function (socket, data, callback) {\n\t\tif (!socket.uid) {\n\t\t\treturn callback(new Error('[[error:invalid-uid]]'));\n\t\t}\n\n\t\tif (!data) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\n\t\tvar type = data.type;\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tuser.isAdminOrSelf(socket.uid, data.uid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tswitch(type) {\n\t\t\t\t\tcase 'default':\n\t\t\t\t\t\tnext(null, '');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'uploaded':\n\t\t\t\t\t\tuser.getUserField(data.uid, 'uploadedpicture', next);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tplugins.fireHook('filter:user.getPicture', {\n\t\t\t\t\t\t\tuid: socket.uid,\n\t\t\t\t\t\t\ttype: type,\n\t\t\t\t\t\t\tpicture: undefined\n\t\t\t\t\t\t}, function (err, returnData) {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tnext(null, returnData.picture || '');\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction (picture, next) {\n\t\t\t\tuser.setUserField(data.uid, 'picture', picture, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tSocketUser.uploadProfileImageFromUrl = function (socket, data, callback) {\n\t\tif (!socket.uid || !data.url || !data.uid) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tuser.isAdminOrSelf(socket.uid, data.uid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tuser.uploadFromUrl(data.uid, data.url, next);\n\t\t\t},\n\t\t\tfunction (uploadedImage, next) {\n\t\t\t\tnext(null, uploadedImage ? uploadedImage.url : null);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tSocketUser.removeUploadedPicture = function (socket, data, callback) {\n\t\tif (!socket.uid || !data.uid) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tuser.isAdminOrSelf(socket.uid, data.uid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tuser.getUserFields(data.uid, ['uploadedpicture', 'picture'], next);\n\t\t\t},\n\t\t\tfunction (userData, next) {\n\t\t\t\tif (userData.uploadedpicture && !userData.uploadedpicture.startsWith('http')) {\n\t\t\t\t\trequire('fs').unlink(path.join(__dirname, '../../../public', userData.uploadedpicture), function (err) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\twinston.error(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tuser.setUserFields(data.uid, {\n\t\t\t\t\tuploadedpicture: '',\n\t\t\t\t\tpicture: userData.uploadedpicture === userData.picture ? '' : userData.picture\t// if current picture is uploaded picture, reset to user icon\n\t\t\t\t}, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tSocketUser.getProfilePictures = function (socket, data, callback) {\n\t\tif (!data || !data.uid) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\n\t\tasync.parallel({\n\t\t\tlist: async.apply(plugins.fireHook, 'filter:user.listPictures', {\n\t\t\t\tuid: data.uid,\n\t\t\t\tpictures: []\n\t\t\t}),\n\t\t\tuploaded: async.apply(user.getUserField, data.uid, 'uploadedpicture')\n\t\t}, function (err, data) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tif (data.uploaded) {\n\t\t\t\tdata.list.pictures.push({\n\t\t\t\t\ttype: 'uploaded',\n\t\t\t\t\turl: data.uploaded,\n\t\t\t\t\ttext: '[[user:uploaded_picture]]'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tcallback(null, data.list.pictures);\n\t\t});\n\t};\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/socket.io/user/profile.js":"'use strict';\n\nvar async = require('async');\n\nvar user = require('../../user');\nvar meta = require('../../meta');\nvar events = require('../../events');\nvar privileges = require('../../privileges');\n\nmodule.exports = function (SocketUser) {\n\n\tSocketUser.changeUsernameEmail = function (socket, data, callback) {\n\t\tif (!data || !data.uid || !socket.uid) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tisAdminOrSelfAndPasswordMatch(socket.uid, data, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tSocketUser.updateProfile(socket, data, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tSocketUser.updateCover = function (socket, data, callback) {\n\t\tif (!socket.uid) {\n\t\t\treturn callback(new Error('[[error:no-privileges]]'));\n\t\t}\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tuser.isAdminOrSelf(socket.uid, data.uid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tuser.updateCoverPicture(data, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tSocketUser.removeCover = function (socket, data, callback) {\n\t\tif (!socket.uid) {\n\t\t\treturn callback(new Error('[[error:no-privileges]]'));\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tuser.isAdminOrSelf(socket.uid, data.uid, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tuser.removeCoverPicture(data, next);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tfunction isAdminOrSelfAndPasswordMatch(uid, data, callback) {\n\t\tasync.parallel({\n\t\t\tisAdmin: async.apply(user.isAdministrator, uid),\n\t\t\thasPassword: async.apply(user.hasPassword, data.uid),\n\t\t\tpasswordMatch: function (next) {\n\t\t\t\tif (data.password) {\n\t\t\t\t\tuser.isPasswordCorrect(data.uid, data.password, next);\n\t\t\t\t} else {\n\t\t\t\t\tnext(null, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}, function (err, results) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tvar isSelf = parseInt(uid, 10) === parseInt(data.uid, 10);\n\n\t\t\tif (!results.isAdmin && !isSelf) {\n\t\t\t\treturn callback(new Error('[[error:no-privileges]]'));\n\t\t\t}\n\n\t\t\tif (isSelf && results.hasPassword && !results.passwordMatch) {\n\t\t\t\treturn callback(new Error('[[error:invalid-password]]'));\n\t\t\t}\n\n\t\t\tcallback();\n\t\t});\n\t}\n\n\tSocketUser.changePassword = function (socket, data, callback) {\n\t\tif (!socket.uid) {\n\t\t\treturn callback(new Error('[[error:invalid-uid]]'));\n\t\t}\n\n\t\tif (!data || !data.uid) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\n\t\tuser.changePassword(socket.uid, data, function (err) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tevents.log({\n\t\t\t\ttype: 'password-change',\n\t\t\t\tuid: socket.uid,\n\t\t\t\ttargetUid: data.uid,\n\t\t\t\tip: socket.ip\n\t\t\t});\n\t\t\tcallback();\n\t\t});\n\t};\n\n\tSocketUser.updateProfile = function (socket, data, callback) {\n\t\tif (!socket.uid) {\n\t\t\treturn callback(new Error('[[error:invalid-uid]]'));\n\t\t}\n\n\t\tif (!data || !data.uid) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\n\t\tvar oldUserData;\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tuser.getUserFields(data.uid, ['email', 'username'], next);\n\t\t\t},\n\t\t\tfunction (_oldUserData, next) {\n\t\t\t\toldUserData = _oldUserData;\n\t\t\t\tif (!oldUserData || !oldUserData.username) {\n\t\t\t\t\treturn next(new Error('[[error:invalid-data]]'));\n\t\t\t\t}\n\n\t\t\t\tasync.parallel({\n\t\t\t\t\tisAdminOrGlobalMod: function (next) {\n\t\t\t\t\t\tuser.isAdminOrGlobalMod(socket.uid, next);\n\t\t\t\t\t},\n\t\t\t\t\tcanEdit: function (next) {\n\t\t\t\t\t\tprivileges.users.canEdit(socket.uid, data.uid, next);\n\t\t\t\t\t}\n\t\t\t\t}, next);\n\t\t\t},\n\t\t\tfunction (results, next) {\n\t\t\t\tif (!results.canEdit) {\n\t\t\t\t\treturn next(new Error('[[error:no-privileges]]'));\n\t\t\t\t}\n\n\t\t\t\tif (!results.isAdminOrGlobalMod && parseInt(meta.config['username:disableEdit'], 10) === 1) {\n\t\t\t\t\tdata.username = oldUserData.username;\n\t\t\t\t}\n\n\t\t\t\tif (!results.isAdminOrGlobalMod && parseInt(meta.config['email:disableEdit'], 10) === 1) {\n\t\t\t\t\tdata.email = oldUserData.email;\n\t\t\t\t}\n\n\t\t\t\tuser.updateProfile(data.uid, data, next);\n\t\t\t},\n\t\t\tfunction (userData, next) {\n\t\t\t\tfunction log(type, eventData) {\n\t\t\t\t\teventData.type = type;\n\t\t\t\t\teventData.uid = socket.uid;\n\t\t\t\t\teventData.targetUid = data.uid;\n\t\t\t\t\teventData.ip = socket.ip;\n\n\t\t\t\t\tevents.log(eventData);\n\t\t\t\t}\n\n\t\t\t\tif (userData.email !== oldUserData.email) {\n\t\t\t\t\tlog('email-change', {oldEmail: oldUserData.email, newEmail: userData.email});\n\t\t\t\t}\n\n\t\t\t\tif (userData.username !== oldUserData.username) {\n\t\t\t\t\tlog('username-change', {oldUsername: oldUserData.username, newUsername: userData.username});\n\t\t\t\t}\n\n\t\t\t\tnext(null, userData);\n\t\t\t}\n\t\t], callback);\n\t};\n\n\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/socket.io/user/search.js":"'use strict';\n\nvar user = require('../../user');\nvar meta = require('../../meta');\nvar pagination = require('../../pagination');\n\nmodule.exports = function (SocketUser) {\n\n\tSocketUser.search = function (socket, data, callback) {\n\t\tif (!data) {\n\t\t\treturn callback(new Error('[[error:invalid-data]]'));\n\t\t}\n\t\tif (!socket.uid && parseInt(meta.config.allowGuestUserSearching, 10) !== 1) {\n\t\t\treturn callback(new Error('[[error:not-logged-in]]'));\n\t\t}\n\t\tuser.search({\n\t\t\tquery: data.query,\n\t\t\tpage: data.page,\n\t\t\tsearchBy: data.searchBy,\n\t\t\tsortBy: data.sortBy,\n\t\t\tonlineOnly: data.onlineOnly,\n\t\t\tbannedOnly: data.bannedOnly,\n\t\t\tflaggedOnly: data.flaggedOnly,\n\t\t\tuid: socket.uid\n\t\t}, function (err, result) {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tresult.pagination = pagination.create(data.page, result.pageCount);\n\t\t\tresult['route_users:' + data.sortBy] = true;\n\t\t\tcallback(null, result);\n\t\t});\n\t};\n\n};","/home/travis/build/npmtest/node-npmtest-nodebb/node_modules/nodebb/src/socket.io/user/status.js":"'use strict';\n\nvar async = require('async');\n\nvar user = require('../../user');\nvar websockets = require('../index');\n\nmodule.exports = function (SocketUser) {\n\n\tSocketUser.checkStatus = function (socket, uid, callback) {\n\t\tif (!socket.uid) {\n\t\t\treturn callback(new Error('[[error:invalid-uid]]'));\n\t\t}\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tuser.getUserFields(uid, ['lastonline', 'status'], next);\n\t\t\t},\n\t\t\tfunction (userData, next) {\n\t\t\t\tnext(null, user.getStatus(userData));\n\t\t\t}\n\t\t], callback);\n\t};\n\n\tSocketUser.setStatus = function (socket, status, callback) {\n\t\tif (!socket.uid) {\n\t\t\treturn callback(new Error('[[error:invalid-uid]]'));\n\t\t}\n\n\t\tvar allowedStatus = ['online', 'offline', 'dnd', 'away'];\n\t\tif (allowedStatus.indexOf(status) === -1) {\n\t\t\treturn callback(new Error('[[error:invalid-user-status]]'));\n\t\t}\n\n\t\tvar data = {status: status};\n\t\tif (status !== 'offline') {\n\t\t\tdata.lastonline = Date.now();\n\t\t}\n\n\t\tasync.waterfall([\n\t\t\tfunction (next) {\n\t\t\t\tuser.setUserFields(socket.uid, data, next);\n\t\t\t},\n\t\t\tfunction (next) {\n\t\t\t\tvar data = {\n\t\t\t\t\tuid: socket.uid,\n\t\t\t\t\tstatus: status\n\t\t\t\t};\n\t\t\t\twebsockets.server.emit('event:user_status_change', data);\n\t\t\t\tnext(null, data);\n\t\t\t}\n\t\t], callback);\n\t};\n};"}